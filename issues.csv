issueId,title,status,discarded,observation,repoName,createdAt,closedAt,labels,repositoryId,tags,htmlUrl,body
1,Reduce the width of the default activity bar,True,False,,vscode,2025-10-13T14:53:34.670297,,"ux, icons-product",1,"ux-smell, design",https://github.com/microsoft/vscode/issues/271132,"With the development of the new codicon font, there is an opportunity to reduce the width of the default Activity Bar. Currently the width is `48px` - this issue will track the exploration of a smaller width & the knock-on size change of the codicons & 3rd party extension icons.  <img width=""439"" height=""57"" alt=""Image"" src=""https://github.com/user-attachments/assets/2863043e-81f1-437a-8ebb-3dff3da5dfd6"" />  <img width=""395"" height=""78"" alt=""Image"" src=""https://github.com/user-attachments/assets/c142dfa3-640b-49fc-bf05-2885a9a50b35"" />  <img width=""1249"" height=""111"" alt=""Image"" src=""https://github.com/user-attachments/assets/d96ced12-4152-4db5-b00c-92e0cc9e6b30"" />  <img width=""550"" height=""69"" alt=""Image"" src=""https://github.com/user-attachments/assets/72dae6c2-c5b9-4788-8d37-c3d8795339f7"" />"
2,"Increase status bar height, icon size, text size",True,False,,vscode,2025-10-13T14:53:34.675441,,"ux, icons-product",1,"ux-smell, design",https://github.com/microsoft/vscode/issues/271126,"There is an opportunity to make the statusbar content more legible & mitigate any future minimum target size issue.  Current font size is `14px`, which causes sub-optimal icon rendering as designs are made on a 16px grid - updating to `16px` would ensure crisper rendering, especially on lower-resolution displays. This would also better align icon sizes across the product UI.  To reduce size differences between icons & text, I propose to increase the font size from `12px` to `13px`. This does come at a horizontal space cost. We could run an experiment to understand impact for customers.  Increasing the statusbar height from `22px` to `24px` would make it pass minimum target size requirements, while only increasing `2px` in height. This slight increase would also provide vertical padding for the larger icons.  <img width=""720"" height=""215"" alt=""Image"" src=""https://github.com/user-attachments/assets/f1b2233f-61ef-46b4-b918-e17ce56004d9"" />"
3,Add space in string for new editor empty state,True,False,,vscode,2025-10-13T14:53:34.678860,,ux,1,,https://github.com/microsoft/vscode/issues/270694,"<img width=""858"" height=""223"" alt=""Image"" src=""https://github.com/user-attachments/assets/ca951203-4e21-46fb-a5c1-50c60fcef69b"" />  We should reconsider what this string should be in general, but at the very least we need to add a space between GitHub and Copilot"
4,Chat Context Clearing,True,False,,vscode,2025-10-13T14:53:34.681852,,"ux, chat",1,feature-request,https://github.com/microsoft/vscode/issues/270465,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **Chat Context Clearing:** Users tend to remain in the same chat session rather than starting new ones, causing context accumulation. This leads to: Responses becoming less precise, an increase in token usage and response time per request, an increase in operational costs per response.  We have to reduce context accumulation by guiding users to a new session between distinct tasks, while offering an easy path back to previous sessions.   **Design Considerations:** Direction A (current implementation, needs revisit. cc: @isidorn ) - Start a new chat session on reload/restart. - Show previous 3 sessions in empty state as quick entry point to closed session.   Direction B (cc: @bpasero) - Show previous chat session in dimmed state on reload/restart. - Start new session: Use placeholder text (or a different UI element) to indicate that next request will start a new session.  - Return to previous (dimmed) session: Click dimmed session and send request.   Direction C (cc: @joaomoreno)  - Explore alternatives: UI nudges users to create new sessions between tasks (manual approach), or new sessions are started automatically (preferred).    **Open Questions:**  What is the frequency of vscode reloads or restarts per user session? How many requests are typically sent before a user starts a new chat session? At what token threshold do users typically start a new session (instead of continuing in same session)? What triggers users into starting a new session (errors, latency, task change)?  **October Goals:** Conduct light competitive analysis and review current telemetry data to answer open questions. Create high fidelity prototypes illustrating three distinct design directions for reducing context accumulation. Gather quick feedback from users via unmoderated usability testing. Use internal and user feedback + telemetry to define North-Star vision and MVP feature set.  **November Goals:** Work with @justschen to implement feature set behind an EXP setting enabled for a percentage of Insiders. Continue with larger rollout if solution indicates a reduction in context accumulation per request.  Related issues: https://github.com/microsoft/vscode/issues/251187#issuecomment-3363506574, https://github.com/microsoft/vscode/issues/266075 [WIP Figma](https://www.figma.com/design/ZrCYw0Mi0Z9GsRGKpekhCl/Chat--July-2025---Present-?m=auto&node-id=7044-181736&t=Xgd8fzMtAYfcStpi-1)"
5,Empty chat history item,True,False,,vscode,2025-10-13T14:53:34.685481,,"bug, ux, chat",1,,https://github.com/microsoft/vscode/issues/270329,"I found a chat history item that has no title:  <img width=""3286"" height=""752"" alt=""Image"" src=""https://github.com/user-attachments/assets/4a95d047-1dd8-4813-a2e1-71875dea4b5b"" />  I am not sure how I got there, but we need to fill in a placeholder if there is no title."
6,Overlapping chat parts in short-ish window,True,False,,vscode,2025-10-13T14:53:34.689314,,"ux, chat",1,"ux-smell, design",https://github.com/microsoft/vscode/issues/270273,"If we can't fit everything, we should have some reasonable overflow behavior  <img width=""587"" height=""422"" alt=""Image"" src=""https://github.com/user-attachments/assets/7ed438d2-1078-4d0a-9986-67825446e609"" />"
7,Improve Issue Reporter UX - design explorations,True,False,,vscode,2025-10-13T14:53:34.693429,,"ux, issue-reporter",1,feature-request,https://github.com/microsoft/vscode/issues/270214,"As part of @Yoyokrazy 's work on overhauling the Issue Reporter feature, there is an opportunity to greatly reduce the friction of submitting issues & feedback & align the UI to the rest of the product. This initial effort will consist of exploring various design proposals to gather feedback from the team for use in generating an implementation plan"
8,Codicon refresh | Alignment with Fluent iconography,True,False,,vscode,2025-10-13T14:53:34.697158,,ux,1,"ux-smell, design",https://github.com/microsoft/vscode/issues/270212,"This effort is around modernizing the codicon design language & bringing closer alignment to the Visual Studio icon set & Fluent language.  This will involve updating, testing & iterating on ~500 icons to ensure:  - at-a-glance metaphor understanding - visual consistency - legibility at low resolution - legibility in all built-in themes - minimal impact to the overall product UI, & creating issues for impacts  > Note: new icons may be created during this process  This effort also forces closer alignment between the Figma design files & codicon library / repository."
9,Implement design tokens for font sizes,True,False,,vscode,2025-10-13T14:53:34.699953,,ux,1,internal,https://github.com/microsoft/vscode/issues/270210,"Parent Issue [#248725](https://github.com/microsoft/vscode/issues/248725)  To bring consistency to current & future UI implementations, develop a set of CSS variables for the product font ramp & adopt across the product."
10,Extract elements line-height values to CSS variables,True,False,,vscode,2025-10-13T14:53:34.702686,,ux,1,"ux-smell, design",https://github.com/microsoft/vscode/issues/270157,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  When developing custom UI elements to be presented in VS Code, the rule of thumb is to reuse built-in CSS variables to match the workbench style. Basic examples are:  ```text --vscode-font-family --vscode-font-size  // Or for a specific element type  --vscode-button-foreground --vscode-button-background ```  There is a fundamental CSS variable that is missing: `line-height`.   Using the correct line height allows pixel-perfect alignment of custom elements, or - at least - it allows matching how VS Code aligns things.  <img width=""371"" height=""501"" alt=""Image"" src=""https://github.com/user-attachments/assets/6b006301-554d-435d-a02b-0ffc4512e595"" />"
11,AI-First Profile MVP,True,False,,vscode,2025-10-13T14:53:34.706293,,"ux, user-profiles, chat-prompts",1,feature-request,https://github.com/microsoft/vscode/issues/270130,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **AI-First Profile MVP:** We plan to update user profiles to support AI-first workflows (profile contents for chat configurations, profile descriptions, layouts that center AI) with the goal of providing AI-first profile templates. Current templates are not optimized for AI-first scenarios.  **October Goals:** Update Profiles UI to include descriptions, contents for chat configurations (prompts, instructions). (cc: @sandy081)   Define jobs to be done and create an AI-first profile to share for internal feedback.   Address accessibility concerns: https://github.com/microsoft/vscode/issues/223297#issuecomment-3383200893  **Design Considerations:** What are the discover and onboard strategies? Which AI features should be configured at a profile vs workspace level?  **November Goals:** Evaluate internal feedback and conduct unmoderated testing on set up, usage, and management of AI-first profiles to determine next steps beyond MVP (exploring concepts like: centrally managed sharable profiles, generated descriptions and JSON comments indicating differences between profiles, etc). (cc: @cwebster-99)   Related feature requests https://github.com/microsoft/vscode/issues/267269, https://github.com/microsoft/vscode/issues/224725  <img width=""675"" height=""286"" alt=""Image"" src=""https://github.com/user-attachments/assets/70e521f6-908f-48ff-b806-ffa62bac3ae7"" />"
12,Chat Session Branching MVP,True,False,,vscode,2025-10-13T14:53:34.710243,,"ux, chat",1,feature-request,https://github.com/microsoft/vscode/issues/270128,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **Chat Session Branching MVP:** This feature will allow users to branch off from a chat session or llm response to explore alternatives or delegate steps of a larger workflow to coding agents.   **Current Limitations:**  Limited worktree support for parallel chat sessions editing the same file. This MVP will limit branching to one level deep (no nested branching, yet).  **October Goals:** Enable feature MVP behind EXP setting, dogfood internally and enable for 5-10% of insiders. Track telemetry points (number of branching events, number of requests before branching, longevity of branched sessions, coding agent delegation, chat mode, model) to build accurate user flows. (cc @bhavyaus)   Define jobs to be done and create three high fidelity prototype variations. Conduct unmoderated usability testing. Use testing results to define golden scenarios. (Charles)  Share successfully tested high fidelity prototype (demonstrates real world examples that fit into real user workflows) on X to gauge public responses and funnel users to EXP setting. (Olivia)  **Design Considerations:** How will we visualize relationships between branches as nested branching scales? Is there an opportunity for adaptive surfacing entry points or in the moment education? Current entry points may clutter the UI. What is the mental model for chats as context, are we treating the main chat as a hub with spokes?  **November Goals:** Review telemetry and public/internal qual data to determine next steps beyond MVP. (cc: @cwebster-99)  Related feature request https://github.com/microsoft/vscode/issues/258271 [MVP WIP Figma](https://www.figma.com/design/ZrCYw0Mi0Z9GsRGKpekhCl/Chat--July-2025---Present-?m=auto&node-id=7979-110234&t=vPZr605wrb8plrsU-1)  https://github.com/user-attachments/assets/8912c0a6-b1a7-4742-b847-5217dd48b9aa"
13,No bottom padding in inline chat,True,False,,vscode,2025-10-13T14:53:34.713132,,"ux, papercut :drop_of_blood:",1,bug,https://github.com/microsoft/vscode/issues/269994,"Bug Description: No bottom padding in inline chat  <img width=""794"" height=""273"" alt=""Image"" src=""https://github.com/user-attachments/assets/4e05a571-a5a6-4005-8e35-40024a811600"" />  Increase bottom padding to improve layout."
14,"Responsive chat panel css, revised prompt titles",True,False,,vscode,2025-10-13T14:53:34.716847,,"ux, chat",1,,https://github.com/microsoft/vscode/pull/269791,<!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. --> CSS solution for responsive chat panel  https://github.com/user-attachments/assets/0dec2072-b2b7-4e1a-afe6-f1970b2b2a4b
15,VS Code Figma Component Update: Menu,True,False,,vscode,2025-10-13T14:53:34.719888,,ux,1,,https://github.com/microsoft/vscode/issues/269786,- [x] check out component - [x] Fix dark/light mode issues - [ ] issue with key labels in light mode https://github.com/microsoft/vscode/issues/266464 - [x] icon issue - [ ] Fix icons
16,VS Code Component  Update: Status Icons,True,False,,vscode,2025-10-13T14:53:34.723364,,ux,1,,https://github.com/microsoft/vscode/issues/269538,"We need to make the icons for Status SVG. However, doing so will have a direct impact on areas where those icons are sized with font size, such as the dialog.  https://www.figma.com/design/AJnTgc00iEI0KTVdyoN997/Visual-Studio-Code-Toolkit?node-id=2608-38358&t=9twUli3OAKXTD9uj-4  <img width=""151"" height=""285"" alt=""Image"" src=""https://github.com/user-attachments/assets/f40ad239-764c-4ebd-ace2-50134a477a7b"" />"
17,Better search header? to account for mcp server,True,False,,vscode,2025-10-13T14:53:34.726324,,"ux, chat-mcp-management",1,"ux-smell, undescriptive-element",https://github.com/microsoft/vscode/issues/269117,"Testing #268910  Should we change the wording `Search extensions...` to include mcp? I'm not sure how much we want to additionally hint for mcp to benefit visibility.   <img width=""316"" height=""985"" alt=""Image"" src=""https://github.com/user-attachments/assets/cd9d9097-ac78-4703-ac82-bda62f74e386"" />"
18,Inline chat for a chat session model picker does not apply to delegated sessions,True,False,,vscode,2025-10-13T14:53:34.729207,,"ux, papercut :drop_of_blood:, workbench-copilot",1,bug,https://github.com/microsoft/vscode/issues/269033,"When I send additional input to a chat session, e.g. on a diff hunk, the model picker should adjust to the model I picked in the chat session:  <img width=""3002"" height=""1488"" alt=""Image"" src=""https://github.com/user-attachments/assets/a9df563d-8344-42ac-89af-bee64794c0a7"" />"
19,Can't tell if marketplace item is MCP server,True,False,,vscode,2025-10-13T14:53:34.732435,,"ux, chat-mcp-management",1,"ux-smell, undescriptive-element",https://github.com/microsoft/vscode/issues/269024,"Testing #268910  It would be helpful to have something in the view or the webview that indicates that this is an MCP server and not an extension.  <img width=""3473"" height=""978"" alt=""Image"" src=""https://github.com/user-attachments/assets/ee112c52-b1a9-47b8-94ad-a953884944aa"" />"
20,Half pill shaped warning for MCP unclear to me,True,False,,vscode,2025-10-13T14:53:34.735232,,"ux, papercut :drop_of_blood:, workbench-copilot",1,"ux-smell, undescriptive-element",https://github.com/microsoft/vscode/issues/269018,"Testing #268976  When cancelling the GitHub MCP servers ask to sign in with GitHub I am left with this:  <img width=""392"" height=""130"" alt=""Image"" src=""https://github.com/user-attachments/assets/97fe0451-4af6-4e46-8cdf-23227e72ed20"" />  There is a server icon on the left and the warning icon on the right. Both seem to have the same hover though.   I have to say this UI is both confusing and looks partially broken.  //cc @mrleemurray @hawkticehurst @joaomoreno @isidorn"
21,Chat: Model picker value should be cached,True,False,,vscode,2025-10-13T14:53:34.739576,,"feature-request, ux, chat",1,ux-smell,https://github.com/microsoft/vscode/issues/268856,"The model picker currently doesn't show up a few good seconds after startup. We should really cache these models as best we can. Then:  - If the model list didn't change since the last exec, all good, - Otherwise:   - If the currently selected model is still there, all good,   - Otherwise, just switch the user to Auto (or next best thing).  https://github.com/user-attachments/assets/8d69ec5e-6d12-41e3-a3ff-ffac9d33f3d3"
22,Vs code avatar issue,True,False,,vscode,2025-10-13T14:53:34.743503,,"ux, under-discussion",1,bug,https://github.com/microsoft/vscode/issues/269408,"Issue: In VS Code, the signed-in user’s avatar is not displayed properly. Expected: Similar to Visual Studio, the avatar should at least show initials (first and last name letters) when no profile picture is available. Impact: Causes confusion and led to accidental code commits under the wrong account.  Reference image from visual studio which I would like to have replication  ![Image](https://github.com/user-attachments/assets/de8e8f4d-fbd2-43ef-be20-29a7d114a88e)"
23,`Copilot Code Review` button does not overflow with ellipsis in smaller panel sizes,True,False,,vscode,2025-10-13T14:53:34.746398,,"ux, papercut :drop_of_blood:",1,bug,https://github.com/microsoft/vscode/issues/268823,"Expected Behavior:  I expected the button to truncate it's text with an ellipsis like the other buttons in the view    Screenshot:  <img width=""190"" height=""692"" alt=""Image"" src=""https://github.com/user-attachments/assets/af597bec-2aa4-42d0-810a-b3f50b1ec371"" />    UX/Design Issue: This issue is related to user interface, design, or user experience.  Environment Information: - VS Code Version: 1.105.0-insider - OS: macOS (arm64) - Workspace: 4 folder(s) open   --- This issue was filed using the Issue Filer extension"
24,Rich hover for chat history,True,False,,vscode,2025-10-13T14:53:34.749740,,"ux, chat",1,"ux-smell, undescriptive-element",https://github.com/microsoft/vscode/issues/268199,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Removed hover description in empty state chat history. Does not provide value when chat titles are displayed in full. For next phase, consider using rich hover for both command palette and empty state history:  > Here is an idea: what if we made the hover really show more info, like how many files changed, which model, the duration, the token use? That might also make it easier to relate to the chat session? - @bpasero   > SCM graph rich hover example: > <img width=""1954"" height=""488"" alt=""Image"" src=""https://github.com/user-attachments/assets/55d069ac-b85f-41c2-b44d-ad48867d8fd6"" />"
25,Todos don't truncate with elipses,True,False,,vscode,2025-10-13T14:53:34.753017,,ux,1,bug,https://github.com/microsoft/vscode/issues/268047,"<img width=""352"" height=""273"" alt=""Image"" src=""https://github.com/user-attachments/assets/f2f079e3-4340-4bb5-89c1-ff150e159dc2"" />"
26,Hide the 'Keep' 'Undo' and diff buttons on the working set until changes are complete,True,False,,vscode,2025-10-13T14:53:34.756826,,"ux, chat",1,ux-smell,https://github.com/microsoft/vscode/issues/267866,"Problem:  Today while code suggestions are generating we show the 'keep' and 'undo' buttons as disabled. These items are non-interactive and add more visual noise to the UI.   Suggestion:  Hide the 'keep', 'undo', and diff buttons while the code is generating, then show when the file changes are ready for review. This will bring further attention to that area and make it more clear what the current state is (as opposed to when folks are watching the chat or checking in while it's in progress). Furthermore, if there are tool calls or confirmations that utilize a primary button while the agent mode is in progress, then focus can remain on that as the action to focus on.  <img width=""1268"" height=""783"" alt=""Image"" src=""https://github.com/user-attachments/assets/3af9c716-f8b8-4106-8e94-2d81fd9377c2"" />"
27,Restyle the tool overlay to use secondary colors,True,False,,vscode,2025-10-13T14:53:34.760430,,"feature-request, ux, diff-editor, chat",1,"ux-smell, design",https://github.com/microsoft/vscode/issues/267864,"Suggested changes to the toolbar overlay for reviewing file diffs from chat: - Make the overlay toolbar for the file AND individual changes the secondary button color instead of primary - Replace the 'keep' and 'undo' text with icons (same icons that show on hover when you open the file from the list of suggested changes in chat) - Put ""X of Y"" between the arrows so it's more clear what they're related to? - If there needs to be an additional action here, a) use it sparingly, b) put on top of the toolbar so toolbar is always in consistent location, and c) use primary color  UX Mock: <img width=""1268"" height=""815"" alt=""Image"" src=""https://github.com/user-attachments/assets/a804b8b9-614f-408f-bc80-a89d6f8c46ca"" />"
28,Chat empty state history preview: Remove 'Show more...' from workspace history in command palette,True,False,,vscode,2025-10-13T14:53:34.763213,,"ux, chat",1,ux-smell,https://github.com/microsoft/vscode/issues/267863,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Under setting `chat.emptyState.history.enabled`, when user clicks 'Chat history...' to open workspace history in command palette, show full scrollable history by default. Do not hide any sessions by default and remove the option to 'Show more...'.  <img width=""615"" height=""324"" alt=""Image"" src=""https://github.com/user-attachments/assets/56bf317d-7f60-4296-a0c6-e29bfc79dace"" />   > Clicking on Show History - shows the quick pick, which is good. But now that quick pick should not have an action ""Show More"" - that is exactly the reason why the user clicked here, so it should be the full list  CC: @isidorn"
29,All small buttons should have a height of 24 (minimum click-target for a11y),True,False,,vscode,2025-10-13T14:53:34.766098,,"ux, accessibility",1,"ux-smell, design",https://github.com/microsoft/vscode/issues/267862,"Today the 'small' button size has a height of 22px with 11px left- and right-padding.  To meet minimum click target size requirements, we need the button to be 24px high.  I believe we can keep the size of the font and other elements within the button the same, and just have a slightly bigger top- and bottom-padding."
30,Update tool confirmation buttons to size 'small',True,False,,vscode,2025-10-13T14:53:34.768979,,"ux, chat, chat-tools",1,"ux-smell, design",https://github.com/microsoft/vscode/issues/267861,"Currently the tool call confirmation uses the 'default' button size (28px high). To address button inconsistencies while working in chat and reviewing code (#261472 ) we'd like to make the tool confirmation size ""small"". The small button has a height of 22px with 11px left- and right-padding.  Mock of the tool call confirmation with small size: <img width=""1268"" height=""783"" alt=""Image"" src=""https://github.com/user-attachments/assets/117b3716-0ce0-455f-a2e2-f113f3a8203b"" />  Separately, the small button height needs to be updated from 22px to 24px to meet accessibility requirements for a minimum click-target size."
31,History is not hidden when not required,True,False,,vscode,2025-10-13T14:53:34.773516,,"bug, ux, chat",1,,https://github.com/microsoft/vscode/issues/267522,"There doesn't seem to be a way to turn off this history feature I'm referring to the 3 chat history items displayed on the top of the chat UI.  <img width=""852"" height=""479"" alt=""Image"" src=""https://github.com/user-attachments/assets/0a15f3c6-8eb1-48cb-8a72-7f9cb16c6a49"" />"
32,Icon request: Copilot with in progress chat sessions,True,False,,vscode,2025-10-13T14:53:34.778316,,"ux, icons-product, chat",1,,https://github.com/microsoft/vscode/issues/267216,Ask for a copilot icon with a little progress indicator to show when chat sessions are in progress in the status bar.  Related: https://github.com/microsoft/vscode/issues/265168
33,VS Code Figma Compontent Update: Utilities,True,False,,vscode,2025-10-13T14:53:34.782688,,ux,1,,https://github.com/microsoft/vscode/issues/266472,- [x] Check for differences between stable and component set - [x] Figma plug in does not support having both recommended and installed.
34,VS Code Figma Compontent Update: Titlebar,True,False,,vscode,2025-10-13T14:53:34.787109,,ux,1,,https://github.com/microsoft/vscode/issues/266471,- [x] Check for differences between stable and component set - [x] Icon updates - [x] update split button - [x] SVG swaps
35,VS Code Figma Compontent Update: Templates,True,False,,vscode,2025-10-13T14:53:34.791579,,ux,1,,https://github.com/microsoft/vscode/issues/266470,"- [ ] Check for differences between stable and component set   <img width=""916"" height=""775"" alt=""Image"" src=""https://github.com/user-attachments/assets/a6aa5d3e-884b-48de-aa57-a2a8993a5d8f"" />"
36,VS Code Figma Compontent Update: Tabs,True,False,,vscode,2025-10-13T14:53:34.794651,,ux,1,,https://github.com/microsoft/vscode/issues/266469,- [ ] Check for differences between stable and component set - [ ] Swap file type icons to SVG
37,VS Code Figma Compontent Update: Suggest Widget,True,False,,vscode,2025-10-13T14:53:34.797737,,ux,1,,https://github.com/microsoft/vscode/issues/266468,"<img width=""556"" height=""282"" alt=""Image"" src=""https://github.com/user-attachments/assets/6ebae95d-db76-44ad-bd92-1fbfb92ddd97"" />  - [x] Check for differences between stable and component set - [ ] Swap icons to SVG - [x] Padding is off - [x] Fix light mode and darkmode, updating tokens"
38,VS Code Figma Compontent Update: Status bar,True,False,,vscode,2025-10-13T14:53:34.800574,,ux,1,,https://github.com/microsoft/vscode/issues/266467,"- [ ] Check for differences between stable and component set - [ ] Update icons - [ ] Update icons size (using codicon small which is 14px) - [ ] Updated dark/light mode issues  <img width=""366"" height=""145"" alt=""Image"" src=""https://github.com/user-attachments/assets/05bd40d3-389c-4148-972a-89942711ddf2"" />"
39,VS Code Figma Compontent Update: Sidebar,True,False,,vscode,2025-10-13T14:53:34.803870,,ux,1,,https://github.com/microsoft/vscode/issues/266466,- [ ] Check for differences between stable and component set
40,VS Code Figma Compontent Update: Settings,True,False,,vscode,2025-10-13T14:53:34.807289,,ux,1,,https://github.com/microsoft/vscode/issues/266465,- [ ] Check for differences between stable and component set
41,VS Code Figma Compontent Update: Quick Pick,True,False,,vscode,2025-10-13T14:53:34.810432,,ux,1,,https://github.com/microsoft/vscode/issues/266464,- [ ] Check for differences between stable and component set - [ ] Remove dark theme variable - [ ] Back button dissappears when all are selected - [ ] Checkbox w/ Icons
42,VS Code Figma Compontent Update: Progress,True,False,,vscode,2025-10-13T14:53:34.813706,,ux,1,,https://github.com/microsoft/vscode/issues/266463,- [ ] Check for differences between stable and component set
43,VS Code Figma Compontent Update: Panel,True,False,,vscode,2025-10-13T14:53:34.816883,,ux,1,,https://github.com/microsoft/vscode/issues/266462,- [ ] Check for differences between stable and component set
44,VS Code Figma Compontent Update: Peek Views,True,False,,vscode,2025-10-13T14:53:34.819595,,ux,1,,https://github.com/microsoft/vscode/issues/266461,- [x] Check for differences between stable and component set - [ ] Research what tokens to use - [ ] Update/crete tokens
45,VS Code Figma Compontent Update: Notifications,True,False,,vscode,2025-10-13T14:53:34.824938,,ux,1,,https://github.com/microsoft/vscode/issues/266460,- [ ] Check for differences between stable and component set
46,VS Code Figma Compontent Update: Notebooks,True,False,,vscode,2025-10-13T14:53:34.827970,,ux,1,,https://github.com/microsoft/vscode/issues/266458,- [ ] Check for differences between stable and component set - [ ] Theming issue
47,VS Code Figma Compontent Update: List,True,False,,vscode,2025-10-13T14:53:34.830953,,ux,1,,https://github.com/microsoft/vscode/issues/266457,- [x] Check for differences between stable and component set - [x] Fix light and dark mode - [ ] fix icons
48,VS Code Figma Compontent Update: Labels,True,False,,vscode,2025-10-13T14:53:34.833762,,ux,1,,https://github.com/microsoft/vscode/issues/266456,- [ ] Check for differences between stable and component set
49,VS Code Figma Compontent Update: Hovers,True,False,,vscode,2025-10-13T14:53:34.836762,,ux,1,,https://github.com/microsoft/vscode/issues/266455,- [ ] Check for differences between stable and component set
50,VS Code Figma Compontent Update: Extensions,True,False,,vscode,2025-10-13T14:53:34.840430,,ux,1,,https://github.com/microsoft/vscode/issues/266454,- [x] Check for differences between stable and component set - [x] Added Pre-release flag - [ ] Swap out codiicon
51,VS Code Figma Compontent Update: Editor,True,False,,vscode,2025-10-13T14:53:34.843670,,ux,1,,https://github.com/microsoft/vscode/issues/266453,- [ ] Check for differences between stable and component set
52,VS Code Figma Compontent Update: Dialog,True,False,,vscode,2025-10-13T14:53:34.846474,,ux,1,,https://github.com/microsoft/vscode/issues/266452,- [x] Check for differences between stable and component set - [ ] Change the icon to SVG - [x] Update dark/light mode toggle
53,VS Code Figma Compontent Update: Activity Bar,True,False,,vscode,2025-10-13T14:53:34.849482,,ux,1,,https://github.com/microsoft/vscode/issues/266450,documentation: https://code.visualstudio.com/api/ux-guidelines/activity-bar  - [x] Check for differences between stable and component set - [x] Check if component is using auto layout - [x] Check if if layer name are symantic - [x] Check if no unused layers - [ ] Swap from using codicon to fonts - [ ] Use variable instance swap for changing icons - [ ] Uses variable spacing - [x] Uses variable colors
54,Chat input field and context cleanup,True,False,,vscode,2025-10-13T14:53:34.852207,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/266449,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Left aligning the chat input field (moving 1 to 2 pixels to the right). Remove the button label 'Add context...'?. This takes up so much space when displaying added context.  The hover state would remain the same.  <img width=""1278"" height=""1214"" alt=""Image"" src=""https://github.com/user-attachments/assets/f400005e-0927-44e7-8ea0-9633d268f924"" />"
55,Chat History list remains after clearing history.,True,False,,vscode,2025-10-13T14:53:34.856559,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/266407,Steps to Reproduce:  1. Observe the chat history list appearing in new chat session 2. Invoke command `Clear All Workspace Chat` 3. Chat history list in panel should be cleared. 4. 🐛 History list remains. Clicking on an item in the list is no-op   Needs a full reload to clear the list.
56,Chat welcome history hovers overlap other items in the list,True,False,,vscode,2025-10-13T14:53:34.859500,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/266373,"<img width=""775"" height=""171"" alt=""Image"" src=""https://github.com/user-attachments/assets/4fa0cccf-4776-4c79-837e-64072ebcdee5"" />"
57,SCM - customize is show of checkout branch/tag in sidebar for git,True,False,,vscode,2025-10-13T14:53:34.862778,,"ux, scm",1,,https://github.com/microsoft/vscode/issues/266318,"Type: <b>Feature Request</b>  in my workflow, two git respository will be open in one space, for sidebar, it function is to quickly switch respository, checkout branch usualy happend in status bar, however, in recent version, checout is force display in sidebar, which caused me to frequently widen sidebar, or wrong trigger checkout  <img width=""311"" height=""280"" alt=""Image"" src=""https://github.com/user-attachments/assets/7a7d42eb-0919-4b27-a91c-a8c574ed7e81"" />  VS Code version: Code 1.104.0 (f220831ea2d946c0dcb0f3eaa480eb435a2c1260, 2025-09-10T06:46:18.035Z) OS version: Windows_NT x64 10.0.26100 Modes:   <!-- generated by issue reporter -->"
58,Updating Figm Chat Component,True,False,,vscode,2025-10-13T14:53:34.865697,,ux,1,,https://github.com/microsoft/vscode/issues/266262,Change requsts - [x] checkpoints - [x] null state - [x] seperator on top action bar - [x] attached file on user message - [ ] progress row (Read: file) - [x] Files with diff numbers - [x] Prompt box drawer - [ ] Adjust all color tokens  Later - [ ] todos   https://www.figma.com/design/AJnTgc00iEI0KTVdyoN997/branch/UX6NOkBjsRfD9UZBktO00M/Visual-Studio-Code-Toolkit?m=auto&node-id=20087-269628&t=4pIvET56Fw5SqmIB-1
59,Revise agent mode placeholder text,True,False,,vscode,2025-10-13T14:53:34.868737,,"bug, ux, chat",1,,https://github.com/microsoft/vscode/issues/266075,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Remove extensions @ from agent mode   > @ extensions does not have to be so prominent in Agent mode. - @isidorn   <img width=""432"" height=""100"" alt=""Image"" src=""https://github.com/user-attachments/assets/c44bf106-c48b-40b3-9467-6502cf26b5cd"" />"
60,Remove chat.emptyChatState.enabled setting,True,False,,vscode,2025-10-13T14:53:34.872379,,"debt, ux",1,,https://github.com/microsoft/vscode/issues/266074,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> This setting is enabled by default for 100% of stable. We can remove this setting and its containing code, and replace the current empty state.  <img width=""567"" height=""108"" alt=""Image"" src=""https://github.com/user-attachments/assets/b7eb1a28-74fa-4c22-a638-fc5efbf3ae65"" />"
61,Update options in chat split menu,True,False,,vscode,2025-10-13T14:53:34.876420,,"ux, plg",1,,https://github.com/microsoft/vscode/issues/266065,"Customer problem: users aren't familiar with options for viewing/opening chat in different areas of the VS Code layout.   Current menu options: <img width=""480"" height=""358"" alt=""Image"" src=""https://github.com/user-attachments/assets/8538d258-3aee-49b2-b2ae-9822ef4ed230"" />  Questions to answer: How can we let users easily switch and/or open chat in different areas of VS Code?  What defaults should we support from different entrypoints? How do these options live alongside existing options?"
62,Improve Styling of chat.promptFilesRecommendations Display on Welcome Page,True,False,,vscode,2025-10-13T14:53:34.879243,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/266047,"Type: <b>Feature Request</b>  The chat.promptFilesRecommendations feature in GitHub Copilot is highly useful for quick access to prompt files, but its current styling on the welcome page appears jarring and inconsistent with the overall UI design. The recommendations could benefit from more polished visual integration, such as better spacing, subtle animations, or alignment with existing welcome page elements to create a smoother, more cohesive user experience. This enhancement would make the feature feel more native and less disruptive while maintaining its practical value for developers.  VS Code version: Code - Insiders 1.104.0-insider (f220831ea2d946c0dcb0f3eaa480eb435a2c1260, 2025-09-09T22:13:39.933Z) OS version: Windows_NT x64 10.0.26100 Modes:   <!-- generated by issue reporter -->"
63,Extension pre-release and recommended modifiers are applied inconsistently,True,False,,vscode,2025-10-13T14:53:34.882317,,"ux, papercut :drop_of_blood:",1,,https://github.com/microsoft/vscode/issues/266037,"Extension pre-release and recommended labels are applied inconsistently  Screenshot:  <img width=""1181"" height=""206"" alt=""Image"" src=""https://github.com/user-attachments/assets/36bf7398-e095-4faf-aca5-86dddfb81401"" />  <img width=""1210"" height=""212"" alt=""Image"" src=""https://github.com/user-attachments/assets/31302d09-93ec-4a7a-8e28-9b79f6a16196"" />  <img width=""111"" height=""93"" alt=""Image"" src=""https://github.com/user-attachments/assets/9a980272-8695-466c-9d86-333a2604eeec"" />  <img width=""121"" height=""85"" alt=""Image"" src=""https://github.com/user-attachments/assets/414db87b-7e52-46be-aa0b-84296c763cf3"" />  There are also different treatments for MCP servers:  <img width=""490"" height=""103"" alt=""Image"" src=""https://github.com/user-attachments/assets/ac64d28e-59ba-48ca-b9cd-01363e33dac5"" />  <img width=""1082"" height=""283"" alt=""Image"" src=""https://github.com/user-attachments/assets/42408e08-49f2-4676-90ef-3d0d65818543"" />"
64,Welcome view history should not allow opening chat twice,True,False,,vscode,2025-10-13T14:53:34.885191,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/265938,"This is basically the same issue we just fixed in https://github.com/microsoft/vscode/issues/264680, it ocurred to me that it could happen here too  - Open some chat session in a chat editor - Go the history list in the chat view - Click the same session that is already open in the editor - Now the same session is open twice, in an editor and the sidebar, we cannot allow this - If I close the chat editor, then the chat view will break completely and need the window reloaded to recover  You could use a similar strategy to our fix to that issue to say that if the clicked chat session is already open, just don't open it."
65,Explore options for terminology & labels around remote/background agents,True,False,,vscode,2025-10-13T14:53:34.889990,,ux,1,,https://github.com/microsoft/vscode/issues/265922,"Specifically:  - Test language around 'delegate to agent' - Test entrypoints and introduction of concept - Help connect UI in agents tasks list to the chat sessions and PR views - Iterate on in-chat 'hand-off', how can we make it more clear what this action is and where the task 'lives'"
66,Explore user problems and provide UX improvement recommendations for making modes more usable,True,False,,vscode,2025-10-13T14:53:34.893256,,ux,1,,https://github.com/microsoft/vscode/issues/265919,Modes and the ability to customize them is a powerful feature in VS Code. How can we further improve the discoverability and utility of the feature? Specifically:  - How can we make sure new users trying chat can be successful without having to learn about modes first? - How can we suggest when users should switch or customize modes?  - How can we make customizing modes easier?
67,Issue Reporter has no Markdown preview,True,False,,vscode,2025-10-13T14:53:34.896395,,"feature-request, ux, issue-reporter",1,,https://github.com/microsoft/vscode/issues/265509,"Type: <b>Bug</b>  issues are written in markdown, however there is no preview for markdown  also I can't paste images into VSCode's Issue Reporter  and no where does it state that this issue will be reported publicly  and the issue report should be opened in draft mode on GitHub don't instantly create the issue  <img width=""681"" height=""856"" alt=""Image"" src=""https://github.com/user-attachments/assets/463fc11d-aa1b-4eed-970e-67482a03c7a4"" />  VS Code version: Code 1.103.1 (360a4e4fd251bfce169a4ddf857c7d25d1ad40da, 2025-08-12T16:25:40.542Z) OS version: Windows_NT x64 10.0.26100 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 5 2600 Six-Core Processor             (12 x 3400)| |GPU Status|2d_canvas: enabled<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>trees_in_viz: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|23.92GB (15.03GB free)| |Process Argv|--crash-reporter-id 6787231e-58b0-4969-923e-74f4af57ddb2| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (20)</summary>  Extension|Author (truncated)|Version ---|---|--- tsl-problem-matcher|amo|0.6.2 vscode-wasm|dts|1.4.1 yaml-embedded-languages|har|1.3.0 vscode-tree-sitter-query|jri|0.0.6 highlight-on-copy|mgu|1.1.6 compare-folders|mos|0.25.3 hexeditor|ms-|1.11.1 vscode-js-profile-flame|ms-|1.0.9 gitignore-ultimate|que|0.3.0 json-embedded-languages|Red|0.3.3 regexp-syntax-highlighter|Red|1.1.0 snippets-snippets|Red|0.1.3 tmlanguage-syntax-highlighter|Red|2.7.8 heatscroll|rth|0.0.4 extended-embedded-languages|rus|1.3.0 code-spell-checker|str|4.2.6 pdf|tom|1.2.2 paste-diff|ufy|1.0.1 sysinfo-vscode|wra|2.6.0 pretty-ts-errors|Yoa|0.6.1   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vswsl492cf:30256860 pythonvspyt551:31249599 binariesv615:30325510 nativeloc1:31344060 dwcopilot:31170013 dwoutputs:31242946 copilot_t_ci:31333650 e5gg6876:31282496 996jf627:31283433 pythonrdcb7:31342333 usemplatestapi:31297334 jjjhb125:31275178 aj953862:31281341 nesew2to5:31336538 agentclaude:31350858 nes-set-on:31351930 6abeh943:31336334 0927b901:31350571 aa_c:31379599 45650338:31358607 0cj2b977:31352657 0574c672:31362109 newchatstate:31363049 pylancealldocsf:31379511 cloudbuttont:31379625 retryenabled:31370050 search_len_ctrl:31380232 3efgi100_wstrepl:31374188 trigger-command-fix:31379601  ```  </details>  <!-- generated by issue reporter -->"
68,general thinking part ux feedback,True,False,,vscode,2025-10-13T14:53:34.899833,,"ux, polish",1,,https://github.com/microsoft/vscode/issues/265415,"- [ ] double thinking header (next to chevron and in thinking tokens) - at the moment, the headers are duplicated in the body and the header <img width=""580"" height=""182"" alt=""Image"" src=""https://github.com/user-attachments/assets/b3d85221-d51f-4ed1-a1d0-4e22cf075cf1"" />   - [ ] thinking chain alignment - thinking chains can maybe be aligned with tool call checkmarks <img width=""484"" height=""880"" alt=""Image"" src=""https://github.com/user-attachments/assets/50e57548-25ef-4073-8073-7ff58e7d9837"" />   - [ ] thinking sections are broken up - should be fixed with connors fix for failed tool calls   - [ ] \n\n is not line breaking for thinking sections - expected a line break between ""blocks"" and ""also"" <img width=""491"" height=""164"" alt=""Image"" src=""https://github.com/user-attachments/assets/c79761ab-ca49-484b-8fa6-a041dfbc4467"" />  - [ ] progress UX for collapsed thinking part is not great - working progress could be renamed to ""thinking"", or maybe a spinner in the header instead. <img width=""498"" height=""72"" alt=""Image"" src=""https://github.com/user-attachments/assets/a5dfe026-5f1d-4062-af0d-8f661ee6612b"" />"
69,Chat: Vertical grid alignment of tool calls,True,False,,vscode,2025-10-13T14:53:34.903698,,"ux, polish",1,,https://github.com/microsoft/vscode/issues/265369,"If that padding is just 6px, the tools would be nicely aligned as a vertical grid (but I am scared to make 1-line CSS changes)  16px <img width=""351"" height=""331"" alt=""Image"" src=""https://github.com/user-attachments/assets/78b35e8d-de26-4455-bc71-c043e6b27e01"" />  6px <img width=""301"" height=""228"" alt=""Image"" src=""https://github.com/user-attachments/assets/2d089b16-40f8-4b27-bacd-480df832d12d"" />  cc @jo-oikawa"
70,Tree indent indicators/lines have strange placement,True,False,,vscode,2025-10-13T14:53:34.907254,,ux,1,,https://github.com/microsoft/vscode/issues/265136,"The vertical indentation lines in tree views have a non-standard placement in relation to the chevrons / twisties:  <img width=""834"" height=""409"" alt=""Image"" src=""https://github.com/user-attachments/assets/00ea21d3-f7a8-4c5a-9605-47e764a97e22"" />  I propose to horizontally align them either centrally or to the left:  <img width=""850"" height=""892"" alt=""Image"" src=""https://github.com/user-attachments/assets/8bd45def-2ad6-4478-bbff-0c2fc15510dd"" />  Personally, I think left aligned is the better approach as it will give file / tree item icons & chevrons more breathing room."
71,AI Search has no empty state for no results,True,False,,vscode,2025-10-13T14:53:34.910739,,ux,1,,https://github.com/microsoft/vscode/issues/265119,"Bug Description: AI Search has no empty state for no results   Description: There is an opportunity to provide more context to the user when copilot search does not return any results.  Steps to Reproduce: 1. Open search 2. Enter a long random string to simulate something that can't be found in the codebase 3. Wait for Copilot to finish searching  Screenshot:  <img width=""504"" height=""613"" alt=""Image"" src=""https://github.com/user-attachments/assets/a201acc7-5ab7-418b-81e4-ae795e3f7caf"" />   UX/Design Issue: This issue is related to user interface, design, or user experience.  Environment Information: - VS Code Version: 1.104.0-insider - OS: macOS (arm64) - Workspace: 2 folder(s) open"
72,Statusbar icon for worktrees,True,False,,vscode,2025-10-13T14:53:34.914154,,ux,1,,https://github.com/microsoft/vscode/issues/264882,"Test for #264055  <img width=""392"" height=""90"" alt=""Image"" src=""https://github.com/user-attachments/assets/03bb0b96-bfe2-41df-b60b-564bce53f920"" />  Currently there is no persistent UI to indicate that the user is working in a worktree - I suggest adding the `list-tree` codicon to the status bar item:  <img width=""392"" height=""72"" alt=""Image"" src=""https://github.com/user-attachments/assets/75929618-18ee-41e1-bcd6-5d18931f9fbc"" />"
73,Cramped source control,True,False,,vscode,2025-10-13T14:53:34.917298,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/264669,"Testing #264055  I don't particularly have a suggestion besides maybe a 2nd line... but it's pretty cramped... and this is on my MacBook Pro 16in...  <img width=""332"" height=""286"" alt=""Image"" src=""https://github.com/user-attachments/assets/589d3385-f75f-4c95-9a4d-d5f6d8c36a1b"" />  <img width=""1728"" height=""1117"" alt=""Image"" src=""https://github.com/user-attachments/assets/82b242d6-cdc4-4b39-9565-7e5521a590bb"" />"
74,Want link to more info about copilot debug logs in issue reporter,True,False,,vscode,2025-10-13T14:53:34.920587,,"ux, under-discussion, issue-reporter",1,,https://github.com/microsoft/vscode/issues/264659,"Testing #264098  How will I know if my logs contain private info? If we could make some of this text clickable and point to a reference explaining how I can determine this, that'd be a great help!  <img width=""585"" height=""83"" alt=""Image"" src=""https://github.com/user-attachments/assets/fbcc21cc-ada5-424f-84ed-6d9a0a0bf971"" />"
75,Alignment of `Open` and `Closed` feels off in issue reporter `Similar issues`,True,False,,vscode,2025-10-13T14:53:34.926771,,"ux, issue-reporter",1,,https://github.com/microsoft/vscode/issues/264651,"Testing #264098  It feels like `Open` and `Closed` aren't quite aligned in the middle / aligned with the info icon:  <img width=""952"" height=""389"" alt=""Image"" src=""https://github.com/user-attachments/assets/0675883a-d5f3-444e-b6f1-8eaffc69f7d2"" />"
76,History does not update when deleting chats,True,False,,vscode,2025-10-13T14:53:34.929734,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/264521,Testing #264269  Expected behaviour: the list would update when I delete an item displayed in the list.  ![Image](https://github.com/user-attachments/assets/e8ab88f4-7424-47ab-ad50-b67d897cc4a8)
77,Perhaps link could be a button with the same UI as the `Create on GitHub` button,True,False,,vscode,2025-10-13T14:53:34.932517,,"ux, under-discussion, issue-reporter",1,,https://github.com/microsoft/vscode/issues/264482,"Testing #264098  This is a UI item which I created with the purpose of discussing the UI of the button which links to the repo in the issue reporter. The link/button is the repo name in the image below. I am wondering if the UI would look better if the link was instead a button with text `View Repo` which on hover would show the repo name. The button could have the same styling as the `Create on GitHub` button. Pinging @mrleemurray about the UI.  <img width=""263"" height=""119"" alt=""Image"" src=""https://github.com/user-attachments/assets/db996a32-2468-4645-80a4-b1f16838a1b2"" />"
78,Selecting option `Preview on GitHub` could change permanently option `Create on GitHub` to it,True,False,,vscode,2025-10-13T14:53:34.935477,,"ux, under-discussion, issue-reporter",1,,https://github.com/microsoft/vscode/issues/264472,Testing #264098  This is a small UX discussion point. I saw the following pattern used on GitHub and in the Pull Requests extension where selecting an option from the dropdown permanently changes the button state by default. The option `Create on GitHub` could then be placed into the dropdown (the two would essentially swap). I am just wondering if this could be a good UX change. @mrleemurray
79,Issue reporter font size is larger than editor font size,True,False,,vscode,2025-10-13T14:53:34.939311,,"ux, under-discussion, issue-reporter",1,,https://github.com/microsoft/vscode/issues/264467,"Testing #264098  This is not really an issue, it's just something I noticed. I noticed that the issue reporter font size is larger than the editor font size, which is made more apparent when these two are placed side by side. Perhaps we could standardize the font size between the two.  <img width=""771"" height=""836"" alt=""Image"" src=""https://github.com/user-attachments/assets/9fc91ebe-f9e6-4736-aba8-763b5690fc93"" />"
80,Terminal pane close button can get hidden,True,False,,vscode,2025-10-13T14:53:34.942739,,ux,1,,https://github.com/microsoft/vscode/issues/264356,"Bug Description: Terminal pane close button can get hidden   Description: Breakpoints are too loose, leading to concealment of close button in certain panel widths   Screenshot:  <img width=""211"" height=""90"" alt=""Image"" src=""https://github.com/user-attachments/assets/74c464d8-1ba0-4edb-ac22-36664df48e82"" />  ![Image](https://github.com/user-attachments/assets/9dab9a36-cc86-49f3-8df1-3f7447b94d99)"
81,Setting tab drop down not consistent,True,False,,vscode,2025-10-13T14:53:34.946329,,ux,1,,https://github.com/microsoft/vscode/issues/264354,"Description: Currently a filled triangle instead of a down chevron  <img width=""349"" height=""155"" alt=""Image"" src=""https://github.com/user-attachments/assets/e6349caa-0f0d-4645-b046-8ac620cac656"" />  What it should use `chevron-down`  <img width=""71"" height=""41"" alt=""Image"" src=""https://github.com/user-attachments/assets/a0f9121d-47cf-462c-a93c-dee9d4235cc5"" />"
82,No horizontal scrolling in activity and chat bar,True,False,,vscode,2025-10-13T14:53:34.949387,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/264056,"Bug Description: No horizontal scrolling in activity and chat bar   Description: When there are more tabs in activity and chat bars than fit within the panel width, we show an overflow menu. Why not introduce horizontal scrolling%3F  Steps to Reproduce: 1.  2.  3.   Expected Behavior: What did you expect to happen   Actual Behavior: What actually happened    Screenshot: Please attach your screenshot by dragging and dropping it into the issue description area below.  <img width=""549"" height=""146"" alt=""Image"" src=""https://github.com/user-attachments/assets/48d7b7c1-447c-4aa7-ad3c-9ce8b29aa154"" />  <img width=""285"" height=""125"" alt=""Image"" src=""https://github.com/user-attachments/assets/0c9939c7-6af1-4c47-825d-e1882c82a559"" />   UX/Design Issue: This issue is related to user interface, design, or user experience.  Environment Information: - VS Code Version: 1.104.0-insider - OS: macOS (arm64) - Workspace: 1 folder(s) open  Extensions: Please list any relevant extensions that might be related to this issue -   Additional Context: Add any other context about the problem here Include error messages, console output, or other relevant information   Reproduction Steps (Detailed): If the basic steps above are not sufficient, provide more detailed reproduction steps   --- This issue was filed using the VS Code Issue Filer extension"
83,Font size scaling should not apply to codicons,True,False,,vscode,2025-10-13T14:53:34.953823,,"ux, under-discussion, chat",1,,https://github.com/microsoft/vscode/issues/264039,"Codicons are tuned for appearing at 16x16. When that's not the case they do not render well especially on standard DPI monitors. It's a little hard to visualize the problem outside of one of these monitors but it doesn't look like a complete circle anymore due to the loss in fidelity at the top and bottom.  <img width=""227"" height=""89"" alt=""Image"" src=""https://github.com/user-attachments/assets/06b34e6d-29be-469c-937e-cf3b8faf9adc"" />  <img width=""436"" height=""408"" alt=""Image"" src=""https://github.com/user-attachments/assets/463d1e01-34f8-4d04-93d4-b9d0ec8157ef"" />"
84,Thought bottom padding not consistent,True,False,,vscode,2025-10-13T14:53:34.957799,,ux,1,,https://github.com/microsoft/vscode/issues/262973,"<img width=""685"" height=""278"" alt=""Image"" src=""https://github.com/user-attachments/assets/d917138e-d094-497c-bee4-63dece8bed0d"" />  <img width=""334"" height=""92"" alt=""Image"" src=""https://github.com/user-attachments/assets/2d5c99fd-774e-469b-a356-91bb8b79cdde"" />"
85,Remove the 'Keep' button in Chat Agent mode and use standard save behavior,True,False,,vscode,2025-10-13T14:53:34.961394,,ux,1,,https://github.com/microsoft/vscode/issues/262495,"In agent mode, after the agent modifies a file, the current user experience presents a confusing ""in-between"" state. The file can be saved, but it is not ""kept"" until the user explicitly clicks the ""Keep"" button. This results in several unintuitive behaviors: - Files can be deleted by the user, but if the user clicks ""Undo"" after the file is deleted but not ""kept"", the file can reappear. - It is unclear to the user whether changes are permanent or not, and the distinction between ""save"" and ""keep"" is not obvious or necessary.  #### Proposal Remove the ""Keep"" button and the associated intermediate state in agent mode. Instead, when the agent modifies files, the modifications should be handled as normal file edits within VS Code. Saving (or auto-save) should work as it does with any file, respecting the user's configured settings for saving. There should not be a separate ""keep""/""undo"" state after agent edits—just standard save/undo as with any other manual edit."
86,"Git: Apply Stash picker, worktree is shown when closed",True,False,,vscode,2025-10-13T14:53:34.965419,,"bug, git, ux",1,,https://github.com/microsoft/vscode/issues/261886,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:   ""Git: Apply Stash..."" shows worktrees as well when you have to choose a repository. I didn't expect that, since that worktree is not open in the current window.  <img width=""718"" height=""160"" alt=""Image"" src=""https://github.com/user-attachments/assets/f960abbe-3f2f-4958-a9bd-24255fe1b92e"" />"
87,Too much margin above checkpoint line,True,False,,vscode,2025-10-13T14:53:34.968814,,"ux, papercut :drop_of_blood:",1,,https://github.com/microsoft/vscode/issues/261805,"Sorry if there is already an issue for this. I feel like there is too much margin above the checkpoint line. I understand we must leave some space for the toolbar from the previous message. But I feel like we could compress this by 2-8px  <img width=""688"" height=""128"" alt=""Image"" src=""https://github.com/user-attachments/assets/567f179c-f6d1-45cd-a18b-88381ed1f96e"" />  fyi @jo-oikawa"
88,UI clarity: Discard changes and Open file icons are confusing,True,False,,vscode,2025-10-13T14:53:34.973132,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/261658,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  # Confusing icons in version control view  These two icons has been confusing me for the last few years.  Both the button ""Open File"" that takes you to the file and the REVERT button contains arrows, and they are next to each other.  So every time I want to go to the actual file, which is a very common action, I'm scared to delete my work (even though there's a confirmation screen). Luckily we can fix this easily as seen below.  **Figure 1:** The way it's currently: <img width=""673"" height=""185"" alt=""Image"" src=""https://github.com/user-attachments/assets/29fc7b57-9460-4a7e-b0b6-7d7d90d5f8c7"" /> **Figure 2:** An improvement that removes the possible confusion: <img width=""673"" height=""185"" alt=""Image"" src=""https://github.com/user-attachments/assets/c125c926-5d3c-4d9c-92e9-33aee1684caa"" />"
89,Repo name is not displayed in Source Control sidebar,True,False,,vscode,2025-10-13T14:53:34.977780,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/261388,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **Note**: this looks like a regression of https://github.com/microsoft/vscode/commit/ed24319ef9264a668ceec8d025c2f37763da8363 See https://github.com/microsoft/vscode/commit/e7be6e9cff48691fcea95842998f2101b64463fc#diff-87e0ff1d8aa33251109869f70c4b40afdb62f995035b783765095726c7137118  Since a recent update, the Source Control sidebar no longer displays *any part* of the repo name if the branch name is too long.  This is a problem for us since we work with a lot of sub-repos and use the same branch names for each (automatically created from the ticket title, which makes them long).  As it stands, VSCode can display several entries with no way to easily differentiate between them, and even if different branch names are used, without seeing the repo name we cannot know if we have the right branch checked out. For example, see the first three lines here:  <img width=""371"" height=""405"" alt=""Image"" src=""https://github.com/user-attachments/assets/27786a9b-70c2-493b-942b-e1a42094800c"" />  I understand that some people prefer to see the branch while others prefer to see the repo, so why not make it configurable? Or give an option to set a minimum width for the repo field so we can at least see the tooltip on hover.  There is no need to choose a side when a configuration option can make everyone happy. Or, you know, just fix the regression :)"
90,left scroll anchor does not work,True,False,,vscode,2025-10-13T14:53:34.982348,,"ux, release-notes",1,,https://github.com/microsoft/vscode/issues/260920,"Type: <b>Bug</b>  1. Open Release Notes in VSCode. 2. The left sidebar anchor does not highlight when scrolling down  VS Code version: Code 1.103.0 (e3550cfac4b63ca4eafca7b601f0d2885817fd1f, 2025-08-06T21:40:10.271Z) OS version: Windows_NT x64 10.0.26100 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|12th Gen Intel(R) Core(TM) i5-12500 (12 x 2995)| |GPU Status|2d_canvas: enabled<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>trees_in_viz: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|15.69GB (5.76GB free)| |Process Argv|| |Screen Reader|no| |VM|50%| </details><details><summary>Extensions (75)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-openapi|42C|4.38.0 codesnap|adp|1.3.4 vscode-nginx-conf|ahm|0.3.5 ng-template|Ang|20.2.1 vscode-tailwindcss|bra|0.14.26 path-intellisense|chr|2.10.0 vscode-eslint|dba|3.0.16 docker|doc|0.14.0 quicktype-refresh|dog|1.0.2 xml|Dot|2.5.1 vscode-wasm|dts|1.4.1 gitlens|eam|17.3.3 EditorConfig|Edi|0.17.4 prettier-vscode|esb|11.0.0 vue-3-vscode-snippets|exe|0.8.0 copilot|Git|1.350.0 copilot-chat|Git|0.30.0 go|gol|0.48.0 todo-tree|Gru|0.0.226 vscode-drawio|hed|1.9.0 rest-client|hum|0.25.1 svg|joc|1.5.4 bash-ide-vscode|mad|1.43.0 caddyfile-support|mat|0.4.0 rainbow-csv|mec|3.20.0 symbols|mig|0.0.24 dotenv|mik|1.0.1 vscode-containers|ms-|2.1.0 vscode-docker|ms-|2.0.0 vscode-dotnet-runtime|ms-|2.3.7 vscode-kubernetes-tools|ms-|1.3.25 playwright|ms-|1.1.15 black-formatter|ms-|2025.2.0 debugpy|ms-|2025.10.0 python|ms-|2025.12.0 vscode-pylance|ms-|2025.7.1 vscode-python-envs|ms-|1.2.0 jupyter-keymap|ms-|1.1.2 jupyter-renderers|ms-|1.3.0 remote-containers|ms-|0.422.1 remote-ssh|ms-|0.120.0 remote-ssh-edit|ms-|0.87.0 remote-wsl|ms-|0.99.0 vscode-remote-extensionpack|ms-|0.26.0 azure-repos|ms-|0.40.0 hexeditor|ms-|1.11.1 js-debug-nightly|ms-|2025.8.817 live-server|ms-|0.5.2025063001 powershell|ms-|2025.2.0 remote-explorer|ms-|0.5.0 remote-repositories|ms-|0.42.0 vscode-speech|ms-|0.16.0 vscode-typescript-next|ms-|6.0.20250810 vscode-websearchforcopilot|ms-|0.1.2025073101 vsliveshare|ms-|1.0.5948 prisma|Pri|6.13.0 vscode-xml|red|0.29.0 vscode-yaml|red|1.18.0 LiveServer|rit|5.7.9 code-spell-checker|str|4.0.47 even-better-toml|tam|0.21.2 msbuild-project-tools|tin|0.6.7 tooltitude-pb|too|0.37.0 native-preview|Typ|0.20250810.1 luna-paint|Tyr|0.17.0 sort-lines|Tyr|1.12.0 errorlens|use|3.26.0 explorer|vit|1.26.4 vscode-icons|vsc|12.14.0 quokka-vscode|Wal|1.0.734 vscode-todo-highlight|way|1.0.5 browserslist|web|1.1.0 JavaScriptSnippets|xab|1.8.0 pretty-ts-errors|Yoa|0.6.1 markdown-all-in-one|yzh|3.6.3   </details> <!-- generated by issue reporter -->"
91,Display the repository name in the tooltip when hovering over the repository in the Source Control section,True,False,,vscode,2025-10-13T14:53:34.987033,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/260481,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  <img width=""591"" height=""468"" alt=""Image"" src=""https://github.com/user-attachments/assets/957a6cb1-f909-4921-842d-14a26bda6163"" />  In the provided screenshot, the hover tooltip currently only shows the branch name only. The request is to have it display both the branch name and the repository name in the tooltop. This is particularly useful when working with multiple repositories within a single window, as it can be difficult to determine which repository is being viewed without expanding the left sidebar.  Prior to update 1.103.0, this was not an issue because VS Code displayed both the trimmed branch name and repository name in the UI, and hovering over the repository UI would reveal the repository name.   If this is planned, can we also add the option to toggle branch name trimming in status bar. Currently, it is like this, in my case trimming would save a lot of space in status bar.  <img width=""842"" height=""291"" alt=""Image"" src=""https://github.com/user-attachments/assets/fb1937b3-e79d-4dc2-a2c2-aa7d385c56df"" />"
92,Polish AI Usage Statistics Status Bar Icon: Reduce Size and Show Details on Hover,True,False,,vscode,2025-10-13T14:53:34.993057,,"ux, workbench-copilot",1,,https://github.com/microsoft/vscode/issues/260349,"Type: <b>Feature Request</b>  The AI Usage Statistics in the VS Code status bar needs to be polished. Currently, it uses an oval icon, which takes up too much valuable space in the status bar. Please use a smaller icon, and display details only when the mouse hovers over it.  VS Code version: Code - Insiders 1.103.0-insider (e3550cfac4b63ca4eafca7b601f0d2885817fd1f, 2025-08-06T21:32:58.381Z) OS version: Windows_NT x64 10.0.26100 Modes:   <!-- generated by issue reporter -->"
93,Feature Request: Allow Queued Prompts for Copilot Agent Chat,True,False,,vscode,2025-10-13T14:53:34.997133,,"feature-request, ux, papercut :drop_of_blood:, chat-agent",1,,https://github.com/microsoft/vscode/issues/260330,"It would be useful to support queuing prompts for the Copilot Agent chat interface, where a second prompt can be submitted while the first is still running, and automatically processed once the current task completes.  ### Why this matters:  There are many scenarios where you already know what your *next* prompt will be, but you have to wait until the agent finishes its current operation before you can submit it. This interrupts workflow and slows down the feedback loop.  This queuing feature would be especially helpful when the second prompt depends on the *result or code changes* made by the first. For example:  * I ask Copilot to refactor a block of code. * I already know I want to generate a related unit test after that refactor completes. * Since the second prompt depends on the updated code, it's not something I can run in parallel via a second agent. * Instead of waiting manually, I could queue the next prompt to be executed right after the first completes.  ### Proposed behaviour:  * Allow a secondary prompt to be queued while a Copilot Agent is busy. * It gets automatically submitted once the previous task finishes. * (Optional) A visual indicator or prompt queue list would help keep track of what's pending.  This would improve usability without requiring parallel agents or manual timing.  @burkeholland"
94,Move the AI usage pill into the Copilot dashboard,True,False,,vscode,2025-10-13T14:53:35.000680,,ux,1,,https://github.com/microsoft/vscode/issues/260295,"<img width=""75"" height=""64"" alt=""Image"" src=""https://github.com/user-attachments/assets/32ca8e07-cc9d-4b07-b781-003def8b21d5"" />  I think the 🤖 dashboard would be a great fit for this indicator, as it already contains quota information. It is very easy to add more entries."
95,Allow to pin secondary sidebar to stay maximised even when editors open,True,False,,vscode,2025-10-13T14:53:35.004797,,"feature-request, ux, layout",1,,https://github.com/microsoft/vscode/issues/259222,"<img width=""904"" height=""250"" alt=""Image"" src=""https://github.com/user-attachments/assets/671e2f42-83e9-4b9a-91b8-ce8a4ed332c3"" />  https://x.com/spencer_i_am/status/1951302101708968088"
96,Chat participant descriptions should render in listbox and not require hover,True,False,,vscode,2025-10-13T14:53:35.008370,,ux,1,,https://github.com/microsoft/vscode/issues/259147,"<img width=""743"" height=""435"" alt=""Image"" src=""https://github.com/user-attachments/assets/4d80831c-3885-4659-a759-6d5f45bf4a65"" />  No information is available when doing @ in agent mode to reference a chat participant, making it difficult for users to understand what the chat participant is doing.  This information is available on hover but developer did not organically discover this."
97,Alias @ to # in Chat input to reference context,True,False,,vscode,2025-10-13T14:53:35.011785,,ux,1,,https://github.com/microsoft/vscode/issues/259146,Users returning to VS Code from using other products like Cursor have muscle memory trained to use @ to reference context.  Should we alias @ to # so we don't break muscle memory for returning developers from other products?
98,Adding context in Chat using vscode-copilot-chat repo adds a ton of unnecessary symbols,True,False,,vscode,2025-10-13T14:53:35.015753,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/259144,"Steps to Reproduce:  1.  On latest vscode-copilot-chat, switch to agent mode in Chat and use #  <img width=""814"" height=""488"" alt=""Image"" src=""https://github.com/user-attachments/assets/d7392220-3021-494d-9821-dc71257322eb"" />"
99,add existing worktree,True,False,,vscode,2025-10-13T14:53:35.019080,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/258615,"Test for #257910  If I remove a worktree from the SCM view with ""close repository"", the directory remains on disk, but I don't seem to be able to add it back as a worktree entry.  I could also imagine having other branches checked out into different folders already, and it could be useful to add those as worktree entries"
100,dense source control view with work trees,True,False,,vscode,2025-10-13T14:53:35.022639,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/258565,"Testing #257910  this view is very dense (which I get there is a ton of info to show) maybe some more veridical padding between the publish blue button and the tree name below it would help. Also I would want to be able to adjust the container (ie expand or shrink the container of a given worktree)  <img width=""450"" height=""495"" alt=""Image"" src=""https://github.com/user-attachments/assets/fd9742a6-6184-4289-a179-2358c0e176ff"" />"
101,Different icon for the third state (partially selected)?,True,False,,vscode,2025-10-13T14:53:35.026868,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/258460,"Testing #258318  I was testing the checkboxes and noticed that if you partially select the children of a tree, the tree node will show a dash to indicate the children are partially selected. I suppose this is the tri-state checkbox. I wonder if instead of a dash, we could use some sort of other marker like three dots (ellipsis). The issue with the dots is that it can look like an icon for opening up a context menu, so I am really not sure if that is a good idea, but pinging @mrleemurray about it for the design side.  <img width=""627"" height=""63"" alt=""Image"" src=""https://github.com/user-attachments/assets/a63ca1b3-87d9-4c3f-aae9-006676846ced"" />"
102,Feature Request: Support forking chat history,True,False,,vscode,2025-10-13T14:53:35.031135,,ux,1,,https://github.com/microsoft/vscode/issues/258271,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Sometimes I've worked with Copilot on some code and I feel like it works really well and the active copilot chat contains knowledge useful for tackling lots of tasks.  It would be great if I could duplicate the chat at this point such that I can continue working with copilot in the active chat session and later on work with the forked chat, that doesn't contain all the newer messages afterwards.  I would then afterwards have that same nice state as basis for tackling another task.  I can approximate this feature by manually copying around chat messages, but this is lossy and tedious."
103,Support for Chain of Thought tokens,True,False,,vscode,2025-10-13T14:53:35.036030,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/257104,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  #### Implementation  - [x] Plumb the cot feature through the various layers in core and extension   - [x] Store data in chat history (summary, id, metadata)   - [x] Add cot data to chat debug logs   - [x] Get cot data by tool_call when constructing the request messages   - [ ] BYOK       - [ ] Use thinking data when provider does not use LM APIs (E.g Anthropic)       - [x] Use model specific endpoints to adjust messages    #### Chat UI Implementation 🎨  - [ ] Design UX for displaying thinking data in chat UI - [x] Implement LM API to stream cot information to core - [ ] Develop Chat UI API for accessing thinking data  Ref: https://github.com/microsoft/vscode-copilot-release/issues/11758"
104,Chat: Reflect multiple editor selections in current document bubble,True,False,,vscode,2025-10-13T14:53:35.040913,,"bug, ux, chat",1,,https://github.com/microsoft/vscode/issues/256702,"1. Open chat 2. Open a document 3. Make a selection, notice the current document bubble reflects the selection 4. Add another selection to the editor  🐛 There's no change to the bubble at all  Even worse:  5. Remove the initial selection  🐛 Now the second selection isn't even reflected  https://github.com/user-attachments/assets/b8ba6110-abff-44b9-8138-53227e192edd"
105,Review large context menu structures,True,False,,vscode,2025-10-13T14:53:35.044688,,"ux, menus",1,,https://github.com/microsoft/vscode/issues/255626,"I feel our context menus are growing very complex and very large, to the point where I wonder if we can apply some general rules where an item should be appearing. Popular new entries are around adding to Chat for example, that are located sometimes in the middle and sometimes at the end of a menu.  **Explorer**  File: <img width=""335"" height=""421"" alt=""Image"" src=""https://github.com/user-attachments/assets/5a1bc2f0-1c2d-48b9-8f46-a52f2df0f036"" />  Folder: <img width=""297"" height=""386"" alt=""Image"" src=""https://github.com/user-attachments/assets/c40e6bca-2691-4f07-9e64-f0f855c43c8e"" />  **Tab**  <img width=""387"" height=""502"" alt=""Image"" src=""https://github.com/user-attachments/assets/eb6f26f1-d86f-45a0-88fe-117011f27f03"" />  **Editor**  <img width=""284"" height=""563"" alt=""Image"" src=""https://github.com/user-attachments/assets/c6cca886-aa0e-4007-83a8-5d215aadc1e6"" />"
106,Revisit our boring progress indication,True,False,,vscode,2025-10-13T14:53:35.048109,,"ux, panel-chat, workbench-copilot",1,,https://github.com/microsoft/vscode/issues/255352,"When agent is busy we show this:  <img width=""270"" height=""104"" alt=""Image"" src=""https://github.com/user-attachments/assets/f12bf7ac-b689-4943-b365-3d04063b6f0b"" />  Its not very entertaining. Some inspiration:  <img width=""1096"" height=""122"" alt=""Image"" src=""https://github.com/user-attachments/assets/b094446c-f532-413e-a5f6-45646f2a06f3"" /> <img width=""1120"" height=""114"" alt=""Image"" src=""https://github.com/user-attachments/assets/3c9b3a89-77d8-41ec-8a52-43b8f255f0a9"" />  Specifically seeing token use is pretty nice to get an understand about the overall complexity of the messages exchanged. The time is also interesting because it gets you a feeling for how long the task is running at.  //cc @isidorn"
107,Rendering code references in a less heavy manner,True,False,,vscode,2025-10-13T14:53:35.051921,,ux,1,,https://github.com/microsoft/vscode/issues/255126,"Our code references are wrapped in bordered bubble with an icon to the left. However, it hinders readability   <img width=""3024"" height=""1964"" alt=""Image"" src=""https://github.com/user-attachments/assets/43cf7080-f375-49ea-8671-e8515708e056"" />   migrated from https://github.com/microsoft/vscode-copilot/issues/18505"
108,Panel chat gear dropdown should have hints on hover,True,False,,vscode,2025-10-13T14:53:35.055146,,ux,1,,https://github.com/microsoft/vscode/issues/255124,"I get lost in all the different kinds of prompt attachments and it would be great if I could hover over each entry in the dropdown and see what it is. We could convert it to a non-native dropdown if needed. Having (i) icon on each entry which could be hovered over that would explain what this entry is   <img width=""454"" height=""452"" alt=""Image"" src=""https://github.com/user-attachments/assets/c639248e-2845-4383-a9af-48ec07d5dceb"" />"
109,When Chat real estate is small (due to other windows/zoom) the placeholder text renders strangely,True,False,,vscode,2025-10-13T14:53:35.058678,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/253553,![Image](https://github.com/user-attachments/assets/eaf7ea16-17b2-4f2e-b67e-b32b93085ff5)
110,Simplify and condense chat output for better readibility,True,False,,vscode,2025-10-13T14:53:35.061730,,"ux, papercut :drop_of_blood:",1,,https://github.com/microsoft/vscode/issues/253459,"The fix was great, and 2 lines of code change:  <img width=""1350"" alt=""Image"" src=""https://github.com/user-attachments/assets/e685a252-9535-47f2-bab8-d3ae7ce92053"" />  Why do I have to read through 3 pages of explanation 🤔   <img width=""891"" alt=""Image"" src=""https://github.com/user-attachments/assets/d19f2ba2-f7e8-465d-b233-13eaa2211b1c"" />  <img width=""900"" alt=""Image"" src=""https://github.com/user-attachments/assets/78c25761-ac7c-483a-a66b-cddbaa213797"" />  <img width=""888"" alt=""Image"" src=""https://github.com/user-attachments/assets/c6b1b434-22fb-4c49-8f41-5738051c27dd"" />"
111,Make blue button hover feedback consistent,True,False,,vscode,2025-10-13T14:53:35.064425,,ux,1,,https://github.com/microsoft/vscode/issues/253447,"In keybinding.json there is no hover feedback:  <img width=""222"" alt=""Image"" src=""https://github.com/user-attachments/assets/89b7c8ba-c7fb-46e5-8031-14ee78ffb77c"" />  In SCM there is subtle feedback (see left is darker than right):  <img width=""293"" alt=""Image"" src=""https://github.com/user-attachments/assets/06aeb89a-d3fb-4a27-80f9-084c517ed689"" />"
112,Generate instructions seems wrongly located,True,False,,vscode,2025-10-13T14:53:35.067359,,"ux, papercut :drop_of_blood:, workbench-copilot",1,,https://github.com/microsoft/vscode/issues/253327,"<img width=""273"" alt=""Image"" src=""https://github.com/user-attachments/assets/d9876ef5-0856-4d1f-b0b6-8c3b33f1ff92"" />  When I click this, I suddenly get a chat message sent, while the others show pickers and allow me to configure instructions and prompts. I do not see how the one and the other are related?"
113,"VS Code does not differ file.php and Class.php, it should be different icon",True,False,,vscode,2025-10-13T14:53:35.070271,,ux,1,,https://github.com/microsoft/vscode/issues/252975,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> VS Code does not differ file.php and Class.php, it should be different icon    ![Image](https://github.com/user-attachments/assets/5f1ea217-a25d-4e1d-97cf-43ec8c6a5261)  ![Image](https://github.com/user-attachments/assets/05c0fb2f-266b-4015-a23e-748f8c76257b)"
114,Git push does not provide feedback or success/fail confirmation,True,False,,vscode,2025-10-13T14:53:35.074700,,"git, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/252919,"Type: <b>Bug</b>  Pushing changes to Git repository does not have any visual indicator that the process worked or failed. A lack of feedback does not imply success. Make your program provide POSITIVE feedback, as well as pending status during the operation so the user knows if it's stuck or not, and if it worked or not.  ![Image](https://github.com/user-attachments/assets/7cbe6b15-a043-49d8-83b1-9b17cfceb5ec)  VS Code version: Code 1.101.2 (2901c5ac6db8a986a5666c3af51ff804d05af0d4, 2025-06-24T20:27:15.391Z) OS version: Windows_NT x64 10.0.26100 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 7 5700G with Radeon Graphics          (16 x 3800)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|31.80GB (12.75GB free)| |Process Argv|--crash-reporter-id 78bcdb77-bcd5-4394-adc8-689d3ff0e9ac| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (76)</summary>  Extension|Author (truncated)|Version ---|---|--- pascal-formatter|ale|2.9.1 flutter-snippets|ale|3.0.0 racket-repl|And|1.5.8 markdown-mermaid|bie|1.28.0 vscode-tailwindcss|bra|0.14.23 npm-intellisense|chr|1.4.5 dart-code|Dar|3.112.0 flutter|Dar|3.112.0 vscode-markdownlint|Dav|0.60.0 macos-modern-theme|dav|2.3.19 docker|doc|0.11.0 python-environment-manager|don|1.2.7 EditorConfig|Edi|0.17.4 vscode-ghci|eri|0.0.2 magic-racket|evz|0.7.0 code-runner|for|0.12.2 vscode-icontheme-nomo-dark-macos|Gau|1.0.3 copilot|Git|1.336.0 copilot-chat|Git|0.28.3 go|gol|0.46.1 svg|joc|1.5.4 language-haskell|jus|3.6.0 racket|kar|0.0.3 idx-monospace-theme|kek|1.4.0 git-graph|mhu|1.30.0 azure-pipelines|ms-|1.249.0 vscode-containers|ms-|2.0.3 vscode-docker|ms-|2.0.0 csdevkit|ms-|1.20.35 csharp|ms-|2.80.16 vscode-dotnet-runtime|ms-|2.3.6 vscode-edge-devtools|ms-|2.1.9 debugpy|ms-|2025.8.0 isort|ms-|2025.0.0 python|ms-|2025.8.0 vscode-pylance|ms-|2025.6.2 jupyter|ms-|2025.5.0 jupyter-keymap|ms-|1.1.2 jupyter-renderers|ms-|1.1.0 vscode-jupyter-cell-tags|ms-|0.1.9 vscode-jupyter-slideshow|ms-|0.1.6 remote-containers|ms-|0.417.0 remote-ssh|ms-|0.120.0 remote-ssh-edit|ms-|0.87.0 remote-wsl|ms-|0.99.0 vscode-remote-extensionpack|ms-|0.26.0 cmake-tools|ms-|1.20.53 cpptools|ms-|1.26.3 cpptools-extension-pack|ms-|1.3.1 live-server|ms-|0.4.15 makefile-tools|ms-|0.12.17 powershell|ms-|2025.0.0 remote-explorer|ms-|0.5.0 remote-server|ms-|1.5.2 vsliveshare|ms-|1.0.5948 java|red|1.43.0 vscode-yaml|red|1.18.0 roo-cline|Roo|3.22.5 haskell-formatter-vscode-extension|ser|0.0.2 markdown-preview-enhanced|shd|0.8.18 pdf|tom|1.2.2 cmake|twx|0.0.17 haskelly|UCL|0.5.5 stylish-haskell|vig|0.0.10 intellicode-api-usage-examples|Vis|0.2.9 vscodeintellicode|Vis|1.3.2 vscode-svg-previewer|vit|0.7.0 vscode-gradle|vsc|3.16.4 vscode-java-debug|vsc|0.58.2 vscode-java-dependency|vsc|0.24.1 vscode-java-pack|vsc|0.29.2 vscode-java-test|vsc|0.43.1 vscode-maven|vsc|0.44.0 vscode-icons|vsc|12.13.0 file-icons-mac|way|1.0.1 five-server|yan|0.3.9  (11 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscod805:30301674 binariesv615:30325510 c4g48928:30535728 azure-dev_surveyone:30548225 962ge761:30959799 h48ei257:31000450 pythontbext0:30879054 cppperfnew:31000557 dwnewjupyter:31046869 pythonrstrctxt:31112756 nativeloc2:31192216 5fd0e150:31155592 dwcopilot:31170013 471b6256:31263136 6074i472:31201624 dwoutputs:31242946 customenabled:31248079 9064b325:31222308 copilot_t_ci:31333650 e5gg6876:31282496 pythoneinst12:31285622 bgtreat:31268568 4gafe986:31271826 c7cif404:31314491 pythonpulldiag:31335739 996jf627:31283433 pythonrdcb7:31303018 usemplatestapi:31297334 0aa6g176:31307128 7bj51361:31289155 jjjhb125:31275178 6518g693:31334701 aj953862:31281341 generatesymbolt:31295002 convertfstringf:31295003 91889449:31338102 i851h500:31338111 usemarketplace:31336439 nesew2to5:31336538 agentclaude:31335814 nes-diff-11:31337487 66g5g415:31337488 6abeh943:31336334 yijiwantestdri0626-t:31336930  ```  </details>  <!-- generated by issue reporter -->"
115,Auto mode,True,False,,vscode,2025-10-13T14:53:35.078404,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/252795,"Thoughts on Auto mode can be found [here](https://microsofteur-my.sharepoint.com/:w:/g/personal/inikolic_microsoft_com/EZOkgdTgx8dMqPqtZm2OoDoBYOkVHfOblUboxHrp6qRKZw?e=WYMIo9)  CAPI will be picking up this work in July, and here are the things we probably need to do on the Client side to have a nice Auto experience. I might be missing something - so do chime in and let me know:  - [ ] Figure out business case (what is the multiplier) and available models for Auto @isidorn  - [ ] Change model dropdown visuals such that there is no ""Standard / Premium models"". There is no included, it is `0x`. so basically each model just has a multiplier, and that's it. - [ ] Chat needs to call into CAPI before request sent to figure out what model will actually be used. Or what is the set of models that have capacity. CAPI can provide a new API for this. The question is how often does Chat call into CAPI to figure this out? Once per agent session? What is sent as part of the request (prompt + history?) What is the actual API contract? - [ ] Once CAPI gives us the model to use via previous request, we construct the prompt and everything for that model, and then Chat sends ""auto request but use model A that you just told me"" - [ ] Auto needs to be transparent (for users to love it):   - [ ] Figure out with CAPI how do we show a set of models Auto chooses from. Is this just a `details` that we show on hover in model dropdown, or something else. The goal is that the user is aware of what models Auto might pick before the request is made   - [ ] On response done, we need to render what model was actually used. I personally like this LMStudio UI (but we can use whatever we find best  I do not know how this would work in Inline Chat. Ideally same API flow, but as step 1 transparent UI on model used does not have to be there.  <img width=""468"" alt=""Image"" src=""https://github.com/user-attachments/assets/e9704576-4ce1-44ba-8bde-90ca1f508731"" />"
116,Allow custom chat modes to have custom colors,True,False,,vscode,2025-10-13T14:53:35.081101,,"ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/252341,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> To make it easier to quickly notice which mode is selected, users should be able to specify a color (with a color picker) for their mode ala Cline which has different colors for the chat box based on whether the user is in Plan or Act mode.  ![Image](https://github.com/user-attachments/assets/9494831a-e3d5-4141-81b3-f15f053b8679)  ![Image](https://github.com/user-attachments/assets/4ac3b28b-cde6-4eef-9396-8274f72a2974)"
117,Agent mode: Overflow behavior isn't great,True,False,,vscode,2025-10-13T14:53:35.084373,,"ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/252164,"My chat view is often quite narrow like this:  ![Image](https://github.com/user-attachments/assets/f4402113-f089-463d-95b9-a01930a531a8)  We need better overflow behavior here. The mic and tools icons should go into an overflow menu in this case, maybe even the model as I rarely change it."
118,Custom modes should have a `name` attribute in frontmatter,True,False,,vscode,2025-10-13T14:53:35.087719,,"ux, papercut :drop_of_blood:, chat-custom-modes",1,,https://github.com/microsoft/vscode/issues/251943,"Rather than relying on the file name in front of `.chatmode.md` to determine the mode name, we should have an attribute in the frontmatter to specify a name:  ``` --- name: 'Planning' description: 'Implement a feature based on a specification and implementation plan.' tools: ['changes', 'codebase', 'editFiles', 'extensions', 'fetch', 'createFile', 'insertEdit', 'findTestFiles', 'githubRepo', 'new', 'openSimpleBrowser', 'problems', 'readCellOutput', 'runCommands', 'runNotebooks', 'runTasks', 'search', 'searchResults', 'terminalLastCommand', 'terminalSelection', 'testFailure', 'usages', 'vscodeAPI'] ---  Your goal is to implement a feature based on a specification document and implementation plan. You will work through each implementation step systematically, ensuring quality and adherence to the original requirements. ```  This avoids situations in source where file names are commonly lowercase from appearing strangely in the modes dropdown. From a user:  ![Image](https://github.com/user-attachments/assets/a7b68304-7767-46f4-80f0-e245a24485ad)"
119,Run command confirmation can have some UX styling,True,False,,vscode,2025-10-13T14:53:35.091370,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/251710,"<img width=""533"" alt=""Image"" src=""https://github.com/user-attachments/assets/edb4e285-397e-40b5-a8f6-9305b5e7921c"" />  Visually there is a title, a command and an explanation.   I find it hard to distinguish between title and explanation, can we do something to make this visually easier to understand?  //cc @mrleemurray @isidorn   Claude code:  <img width=""878"" alt=""Image"" src=""https://github.com/user-attachments/assets/83bf6eba-f2a3-432f-a680-77c090b07ce2"" />"
120,Re-think the Chat view welcome,True,False,,vscode,2025-10-13T14:53:35.094278,,"ux, under-discussion, on-testplan, chat",1,,https://github.com/microsoft/vscode/issues/251187,"When a user opens a new Chat view in agent mode they see the following:  ![Image](https://github.com/user-attachments/assets/691e6228-f49e-49ea-b7be-1614f7591570)  I think this view is a testiment to how we evolved the feature (it was first chat then agent). We need to re-think this as the future will be agentic first and only. Some comments on the current look:  1) There is no need for the Copilot Frog icon. I think we can survive without any icon at all. AI is key to the experience, no need to have a special simbol for it 2) ""Edit with Copilot"" is completely not important. It is agent, not ""copilot"". We should not push the Copilot brand 3) Explanation paragraph - hopefully not needed, users just start and figure it out. It's not like we have an explanation in the editor how to use it 4) ""Powered by AI mistakes are possible"" - I can discuss with CELA / Responsible AI folk that we put this somewhere else (make it smaller) 5) ""Internal user..."" only internal users see this, not important 6) @ and # are not important in agent mode. Agent figures out all by itself, and we have ""@ Add Context"" affordance already for this  Thus looking at the current content, I can not say any of it is useful.  Zed shows and empty view and at the bottom recent chat sessions.  ![Image](https://github.com/user-attachments/assets/f3f3b7c2-6706-492a-8798-460007888819)  Cursor similar, but they start with the input at the top, recent sessions at bottom, and then once chat starts they move input to the bottom. Windsurf similar, but they show the input in middle, and recent sessions at bottom, once chat starts the move input to the bottom.  ![Image](https://github.com/user-attachments/assets/60cd1d08-8ef9-4a34-98b8-3cd245e76213)  ChatGPT mac app just shows an empty space (lol, but I like it).  How can we improve the Agent welcome experience? Industry seems to be aligning on the pattern it seems, should we follow?  fyi @roblourens @kkbrooks @bpasero @pierceboggan"
121,Add full set of color tokens for chat panel,True,False,,vscode,2025-10-13T14:53:35.097705,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/251146,### Problem  Currently the chat panel is using color tokens intended for other areas of the UI which don't always work with this context or with the paired foreground/background in chat.  ### Proposal  Add new color tokens to `chatColors.ts` for... - [x] chat prompt background (added as `chatRequestBubbleBackground`) - [ ] chat response background - [ ] chat prompt foreground - [ ] chat response foreground - [ ] chat response secondary foreground  - [x] chatLinesAddedForeground - [x] chatLinesRemovedForeground   cc @roblourens @justschen @jo-oikawa
122,Unhelpful alert dialog when encountering pre-commit errors,True,False,,vscode,2025-10-13T14:53:35.100364,,"bug, git, ux",1,,https://github.com/microsoft/vscode/issues/250999,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.101.0-insider (Universal) Commit: f832c6b59a2ed11890f4988a29e85658b092a69a Date: 2025-06-06T20:43:03.362Z Electron: 35.5.1 ElectronBuildId: 11708675 Chromium: 134.0.6998.205 Node.js: 22.15.1 V8: 13.4.114.21-electron.0 OS: Darwin arm64 24.5.0  When I am working with CSS Variables I regularly encounter this error message when committing changes:    <img width=""320"" alt=""Image"" src=""https://github.com/user-attachments/assets/6a90b7f3-0da3-48da-881b-f7bbb321c258"" />  This took a long time to figure out initially - there was no indication from the message content that the problem stemmed from a precommit error:  <img width=""514"" alt=""Image"" src=""https://github.com/user-attachments/assets/5d0c6155-a310-4ce7-891a-f6e994d8807f"" />  This was confirmed when successfully making the same commit using the `--no-verify` flag.  My expectation was that the error dialog would contain this information, or at least instructions on how to debug & where to look. Here is a mockup:  ![Image](https://github.com/user-attachments/assets/c185567c-c2c9-4985-9e41-5cf53156a674)  Steps to Reproduce:  1. Update some CSS value to use a variable that doesn't exist in `vscode/build/lib/stylelint/vscode-known-variables.json` 2. Attempt to commit the change"
123,Icons misalignment,True,False,,vscode,2025-10-13T14:53:35.107372,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/250806,"<img width=""385"" alt=""Image"" src=""https://github.com/user-attachments/assets/7cc54e02-f8f8-4157-ba17-4c392f824282"" />"
124,UX bug: unexpected hover behaviour - attached file,True,False,,vscode,2025-10-13T14:53:35.111128,,"bug, ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/250490,"Testing #250358  Version: 1.101.0-insider (Universal) Commit: 1ca21f8a13ad30d022e80888716156f4264297d0 Date: 2025-06-03T05:04:14.310Z Electron: 35.4.0 ElectronBuildId: 11602177 Chromium: 134.0.6998.205 Node.js: 22.15.0 V8: 13.4.114.21-electron.0 OS: Darwin arm64 24.5.0  ![Image](https://github.com/user-attachments/assets/8e2a0c7f-4b62-4a13-ae5f-0c26687e185f)  Expected behaviour - one of two options:  1. When hovering over an attached file the whole background would continue to change color, like the suggested file - clicking any part of the control would remove the suggested file (currently only the `x`) 2. when hovering over the main body of the attached file, the cursor would not change to a pointer - this would only change when hovering over the `x` of the file"
125,Retry experience not good,True,False,,vscode,2025-10-13T14:53:35.114341,,ux,1,,https://github.com/microsoft/vscode/issues/250473,Multiple things with retry experience that I do not like: 1) The icon looks like a explorer refresh icon (not specific enough) 2) Why would anyone retry without editing the prompt (except when encountering a server side error)  ![Image](https://github.com/user-attachments/assets/2888b650-a8eb-4a0a-af17-af8ee140e0b1)  Should we just use a better icon (chat gpt uses a nice one)? Or get rid of the retry experience and merry it with the edit experience? E.g. way to retry is to actually click into the request and just clicking enter one more time.  fyi @bpasero @roblourens   I do not think any of this is urgent and we can discuss / tackle whenever you want.  ![Image](https://github.com/user-attachments/assets/808c6ce2-425a-4fa1-b714-20e0cb07356b)
126,Chat response border not visually appealing,True,False,,vscode,2025-10-13T14:53:35.118184,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/250384,![Image](https://github.com/user-attachments/assets/f536107c-44bd-40f4-afd0-159580042f9a)  Issues: * Does not align with rounded corner of nice request border * When there is space at the bottom the border also takes up that part  I do not know what is a good solution here. I am fine if we post pone this one to some other milestone (since we were always behaving like this).  @jo-oikawa @bpasero @roblourens
127,🚀 Feature Request: Make Git Inline Action Icons (Stage/Revert/etc.) Position Configurable,True,False,,vscode,2025-10-13T14:53:35.121488,,"ux, scm, under-discussion, icons-product",1,,https://github.com/microsoft/vscode/issues/250287,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  -----  #### Summary  Please provide a setting to configure the **position of inline Git action icons** (such as `Stage Change (+)`, `Revert (↶)`, `Navigate Change (↑/↓)`, etc.) in the **Git diff view**. Currently, these icons are **fixed on the right side** of the editor, which introduces usability issues for users working with large screen resolutions or when focused editing is on the left side of the file.  ---  #### Problem Description  When working in the **Source Control > Changes** view, and reviewing diffs or working copies, the action icons appear in the upper right-hand side of the modified block:  * Users often focus on the **left side** (line numbers, code gutter, and modified lines). * To stage or revert changes, we must **drag the mouse all the way to the right**, which is disruptive and inefficient, especially for users on ultrawide monitors or using keyboard-centric workflows. * The UI flow would be significantly more ergonomic if these action icons were positioned **closer to the code itself**, or at least **configurable**.  ---  #### Benefits  * Improves accessibility and usability, especially for:  * Users with ultrawide monitors or limited mouse mobility. * Developers who frequently stage/undo selective changes from inline views. * Increases focus and reduces cognitive load during code review and change management.  ---  #### Screenshots for Context  Current (right-aligned icons):  ![Image](https://github.com/user-attachments/assets/a1731957-09d5-4906-8b43-faa4ab3007ba)  (Proposed: left-aligned variant would be closer to line gutter.)  ---  Thank you for considering this! 🙏 This small improvement could go a long way for Git power users in VS Code."
128,Transparency around tokens use,True,False,,vscode,2025-10-13T14:53:35.124875,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/249983,"We get a lot of user feedback about missing transparency around tokens used (and no transparency around rate limits). As a step 1, I think we should introduce some UI affordance that tells the user how many tokens they are about to consume (have consumed so far in the session).  LM Studio has nice affordance that shows token use after every message, and the text input also shows how much tokens the current input consumes. Below the input is a simple tokens N / MAX  ![Image](https://github.com/user-attachments/assets/24fae525-4f02-4c73-8a38-fb962fefba9f)  ![Image](https://github.com/user-attachments/assets/b31e2a93-810e-4f1e-b47a-5244dece3b1d)  Zed simply shows an affordance in the title area, which is very minimalistic but I believe gets the job done.  ![Image](https://github.com/user-attachments/assets/864474b0-f2a2-409f-aaa0-11b7c4ad1cc0)  fyi @justschen @bpasero @jo-oikawa"
129,Chat: Add UX/UI to highlight changes to URLs and key variables,True,False,,vscode,2025-10-13T14:53:35.128693,,"feature-request, ux, chat",1,,https://github.com/microsoft/vscode/issues/249587,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  There have been many times when breezing through a session with Agent mode that I'll miss the fact that a critical constant / variable or URL is subtly changed without realizing it. The code will still ""work"", but it will always cause issues later down the road that are really really hard to trace/debug.  It would be great if we had the capability, UI, and UX to call out (and maybe even have folks confirm) when a suggested change includes any updates to stuff like URLs, configurations, environment variables, global constants, etc that should/_need_ to be verified by a human.  As another anecdotal example: A friend did a live stream a few weeks ago where he spent an entire hour trying to debug a CORS issue only to realize the problem was caused by a subtle change to the URL he was trying to fetch that he had missed."
130,Improve VS Code design resources in Figma,True,False,,vscode,2025-10-13T14:53:35.131460,,ux,1,,https://github.com/microsoft/vscode/issues/249227,"Our Figma library is out of date, lacks documentation, and we've received feedback that its difficult for extension teams to use when designing their experience.  ### Areas to improve - [x] Add variables for spacing and corner radius - [ ] Remove outdated color styles - [ ] Rebuild controls with up-to-date features (auto layout, modes, etc)     - [ ] https://github.com/microsoft/vscode/issues/266450     - [ ] https://github.com/microsoft/vscode/issues/266262     - [x] https://github.com/microsoft/vscode/issues/266452     - [ ] https://github.com/microsoft/vscode/issues/266453     - [ ] https://github.com/microsoft/vscode/issues/266454     - [ ] https://github.com/microsoft/vscode/issues/266455     - [x] Input     - [ ] https://github.com/microsoft/vscode/issues/266456     - [ ] https://github.com/microsoft/vscode/issues/266457     - [x] Menu     - [ ] https://github.com/microsoft/vscode/issues/266458     - [ ] https://github.com/microsoft/vscode/issues/266460     - [ ] https://github.com/microsoft/vscode/issues/266461     - [ ] https://github.com/microsoft/vscode/issues/266462     - [ ] https://github.com/microsoft/vscode/issues/266463     - [ ] https://github.com/microsoft/vscode/issues/266464     - [ ] https://github.com/microsoft/vscode/issues/266465     - [ ] https://github.com/microsoft/vscode/issues/266466     - [ ] https://github.com/microsoft/vscode/issues/266467     - [ ] https://github.com/microsoft/vscode/issues/266468     - [ ] https://github.com/microsoft/vscode/issues/266469     - [ ] https://github.com/microsoft/vscode/issues/266470     - [ ] https://github.com/microsoft/vscode/issues/266471     - [ ] https://github.com/microsoft/vscode/issues/266472 - [ ] Add relevant links to API documentation to each applicable control - [ ] Redo Type, Colors, Icon page - [ ] Redo README/intro page - [ ] Republish to the community as a UI Kit"
131,Show context size for each Copilot model,True,False,,vscode,2025-10-13T14:53:35.140099,,"feature-request, ux, chat",1,,https://github.com/microsoft/vscode/issues/248860,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Copilot should show the user, in some way, and in the documentation, the context window available for each model. There is a huge difference between models currently (Gemini Pro 2.5 having around 64k and o4-mini having around 100k) and this is hidden from the user.  When picking a model, this information is really important.  Cursor does this this way: https://docs.cursor.com/models  @isidorn"
132,Tokenize VS Code UI,True,False,,vscode,2025-10-13T14:53:35.143070,,ux,1,,https://github.com/microsoft/vscode/issues/248725,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> In an effort to standardize, make the current (& future) product UI more consistent, as well as improving & aligning the design system with the product codebase, the design team proposes to implement a token based approach to UI elements, replacing hard-coded CSS styles with semantic variables based on an agreed upon superset of tokens.  The values in question include:  - spacing: padding, margin, & other dimensional values - border-radius - stroke-weight - shadows - font-size - font-weight - line-height  The broad outline of the effort:  - audit all UI elements to identify existing values & uncover any usage patterns - research existing token systems in other products & design systems (i.e. Fluent) - rationalize values, develop top-level values, assignment logic, naming convention - develop guidelines & documentation for developers - replace hard-coded values with variables across UI - test & bug fixes  The result should allow for the creation & implementation of consistent net new product UI, that adheres to design guidelines, while building a system that allows for the global update of values & increased customizability in the future (e.g. dynamic density)."
133,Chat: Improve inline add context menu,True,False,,vscode,2025-10-13T14:53:35.146374,,"ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/248540,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  From discussion in #243223:  > Something that I feel is missing for us is that if I open ""Add Context"", I see a nice overview of context types, and it's obvious that I can add files, and my open files are easily visible. But if I type #, I see this:  > ![Image](https://github.com/user-attachments/assets/054b448b-bd95-492b-8ecf-829b03ffd9aa)  > which feels like a lot with all the tools, and it's not immediately obvious that I can add files like this. I'd like to see my open files when going that route.  My $0.02 (assuming it's possible with our current implementation of inline menus) would be to copy exactly what the add context quick pick does today (i.e. a high level menu organized by categories/types of context with sub menus).  Effectively something along these lines but with appropriate styling / inline menu behavior and probably remove the search bar at the top and recommended files at the bottom:  <img width=""791"" alt=""Image"" src=""https://github.com/user-attachments/assets/a930163f-f72b-4193-9b5f-19e5f8a2ad72"" />  *Note: The above screenshot was made by just dragging the add context quick to be placed above a `#` in the input.*"
134,Add Context Menus to Figma Toolkit,True,False,,vscode,2025-10-13T14:53:35.149197,,ux,1,,https://github.com/microsoft/vscode/issues/248409,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Once #247713 has been resolved, update the Figma Toolkit library with the final design."
135,Quick pick UX | Difficult to discover & use drag feature,True,False,,vscode,2025-10-13T14:53:35.152078,,"feature-request, ux, quick-pick",1,,https://github.com/microsoft/vscode/issues/248391,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  Currently, there it difficult to discover that the quick pick menu is able to be dragged & repositioned, offering no visual indicator to communicate the functionality:  <img width=""609"" alt=""Image"" src=""https://github.com/user-attachments/assets/a9f660a5-8f0e-4e82-96bd-af61d3c02bf9"" />  In addition, when the feature has been discovered, it is difficult to know what part of the UI is ""grabbable"". After some trail & error I discovered that the area in question is the 6px padding around the text input, which is hard to easily grab:  ![Image](https://github.com/user-attachments/assets/20bc8abe-8308-435e-b302-60b16873cb8c)  A potential solution to this issue would be to mimic the macOS Spotlight Search behaviour, making the entire text input draggable when empty:  ![Image](https://github.com/user-attachments/assets/dcc32805-2169-4ea2-9242-c333d113f43b)"
136,Let me see the result of built-in fetch tool call,True,False,,vscode,2025-10-13T14:53:35.156008,,"ux, chat, chat-tools, fetch-tool",1,,https://github.com/microsoft/vscode/issues/248039,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Currently, when the built-in fetch tool is used in chat there's no way to see what the result (success, error, content, etc) of these tool calls is –– all you get is a list of the URLs that were fetched.   It would be great if we could give the fetch tool the same treatment as the MCP tool card/dropdown where input / output is provided for auditing purposes.  Scenario: I fetched a bunch of issue links (including links to private repos) but I can't tell if any of the fetch calls were successful or not and what they did/did not return.  <img width=""526"" alt=""Image"" src=""https://github.com/user-attachments/assets/8080ef11-e5a7-4612-9694-78907689d896"" />"
137,Chat: Add collapsed/combined state for bulk tool calls,True,False,,vscode,2025-10-13T14:53:35.159065,,"ux, chat, chat-mcp",1,,https://github.com/microsoft/vscode/issues/247909,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Ran into a scenario today where there were like 25 back to back tool calls during a chat session resulting in a kind of ridiculous UX/UI. @eleanorjboyd had a great idea during standup to add some type of UX that combines bulk tool calls into a smaller UI.  <img width=""548"" alt=""Image"" src=""https://github.com/user-attachments/assets/5040176f-b596-4733-b4c4-9a68331d21fe"" />"
138,Improve UX for cell output -> chat dnd,True,False,,vscode,2025-10-13T14:53:35.162296,,"ux, notebook-output, notebook-dnd",1,,https://github.com/microsoft/vscode/issues/247905,"refs: https://github.com/microsoft/vscode/issues/245364  ---   Overall issue is discoverability. Users struggle to initially find the right way to drag cell outputs to chat.   https://github.com/microsoft/vscode/issues/247460#issuecomment-2834570833 https://github.com/microsoft/vscode-copilot/issues/16648#issue-3025795539  Default behavior is that we support dragging a subset of mimes that boil down to images and textual outputs. Images can be dragged directly and textual outputs need the `alt` modifier as well. More info:  Image mime outputs can be dragged into chat directly, however the caveat is that the output element itself (the image in this case) has to be dragged, and after testing it seems that the intuition is to use the 'grabber' cursor icon from while the user hovers in the cell output container (which can and often contains multiple output elements). The correct method is to drag directly starting from the output itself.   Text mime outputs pose another issue, where users will often want to select the text in the output, which makes directly dragging not viable. If enabled, that would effectively prevent users from selecting any text within the output since the drag handler would steal it. The current UX is that users need to hold the `alt` modifier and that will enable dragging of textual outputs.   Proposed idea from UX: - add a ""drag"" icon to the upper right corner of the output element. This would be per output, as currently there is not support for dragging the entire cell/entire output to chat.   ![Image](https://github.com/user-attachments/assets/0217ad42-ad5e-4dde-bb22-bf0031478ec9)"
139,"Custom actions control, NES control and context menu alignment",True,False,,vscode,2025-10-13T14:53:35.165665,,"debt, ux, verification-found, verification-needed",1,,https://github.com/microsoft/vscode/issues/247713,"I find the custom actions control, NES control and context menu could align better, because the former seems to be like a beefed up version of the latter (section headers, footer actions). Overall I even feel like they both could use the same underlying widget to reduce the chance of further misalignment.  As we now expand the use to more locations like NES and Chat, I feel this is becoming more important.  Things noticed: - [ ] keybindings are presented differently - [ ] active item has different background color - [ ] separator is not stretching same way  **Context menu:**  ![Image](https://github.com/user-attachments/assets/e0b9e8ee-fde1-4bb4-82f3-034ced95f6d0)  **Actions widget:**  ![Image](https://github.com/user-attachments/assets/f74f4223-9fae-4163-bf49-891999d47232) ![Image](https://github.com/user-attachments/assets/e3a76028-c5b1-4593-922e-4397723343c3)  <img width=""256"" alt=""Image"" src=""https://github.com/user-attachments/assets/c565fe62-201d-4f98-b635-10b654ea221d"" />  //cc @joaomoreno @isidorn @Tyriar"
140,Chat: Add custom context menu for send message split button,True,False,,vscode,2025-10-13T14:53:35.168348,,"ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/247671,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  While testing #247399, I noticed we now have a custom context menu for the mode picker in chat (🥳). Sadly, I also noticed we still don't have the same treatment applied to the send message split button context menu.   We should **_really_** try to add a context menu there too before we ship next week.  Yay!  <img width=""580"" alt=""Image"" src=""https://github.com/user-attachments/assets/8f5ad627-58f7-4053-83df-2f7cef147ac0"" />  Less yay :(  <img width=""587"" alt=""Image"" src=""https://github.com/user-attachments/assets/b328f8e5-2cf2-4fe5-bef4-35b8ac9c6634"" />"
141,Tools icon doesn't have visual indication if all/some/none tools are added,True,False,,vscode,2025-10-13T14:53:35.171670,,"ux, under-discussion, chat-tools, chat-input",1,,https://github.com/microsoft/vscode/issues/247566,Testing #247399  The icon could have some indication if all/some/all tools are added so that user knows they might've turned some tools off or something.  The icon could have a single tick at right bottom corner for some tools and double tick for all-tools-attached scenario.   This issue is a bit of a nit perhaps. I don't know yet from experience if users would partially enable tools (though there are definitely use cases when a particular tool isn't really needed for the task). Feel free to close   ![Image](https://github.com/user-attachments/assets/7c03510c-3717-4772-ae98-800d6baa556e)
142,Some active breakpoints can be removed only from the Breakpoints menu,True,False,,vscode,2025-10-13T14:53:35.175269,,"bug, debug, ux",1,,https://github.com/microsoft/vscode/issues/247340,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  OS: Ubuntu 22.04 VScode: Version: 1.99.0 Commit: 4437686ffebaf200fa4a6e6e67f735f3edf24ada Date: 2025-04-02T21:35:19.530Z Electron: 34.3.2 ElectronBuildId: 11161073 Chromium: 132.0.6834.210 Node.js: 20.18.3 V8: 13.2.152.41-electron.0 OS: Linux x64 6.8.0-57-generic  Here is an exemplary state:  ![Image](https://github.com/user-attachments/assets/51c2fde9-c8af-476f-8e8a-92dd5696952a)  Both breakpoints are active, but only the one on top has the red circle and can be toggled on/off from the editor. The other has no mark to the left and can only be removed using the Breakpoints menu. This causes some inconvenience during debugging with lots of such breakpoints.  Steps to Reproduce:  1. Get some python code 2. Mark a few breakpoints 3. Observe some of them not being marked with the red circle, yet being in the Breakpoints menu"
143,UX: Custom model picker doesn't behave like native,True,False,,vscode,2025-10-13T14:53:35.178095,,"bug, ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/247137,"Related to https://github.com/microsoft/vscode/issues/247136  The custom model picker has the following issues:  - Only opens on mouse up. Native menus open on mouse down. - User needs 2 clicks to open and select an item. Native menus can do this on a single mouse down, drag, mouse up interaction. - Dropdown button has no style when menu is open. Native menus keep the `active` style rendered while they are open. - Menu items stay selected if mouse moves away from the menu. Native menu items get unselected the moment the mouse goes away from them. - `Manage Models...` is a link. It should be a simple menu item. - After opening the picker, pressing `Tab` moves focus to `Manage Models...`. Pressing `Tab` again closes the picker."
144,UX: Copilot pickers need alignment,True,False,,vscode,2025-10-13T14:53:35.180917,,"bug, ux, chat",1,,https://github.com/microsoft/vscode/issues/247136,"We have 3 pickers at the bottom of the chat view, 2 of them use native controls while the model picker uses custom.   https://github.com/user-attachments/assets/40eda6b7-388d-4527-add9-6e524bde8b98  It feels like there's no good reason to use the custom picker at all since there's only an additional _non-menu-item-like_ option at the bottom to manage models. This could easily be done with native menus by adding a separator between the models to pick and the `Manage Models` item.  <img width=""261"" alt=""Image"" src=""https://github.com/user-attachments/assets/b75d02eb-d453-4dc4-a102-40d396e45206"" />"
145,MCP: Add Server's show configuration keeps confusing users that just copy it over,True,False,,vscode,2025-10-13T14:53:35.184869,,"ux, chat-mcp",1,,https://github.com/microsoft/vscode/issues/246760,"Heard from several users that had a broken MCP setup, all caused by clicking _""Show Configuration""_ after clicking an install button.  How might we avoid that confusion while providing a preview.  cc @connor4312"
146,Chat Context: Icons per type versus icons per item?,True,False,,vscode,2025-10-13T14:53:35.189358,,"ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/246683,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Moving the discussion over at https://github.com/microsoft/vscode/issues/246541#issuecomment-2805194749 to a separate issue.  Currently, the items in the chat context quick pick largely have unique icons per item, but as @jrieken pointed out this can add confusion and a lot visual/information density. Instead could we/should we group related types together and give icons to those types?  The core question of this issue is what groupings/types should there be?  ![Image](https://github.com/user-attachments/assets/d7a12a64-d5b3-4b36-b821-e6ff52fceb9b)"
147,"fix the activity bar ""top"" design",True,False,,vscode,2025-10-13T14:53:35.192283,,"ux, layout",1,,https://github.com/microsoft/vscode/issues/246548,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Please fix the activity bar ""top"" design like this. It feels so good 🤌  https://github.com/user-attachments/assets/9b0d4812-a9af-429c-a1a9-6be42727087d"
148,Color contrast ratio less than required - Accessibility,True,False,,vscode,2025-10-13T14:53:35.195090,,"ux, themes, accessibility, a11ymas",1,,https://github.com/microsoft/vscode/issues/246521,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:   Steps to Reproduce:  1. Navigate to any input field in the software, and focus on it. The blue highlight border comes up. 2. Use a color contrast checker tool, such as Color Contrast Analyser, to determine the ratio between the color on the inside of the input field to the blue highlight border.  Problem: For accessibility, the color contrast ratio is less than the minimum required ratio, 3:1. PFA screen captures.  <img width=""419"" alt=""Image"" src=""https://github.com/user-attachments/assets/c0af1a87-589f-4a81-8719-7ce16e126089"" />  <img width=""481"" alt=""Image"" src=""https://github.com/user-attachments/assets/0897ae05-ed7e-48e7-8dca-ae9efd4eb932"" />"
149,MCP: Input preview can be confused with looking like in-file configuration,True,False,,vscode,2025-10-13T14:53:35.198380,,"ux, under-discussion, chat-mcp",1,,https://github.com/microsoft/vscode/issues/246518,"Had questions from multiple devs (not new, but they that spend a lot of time on MCP configs in VS Code), if the `inputs` are somehow written to the mcp.jcon file, as they show up as ghost-text-styled text:  <img width=""861"" alt=""Image"" src=""https://github.com/user-attachments/assets/07aed087-15ee-41c1-8b85-4cba68135835"" />  <img width=""741"" alt=""Image"" src=""https://github.com/user-attachments/assets/2cea64ee-d163-4d7f-a30a-c37f4c1147fb"" />  cc @hawkticehurst"
150,"Offer ""danger"" (orange) style between ""warning"" (yellow) and ""error"" (red)",True,False,,vscode,2025-10-13T14:53:35.201340,,ux,1,,https://github.com/microsoft/vscode/issues/246507,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  ## Overview  Right now, there are two warm-color severities for ""squigglies"" in code:  * [`editorWarningForeground`](https://github.com/microsoft/vscode/blob/7ff86e6dcdf8af5c62c877d081f64a8b4755e521/src/vs/platform/theme/common/colors/editorColors.ts#L79-L81) `#CCA700`: often used for lint reports and other warnings * [`editorErrorForeground`](https://github.com/microsoft/vscode/blob/7ff86e6dcdf8af5c62c877d081f64a8b4755e521/src/vs/platform/theme/common/colors/editorColors.ts#L66-L68) `#F14C4C`: often used for type checking reports and other errors  Using the explicit ""warning"" color for lint reports is problematic. Linters such as ESLint provide two levels of reports, themselves also called ""warn"" and ""error"". ESLint and most of its community plugins default to enabling rules as ""error"", leaving ""warn"" as just for transient tooling states or for rare uncertain rules. There is no ideal way to surface lint reports in VS Code for this system:  * Warnings (yellow): is not correct, as lint ""errors"" are not high-level ""warnings"", they are often configured to break builds and are indeed errors * Errors (red): makes it conceptually confusing and difficult to distinguish them with other errors such as TypeScript's.  Proposal: can we insert a color tier between warning and error? Tentatively named **Danger**, with a midpoint between the two existing colors? It might make sense to also tweak the existing warning yellow and error red to be more distinct from danger. Maybe:  * Warning: `#E6BC00` _(optional change)_ * Danger: `#DF7A26` * Error: `#F82626` _(optional change)_  This would allow surfacing lint reports as a ""danger"" state that is higher severity than a warning but still lesser severity than type checking errors.  ### Additional Information  vscode-eslint surfaces lint reports with their respective level by default and seems to be blocked on changing that by this feature request (https://github.com/microsoft/vscode-eslint/issues/1199, https://github.com/microsoft/vscode-eslint/issues/1352, https://github.com/microsoft/vscode-eslint/issues/1880, https://github.com/microsoft/vscode-eslint/issues/1983). An `eslint.rules.customizations` option was added (https://github.com/microsoft/vscode-eslint/pull/1164) but that still suffers from the downsides of lint report _errors_ being surfaced semantically as _warnings_.  I don't think this is the same as #3915 or #9209. Those issues suggest adding more places to put styles, such as outlines around text or gutter marks. This issue is for adding >=1 new color to the existing list of color styles."
151,Add `project icon` for `IntelliJ IDEA`,True,False,,vscode,2025-10-13T14:53:35.205272,,"ux, layout, icons-product",1,,https://github.com/microsoft/vscode/issues/246378,<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  improve the look and feel by using a project icon.  it's about polishing and making things nice and shiny which UI/UX is kind of about.  https://github.com/checkstyle/checkstyle/issues/16813  Same as here:   - [Spring Framework PR](https://github.com/spring-projects/spring-framework/pull/34444)   - [Rewrite Static Analysis PR](https://github.com/openrewrite/rewrite-static-analysis/pull/467)   - [PMD PR](https://github.com/pmd/pmd/pull/5538)  https://github.com/editorconfig/editorconfig/issues/425
152,MCP: Better discovery/registry and one-click installation flow,True,False,,vscode,2025-10-13T14:53:35.208146,,"feature-request, ux, chat-mcp",1,,https://github.com/microsoft/vscode/issues/245717,Finding and installing MCP servers should be at least as easy as VS Code's extension experience.  Will update as we get closer to a plan. Subscribe and like to stay updated.
153,Polish the workspace index indicator,True,False,,vscode,2025-10-13T14:53:35.211483,,"debt, ux",1,,https://github.com/microsoft/vscode/issues/245332,"It is nice that the workspace index indicator landed in the status bar, but it needs polish.  ### Learn more  Rather than having a big blue link, leverage the new support for actions to learn more to the right of the header:  <img width=""289"" alt=""Image"" src=""https://github.com/user-attachments/assets/9a305d8c-7d40-4021-9e54-360427acd5b2"" />  ### Progress message  I find this line does not read well:  <img width=""278"" alt=""Image"" src=""https://github.com/user-attachments/assets/be35d8a5-5642-4a06-b90e-96ec04e15a09"" />  We should try to tweak this because the info is not all on the same level.  Also, when the status updates, it breaks to the next line because the hover does not update its size.+  ![Image](https://github.com/user-attachments/assets/b23f5459-2798-4d4e-a945-d006dda39471)  //cc @joaomoreno"
154,Accessibility - High contrast theme on activity bar inconsistent,True,False,,vscode,2025-10-13T14:53:35.214127,,"bug, ux, themes, accessibility, confirmed",1,,https://github.com/microsoft/vscode/issues/245121,"Type: <b>Bug</b>  1. Enable any high contrast theme 2. Hover over the activity bar icons   Normal:   ![Image](https://github.com/user-attachments/assets/0be393f2-d731-43bd-8304-838141d25cdd)   Some extensions (no dashed outline):   ![Image](https://github.com/user-attachments/assets/4272e902-7e92-46b3-a65b-535cc6f91e4f)  3. Click activity bar icons   Normal:   ![Image](https://github.com/user-attachments/assets/d76ee221-b150-4816-b167-5805a2da4c98)   Some extensions (no outline):   ![Image](https://github.com/user-attachments/assets/34d4fd62-4362-495b-9860-a03c4afc6991)  Expected: All icons behave the same  Actual: Icons available by default are consistent, but other icons' look varies depending on Extension support.  Solution: This issue doesn't feel like it should depend on Extension support. Understandably not many Extension developers use High-Contrast themes, so lack of support is easy to miss.  This should probably be fixed upstream, so that Activity Bar icons can only behave in one way.  VS Code version: Code 1.98.2 (ddc367ed5c8936efe395cffeec279b04ffd7db78, 2025-03-12T13:32:45.399Z) OS version: Windows_NT x64 10.0.22631 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-9750H CPU @ 2.60GHz (12 x 2592)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|23.90GB (5.99GB free)| |Process Argv|--folder-uri file:///c%3A/GitHub/lyric --crash-reporter-id ee03a05e-9a6e-4778-8b8a-c72b2ec19706| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (94)</summary>  Extension|Author (truncated)|Version ---|---|--- adb-qr|Aak|0.2.0 better-comments|aar|3.0.2 vscode-icalendar|af4|1.0.1 vscode-nginx-conf|ahm|0.3.5 Bookmarks|ale|13.5.0 vscode-sqlite|ale|0.14.1 a-file-icon-vscode|ato|2.0.1 vscode-intelephense-client|bme|1.14.3 vscode-tailwindcss|bra|0.14.12 exe-runner|bra|1.1.1 vscode-opennewinstance|chr|0.0.15 npm-intellisense|chr|1.4.5 path-intellisense|chr|2.10.0 vscode-express|Com|0.0.5 dart-code|Dar|3.106.0 flutter|Dar|3.106.0 mustache|daw|1.1.1 vscode-eslint|dba|3.0.10 es7-react-js-snippets|dsz|4.4.3 gitlens|eam|16.3.2 vscode-html-css|ecm|2.0.13 vscode-flutter-i18n-json|ess|0.28.0 vscode-gift|eth|0.1.11 vscode-gift-pack|eth|0.0.3 vscode-gift-preview|eth|0.0.15 font-switcher|eva|4.1.0 vscode-diff|fab|2.1.2 html-preview-vscode|geo|0.2.5 copilot|Git|1.293.0 copilot-chat|Git|0.25.1 remotehub|Git|0.64.0 vscode-github-actions|git|0.27.1 vscode-pull-request-github|Git|0.106.0 gc-excelviewer|Gra|4.2.63 vscode-graphql|Gra|0.13.2 vscode-graphql-syntax|Gra|1.3.8 todo-tree|Gru|0.0.226 rest-client|hum|0.25.1 discord-vscode|icr|5.8.0 better-cpp-syntax|jef|1.27.1 vscode-peacock|joh|4.2.2 vsc-python-indent|Kev|1.21.0 google-apps-script|lab|0.2.2 flutter-intl|loc|1.19.3 dart-import|lua|0.3.1 vscode-moodle-snippets|Mat|1.0.346 vscode-pdf|mat|0.1.5 asm-code-lens|maz|2.6.2 rainbow-csv|mec|3.18.0 syntax-mcfunction|Min|1.0.1 vscode-docker|ms-|1.29.4 csharp|ms-|2.69.25 vscode-dotnet-runtime|ms-|2.3.0 debugpy|ms-|2025.4.1 isort|ms-|2023.10.1 python|ms-|2025.0.0 jupyter|ms-|2024.11.0 jupyter-keymap|ms-|1.1.2 jupyter-renderers|ms-|1.1.0 vscode-jupyter-cell-tags|ms-|0.1.9 vscode-jupyter-slideshow|ms-|0.1.6 remote-containers|ms-|0.401.0 remote-ssh|ms-|0.118.0 remote-ssh-edit|ms-|0.87.0 remote-wsl|ms-|0.88.5 azure-repos|ms-|0.40.0 cpptools|ms-|1.23.6 hexeditor|ms-|1.11.1 live-server|ms-|0.4.15 remote-explorer|ms-|0.4.3 remote-repositories|ms-|0.42.0 vscode-serial-monitor|ms-|0.13.1 vsliveshare|ms-|1.0.5948 vscode-flutter-freezed-helper|mth|0.1.0 gremlins|nho|0.26.0 indent-rainbow|ode|8.3.1 material-icon-theme|PKi|5.19.0 vscode-xml|red|0.28.0 flutter-riverpod-snippets|rob|1.2.2 ssh-here|sat|0.0.3 markdown-preview-enhanced|shd|0.8.15 mcscript|Ste|0.0.3 even-better-toml|tam|0.21.2 lilypond|tru|0.0.1 errorlens|use|3.23.0 vscode-svg-previewer|vit|0.7.0 vscode-nginx|wil|0.7.2 php-debug|xde|1.35.0 php-pack|xde|1.0.3 txt-syntax|xsh|0.2.4 pretty-ts-errors|Yoa|0.6.1 save-as-root|yy0|1.10.0 markdown-all-in-one|yzh|3.6.3 php-intellisense|zob|1.3.3  (5 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscod805:30301674 binariesv615:30325510 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyonecf:30548226 962ge761:30959799 h48ei257:31000450 pythontbext0:30879054 cppperfnew:31000557 dwnewjupyter:31046869 nativerepl1:31139838 pythonrstrctxt:31112756 nativeloc1:31192215 iacca1:31171482 5fd0e150:31155592 dwcopilot:31170013 6074i472:31201624 dwoutputs:31242946 customenabled:31248079 hdaa2157:31222309 copilot_t_ci:31222730 850i5325:31264362 968h8231:31271074 jda6j935:31233686 pythoneinst12cf:31262606 bgtreat:31268568 fh1c7952:31258891 4gafe986:31271826 31787653:31262186 3e8i5726:31271747 49da9784:31264548  ```  </details>  <!-- generated by issue reporter -->"
155,Edits: undo/redo does not restore decoration for the edit,True,False,,vscode,2025-10-13T14:53:35.217597,,"ux, undo-redo, cross-file-editing",1,,https://github.com/microsoft/vscode/issues/245108,"Steps to Reproduce:  1. have copilot edits make changes to the editor 2. accept or reject one edit 3. undo in the editor 4. redo  => 🐛 the copilot edit decoration is not restored, but I think that would be great to be able to see the edit was done by Copilot  ![Image](https://github.com/user-attachments/assets/abd9b5e7-650b-4e85-89ad-5ecfb99ae9a9)"
156,Full set of Programming language Profile Icons,True,False,,vscode,2025-10-13T14:53:35.220451,,ux,1,,https://github.com/microsoft/vscode/issues/244926,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I know work was done with https://github.com/microsoft/vscode/issues/188972 But in 1.98 it's missing the most popular languages. It has very few actually.  Isn't creating profiles by programming language one of the most  common needs or am I wrong (or am I missing the point of profiles)?  Although i can remember that GO is a bookmark and Python is a megaphone, it certainly isn't as mentally quick as seeing the actual language icon."
157,"Update status-bar item icon & text spacing to not use spaces ("" "")",True,False,,vscode,2025-10-13T14:53:35.224171,,"feature-request, ux, workbench-status",1,,https://github.com/microsoft/vscode/issues/244876,"Currently, the status bar items use a space character ("" "") to manage the gap between icon & text <img width=""170"" alt=""Image"" src=""https://github.com/user-attachments/assets/2c4b8b1c-8664-42e5-9d9b-bdd5a293430a"" />  <img width=""306"" alt=""Image"" src=""https://github.com/user-attachments/assets/d6afea86-10e0-442a-a526-d9b3a09db7f0"" />  Ideally, the spacing should be controlled by a CSS variable in order to maintain consistency & scalability."
158,SCM status bar: Show pin indicator when pinned,True,False,,vscode,2025-10-13T14:53:35.227316,,"ux, polish, scm, icons-product",1,,https://github.com/microsoft/vscode/issues/244563,"https://github.com/microsoft/vscode/issues/244464  Small polish: Could show a small pin icon on the repository in the SCM status bar when it is pinned. This might be enough affordance to click on the status bar item for users wondering why it doesn't update (e.g., they forgot that they pinned it)."
159,Unsure how to read longer hints in terminal suggestion widget,True,False,,vscode,2025-10-13T14:53:35.230136,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/244536,"Testing https://github.com/microsoft/vscode/issues/244479  Using Windows 11 Insiders, latest VS Code Insiders  ``` Version: 1.99.0-insider (user setup) Commit: 299b150bd5c0227099c9b03dc56c5073ec0ff5e2 Date: 2025-03-24T05:03:53.092Z Electron: 34.3.2 ElectronBuildId: 11161073 Chromium: 132.0.6834.210 Node.js: 20.18.3 V8: 13.2.152.41-electron.0 OS: Windows_NT x64 10.0.26120 ```  I'm uncertain how to read the rest of the gray text explaining `code-tunnel` or `code-tunnel-insiders`. Hovering didn't seem to do anything, and I don't see a horizontal scroll bar:  ![Image](https://github.com/user-attachments/assets/2514ddd3-967a-42cb-937c-cda85dfd59f5)"
160,Use same hover group for all copilot actions near input,True,False,,vscode,2025-10-13T14:53:35.233056,,"debt, ux, chat, chat-input",1,,https://github.com/microsoft/vscode/issues/244462,"See in inline chat how the @ and mic icons show the hover immediately:  ![Image](https://github.com/user-attachments/assets/bd5ee64b-a403-4456-8d65-49cb7b34fa20)  This also happens in the chat view for @ and mic icons, but not for ask/model/send side:  ![Image](https://github.com/user-attachments/assets/c3188ead-f622-4ea0-afe3-62cd0eea38cc)  We should just stick them all in the same hover group so regardless of alignment they show instantly.  API in hover service:  https://github.com/microsoft/vscode/blob/fba9b2d7ef6a2b4299fb5adf3cdbd8d5c58d5432/src/vs/base/browser/ui/hover/hover.ts#L233-L252"
161,VIsual bug | Applying Edits widget uneven padding and redundant animations,True,False,,vscode,2025-10-13T14:53:35.236111,,"ux, polish, cross-file-editing",1,,https://github.com/microsoft/vscode/issues/243979,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.99.0-insider - OS Version: macOS Sequoia 15.3.2  The ""Applying Edits"" widget has uneven horizontal padding. Also having both a spinner & an animated ellipsis feels redundant:  ![Image](https://github.com/user-attachments/assets/4da413ec-51af-4c30-a147-f7defc8bcebb)"
162,Checkbox text should be click-able,True,False,,vscode,2025-10-13T14:53:35.240165,,"ux, issue-reporter",1,,https://github.com/microsoft/vscode/issues/243779,"Currently, one cannot click on text corresponding to checkboxes to (un)check the checkbox. It would be nice (matching other websites/apps) if the text were clickable.   ![Image](https://github.com/user-attachments/assets/49d177a9-fc42-4e29-b982-d914c6f47d57)  Version: 1.99.0-insider Commit: 2c7a0283817355c81e1b106f34d911762950a4d9 Date: 2025-03-14T05:04:14.195Z Electron: 34.3.2 ElectronBuildId: 11161073 Chromium: 132.0.6834.210 Node.js: 20.18.3 V8: 13.2.152.41-electron.0 OS: Darwin arm64 24.3.0"
163,Improve `Select for Compare`,True,False,,vscode,2025-10-13T14:53:35.242954,,"ux, polish, diff-editor",1,,https://github.com/microsoft/vscode/issues/243150,When we use `Select for Compare` on 2 files with same filename. It's hard to distinguish left file path and right file path.   ![Image](https://github.com/user-attachments/assets/954fc705-2008-47d0-a1eb-0f3f1a552c57)
164,Code snippet editor has many editor features that are not working,True,False,,vscode,2025-10-13T14:53:35.245725,,ux,1,,https://github.com/microsoft/vscode/issues/243112,"When you get a code snippet and right-click, you see many entries that are non functional:  <img width=""516"" alt=""Image"" src=""https://github.com/user-attachments/assets/b2425a6b-7aa9-44a1-b661-bebf7fa936f9"" />  I would have only accepted basic things like we do for simple readonly editors (Copy).  //cc @isidorn"
165,"""Insert At Cursor"" should be disabled when no text editor is opened",True,False,,vscode,2025-10-13T14:53:35.252251,,"ux, chat",1,,https://github.com/microsoft/vscode/issues/243110,"With a code snippet as chat response, there are actions to apply the code. The second one is to ""Insert At Cursor"". This action is enabled even when no text editor is visible, resulting in a dialog as error. I would suggest to disable the action via context keys.  <img width=""378"" alt=""Image"" src=""https://github.com/user-attachments/assets/8aaf453f-506b-4bf2-a41b-92fb38dc8ed3"" />  //cc @isidorn"
166,Git: background color of current commit in graph,True,False,,vscode,2025-10-13T14:53:35.261669,,"feature-request, ux, scm",1,,https://github.com/microsoft/vscode/issues/242734,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> add background color of current commit in the git graph, because currently it is indicated by an empty circle, but takes me a moment to identify. Subtly coloring the current commit's background would improve ux"
167,Notifications hide the chat bottom of Copilot Chat,True,False,,vscode,2025-10-13T14:53:35.270080,,"ux, workbench-notifications, chat",1,,https://github.com/microsoft/vscode/issues/242071,"<img width=""1618"" alt=""Image"" src=""https://github.com/user-attachments/assets/0a8c1cd0-2b48-4ac1-9b43-90d7bcff284a"" />  Its been weeks using Github Copilot Edit and chats and many times when I receive a new notifications, I need to hide or wait until will be finish and its cause hiding chat field and I can't write or see the bottom !!  Should to improve UX for this problem !  Regards"
168,Test error decoration glitch when zoomed in,True,False,,vscode,2025-10-13T14:53:35.275928,,"bug, ux, polish, testing",1,,https://github.com/microsoft/vscode/issues/241441,![Image](https://github.com/user-attachments/assets/9f9420d6-8256-4458-9dbc-dfd79442d23b)  //cc @mrleemurray
169,Banner for workspace trust is not significant enough and themed as info-only,True,False,,vscode,2025-10-13T14:53:35.282976,,"ux, workbench-banner",1,,https://github.com/microsoft/vscode/issues/240856,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.98.0-insider (system setup) Commit: 44028decf1ca81a0cbf99a65ab72cca6735449f2 Date: 2025-02-14T05:04:46.748Z Electron: 34.1.0 ElectronBuildId: 10990655 Chromium: 132.0.6834.194 Node.js: 20.18.1 V8: 13.2.152.38-electron.0 OS: Windows_NT x64 10.0.26120  # Problem NEW users to VS Code and our extension are getting challenges with Workspace Trust creating extensions in restricted mode and thus the commands for the extension are not visible to them.  Our users are repeatably getting in to a state where the **banner** about workspace trust is not discernable as something as important that may be blocking their functionality. It is marked as a security banner (the keyhole badge), but it is 'info' themed:  ![Image](https://github.com/user-attachments/assets/87b4e369-53d4-4ddc-bc2e-43fbe6385396)  This is very ignorable in the visual of a large screen. Even in our internal team case studies seasoned developers didn't see this as an important banner.  We have root-caused customer reports (https://github.com/microsoft/vscode-dotnettools/issues/1653) to our extension (that have been coming in at a sustaining pace) to this problem. This creates some new-user onboarding problems users exiting our workflow/funnels in getting in to the tool and our platform extension.  # Proposal We believe the banner should be more 'alert' styled and NOT themed with other color areas to remain CONSISTENT with the UX of an alert and not 'just a button' something like this:  ![Image](https://github.com/user-attachments/assets/5d642718-e13f-4b87-892e-e3078511918b)  Is a much more visible cue to take action/understand the repercussions of any prior choice. It changes no functionality but alerts the user better than what exists today and tests well as a visible alert to pay attention to that may affect their experience."
170,SCM - Setting for adjusting branch names/tags,True,False,,vscode,2025-10-13T14:53:35.290422,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/240322,"Type: <b>Feature Request</b>  The Source Control Graph is a wonderful new feature. One painful problem is the colored branch names or tags are simply too small to fit the branch name. My branches often follow a conventions, such as ""dev/dev-user-name/feature"", but the tags are only wide enough to get the common text, so it's very difficult to tell which branch is which at a glance. I have to hover over the branch name/tag to see the full name.  VS Code version: Code 1.97.0 (33fc5a94a3f99ebe7087e8fe79fbe1d37a251016, 2025-02-04T22:41:26.688Z) OS version: Darwin arm64 24.3.0 Modes:   <!-- generated by issue reporter -->"
171,"Git - Fixed alignment-column for git 'inline blame' annotations, regardless of line-length",True,False,,vscode,2025-10-13T14:53:35.294160,,"feature-request, git, ux",1,,https://github.com/microsoft/vscode/issues/240067,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->   The new inline git blame ""editor decoration"" renders at different horizontal locations depending on the length of the active line:  <img width=""581"" alt=""Image"" src=""https://github.com/user-attachments/assets/5c4110f5-2d8e-411f-8ef6-43698803e8ab"" />  <img width=""581"" alt=""Image"" src=""https://github.com/user-attachments/assets/2da57b56-a903-440f-87d7-f4e8e76c20c6"" />  I'd argue that the horizontal location of these annotations should stay basically the same when possible. I understand the impulse to make the maximal use of the available space, but personally, I don't mind if the not-always-all-that-relevant blame information rolls ""under the fold"" and becomes less visible when I've got a lot of open windows packed together.  Potentially the best solution is a configuration option, something like `git.blame.editorDecoration.startColumn` (i.e. `80`). For any line shorter than that value, the blame-decoration is shifted to left-align to that column.  Prior art: There's a similar option in [vscode-error-lens](https://github.com/usernamehw/vscode-error-lens): ``` ""errorLens.alignMessage"": { ""end"": 100 }, ```"
172,Filter input on the Output view hides all other panel tabs,True,False,,vscode,2025-10-13T14:53:35.298621,,"ux, polish, workbench-views",1,,https://github.com/microsoft/vscode/issues/239004,"It's quite easy to get into a state where, even with a reasonable window size, the Filter input is really massive. E.g. here after reloading without interaction, it grows to basically hide all other panel titles   https://github.com/user-attachments/assets/263b7945-10e4-42ff-ac1b-9be5ec23db20"
173,GitHub - Consider using modal dialog,True,False,,vscode,2025-10-13T14:53:35.302798,,"ux, under-discussion, github",1,,https://github.com/microsoft/vscode/issues/238975,"Testing #238835  > Click on the ""Open on GitHub"" action >    Confirm that you receive a notification that the commit does not exist on GitHub  This shows an info notification, but since it directly resulted from the user trying to run an action that can't be completed, a modal dialog might be more appropriate."
174,SCM - Last row in these hovers are not consistent,True,False,,vscode,2025-10-13T14:53:35.306896,,"bug, ux, scm",1,,https://github.com/microsoft/vscode/issues/238959,"Testing #238852  Last row in these hovers are not consistent. One has background and other does not. They should either both have background or both should not  <img width=""966"" alt=""Image"" src=""https://github.com/user-attachments/assets/db8ec76e-db88-484d-916f-11742afbaacb"" />  <img width=""504"" alt=""Image"" src=""https://github.com/user-attachments/assets/2fbb4fa2-d7ef-4d8e-8b4c-22787e39f53b"" />"
175,Explore a QuickPick-like experience close to what invoked it,True,False,,vscode,2025-10-13T14:53:35.310397,,"ux, quick-pick, under-discussion",1,,https://github.com/microsoft/vscode/issues/238095,"Scenarios: * The attach context in Chat: ![image](https://github.com/user-attachments/assets/a1692e9b-08bf-44c1-9e39-7392e13bcfbc) * Git branch status bar item: ![image](https://github.com/user-attachments/assets/79d4bb11-be3e-432a-8436-38da1b85c59f) * Language, Encoding, Tab Size status bar items: ![image](https://github.com/user-attachments/assets/7a0ed401-ecd2-4abc-907b-e33a0c9e760a)  All of these open Quick Picks that are aligned at the top... and we've gotten wishes that the quick pick could be rendered closer to these items.  # Explorations  ## Explore simply moving the existing quick pick closer to what's invoking it  Hacked up in https://github.com/microsoft/vscode/commit/88f4209887aa16faa8253f77cc78a5ccb43dae97 if you click in the Chat input and click the paper clip, the quick pick renders closer to it: ![image](https://github.com/user-attachments/assets/cf9d1581-5478-42bf-8898-5e54e4e6443b)  another example if your cursor was in the Search: ![image](https://github.com/user-attachments/assets/7b7fc5cd-48d6-4a1f-8496-8adf6bab7ce7)  and another example if you use the branch picker: ![image](https://github.com/user-attachments/assets/925eeb25-98e7-4ce1-8581-118272dffc58)  There are a few things to iron out: * this commit only renders things close to things if they're in the outer 30% of the screen. This would be modified to logic that says "" always render close to the thing... if you're in the main editor part, render in the middle"".. but requires additional layer work since WorkbenchLayerService is in `workbench` and quick pick is in `platform` * Clicking on buttons does not take focus... so if my cursor was in the Search bar, and I clicked the Attach Context with my mouse, the quick pick will render close to Search * current logic breaks D&D and that would need to come back  Those are things that could be solved with some work... but I think the big problem is that........ it just doesn't look that great. I was really expecting it to look and feel nicer, but I don't think it does. I wish that the quick pick felt more attached to the thing that is opening it... like the attach context, or the Git status bar item.  That inspired the 2nd exploration.  ## Explore a new kind of widget  For the attach context and the status bar items, the wish is for something that really feels attached to that. Something like the label picker on GitHub: ![image](https://github.com/user-attachments/assets/3b456b09-16c1-4ea2-b03b-0e601a5c5e35)  but with a tail like a hover (like the Language Status Bar item): ![image](https://github.com/user-attachments/assets/c7f0bb13-b508-4917-a6fa-a22b357d3d03)  It could look something like this (please forgive my bad Figma skills): ![image](https://github.com/user-attachments/assets/e72f6883-faaf-4a40-bbfa-07ef01fccad9)  and in the branch picker: ![image](https://github.com/user-attachments/assets/fdd1b7d5-7032-4798-9306-7ac266045d48)   Writing down a loose idea from notes:  ``` * make a QuickContextWidget that is similar to a quick pick, but smaller and attachable to a UI component (it could use shared code with QP) * adopt this in Core for the attach context * adopt this for all Core contributed Status Bar Items * add a `showQuickContext(items: QuickContextItem[]): Promise<QuickContextItem | undefined>` * adopt the `showQuickContext` in git extension ```  I think we need more mockups... open questions: * What would the height of these be? * Could we render the input at the bottom? * What do InputBoxes look like (instead of QuickPicks)?"
176,Statusbar has strange theme defaults,True,False,,vscode,2025-10-13T14:53:35.315627,,"bug, ux, themes, workbench-status",1,,https://github.com/microsoft/vscode/issues/235718,"In default dark, you get a nice hover feedback:  ![Image](https://github.com/user-attachments/assets/c1ebf921-97a2-4047-8acc-4716a3eca4cf)  Even for prominent items:  ![Image](https://github.com/user-attachments/assets/b9e91ae7-fcde-4496-8ef9-900437363400)  In default light theme, there is no hover feedback at all?  ![Image](https://github.com/user-attachments/assets/42ea5c11-cf00-4698-aa1f-e03d1ba4f95a)  In high contrast themes, should we be using background color at all for prominent or other indicators?  ![Image](https://github.com/user-attachments/assets/8af9b3d4-55f2-42d4-8c9b-a6861b40d5c9)  Because we do not in dark high contrast."
177,SCM Graph - better handle long branch names in the hover,True,False,,vscode,2025-10-13T14:53:35.320338,,"bug, ux, scm",1,,https://github.com/microsoft/vscode/issues/235620,![Image](https://github.com/user-attachments/assets/03e0fc21-c6ef-4cb2-8645-316b61c080f4)
178,Inline chat message/buttons should be aligned with the right edge of the input box,True,False,,vscode,2025-10-13T14:53:35.324055,,"feature-request, ux, polish, inline-chat",1,,https://github.com/microsoft/vscode/issues/235405,"Repro:  1. Wide monitor 2. Open chat 3. Ask ""hi"", 🐛 yellow message shows on the far side right of the screen 4. Hover The message, 🐛 yellow message shifts to middle and feedback buttons show on far right side  ---  Actual:  ![Image](https://github.com/user-attachments/assets/d12fadba-2f6f-4720-85f7-362aa970f87c)  Expected:  ![Image](https://github.com/user-attachments/assets/354b6e0e-d409-4cbd-856d-dee18d72cc63)  ---  Hovering actual:  ![Image](https://github.com/user-attachments/assets/3f0f439e-8e8c-43d5-a96b-e55fb3e7f91e)  Hovering expected (something like this?):  ![Image](https://github.com/user-attachments/assets/04db99f2-773b-4bfd-b0a1-b18347698815)  ---  Happens in terminal on hover too:  ![Image](https://github.com/user-attachments/assets/4d0cc22c-4b20-4715-a88f-704845879e10)"
179,Very small buttons for expandable hover,True,False,,vscode,2025-10-13T14:53:35.327003,,"ux, under-discussion, editor-hover",1,,https://github.com/microsoft/vscode/issues/235170,"Testing #234989  First of all, I think this is a great feature! - really useful :) I wish the UX was better though, in terms of its really hard or rather takes very conscious effort to carefully click on + or - which are really close to each other.   We may want to consider giving more gap in between the two buttons or separating them to left and right? (This might look ugly but would be better in terms of giving better experience for people actually clicking the button)  I do notice the effort to null one of them out if they are deemed invalid (if its in only expandable state the - gets blacked out), so that is great.  Honestly buttons are too small :/  Perhaps there are keyboard shortcut to these that I dont know about though!   ![Image](https://github.com/user-attachments/assets/4a9cd5e3-3e5b-4cd0-8a8d-97723d9579ab) ![Image](https://github.com/user-attachments/assets/566f9059-b2c9-48d1-a8a3-bfafc11f987c)"
180,SCM Graph - Add horizontal scrollbar for source control graph,True,False,,vscode,2025-10-13T14:53:35.329901,,"bug, ux, scm",1,,https://github.com/microsoft/vscode/issues/234879,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Add horizontal scrollbar to source control graph in the source control panel. It should probably appear automatically if source control graph content doesn't fit into window, like it does in text editors. `shift+scroll` for horizontal scrolling would also be nice. I checked out source control settings but couldn't find any mention of horizontal scrolling. I also haven't found a similar feature request.  Maybe it won't be useful 99% of the time, but once in a while you get assigned to one of *those* projects... ![Image](https://github.com/user-attachments/assets/802ef20f-cea2-4206-a3eb-1beeab4c0c07)"
181,"With the `Light+` theme,  the input area of Chat in Editor is indistinguishable from the background when out of focus",True,False,,vscode,2025-10-13T14:53:35.333350,,"bug, ux, themes, confirmed, chat",1,,https://github.com/microsoft/vscode/issues/234866,"Version: 1.96.0-insider Commit: 1bdee4500fc32f4eb195e087501b8c9331447fb3 Date: 2024-11-28T10:48:06.788Z Electron: 32.2.5 ElectronBuildId: 10579404 Chromium: 128.0.6613.186 Node.js: 20.18.0 V8: 12.8.374.38-electron.0 OS: Darwin x64 22.6.0 Steps to Reproduce:  1.  Set `""workbench.colorTheme"": ""Default Light+""` 2. Open Chat in Editor. 3. Focus to a other part. 4. The input area of Chat in Editor is indistinguishable from the background.  The input area should have a border even when out of focus.  ![Image](https://github.com/user-attachments/assets/913e84a6-3cb0-4043-be49-ae7f0555eb68)"
182,Git - Git blame editor decoration color,True,False,,vscode,2025-10-13T14:53:35.336161,,"bug, git, ux",1,,https://github.com/microsoft/vscode/issues/234568,With `git.blame.editorDecoration.enabled`. I was expecting it to pick up my theme's comment color as the default color since that's the closest thing to what it is:  ![Image](https://github.com/user-attachments/assets/6575b653-37f1-4437-afcb-0cd842ad4308)  Personally I want it to be very subtle just like comments.
183,Horizontal scroll position resets in file when seek peek definition called,True,False,,vscode,2025-10-13T14:53:35.340532,,"feature-request, ux, polish, editor-symbols",1,,https://github.com/microsoft/vscode/issues/234270,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.95.2 - OS Version: linux mint mate 21.3  Version: 1.95.2 Commit: e8653663e8840adaf45af01eab5c627a5af81807 Date: 2024-11-07T11:07:22.054Z Electron: 32.2.1 ElectronBuildId: 10427718 Chromium: 128.0.6613.186 Node.js: 20.18.0 V8: 12.8.374.38-electron.0 OS: Linux x64 5.15.0-126-generic  __Issue:__ With long lines in a code file and horizontally scrolled to bring the remaining part of the line into view In this scroll position, when tried to seek peek definition  the seek peek definition shows inline, but the original code file horizontally scrolls back to start position   Steps to Reproduce: 1.  Identify long code line in a file and horizontally move to bring a symbol to view 2.  select seek peek definition for this symbol  sample images -  ![Image](https://github.com/user-attachments/assets/2de853df-32de-4585-b0f1-f1d17b704b00)  ![Image](https://github.com/user-attachments/assets/41d014a1-9bb8-4351-ab4d-5c2c9e1e8e56) ( note the horizontal scroll position has come to start position ) and have scroll back to see symbol in code.  __Expected behaviour:__ horizontal scroll position to be retained during seek peek definition as in sample image below  ![Image](https://github.com/user-attachments/assets/fb1a4243-2c09-4203-a031-03acfc608e38)"
184,SCM - Add margin in file tree,True,False,,vscode,2025-10-13T14:53:35.344222,,"bug, ux, scm",1,,https://github.com/microsoft/vscode/issues/234083,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Please add more margin (5px for example) in file tree Because without a margin it is too close to a vertical line, which is not very aesthetic  ![Image](https://github.com/user-attachments/assets/212d5aaa-1a93-405c-a3cc-cc8fad5e01d4)"
185,vscode window is large then it seems. transparent unclickable area around all windows.,True,False,,vscode,2025-10-13T14:53:35.346944,,"bug, ux, linux, workbench-os-integration",1,,https://github.com/microsoft/vscode/issues/233904,"Type: <b>Bug</b>  Unable to click anything under window, transparent area of aproximately 50px, all around. Since there is a shadow around, every vscode window, issue reporter included, has this issue. I'm guessing it has something to do with the shadow.   Basically the window is larger then it seems and clicking at the edge of vscode, i'm unable to switch to another app that is underneat it. Representated by white rectangular, aproximation of area around the window.  ![Image](https://github.com/user-attachments/assets/f38391d4-fd27-4f6d-ba40-4f97d45ed140)  VS Code version: Code 1.95.2 (e8653663e8840adaf45af01eab5c627a5af81807, 2024-11-07T11:07:22.054Z) OS version: Linux x64 6.11.7-300.fc41.x86_64 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 7 5800X3D 8-Core Processor (16 x 3553)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: disabled_software<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off<br>webnn: disabled_off| |Load (avg)|1, 0, 0| |Memory (System)|62.71GB (55.33GB free)| |Process Argv|/home/tomi/Documents --crash-reporter-id ac1fc1ed-1df5-4e41-a000-f6055199a477| |Screen Reader|no| |VM|0%| |DESKTOP_SESSION|gnome| |XDG_CURRENT_DESKTOP|GNOME| |XDG_SESSION_DESKTOP|gnome| |XDG_SESSION_TYPE|wayland| </details><details><summary>Extensions (5)</summary>  Extension|Author (truncated)|Version ---|---|--- xml|Dot|2.5.1 vscode-docker|ms-|1.29.3 default-keys-windows|smc|0.0.10 php-debug|xde|1.35.0 php-intellisense|zob|1.3.3   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscod805:30301674 binariesv615:30325510 vsaa593cf:30376535 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyone:30548225 vscrpc:30673769 962ge761:30959799 9b8hh234:30694863 pythonnoceb:30805159 asynctok:30898717 pythonmypyd1:30879173 2e7ec940:31000449 pythontbext0:30879054 cppperfnew:31000557 dsvsc020:30976470 pythonait:31006305 dsvsc021:30996838 724cj586:31013169 dvdeprecation:31068756 dwnewjupytercf:31046870 2f103344:31071589 impr_priority:31102340 nativerepl1:31139838 pythonrstrctxt:31112756 cf971741:31144450 iacca1:31171482 notype1:31157159 5fd0e150:31155592 dwcopilot:31170013 stablechunks:31181875  ```  </details>  <!-- generated by issue reporter -->"
186,Zooming into types moves the +/- buttons off screen,True,False,,vscode,2025-10-13T14:53:35.350469,,"feature-request, ux, polish, editor-hover",1,,https://github.com/microsoft/vscode/issues/233556,Awkward UX:  ![Image](https://github.com/user-attachments/assets/1a69cab7-aeb7-4b64-9281-36220974bfb8)
187,Inline chat code blocks extend more to right than chat input and also overlap the scroll bar,True,False,,vscode,2025-10-13T14:53:35.353128,,"bug, ux, inline-chat",1,,https://github.com/microsoft/vscode/issues/233205,Inline chat with response streaming in shows the code block overlapping with scroll bar:  ![Image](https://github.com/user-attachments/assets/7b13862a-4038-46c0-9d22-6b10cb027f6d)  This is also a problem in terminal chat but wouldn't want to fix that until the editor inline chat is perfect  ![Image](https://github.com/user-attachments/assets/a637fd30-768b-4455-956c-96cc725abd4d)
188,Toggling views/panels has inconsistent focus behaviour,True,False,,vscode,2025-10-13T14:53:35.356485,,"bug, ux, layout",1,,https://github.com/microsoft/vscode/issues/232790,"While investigating https://github.com/microsoft/vscode/issues/198293 I noticed that our action to toggle visibility of primary or secondary side bar or panel has inconsistent behaviour when it comes to passing focus to the view that becomes visible or not.  Notice when the explorer is active how focus remains in the editor:  ![Image](https://github.com/user-attachments/assets/a18f64dd-6d9c-4def-b62d-26ad32d14810)  And now with the SCM view:  ![Image](https://github.com/user-attachments/assets/de572695-04b1-4333-ae7c-cc2e06325caa)  First of all, these actions seem to call into methods to toggle visibility of the container via layout service which eventually calls into `openPaneComposite`, e.g. for the primary sidebar:  https://github.com/microsoft/vscode/blob/4520d915c98954dc96dd0bc00b8bb68181cbf2b6/src/vs/workbench/browser/layout.ts#L1750  The last parameter is a `true` to indicate that focus should move to that pane.  However, at the point where we want to focus the pane, it is not yet visible because the grid only updates a few lines below:  https://github.com/microsoft/vscode/blob/4520d915c98954dc96dd0bc00b8bb68181cbf2b6/src/vs/workbench/browser/layout.ts#L1756  Any view that implements `focus` by e.g. focussing the list will be a no-op because the DOM nodes are not yet visible. The SCM view is probably a bit async and that is why it works by chance.  I am actually not sure how to address this: people might have gotten used to the fact that these commands typically preserve focus for most of our views. I still think that the implementation is currently buggy around focussing the pane when the container becomes visible, so maybe a fix would need to be: * handle focus properly after the container in the grid is visible * make focus more explicit so that the toggling actions can explicitly pass in `focus: false` to preserve todays behaviour  //cc @sbatten"
189,SCM - move action buttons on inline window to the left,True,False,,vscode,2025-10-13T14:53:35.360185,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/231638,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  There are inlinine windows for git actions, whetever there is new change in the codebase the aeria on right side form the line numbers can be clicked and inline window will be opened. 99% of the time, my desired action is to revert changes by clicking button which is on the right side of the inline window, and if someone has wide monitor that can be inconvinient. I am proposing to move those buttons to the left side, closer to line numbers.  If that is not feasable could we have context menu with right click on the green lines, that indicates git changes, and there we can have revert changes action?  ![Image](https://github.com/user-attachments/assets/8362ea47-b522-4be4-b100-045c1410dc67)   I would also propose for Peek References and other actions that require inline window, that the view is inverted and moved to the left, such as button and list of references/implementations etc, as it shortens the mouse drag and increase convinience, however on the other side I can imagine that people are used to this view, but hey, if something will improve the dev flow I am for it. ![Image](https://github.com/user-attachments/assets/701179dd-5d11-4e56-aca2-eae66727868c)"
190,The chat scroll to bottom button doesn't align with the extension detail scroll to top button,True,False,,vscode,2025-10-13T14:53:35.362971,,"ux, extensions-editor, chat",1,,https://github.com/microsoft/vscode/issues/231440,Similar idea but the icon in particular is a different style:  ![Image](https://github.com/user-attachments/assets/16805789-710c-4d4b-9380-50bd5b2f2ed0)  ![Image](https://github.com/user-attachments/assets/32e11727-9da1-43a0-a03b-d8ddad527b40)
191,Move cursor when adding secondary cursors,True,False,,vscode,2025-10-13T14:53:35.366355,,"ux, editor-multicursor, under-discussion",1,,https://github.com/microsoft/vscode/issues/229762,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> The multi-cursor experience with VSCode can feel a bit jarring. It supports advanced and smart features, but seems to lack support for basic / minimal features or implementations. Especially when considering use cases like not wanting to touch a mouse for text editing.   To put it simply, I'd like to be able to make basic multi-cursor editing work the way it does in Notepad++. (Specifically with ""Enable Multi-Editing"" enabled but ""Enable Column Selection to Multi-Editing"" disabled.)  Currently, the basic way to edit multiple lines simultaneously is to use the keyboard shortcuts for editor.action.insertCursorAbove and editor.action.insertCursorBelow to spawn secondary cursors. If your cursor is on line 22. pressing editor.action.insertCursorBelow twice will result in cursors on lines 22, 23, and 24. If you then press editor.action.insertCursorAbove once it will result in cursors on lines 21, 22, 23, and 24.   If you accidentally press either keybind too many times, you can either use the cursorUndo keybind to sequentially remove the secondary cursors or use the removeSecondaryCursors keybind to exit multi-cursor mode and start over.   If you press the keybind to removeSecondaryCursors then your cursor will be back on line 22, where it was before you spawned any secondary cursors.    This alone is already an unintuitive implementation. It operates differently from other selection / editing modes such as, for example, highlighting text with cursorUpSelect and cursorDownSelect.   I propose that keyboard-centric manipulation of multi-line editing should instead work like the following:  If your cursor is on line 22, pressing editor.action.multiCursorExtendDown twice will result in cursors on lines 22, 23, and 24. If you then press editor.action.multiCursorExtendUp once it will result in cursors on lines 22 and 23. If you then press editor.action.multiCursorExtendUp once more it will result in a single cursor on line 22, effectively exited multi-cursor mode. If you then press editor.action.multiCursorExtendUp once more again it will result in cursors on lines 21 and 22.   If you press the removeSecondaryCursors keybind then your cursor will be on line 21, the last place you moved your cursor to.  Preferably, this would also come with a toggle setting to make the 4 unmodified arrow buttons exit multi-cursor mode instead of moving the (rectangular) multi-cursors. Specifically, up or down would move the cursor up or down as normal, left would move the cursor to where the top-left multi-cursor was, and right would move the cursor to where the bottom-right multi-cursor was. All resulting in a single cursor, obviously  I've used two mock commands in my example proposal as I presume some may prefer the current paradigm, and thus it'd be easier to implement this functionality using new commands rather than changing the behavior of existing commands."
192,SCM Graph - Unsure how to tell when graph is locked to a repository,True,False,,vscode,2025-10-13T14:53:35.369142,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/229643,"Testing #229375  I noticed when I selected a specific repository for the SCM graph that the repository name next to the book icon changed, but that the branch icon still had the text ""auto"" next to it. Is there some indicator for when I have the SCM graph set to a specific repository versus when I have it set to auto?"
193,SCM Graph - Title and Icons of SCM Graph actions,True,False,,vscode,2025-10-13T14:53:35.375288,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/229574,"Testing #229364  The view works as expected. Possible improvements: - Although I don't have a concrete proposal, ""Go to Current History  Item"" feels like an awkward name to me since ""Current"" and ""history"" seem to exclude each other. ""Go to checked out commit"" seems more appropriate. - When looking for the ""Go to Current History  Item"" in the title bar I intuitively went to the ""Fetch from all remotes"" action. The bull's eye didn't convey any meaning to me.   ![Image](https://github.com/user-attachments/assets/43f06755-87b6-48f4-bade-d4b7691aca7d)"
194,"SCM Graph - Make repository picker a dropdown with a ""More..."" entry",True,False,,vscode,2025-10-13T14:53:35.379065,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/229501,"Testing #229375  I would put the top 5 repos in a dropdown and only show quick pick when you click ""More...""  ![Image](https://github.com/user-attachments/assets/ca222098-ef59-44a5-a5ff-de1580e8a737)"
195,SCM Graph - Limit Number Of Lines,True,False,,vscode,2025-10-13T14:53:35.382212,,"feature-request, ux, scm",1,,https://github.com/microsoft/vscode/issues/229497,Testing #229364  ![Image](https://github.com/user-attachments/assets/4a284ca2-7d91-4638-b0e3-8fd8477a9964)
196,Multifile diff editor leaks models and editor after closing and hiding,True,False,,vscode,2025-10-13T14:53:35.385546,,"bug, freeze-slow-crash-leak, ux, workspace-edit",1,,https://github.com/microsoft/vscode/issues/228367,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.93.0 (Universal) - OS Version: OS: Darwin arm64 23.6.0  Steps to Reproduce:  1. Make `Refactor Preview` appear (e.g. open some file and try some of `Refactor...` context actions) 2. Close the preview editor via `Discard` button 3. Call `vscode.window.visibleTextEditors` 4. It contains the `vscode-bulkeditpreview-editor://...` editor that corresponds to the `Refactor Preview` we just closed **as well as the file** that refactor preview was referencing  Repro and demo:  https://github.com/user-attachments/assets/4418fe28-9a5f-499a-baae-44219805d642"
197,SCM Graph - Should selecting an item in the scm graph highlight the lines similar to indent guides in the editor?,True,False,,vscode,2025-10-13T14:53:35.389111,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/226816,"Testing #226648  Current:  <img width=""483"" alt=""Screenshot 2024-08-27 at 10 09 04 AM"" src=""https://github.com/user-attachments/assets/00610c55-97b8-46a2-87fb-c3bafa9bdfa0"">  Basic idea:  ![image](https://github.com/user-attachments/assets/3283d138-0dcf-4ff6-ba6e-684bf5f91a52)  This will allow easier tracking of the line(s) when scrolling"
198,Show documentation when hovering on the autocompletion dropdown list item,True,False,,vscode,2025-10-13T14:53:35.393295,,"feature-request, ux, suggest",1,,https://github.com/microsoft/vscode/issues/226752,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I find that `completionItem.documentation` need to be highlighted and user need to click on one of the documentations to show up. **Can we add a feature to show the documentation when hovering over a completion item?**  For example, is there any services like `hoverProvider` that works on **completion Item**? ![image](https://github.com/user-attachments/assets/8b635113-e1ef-4e2f-8b7f-f19e8cad8d10)"
199,SCM - show repositories view by default with multiple repositories,True,False,,vscode,2025-10-13T14:53:35.396650,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/226706,"Opening a multi root workspace with 3 repositories, here is my default UI in SCM:    ![Image](https://github.com/user-attachments/assets/51733ee0-ba03-431e-bdd6-4f2226d3d751)   I find this quite a complex UI esp. since buttons repeat N times.  I would suggest to show the repositories view as soon as I deal with multiple and only select the first by default for a much calmer experience:    ![Image](https://github.com/user-attachments/assets/d2992fa2-ed06-49b9-96ed-53e36b698c79)  //cc @daviddossett @joaomoreno"
200,Make dropdown control looks more consistent with other parts,True,False,,vscode,2025-10-13T14:53:35.399741,,"help wanted, feature-request, ux, dropdown",1,,https://github.com/microsoft/vscode/issues/224780,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> ![image](https://github.com/user-attachments/assets/1fbe51f8-d9d4-42cc-ba03-3c0de44b3f8b) Control like this uses native select control. I think there are several drawbacks: 1. No smooth scrolling 2. No shadow 3. It's hard to change its appearance or extend its function in the future. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#styling_with_css 4. The separator is of the same height as other options and not enough width (since it's just a disabled option with text ----). It should be like in the normal menu, extending to both sides and having a smaller height.  Therefore I suggest using a custom control instead."
201,SCM Graph - View commit action on multiple commits is showing no changed files,True,False,,vscode,2025-10-13T14:53:35.402882,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/223307,Testing #223106   https://github.com/user-attachments/assets/efff4839-53ff-4017-97ac-b0dd0fd552e3
202,Profiles editor is not accessible / usable by keyboard,True,False,,vscode,2025-10-13T14:53:35.406510,,"bug, ux, accessibility",1,,https://github.com/microsoft/vscode/issues/223297,Testing #223080  The profiles editor is not usable by keyboard (only by mouse).  I cannot put focus on this widget and use the arrow keys/tab to select an option:  ![Image](https://github.com/user-attachments/assets/084032d2-f27f-46b7-b0da-4bf93570e925)
203,SCM Graph - high contrast colors,True,False,,vscode,2025-10-13T14:53:35.409789,,"feature-request, ux, accessibility, scm",1,,https://github.com/microsoft/vscode/issues/218227,"Testing #217398  <img width=""357"" alt=""image"" src=""https://github.com/user-attachments/assets/d151a1b1-ea9d-4681-98ed-5d378e1b3192"">  I'm not actually sure... but it feels not.  cc @daviddossett"
204,vscode.dev: better focus for the git password entry field when git pushing from terminal,True,False,,vscode,2025-10-13T14:53:35.413447,,"ux, quick-pick, under-discussion",1,,https://github.com/microsoft/vscode/issues/216913,"I ran git push from a terminal in a hosted instance of vscode.dev and didn't notice that it was opening an ""enter password"" input. It seemed like the git push was just hanging. I was using the default light theme but don't easily notice the input field in the dark theme either. I've attached a screenshot below.  Input element: `<div class=""quick-input-header""></div>`:  <img width=""686"" alt=""Screenshot 2024-06-23 at 13 01 45"" src=""https://github.com/microsoft/vscode/assets/8116382/67e2c1a9-31eb-45e0-9749-09027637331e"">  Version: 1.90.2 Commit: 5437499feb04f7a586f677b155b039bc2b3669eb User Agent: Mozilla/5.0 (Macintosh, Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36 Embedder: vscode.dev  <!-- generated by web issue reporter -->"
205,Make Workspace Extensions more intuitive to find and activate,True,False,,vscode,2025-10-13T14:53:35.417052,,"feature-request, ux, extensions",1,,https://github.com/microsoft/vscode/issues/216433,"I twice had a hard time finding the workspace extensions as I wanted to activate them. I would not have expected it to be part of the recommended extensions which is why I did not search there. I think it's fine to show it in the recommended view, but I think we can do a bit more to make it easier to find/activate.   Some ideas: - Have an entry in the file explorer to activate/deactivate a workspace extension - Allow searching the extension. I am aware that this mainly searches the marketplace, but this was one of the first actions I did when looking for the workspace extensions - Add a filter `Workspace Recommendations` or `Workspace Extensions` - Show it in the list of installed extensions. This makes sense as it is already ""installed"""
206,I am trying to find the resize handle in diff editor every time,True,False,,vscode,2025-10-13T14:53:35.420006,,"bug, ux, diff-editor, papercut :drop_of_blood:",1,,https://github.com/microsoft/vscode/issues/214195,"I am a big fan of the explicit actions in the diff editor to stage or undo a change, but I find myself constantly trying to find the location where I can grab and resize:  ![Recording 2024-06-04 at 07 13 18](https://github.com/microsoft/vscode/assets/900690/020c6f48-4cda-46b4-a0b6-f3c455bf2e55)  As you can see, its inconsistent: the first sash is somewhere in the middle (but not exactly!) and the second sash is exactly on the right where the shadow is.  I would love if we could go back to just 1 sash but make the hit area clearly visible by showing a vertical line when you hover anywhere in between the 2 diff editors."
207,Can't click on links in streaming chat response,True,False,,vscode,2025-10-13T14:53:35.424298,,"bug, ux, chat",1,,https://github.com/microsoft/vscode/issues/212853,"I wanted to go and see the file that copilot was talking about before its response finished. It seems like links to files and methods are detected in realtime, as they appear in blue in chat, but clicking on them does nothing until the response is finished."
208,Two code-actions entry points with same icon,True,False,,vscode,2025-10-13T14:53:35.427297,,"ux, under-discussion, notebook",1,,https://github.com/microsoft/vscode/issues/211700,Both sparkle icons trigger code actions but the lower one has one more non-quick-fix code action. This is confusing.  ![image](https://github.com/microsoft/vscode/assets/16353531/f25cbcf9-b8ee-4da8-a8bb-739ecd097198)  Version: 1.89.0-insider Commit: dfa434a13c74b847c9edc4a82e5ca0588f24ce9d Date: 2024-04-29T22:54:38.075Z Electron: 28.2.8 ElectronBuildId: 27744544 Chromium: 120.0.6099.291 Node.js: 18.18.2 V8: 12.0.267.19-electron.0 OS: Darwin arm64 23.4.0
209,Find/replace bar obscures top lines in narrow editors,True,False,,vscode,2025-10-13T14:53:35.431004,,"ux, editor-find, under-discussion, editor-sticky-scroll",1,,https://github.com/microsoft/vscode/issues/211290,"Type: <b>Bug</b>  I'm doing some work on V8, and since the code style is mandated at 80 columns and I'm working on a small laptop monitor, I've configured my VSCode window to have three side-by-side editor groups, each just a little wider than necessary to hold 80 columns of text plus scrollbars/gutters/etc.  This works great most of the time, _except_ if the Ctrl-F find bar is open. Even at its minimum width (see screenshot) it obscures most of the top two lines of the window. If the replace UI is visible as well, it obscures the top four. This causes moderate issues when sticky scroll is operating properly, as it means the outer two/four contexts will be mostly-obscured, it causes major issues when the text being found is in the top two/four lines, because you can't scroll the editor up far enough to see what's being operated on.  ![image](https://github.com/microsoft/vscode/assets/605817/b967b83f-071d-4663-a104-5642ebe8d8c0) ![image](https://github.com/microsoft/vscode/assets/605817/c993e07e-464e-41fc-bf5b-396bef69ac2d)  Perhaps, in the same way as you can scroll the document _down_ past the end of a file, you could scroll _up_ past the top if the top lines are obscured? Perhaps the sticky-scroll lines could scoot down when the find/replace bar is open?  VS Code version: Code 1.88.1 (e170252f762678dec6ca2cc69aba1570769a5d39, 2024-04-10T17:41:02.734Z) OS version: Windows_NT x64 10.0.22631 Modes: Remote OS version: Linux x64 5.15.146.1-microsoft-standard-WSL2  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|12th Gen Intel(R) Core(TM) i9-12900H (20 x 2918)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled| |Load (avg)|undefined| |Memory (System)|39.70GB (22.28GB free)| |Process Argv|--folder-uri vscode-remote://wsl%2Bubuntu/home/dchurch/v8/v8 --crash-reporter-id 8501f115-52d2-449c-9863-9cd416a1d592| |Screen Reader|no| |VM|0%|  |Item|Value| |---|---| |Remote|WSL: Ubuntu| |OS|Linux x64 5.15.146.1-microsoft-standard-WSL2| |CPUs|12th Gen Intel(R) Core(TM) i9-12900H (20 x 2918)| |Memory (System)|19.39GB (16.48GB free)| |VM|0%| </details><details><summary>Extensions (21)</summary>  Extension|Author (truncated)|Version ---|---|--- gitlens|eam|14.9.0 vscode-clangd|llv|0.1.28 cpptools|ms-|1.19.9 vscode-torque|v8-|1.0.3 clang-format|xav|1.9.0 remotehub|Git|0.62.0 vscode-systemd-support|han|2.2.0 sln-support|log|0.0.1 debug-tracker-vscode|mcu|0.0.15 peripheral-viewer|mcu|1.4.6 remote-containers|ms-|0.354.0 remote-ssh|ms-|0.110.1 remote-ssh-edit|ms-|0.86.0 remote-wsl|ms-|0.88.0 vscode-remote-extensionpack|ms-|0.25.0 azure-repos|ms-|0.38.0 remote-explorer|ms-|0.4.3 remote-repositories|ms-|0.40.0 remote-server|ms-|1.5.1 vscode-gn|npc|1.1.0 grammarkdown-language|rbu|0.3.3  (2 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492:30256859 vscod805:30301674 binariesv615:30325510 vsaa593cf:30376535 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyone:30548225 962ge761:30959799 pythongtdpath:30769146 welcomedialogc:30910334 pythonidxpt:30866567 pythonnoceb:30805159 asynctok:30898717 pythontestfixt:30902429 pythonregdiag2:30936856 pyreplss1:30897532 pythonmypyd1:30879173 pythoncet0:30885854 h48ei257:31000450 pythontbext0:30879054 accentitlementsc:30995553 dsvsc016:30899300 dsvsc017:30899301 dsvsc018:30899302 cppperfnew:31000557 d34g3935:30971562 fegfb526:30981948 bg6jg535:30979843 ccp2r3:30993541 dsvsc020:30976470 pythonait:31006305 jchc7451:30973076 gee8j676:31009558 dsvsc021:30996838 f3je6385:31013174 pythoncenvpt:31022790  ```  </details>  <!-- generated by issue reporter -->"
210,Weird looking Output selector menu,True,False,,vscode,2025-10-13T14:53:35.434430,,"upstream, ux, accessibility, polish, electron, system-context-menu",1,,https://github.com/microsoft/vscode/issues/208026,"- [ ] 1. The font size of the the menu log selector in the Output view is too small. This makes the text look uncentered vertically. - [ ] 2. The separator is just a bunch of dashes ""---"" instead of a native separator. This is not good for accessibility.    It's possible that a smaller font size was chosen to be able to see more items in this relatively long menu. But that doesn't work in this case on macOS as the menu item height is still the same, so there aren't more items displayed than before.   If a more compact menu is desired, it's better to set the [NSControlSize](https://developer.apple.com/documentation/appkit/nscontrolsize) on macOS, instead of changing the font size. This will actually allow more menu items to be shown at the same time.  Here's a screenshot showing the text misalignment compared to a regular menu (right).  <img width=""943"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/103326/f23d81d3-e6d9-4932-b2ad-ad3da29a9953"">   https://developer.apple.com/documentation/appkit/nscontrolsize   <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.88.0-insider  - OS Version: macOS  Steps to Reproduce:  1. On macOS, open the Panel and click the Output tab. 2. Notice misaligned text and non-native separator."
211,"SCM - Hidden local changes indicator ""*"" in ""source control repositories"" view",True,False,,vscode,2025-10-13T14:53:35.437476,,"bug, ux, scm, papercut :drop_of_blood:",1,,https://github.com/microsoft/vscode/issues/207814,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  Version: 1.87.1 (system setup) Commit: 1e790d77f81672c49be070e04474901747115651 Date: 2024-03-06T00:21:36.258Z Electron: 27.3.2 ElectronBuildId: 26836302 Chromium: 118.0.5993.159 Node.js: 18.17.1 V8: 11.8.172.18-electron.0 OS: Windows_NT x64 10.0.19045 - OS Version: Versión 22H2 (compilación de SO 19045.3086)  Steps to Reproduce:  1. Have a repo with local changes -> an ""*"" is added at the right of the branch name 2. Reduce the panel size (positioned at the right side) so that the branch name is clipped at the right (worsened with long names) 3. The ""*"" is no longer visible, losing the indication of existing local changes. This happens whenever the repo is not selected and its changes not shown in the source control view.  ![2024-03-15_(095048)_Code](https://github.com/microsoft/vscode/assets/26868611/e35b1c26-0104-44e3-9019-ba53ced4b48b)  Potential solutions: * Move the ""*"" to the left * Make it not clippable * Itegrate it with the sync button instead of appending it to the name, new icon? or could just be it * Repos with changes could also be colored differently  Best regards!"
212,Support controlling whether edits are pre-ticked in WorkspaceEdits with needsConfirmation=true,True,False,,vscode,2025-10-13T14:53:35.441074,,"feature-request, ux, workspace-edit",1,,https://github.com/microsoft/vscode/issues/207578,"It's sometimes useful to force the user to review a preview of refactor changes before applying. This can be done with `needsConfirmation`:  ```ts const edit = new vscode.WorkspaceEdit(), const doc = await vscode.workspace.openTextDocument({ language: ""text"", content: """" }), edit.insert(doc.uri, new vscode.Position(0, 0), ""This is inserted text"", { 	label: ""Insert imports"", 	needsConfirmation: true, // Show preview, but also requires ticking }), edit.insert(doc.uri, new vscode.Position(0, 0), ""This is inserted text"", { 	label: ""Update code"", 	needsConfirmation: true, // Show preview, but also requires ticking }), vscode.workspace.applyEdit(edit), ```  ![image](https://github.com/microsoft/vscode/assets/1078012/b71cc538-2c66-4de2-ab26-98f43bd051b5)  However, the user needs to tick each change (at least the unique labels, which have a ""Toggle Change"" option on the context menu) which can be a pain if the edit is making a lot of changes that are grouped (for example fixing lint failures across a workspace, with each lint being a group).  It would be a much nicer experience if we could trigger the preview, but with everything _ticked_ by default. In many cases we know the user is _likely_ to apply all of the changes, but we still want to trigger a preview to be shown."
213,Collapsed markdown cell icons misalignment,True,False,,vscode,2025-10-13T14:53:35.444101,,"ux, polish, notebook-folding",1,,https://github.com/microsoft/vscode/issues/206827,"What it looks today ![image](https://github.com/microsoft/vscode/assets/876920/0017fd4e-72ea-49b0-8efb-c4146bc2b6a9)  maybe we can adjust the gutter border, position of the collapse info text to make it look better  <img width=""450"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/876920/ac596265-4610-4a1c-a0a2-6863c5916798"">"
214,Git - Display blame information in the editor gutter,True,False,,vscode,2025-10-13T14:53:35.447427,,"feature-request, git, ux",1,,https://github.com/microsoft/vscode/issues/203841,"This was first requested in https://github.com/microsoft/vscode/issues/2248, way back in 2016.  It was closed with a ""fix it yourself with an extension"" (ie. ""we think the functionality you're asking for is great for a VS Code extension"") ... however, in the eight years since it was filed, no one has created such an extension.  It's not for lack of desire: multiple authors have tried to do it, and they all opted for a crappier version.  For instance, the ""Git Blame"" extension let's you see only a single line's blame (and it's not in the gutter, it's in the status bar).   But look, the basic `git blame` UI is perfect already!  It's basically exactly like VS Code's UI, but with the `git blame` meta info shown on the leftside.  Back in 2016 42 people desired this simple functionality: by now that number has to be in the hundreds, if not thousands.  This feature:  * would benefit all git-using devs (ie. virtually all VS Code users) * it requires functionality that (evidently) no one has been able to replicate in an extension * it belongs as a core part of VS Code"
215,Align styling of toggled actions and toggled buttons,True,False,,vscode,2025-10-13T14:53:35.450037,,"ux, polish",1,,https://github.com/microsoft/vscode/issues/200810,"We show a maximized editor group with a toggled icon:  <img width=""275"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/900690/780c305a-efd4-459a-b3be-7d6808cc53ab"">  Meanwhile we have an existing style for when something is toggled:  <img width=""223"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/900690/acf5b98f-2b1b-4a9a-906e-785e4ba1dc8e"">  I think the latter is much more explicit and inviting to click, so I think we should align the former to it.  //cc @joaomoreno"
216,Hover block highlight design consistency,True,False,,vscode,2025-10-13T14:53:35.452720,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/199787,"We currently have a few places where hovering shows a line to the left, it would be good if these were all consistent:  Markdown preview (hover):  ![image](https://github.com/microsoft/vscode/assets/2193314/42d34728-7dea-484c-9bac-10499a98cbff)  Terminal command (hover):  ![image](https://github.com/microsoft/vscode/assets/2193314/785d4414-e470-45f5-b3d5-d6ae977f6b7a)  Terminal command navigation (focus)  ![image](https://github.com/microsoft/vscode/assets/2193314/79cec703-9a9c-4d67-b493-1ef801313ec7)  Notebook block (hover)  ![image](https://github.com/microsoft/vscode/assets/2193314/e73cfbd2-5d6a-4e52-8867-cbfe39ef10e5)  Notebook block (focus)  ![image](https://github.com/microsoft/vscode/assets/2193314/c039d436-076c-4d3b-ba26-20273a9bdacf)  Settings editor (hover)  ![image](https://github.com/microsoft/vscode/assets/2193314/2b173948-6398-4a39-8e44-2ddd70c46ee9)  Settings editor (modified)  ![image](https://github.com/microsoft/vscode/assets/2193314/21d60bde-211c-4923-8919-0984a9c92b66)  Settings editor (focus)  ![image](https://github.com/microsoft/vscode/assets/2193314/64713851-b175-4617-bf43-c7f82bdbdaa5)  ---  Similar highlights but probably shouldn't change:  Tree indent guide (hover):  ![image](https://github.com/microsoft/vscode/assets/2193314/a31d20a2-a624-473e-9329-3bda6b8d5400)  Tree indent guide (focus):  ![image](https://github.com/microsoft/vscode/assets/2193314/46fc0038-e460-4f1f-ad5e-2f8778a7546a)  Editor current indent guide (focus):  ![image](https://github.com/microsoft/vscode/assets/2193314/e262759b-cc98-489b-882b-d33d70089ef2)"
217,Git - Docs for commiting via multi-line git are unclear on how to finish the commit,True,False,,vscode,2025-10-13T14:53:35.456517,,"git, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/199097,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:   Steps to Reproduce:  1. Open the git view in vscode (ctrl-shift-G) (assuming you are working within a Git repo) 2. Click on the commit button to reveal the multiline commit message editor. 3. Fill in your multi-line message for the commit. 4. Save the editor (nothing seems to happen except the usual save action) 5. There is no UI clue that tells you that you can/must close the editor to submit the commit message to finish the commit.  The docs don't seem to call this out either.  Took me a long time before I realized I could finish the commit this way."
218,Don't hide useful information from the suggestions list,True,False,,vscode,2025-10-13T14:53:35.461289,,"feature-request, ux, suggest",1,,https://github.com/microsoft/vscode/issues/199029,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> When the suggest list contains several similar entries, not all information fits unless you increase the width of the list a lot: <img width=""343"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/2737650/94023e0a-9489-45a2-936f-ebd7672df089""> In this case, the most useful information I'm looking for is exactly what's missing. I think with the path the most useful info is always at the end, so it would make sense if hide the start, not the end of the path.  With the class name this is a bit more difficult, because the most useful information is not always at the end. But an alternative fix could be to place the name and path on two separate lines, which would look something like this: <img width=""343"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/2737650/e71fd039-9de9-48c2-a654-110fcfe4960c"">  Ideally this would be a user preference of course, or maybe only entries that don't fit should be rendered like this."
219,SCM - gutter click area is smaller than its visual appearance,True,False,,vscode,2025-10-13T14:53:35.464516,,"bug, ux, scm",1,,https://github.com/microsoft/vscode/issues/197883,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.84.2 (user setup) Commit: 1a5daa3a0231a0fbba4f14db7ec463cf99d7768e Date: 2023-11-09T10:51:52.184Z Electron: 25.9.2 ElectronBuildId: 24603566 Chromium: 114.0.5735.289 Node.js: 18.15.0 V8: 11.4.183.29-electron.0 OS: Windows_NT x64 10.0.19045  Steps to Reproduce:  1. Increase `scm.diffDecorationsGutterWidth` to max (5 at this time) 2. Try to click on the rightmost or topmost edge of a gutter decoration  Expected: Gutter popup opens Actual: Noop  ![gif](https://github.com/microsoft/vscode/assets/373675/38abda70-9403-499f-af45-557b539c8e7b)  I don't know if step 1 is required.   To be honest, I think it would be even better to expand the gutter click area beyond the visual border."
220,"debug console stylings and features, better log-row separation",True,False,,vscode,2025-10-13T14:53:35.467163,,"ux, polish, debug-console",1,,https://github.com/microsoft/vscode/issues/197803,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> As I'm kinda forced to using VSCode on MacOS for .NET development as Visual Studio for Mac is being cancelled in a year. It would be nice to see the debug console to have some more stylings in it. now it is just a bunch of nonsense in a constant flow. I would like to see some separation between the rows of logs. Features I would like to see in it would be:  - indentation of the single log text when it goes over to next line. This would make it easier to see where one log starts and where one log ends. - timestamps at the start of the log row. - log type as text: information, error, warning, etc. at the start of the log row. - every other log with different color background to make them even more easier to separate from each other. - toggling row-wrap on and off  these could be toggle-able settings, so if you don't want to use them, hide them.  I know there is this hover over bg color or is it just a highlight, but that only works when you put mouse over the content. It is not really that useful in a long log content, but at least it helps a little.  Some logs do output timestamp and log type. these could be highlighted with different color if possible. Or just kept as is and not even parsed out and just add the extra timestamp and log type there doesn't really matter. <img width=""1439"" alt=""Screenshot 2023-11-09 at 9 51 47"" src=""https://github.com/microsoft/vscode/assets/10487241/643b0917-08d5-44ab-9d1f-0a24b5462508"">"
221,Comments sync/resume is flaky and has unexpected UX,True,False,,vscode,2025-10-13T14:53:35.470535,,"feature-request, ux, cloud-changes",1,,https://github.com/microsoft/vscode/issues/196582,"Testing #193104  This is probably unrelated to the comments component and maybe more an issue for cloud changes in general.  I was testing with 2 windows machines opening a PR and seeing if comments synced. I only got this to work once, and its hard for me to know why it failed in some other cases.  **Things to consider:** * this should not require me to do a change to a file for the sync of comments to work (sounds like a bug) * I want to enable sync once and then it should work, I would not want to store/resume changes as a user action each time I switch machines  All in all I would expect this to work like settings sync: in the background ✅"
222,Completion widget assigns too much space to details and not enough to the completion item label,True,False,,vscode,2025-10-13T14:53:35.473323,,"feature-request, ux, polish, suggest",1,,https://github.com/microsoft/vscode/issues/195555,"I have my completion list fairly wide, but here I can't see the item I'm completing because of the detail on the right:  ![image](https://github.com/microsoft/vscode/assets/1078012/b8971fbd-69a7-4e1b-8817-dabdc5cab7c4)  I appreciate something needs to be truncated, but I feel like the proportions here might not be the best."
223,SCM - Visually distinguishing Staged Changes from Changes in Tree View,True,False,,vscode,2025-10-13T14:53:35.476166,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/194060,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.82.2 - OS Version: macOS 13.5.2  It's difficult to distinguish Staged Changes from Changes in Source Control sidebar in Tree view. This has been raised several times before, most relevant was https://github.com/microsoft/vscode/issues/102473 but that was swept into an existing discussion about a larger change that was only partially relevant.  Simplest proposal:  ```css [role=""treeitem""][aria-level=""1""] {     font-weight: bold, } ```  The difference is subtle, other tweaks could improve it. e.g., add a line (or even half-line) of vertical space before it. Or, removing the 8px padding-left on the .monaco-tl-twistie also pulls it visually farther from the tree. The old all-caps CHANGES feels a bit too strong to me, but it would fix the issue.  Other approaches include https://github.com/microsoft/vscode/issues/140343 suggested adding themeable elements."
224,Support two variants of `LanguageStatusItem#text`,True,False,,vscode,2025-10-13T14:53:35.479451,,"feature-request, languages-basic, ux, api-proposal",1,,https://github.com/microsoft/vscode/issues/192880,"The [LanguageStatusItem#text](https://github.com/microsoft/vscode/blob/07fcfc80c37e56fd35fc125e225c7dde7029f858/src/vscode-dts/vscode.d.ts#L6854) properties is the text that shows when an item is pinned _and_ when an item is rendered in the hover (as [<text> <detail>]). There are cases in which it is hard to find a short text that works well for the pinned and unpinned case. We should explore to extend the API to `text: string | { value:string, shortValue: string}` so that both cases can be caters for"
225,Better distinguish overlapping arrows,True,False,,vscode,2025-10-13T14:53:35.482267,,"feature-request, ux, diff-editor, question-discussion",1,,https://github.com/microsoft/vscode/issues/191833,Here in this case at first I was thinking there is an arrow going from one to the other side on the same editor:    ![Image](https://github.com/microsoft/vscode/assets/900690/c40a4edb-8c31-485a-8288-9a704e24237a)
226,Show squigglies on collapsed regions containing errors or warnings (#120989),True,False,,vscode,2025-10-13T14:53:35.485487,,ux,1,,https://github.com/microsoft/vscode/pull/190682,This PR closes #120989  ![junk](https://github.com/microsoft/vscode/assets/6726799/67941f65-5adf-4105-a141-f5bc5ce1cae6)
227,Style fixes for toggled state action bar buttons,True,False,,vscode,2025-10-13T14:53:35.489373,,"ux, polish",1,,https://github.com/microsoft/vscode/issues/190498,"Issues related to #186403.  - [x] Find (new) named colour for toggled state - [ ] Hover/toggled states should be more distinct or the same  - [ ] Buttons and icons are not vertically centered / not rendered on the whole pixel: <img width=""478"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/103326/7e4a6343-c0ed-48ac-b36e-b42e76cd96e0"">  - [ ] Find View (Cmd+F) in editor has different toggled state: <img width=""478"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/103326/12388b64-edaa-4593-a8d4-63c1e19fc38d"">      <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->"
228,Explore inline word highlighting in info texts,True,False,,vscode,2025-10-13T14:53:35.493125,,"ux, themes",1,,https://github.com/microsoft/vscode/issues/188657,"From @isidorn:  <img width=""258"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/103326/e4542bfe-a23c-41b7-a83f-8632be47f66d"">  Highlighting (variable) words improves readability by making the text easier to scan. It would be useful to implement this as a more global feature.  cc @daviddossett   <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->"
229,Support input validation in quick pick,True,False,,vscode,2025-10-13T14:53:35.496059,,"feature-request, ux, quick-pick, papercut :drop_of_blood:",1,,https://github.com/microsoft/vscode/issues/187863,"Support input validation in quick pick  <img width=""629"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/10746682/d700f931-b8cf-4903-ab31-1685d02c48f8"">  or  <img width=""627"" alt=""image"" src=""https://github.com/microsoft/vscode/assets/10746682/55a3c07d-d3fd-424e-9ea0-d63425ffe52c"">  CC @daviddossett"
230,Infinite modal from vscode.dev,True,False,,vscode,2025-10-13T14:53:35.499709,,"bug, ux",1,,https://github.com/microsoft/vscode/issues/186453,1. open incognito mode and go to https://insiders.vscode.dev/github/microsoft/vscode 2. Try to close out of the modals. 3. They appear infinitely :bug:  ![Recording 2023-06-27 at 15 09 02](https://github.com/microsoft/vscode/assets/31675041/6642e8a0-9e63-4b51-9352-8ca10e42e607)
231,files.Readonly has weak graphical support,True,False,,vscode,2025-10-13T14:53:35.502628,,"ux, file-explorer, polish",1,,https://github.com/microsoft/vscode/issues/185515,- VS Code Version: 1.79.2  Steps to Reproduce:  1. Install any extension that themes folders 2. Expect readonly directories to be less visible just to find out it's as visible.  A lot of people use themes. Extension creators claim there is not available API for this.  Related: https://github.com/PKief/vscode-material-icon-theme/issues/2003   ![изображение](https://github.com/microsoft/vscode/assets/50447661/4db8c0cd-d2fa-4bc5-8544-d22bccad319e)
232,Explore improvements to settings UI,True,False,,vscode,2025-10-13T14:53:35.506847,,"ux, settings-editor, under-discussion, settings-search",1,,https://github.com/microsoft/vscode/issues/181976,"Based on numerous bits of feedback from NPS responses, I think it's worth exploring some improvements to the Settings UI. Off the top of my head, a couple things stand out to me when using it today:  - There's a lot here at first glance. It's somewhat overwhelming and hard to find some of the ""basics"" - Organization of items within each section feels somewhat random - Search requires precise input to reveal relevant results - The UI feels brittle. Everything has a hover or focus effect. I feel scared to touch the UI for fear of changing something I didn't mean to. It's also quite cramped.  Current UI:  ![CleanShot 2023-05-09 at 14 02 03@2x](https://github.com/microsoft/vscode/assets/25163139/8cccf60a-918a-4f5c-85a2-c669e6ceb7db)  Some selected verbatims: > more user-friendly setting page.  it's too overwhelming  > Settings is a complete dumpster fire-level mess. Just trying to adjust font size is hilariously bad.   ""Is it this one?  ...  ""Oh that did that bit... But what about...   ...  ""nope.""  > Settings should be a little more easy to go through  > Easier settings controls. for beginners its a little overwhelming"
233,Git - The sync-branch button icon does not rotate about its centerpoint,True,False,,vscode,2025-10-13T14:53:35.511131,,"bug, git, ux",1,,https://github.com/microsoft/vscode/issues/181245,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  1.77.3  - OS Version:  Windows 10 Pro 22H2   Steps to Reproduce: 1. https://gyazo.com/ac646ddd1ef234a760b3e5bb34a9301a  It more noticeable when on a slow connection."
234,SCM - highlight repositories with uncommitted changes,True,False,,vscode,2025-10-13T14:53:35.514602,,"feature-request, ux, scm",1,,https://github.com/microsoft/vscode/issues/180820,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I work on many repositories at the same time. In the source control view, apart from the little star, it's  not clear if there are changes in any of the repositories.  I see there are 8 changes somewhere but need to find the repo with the *. Maybe a different font color would help?  ![image](https://user-images.githubusercontent.com/5886651/234282951-ae44ec77-7b3a-4e51-bd11-030727a0f8a2.png)"
235,"Explore alternative wording for ""Continue On"" explanations",True,False,,vscode,2025-10-13T14:53:35.517624,,"ux, continue-working-on",1,,https://github.com/microsoft/vscode/issues/180106,
236,Always show arrow in suggest item,True,False,,vscode,2025-10-13T14:53:35.520365,,"feature-request, ux, suggest",1,,https://github.com/microsoft/vscode/issues/178012,"# Problem   It's quite hard to discover that one can enable ""show hover for suggest items"" by clicking on an arrow that only appears when you hover over the item. (I personally even created a stackoverflow [question](https://stackoverflow.com/questions/64184920/vs-code-documentation-on-completion-not-shown) about this some time ago)  <img width=""722"" alt=""image"" src=""https://user-images.githubusercontent.com/16353531/226919226-e1594eca-4229-407a-b06f-79632a573aa3.png"">  <img width=""716"" alt=""image"" src=""https://user-images.githubusercontent.com/16353531/226919178-bcc75aa5-9c94-4dd5-b98b-00b67a0e5d82.png"">  <img width=""1048"" alt=""image"" src=""https://user-images.githubusercontent.com/16353531/226919191-d44894e5-c630-4252-b800-4e26be706d85.png"">  # Suggestions  1. I propose that we have that arrow always shown at the end of the suggest item.  2. Or have the hover on-by-default, and then collapsable.   It could also change direction if the ""show hover"" is enabled."
237,Differentiate breakpoint types more clearly,True,False,,vscode,2025-10-13T14:53:35.524751,,"debug, ux, accessibility, polish",1,,https://github.com/microsoft/vscode/issues/177221,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  My vision isn't perfect and I find the icon used to display a conditional breakpoints too similar to the regular breakpoint (even with the increased font size). **Would it be possible to change it to a different shape without breaking the visual language?**  I know this is very tricky because the visual design for breakpoints already covers many fundamental shapes (all icons can be found [here](https://microsoft.github.io/vscode-codicons/dist/codicon.html)): - Circles are used for regular breakpoints - Triangles are used for [function breakpoints](https://code.visualstudio.com/docs/editor/debugging#_function-breakpoints) - Hexagons are used for [data breakpoints](https://code.visualstudio.com/docs/editor/debugging#_data-breakpoints) - Rhombus are used for [logpoints](https://code.visualstudio.com/docs/editor/debugging#_logpoints)  <img src=""https://user-images.githubusercontent.com/8045792/225315472-408e80a2-eb30-4b6d-acf3-6177e1dbed11.png"" width=30%>  I wonder if a semi-circle could be a reasonable alternative..."
238,Workspace Trust - should be made accessible more easily.,True,False,,vscode,2025-10-13T14:53:35.528508,,"ux, under-discussion, workspace-trust",1,,https://github.com/microsoft/vscode/issues/174823,"Type: <b>Feature Request</b>  In a recent update, I saw a shortcut was added to easily switch Trust level.  But accessing this Page requires too many steps and maybe hitting on keyboard on the way. In case of an accidental selection of trusting, finding this page back again is not easy.   Currently there are 2 occurences this page can be opened easily, and both requires a zero/no trust level. One occasion is when a untrusted folder is opened where the page is auto-popped. and the other is to use the shield icon that sits on the left-bottom corner.  But once you select to trust the folder, game is over. you have to first remember what is the name of this setting so to make a search. then search all the menus where you find almost no traces. then maybe make an internet search. only then open the command palette and start typing Workspace Trust.  This page also supplies a list of other trusted folder, so one can easily check them and remove some or all folders to clean the list. For such an important (and useful) setting, accessing it is too much stressful.  So, in short, please make accessing to Workspace Trust page is easier. Two of the best places I can think of are the status bar (a shield just like an untrusted workspace has) and/or a menu item under the settings menu.  VS Code version: Code 1.75.1 (441438abd1ac652551dbe4d408dfcec8a499b8bf, 2023-02-08T21:32:34.589Z) OS version: Windows_NT x64 10.0.19044 Modes: Sandboxed: No   <!-- generated by issue reporter -->"
239,Provide icon buttons for common source control actions,True,False,,vscode,2025-10-13T14:53:35.532604,,"git, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/174088,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> (File) Explorer provides some icon buttons for common actions:   ![Screenshot 2023-02-10 205743](https://user-images.githubusercontent.com/10571178/218175705-88464aad-baae-4531-bd8f-df0a6e3549aa.jpg)  Likewise, in Visual Studio's Git Changes, some icon buttons are provided to quickly perform very common operations:  ![Screenshot 2023-02-10 210315](https://user-images.githubusercontent.com/10571178/218176030-2c8fe041-6f22-43ea-b709-d65d43a59325.jpg)  Indeed, they are extremely handy IMHO.  Would it be too much to expect the same UX for the source control panel in Visual Studio Code?"
240,SCM - add support for horizontal scrolling,True,False,,vscode,2025-10-13T14:53:35.536248,,"feature-request, ux, scm",1,,https://github.com/microsoft/vscode/issues/173019,"setting:  ```json ""workbench.list.horizontalScrolling"": true ```  ``` Version: 1.74.3 (Universal) Commit: 97dec172d3256f8ca4bfb2143f3f76b503ca0534 Date: 2023-01-09T17:07:18.579Z Electron: 19.1.8 Chromium: 102.0.5005.167 Node.js: 16.14.2 V8: 10.2.154.15-electron.0 OS: Darwin x64 22.3.0 Sandboxed: No ```  @lszomoru"
241,Source control buttons should not shift after calculating errors/problems,True,False,,vscode,2025-10-13T14:53:35.539988,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/172072,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.74.3 - OS Version: Windows 10 and macOS Ventura  **Problem:** When clicking a file in the source control, the buttons to stage, revert, etc., will shift after vscode calculates problems in the file. This has lead to misclicking buttons that were not intended to be clicked.  **Steps to Reproduce:** 1. The best way I can explain this is to see the following clip:  ![CleanShot 2023-01-23 at 15 59 58](https://user-images.githubusercontent.com/2053960/214149168-feeffbbb-24c0-4527-8146-2d507bc44dfd.gif)"
242,Provide a list of deduped and nicely named codicons for use in product,True,False,,vscode,2025-10-13T14:53:35.544003,,"feature-request, ux, terminal-profiles",1,,https://github.com/microsoft/vscode/issues/171076,"The terminal has a feature to change the tab/profile icon which opens this:  <img width=""339"" alt=""image"" src=""https://user-images.githubusercontent.com/2193314/211871176-d86594d3-f44a-482f-a3ce-8b4b7979a89c.png"">  It's very convenient to use but it would be nicer if it was instead:  ``` ➕ Add - add 💡 Lightbulb - lightbulb etc. ```  The `- text` above would be the greyed out backing id.  _User_ profiles could also use this as @sandy081 has explored."
243,VSCode does not remember the size of the suggest widget when the size is reset with double click,True,False,,vscode,2025-10-13T14:53:35.547504,,"bug, ux, suggest",1,,https://github.com/microsoft/vscode/issues/170491,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->   https://user-images.githubusercontent.com/106014361/210384114-42a2f891-b814-4b87-a865-37a6ce80b05e.mp4    Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.74.2 - OS Version: Windows 11"
244,Group Linked Files in One Tab with Dropdown,True,False,,vscode,2025-10-13T14:53:35.550390,,"feature-request, ux, workbench-tabs",1,,https://github.com/microsoft/vscode/issues/170400,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> ![image](https://user-images.githubusercontent.com/21246924/210234395-5d22f708-4960-4f6b-8f4c-3c9fb3f0f3f4.png) I would like the ability to group 'dependent' files. In the image above, I have 4 files all directly tied to a specific component. This project will constantly have these 4 files for 1 component. Instead of having 4 separate tabs, I feel that it would be amazing to have a single tab with a dropdown containing all related files. This cleans up the top portion of the editor a good bit."
245,Explore UI density modes,True,False,,vscode,2025-10-13T14:53:35.553703,,"feature-request, ux, layout",1,,https://github.com/microsoft/vscode/issues/168671,"We hear quite a lot of feedback from the community on how they would like VS Code to look and feel. One theme that often comes up is related to UI density.   This feedback spans specific usability concerns like the [activity bar being hard to understand without labels](https://github.com/microsoft/vscode/issues/130051) as well as broad feedback like the UI feeling overall cramped and harder to interact with given the close proximity of buttons and other elements.  On the other side, many seek a more compact and space-efficient UI. Using the activity bar example, some users would prefer a [hyper-compact version](https://github.com/microsoft/vscode/issues/118692) that doesn't take up any horizontal space. Or perhaps they'd like the [titlebar to use as little space as possible](https://github.com/microsoft/vscode/issues/12377).  Density modes could apply to everything from low-level font/icon sizes to widgets like toolbars and lists. At a high level, they could impact larger UI parts like the status bar, title bar, and more.  This issue will explore what it could look like to feature UI density modes in VS Code.  ## Rough Sketch  Here's an idea of what this could look like to get the ball rolling. Not intended to capture every detail:  https://user-images.githubusercontent.com/25163139/206812861-0312f871-84b4-477b-bed1-b49e336d43c5.mp4"
246,Align primary buttons alignment,True,False,,vscode,2025-10-13T14:53:35.557226,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/168471,"VS Code has primary buttons.  Most often the primary button is left aligned, but sometimes it is right-aligned.  Left Aligned: * Windows dialogs * Notifications * Export profile dialog  Right aligned: * Create PR * Comments"
247,Introduce setting for font size,True,False,,vscode,2025-10-13T14:53:35.560166,,"feature-request, ux, under-discussion, workbench-fonts",1,,https://github.com/microsoft/vscode/issues/167525,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  This feature request is related to #519, but I would prefer to discuss this new proposal separately (the other issue has hundreds of comments, with many different ideas). We use VS Code at Google and we have an internal issue for this with 314 upvotes. So we decided to take a closer look at the problem and found that it is a request mainly for accessibility, not for more customization.  The default guidance is to use the browser zoom to increase the font size. This can work well in some cases, but it leads to less information density (because it makes everything bigger, including margins, etc.).   We don't want to let users set their own font size, as it would be hard to test and lead to many UX challenges. Instead, we propose a setting with two or three values. In the mocks below, the default setting is the current font size, ""comfortable"" increases everything by +1px and ""large"" makes all UI font-sizes +2px. The sketch is very basic and would need some re-thinking of spacing too.  @albertelo made these mocks, with 3 options for a ""Font Density"" setting  Default: ![image](https://user-images.githubusercontent.com/485572/204522703-28a87686-48fa-43dd-9cdb-e99c03fdb6af.png)  Comfortable: ![image](https://user-images.githubusercontent.com/485572/204522721-9ebec72a-8057-4e1e-8e37-efa993f01d4c.png)  Large: ![image](https://user-images.githubusercontent.com/485572/204522747-c2748367-d17e-46e9-b02e-d357ca83de5d.png)  If we used the browser zoom instead (as currently recommended), we would have much less information on the last screenshot.  Being able to change the size of everything (browser zoom) or just the text (this proposal) is not new. For example, Android accessibility settings have the same options: ![image](https://user-images.githubusercontent.com/485572/204525073-9ec0c92a-8857-4ffd-b868-a7d5a8022329.png)  fyi, we have also used similar settings in our other internal developer tools. This was useful for accessibility.   **Next steps**  If there's agreement on the goal, we can try to revive #144365 (after splitting it). A large part of that PR makes IConfigurationService accessible to many locations. While it touches a lot of files, I believe this could be relatively safe to submit.  The actual user-facing change will need careful review and testing. We'll be happy to help test the change, roll it out to our internal users, and collect feedback on the change."
248,Git: Source Control annoying unexpected Content Shift,True,False,,vscode,2025-10-13T14:53:35.563726,,"git, ux, polish",1,,https://github.com/microsoft/vscode/issues/167333,"Type: <b>Bug</b>  1. Have a slow PC or a remote Codespace which has a ""higher"" latency.  2. Open the Source Control Tab => If it is opened the first time a content shift can be seen (the modified indicators are loaded later) 3. To consistently reproduce stage a file and unstage it. => Each time you one can see that the modified indicator (![image](https://user-images.githubusercontent.com/13590797/204150455-d9d1e222-e6d6-4a66-92f6-9e0c3a9e1d77.png)) is reset (![image](https://user-images.githubusercontent.com/13590797/204150495-151d7306-4733-4c13-bfe2-65bb46241660.png)) and updates after a few seconds (which shifts the content)   Here an all on view. Look at the indicators on the right side: ![Animation](https://user-images.githubusercontent.com/13590797/204150647-9b39acce-5610-4859-b9d9-f3ddeffb4cd9.gif)  Why am I annoyed? It happend multiple times now that I hovered over the revert button, but the content shifted unexpectedly and it added the file to the staging view instead.    VS Code version: Code 1.73.1 (6261075646f055b99068d3688932416f2346dd3b, 2022-11-09T04:27:29.066Z) OS version: Windows_NT x64 10.0.22621 Modes: Sandboxed: No Remote OS version: Linux x64 5.15.0-1022-azure  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8650U CPU @ 1.90GHz (8 x 2112)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off| |Load (avg)|undefined| |Memory (System)|15.92GB (5.11GB free)| |Process Argv|--folder-uri vscode-remote://ssh-remote%2Bmasterthesis/home/masteruser/study.master-thesis --crash-reporter-id c0b728c1-554c-4067-b8ee-a399c07e544b| |Screen Reader|no| |VM|0%|  |Item|Value| |---|---| |Remote|SSH: masterthesis| |OS|Linux x64 5.15.0-1022-azure| |CPUs|Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz (8 x 2593)| |Memory (System)|31.35GB (26.08GB free)| |VM|0%| </details><details><summary>Extensions (72)</summary>  Extension|Author (truncated)|Version ---|---|--- packer|4op|0.3.0 auto-rename-tag|for|0.1.10 codespaces|Git|1.13.1 gitpod-desktop|git|0.0.65 jupyter-keymap|ms-|1.0.0 remote-containers|ms-|0.262.3 remote-ssh|ms-|0.92.0 remote-ssh-edit|ms-|0.84.0 remote-wsl|ms-|0.72.0 vscode-remote-extensionpack|ms-|0.23.0 remote-explorer|ms-|0.0.2 riscv-plus|ste|0.1.0 vscode-icons|vsc|12.0.1 riscv|zhw|0.0.8 vscode-openapi|42C|4.15.9 packer|4op|0.3.0 vscode-base64|ada|0.1.0 ng-template|Ang|15.0.1 vscode-eslint|dba|2.2.6 xml|Dot|2.5.1 gitlens|eam|13.1.1 EditorConfig|Edi|0.16.4 prettier-vscode|esb|9.9.0 auto-rename-tag|for|0.1.10 codespaces|Git|1.13.1 copilot|Git|1.61.7372 vscode-pull-request-github|Git|0.54.1 gitpod-remote-ssh|git|0.0.38 go|gol|0.36.0 todo-tree|Gru|0.0.220 terraform|has|2.25.0 rest-client|hum|0.25.1 latex-workshop|Jam|9.0.1 mongo-runner|Joe|0.6.4 run-it-on-v2|jon|1.0.2 docomment|k--|0.1.31 rainbow-csv|mec|3.3.0 file-downloader|min|1.0.12 vscode-docker|ms-|1.22.2 csharp|ms-|1.25.2 isort|ms-|2022.8.0 python|ms-|2022.18.2 vscode-pylance|ms-|2022.11.30 jupyter|ms-|2022.9.1303220346 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.12 vscode-jupyter-cell-tags|ms-|0.1.6 vscode-jupyter-powertoys|ms-|0.0.6 vscode-jupyter-slideshow|ms-|0.1.5 azure-account|ms-|0.11.2 cpptools|ms-|1.12.4 hexeditor|ms-|1.9.9 live-server|ms-|0.4.4 vscode-typescript-tslint-plugin|ms-|1.3.4 vsliveshare|ms-|1.0.5776 quicktype|qui|12.0.46 java|red|1.12.0 vscode-commons|red|0.0.6 vscode-yaml|red|1.10.1 partial-diff|ryu|1.4.3 riscv-plus|ste|0.1.0 wolf|tra|0.4.3 intellicode-api-usage-examples|Vis|0.2.6 vscodeintellicode|Vis|1.2.29 vscode-java-debug|vsc|0.46.0 vscode-java-dependency|vsc|0.21.1 vscode-java-pack|vsc|0.25.6 vscode-java-test|vsc|0.37.1 vscode-maven|vsc|0.39.2 vscode-icons|vsc|12.0.1 quokka-vscode|Wal|1.0.514 riscv|zhw|0.0.8  (2 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vslsvsres303:30308271 pythonvspyl392:30443607 vserr242:30382549 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vshan820:30294714 vstes263cf:30335440 vscoreces:30445986 pythondataviewer:30285071 vscod805:30301674 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 cmake_vspar411:30581797 vsaa593:30376534 pythonvs932:30410667 cppdebug:30492333 vsclangdf:30486550 c4g48928:30535728 dsvsc012cf:30540253 azure-dev_surveyone:30548225 pyindex848:30577860 nodejswelcome1:30587005 282f8724:30602487 gswce1:30612156 iaj6b796:30613358 dbltrim-noruby:30604474 f6dab269:30613381  ```  </details>  <!-- generated by issue reporter -->"
249,Remote loading state for Explorer view,True,False,,vscode,2025-10-13T14:53:35.567150,,"feature-request, ux, file-explorer, remote",1,,https://github.com/microsoft/vscode/issues/167294,"Remote loading can take some time to show files. Meanwhile explorer is usually visible, but a empty while loading, with the usual minimal loading indicator. It would be nice if this space could be used for showing remote loading state with more details.  <img width=""300"" alt=""image"" src=""https://user-images.githubusercontent.com/8599/204070540-6d58d84d-561d-4b4c-92c2-2e2306133820.png"">  <img width=""300"" alt=""image"" src=""https://user-images.githubusercontent.com/8599/204071181-44c13b12-9224-4909-a1ad-a7efefa99839.png"">"
250,Explore a lightweight notification UI to display confirmation feedback for actions to users,True,False,,vscode,2025-10-13T14:53:35.570986,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/166891,Motivating scenarios: - Remote Repositories has a use case for displaying a one-off message on save to let the user know that their uncommitted changes will be saved in browser storage (similar to the Figma save toast).  - Another use case is to provide confirmation that actions like copying a GitHub permalink to clipboard succeeded.   Since this could get visually noisy IMO there should be a global toggle for this so that users can opt out.
251,Extension pack view makes actual readme content very small when the editor group is small,True,False,,vscode,2025-10-13T14:53:35.574028,,"bug, ux, extensions",1,,https://github.com/microsoft/vscode/issues/166627,![Recording 2022-11-17 at 11 22 42](https://user-images.githubusercontent.com/2193314/202539281-7fa6cda6-6297-429f-8241-4b3944861ed2.gif)
252,Timeline filename doesn't show when Timeline is moved to the bottom Panel,True,False,,vscode,2025-10-13T14:53:35.576746,,"bug, ux, polish, timeline",1,,https://github.com/microsoft/vscode/issues/166000,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:  - Version: 1.74.0-insider (user setup) Commit: 9d5741f01a67beea273121615b2d015fc298d9ea Date: 2022-11-10T05:21:13.252Z Electron: 19.1.3 Chromium: 102.0.5005.167 Node.js: 16.14.2 V8: 10.2.154.15-electron.0 OS: Windows_NT x64 10.0.19044 Sandboxed: Yes  Steps to Reproduce:  1. Correct behaviour (default layout, Timeline in Side Bar) <img width=""329"" alt=""image"" src=""https://user-images.githubusercontent.com/1485998/201077447-e3c06e5e-cbb1-41f8-8377-8a9afac722da.png"">  3. Incorrect (not default layout, Timeline was dragged to Panel) - the filename is not shown , which is confusing when a timeline is pinned  <img width=""1598"" alt=""image"" src=""https://user-images.githubusercontent.com/1485998/201077695-7fc48339-2d3c-41b2-a99e-91b638f77ecd.png"">"
253,Allow more control of the status bar text for a LanguageStatusItem,True,False,,vscode,2025-10-13T14:53:35.579590,,"feature-request, languages-basic, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/165940,"I'm trying to adopt the LanguageStatusItem API for some things that were previously just standard status bar entries, however the way the text is rendering makes it a much worse experience than before even if when items are pinned.  For example, in Flutter we currently show the selected device on the status bar:  <img width=""251"" alt=""Screenshot 2022-11-09 at 18 07 26"" src=""https://user-images.githubusercontent.com/1078012/200906940-4fd66eac-1689-4e76-bb8c-980f54c6d5c5.png"">  There's a tooltip that tells you how many devices are connected. It isn't prefixed with ""Flutter"" because that consumers more space.  Using the new API, it's natural to set `text` to something like ""Flutter Device"" and `detail` to the device name:  ![image](https://user-images.githubusercontent.com/1078012/200907278-0ea4a64b-5408-4083-82ae-dfa1ef1a22e0.png)  However if you want the original behaviour and you _pin_ the item, you just get ""Flutter Device"" and not what you really wanted:  ![Screenshot 2022-11-09 at 18 10 03](https://user-images.githubusercontent.com/1078012/200907408-95352feb-af93-4a17-aae3-3fcfc16612cf.png)  And if we just set `text` to the device name, then the main flyout doesn't look so good because it doesn't have a description of what it is.  It would be nice if we could control the status bar text separately, otherwise we have to decide between a better experience, or users being able to collapse the item into the flyout. Right now for Flutter devices it feels like status bars are better (even though I'd like for users to be able to move it into the flyout).  Slightly related (and I can raise separate issues if worthy), things I'd also love:  - Add tooltips - The ability for text/detail to be display like columns rather than just joined with a hyphen. The current layout in my screenshot above looks a bit messy and I think would look better if the `detail` fields were all lined up."
254,Walkthrough tile buttons have too much styling variation,True,False,,vscode,2025-10-13T14:53:35.583014,,"bug, ux, polish, getting-started",1,,https://github.com/microsoft/vscode/issues/165847,"Ref: #165846  There's a mix of codicons, PNG icons, single-line vs. multi-line, and so on.  <img width=""486"" alt=""CleanShot 2022-11-08 at 10 04 57@2x"" src=""https://user-images.githubusercontent.com/25163139/200641747-bbc63510-0c9a-40ea-bf99-5593536646ea.png"">"
255,Actions to add paths to include/exclude in search results unclear wording,True,False,,vscode,2025-10-13T14:53:35.586048,,"ux, search, polish",1,,https://github.com/microsoft/vscode/issues/163953,"<img width=""245"" alt=""image"" src=""https://user-images.githubusercontent.com/31675041/196500906-4bbbecf8-de1c-4969-96fb-fe5a7a9ae9a6.png"">  This is the context menu when you right-click on a folder in the search result (when a user wants to do a find+replace)  `Restrict Search to Folder` adds the path to the ""files to include"" text field. `Exclude Folder from Search` adds the path to the ""files to exclude"" text field.  Is this wording unclear? Should it explicitly say ""Add to files to include/exclude"" instead of the wording we have here?"
256,Source control svg icons stay dark when the repository row is selected.,True,False,,vscode,2025-10-13T14:53:35.589190,,"bug, ux",1,,https://github.com/microsoft/vscode/issues/163748,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: N/A  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.72.0 (Universal) Commit: 64bbfbf67ada9953918d72e1df2f4d8e537d340e Date: 2022-10-04T23:21:58.256Z Electron: 19.0.17 Chromium: 102.0.5005.167 Node.js: 16.14.2 V8: 10.2.154.15-electron.0 OS: Darwin x64 21.6.0 Sandboxed: No  Steps to Reproduce:  1. Install the [git-graph extension](https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph) 2. Open a repository 3. Open the source control view 4. Make sure you currently have a theme which can toggle icons when selected (such as 'Light' or 'Light+') 5. Click the repository row so it becomes blue  Expected result: The git graph icon changes along with the other icons.  Actual result: The git graph icon stays black  more info here: https://github.com/mhutchie/vscode-git-graph/issues/690  https://user-images.githubusercontent.com/2737650/196002067-29002c28-c71b-42a3-8806-85e5e143fe2f.mp4"
257,Code action widget status bar border does not match editor hovers,True,False,,vscode,2025-10-13T14:53:35.592713,,"ux, polish, editor-code-actions",1,,https://github.com/microsoft/vscode/issues/162688,"## Code Actions  <img width=""403"" alt=""CleanShot 2022-10-04 at 10 46 10@2x"" src=""https://user-images.githubusercontent.com/25163139/193889852-f8b4e675-19cd-4a78-ae57-d66d7073dda2.png"">  ## Editor Hover  <img width=""531"" alt=""CleanShot 2022-10-04 at 10 46 14@2x"" src=""https://user-images.githubusercontent.com/25163139/193889874-a6fd564e-3864-43bf-befe-c34193b6c7aa.png"">  It looks like the editor hover is doing this to achieve the softer border: ``` // hoverBorder === editorHoverBorder  collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}, }`), ```  I don't know of a way to pull this off in pure CSS when using our CSS vars. Might need to add the rule in the JS instead."
258,Define and apply guidance for icon toggle states,True,False,,vscode,2025-10-13T14:53:35.595445,,"ux, polish",1,,https://github.com/microsoft/vscode/issues/162595,"Refs https://github.com/microsoft/vscode/issues/162441  In some situations where a state is toggled (locking, pinning, hiding), we use a different approach for which icon is exposed. Sometimes we show the current state (e.g. locked) and sometimes we show the target state (currently unlocked, but the locked icon is displayed).   Ideally we can have reusable guidance to apply elsewhere."
259,Make tree view more stable,True,False,,vscode,2025-10-13T14:53:35.598150,,"ux, file-explorer, polish",1,,https://github.com/microsoft/vscode/issues/162428,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  ## Make tree view UI more stable When I'm using the tree view, I often find myself losing the item I'm working with and needing some moment to re-discover it. I have found a reproducible scenario in which this happens and recorded a video of it.  ### Video https://user-images.githubusercontent.com/153391/193243131-34b66936-bde2-4969-a8da-161a2a4327ef.mov  ### Description Basically, when I create a new folder below an existing one, the tree view will add a new item below the folder and expand that folder to make it visible. I am assuming that there is some code there that makes sure that the new item will be in view (which makes sense), but that code is a bit heavy-handed and often the tree view will scroll even when there seems to be no real reason to do so, causing a disconcerting jump making me lose track of where the item I'm working with is and having to re-discover it. This takes me out of my focus and happens quitte often, because the tree view is such a central widget in the VSCode UI.   I found that whether this happens or not and how far the jump will be seems to be related to the length of the scroll bar and the position of the folder you create a new item under. Ironically it seems to be worse when the item is high up in the view, even though that actually means that there is no need to scroll at all. I expect this scrolling to occur only when really needed. In general I'd like to be in control of the scrolling as much as possible, so that the position of all items remains stable unless I change it myself.  ### Feature or bug, you decide I'm posting this as a feature request, but some might consider it a bug... I see you have 5K issues already, so probably this one would have low priority, but when it's time for you guys to see what you might improve in VSCode UI-wise, I hope you consider this one as it is a very central component and probably it will turn out to not be that hard to fix."
260,Spinning icons are blurry on standard DPI screens,True,False,,vscode,2025-10-13T14:53:35.601410,,"debt, ux",1,,https://github.com/microsoft/vscode/issues/162382,"Related https://github.com/microsoft/vscode/issues/162292  I've always thought the sync icon in particular looks really bad:  ![image](https://user-images.githubusercontent.com/2193314/193094085-098a6e78-024c-437f-833d-f1a03667997a.png) ![image](https://user-images.githubusercontent.com/2193314/193094122-44b31e8c-d5ac-4a25-b896-705213d85258.png)  There are two problems I see:  1. The sub-pixel anti-aliasing (red/blue on the edges) goes away which is a jarring transition. Arguably icons like this should not have SPAA as it may make vertical and horizontal lines appear to have a different weight:    ![image](https://user-images.githubusercontent.com/2193314/193094829-b24a605a-d557-4b76-9e19-9e402becde79.png)    This is something that comes with icon fonts, regular SVGs do not get SPAA applied. We could force disable it if we wanted, but it's probably not worth trying as it looks fine and we're used to that icon rendering now. I doubt anyone has noticed this or cares tbh 😉  2. The non-rotating icon is a vector rasterized and then displayed directly, the rotating icon is a vector rasterized in the non-rotated position and then rotated. I believe using animations also puts it on a separate layer or something which forces SPAA to go away and may also degrade rendering quality in favor of performance in other ways. Consider the blurry image above compared to a regular `transform: rotate(45deg)`: ![image](https://user-images.githubusercontent.com/2193314/193096912-b9830a3a-a041-4e68-ba5e-8a9e84b681d9.png)  This is much less noticeable with the loading icon as it's more simple:  ![image](https://user-images.githubusercontent.com/2193314/193093901-42c3a5e4-d0ee-42d8-90ac-b07e03ecdc07.png) ![image](https://user-images.githubusercontent.com/2193314/193093912-7e3a5fe8-81d0-4321-859f-b491fadbeded.png)  However, it would still look much more crisp and at home with the rest of the icons if it did not blur:  ![image](https://user-images.githubusercontent.com/2193314/193097982-73975c2a-fb44-4234-bdc0-fd442cf6951b.png)  As for the recommendation, we could use gifs or a set of pngs, however we would then lose the vector support. After thinking about it a bit here are some options we could look into, we would need to make sure they perform sufficiently:  - Set up a `setInterval`\* and get the start time via `performance.now()` and the time on `setInterval`, with this a `translate: rotate(xdeg)` could then be applied - Rasterize the icon up front in a canvas to generate images at the ideal scale and the matching background color, swap those images out using the interval trick above - Rasterize the icon up front in a canvas, create image data object and draw them to a canvas (I'm not sure if browsers limit the number of 2d canvas contexts like they do with webgl contexts) - Create a DOM element for each rotation we want to present, and show only the one we want at any given time  \* `requestAnimationFrame` could also be used if we wanted higher FPS, we would then get a higher quality animation at the cost of CPU/battery"
261,Terminal hover positioning is unfriendly,True,False,,vscode,2025-10-13T14:53:35.606038,,"feature-request, ux, confirmed, terminal-links",1,,https://github.com/microsoft/vscode/issues/162336,"* have a long'ish link, like `echo https://github.com/microsoft/vscode/pull/162335` * mouse-hover over the number * :bug: the link hover appears left aligned, ignores my mouse x-coordinate, and forces me to move the cursor into it (which can be finicky)  https://user-images.githubusercontent.com/1794099/193029983-cc12425a-8d2f-4359-88a5-ee9e5ed74f8c.mov"
262,Code action widget accessibility strangeness,True,False,,vscode,2025-10-13T14:53:35.608814,,"ux, accessibility, polish, editor-code-actions",1,,https://github.com/microsoft/vscode/issues/162126,"![Recording 2022-09-28 at 09 13 49](https://user-images.githubusercontent.com/900690/192712837-0eee8b18-fe59-4cde-adf1-ed7b092598ad.gif)  I find it a bit strange that hovering over entries in the list puts the blue focus color and then pressing enter seems to take the element under the mouse. I think that is not very accessible or expected, I would have rather expected the blue element to stay stable and only change with keyboard up/down. Compare with quick open for example!     //cc @isidorn @daviddossett"
263,Edit session semantics are not easy to understand,True,False,,vscode,2025-10-13T14:53:35.612303,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/162117,"Testing #161875  This is more of a meta issue then very specific.  **I like 👍  and understand this flow:** * I can create the workspace I am currently in in a different target by selecting ""Continue working on"" * This opens the target with the same contents of the workspace and restores my changes * 🆒   **But from here on, I am a bit lost:** * Are the changes now syncing back and forth between the 2 workspaces forever? * What does it mean to ""Turn Off"" or ""Turn On"" edit sessions? [1] * What does ""Resuming edit sessions"" do (I see progress in the status bar)  [1] specifically this point is unclear to me:  <img width=""426"" alt=""image"" src=""https://user-images.githubusercontent.com/900690/192695969-0b041726-69c0-449f-b910-6c16131a414c.png"">  It seems to be on by default on vscode.dev and I can turn it off, but what does it bring? Is it not true that edit sessions would automatically enable as soon as I picked ""Continue working on""?  //cc @daviddossett"
264,Hard to tell that Edit Sessions were turned on with two different auth providers,True,False,,vscode,2025-10-13T14:53:35.615002,,"ux, polish",1,,https://github.com/microsoft/vscode/issues/162025,Testing #161875  1. open a repo in insiders.dev and make a change in a file 2. `Continue on` desktop :bug: no changes   ![continueOn](https://user-images.githubusercontent.com/2019016/192595803-abd1ad99-cd1b-4fae-b904-16dfea8e9ba6.gif)
265,Welcome views should use primary + secondary button styles,True,False,,vscode,2025-10-13T14:53:35.617990,,"ux, under-discussion, workbench-views",1,,https://github.com/microsoft/vscode/issues/158530,"Today we have 2-3+ primary buttons used in our Explorer. Extensions can also contribute many more. As a general UI principle I think we should only feature one primary action with the rest being styled as secondary.   ## Before <img width=""399"" alt=""CleanShot 2022-08-18 at 14 15 51@2x"" src=""https://user-images.githubusercontent.com/25163139/185496787-ffd26f7e-6a50-49ad-9765-c3f0c83e08b5.png"">  ## After <img width=""424"" alt=""after"" src=""https://user-images.githubusercontent.com/25163139/185496857-c167fafe-d891-4705-bfc3-25f1b2844b57.png"">  We recently adopted this behavior in notifications where we ensure the first action renders as a primary button. There's no special API other than the order of the array afaik.   cc @misolori"
266,Can the inputbox show a red outline for invalid filenames?,True,False,,vscode,2025-10-13T14:53:35.621497,,"ux, polish, file-io",1,,https://github.com/microsoft/vscode/issues/156630,"Testing #155731  Ref https://github.com/microsoft/vscode/issues/155731#issuecomment-1198594918  When the user types in an invalid file name,  - The inputbox can show a red outline with an error message - The save file dialog shouldn't open when the user presses enter while they're still focused on the inputbox and what they typed is invalid  I'm not sure what to do about the ""New file (filename)"" quickpick option when the file name is invalid, though.  CC @Yoyokrazy"
267,Progressive behavior of the title bar elements,True,False,,vscode,2025-10-13T14:53:35.624883,,"ux, under-discussion, command-center",1,,https://github.com/microsoft/vscode/issues/156377,"Testing #156220  I like the progressive behavior of the menu bar. What I'm missing is that the command center and the layout controls adapt. They should hide when they run out of space to show themselves.  <img width=""607"" alt=""image"" src=""https://user-images.githubusercontent.com/4674940/181122880-1546e1a8-0941-4e37-990e-98e85d95a487.png"">"
268,Use modal dialog for open repo message,True,False,,vscode,2025-10-13T14:53:35.628699,,"git, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/155470,"* start with an empty window * from the explorer select the clone from repo flow * select a repo and (local) folder * 😕 when clone is done a notification, not a modal is shown   <img width=""1136"" alt=""Screenshot 2022-07-18 at 10 34 20"" src=""https://user-images.githubusercontent.com/1794099/179473899-a6aed957-7ce9-4da2-8530-386a7723c5e1.png"">"
269,Commit split button divider causes loss of selection,True,False,,vscode,2025-10-13T14:53:35.631618,,"bug, ux, polish, scm",1,,https://github.com/microsoft/vscode/issues/154816,"Some things I noticed today was that the commit split button divider is a lot stronger than the other split buttons in the product. I also noticed when I hovered over the split buttons divider that I would then not have either portions of the buttons selected and instead be selecting the parent container.  <img width=""293"" alt=""image"" src=""https://user-images.githubusercontent.com/4544166/178293148-590ca9a5-237b-4748-bdaa-476ada7daf2d.png"">"
270,Commit operation was cancelled notification might not be needed,True,False,,vscode,2025-10-13T14:53:35.634655,,"git, ux, polish, under-discussion",1,,https://github.com/microsoft/vscode/issues/153666,"Testing #153366  When I close the editor with the empty commit message you show the notification. I think this is a bit out of context.  I would prefer if we do not show a notification at all. And potentially show the model dialog on editor close. ""Are you sure you want to close since the commit will get canceled?""   ![Screenshot 2022-06-29 at 12 44 34](https://user-images.githubusercontent.com/1926584/176418484-4b7393b4-5ca8-4a34-804e-fece53023b0b.png)"
271,Git - should origin appear first in the list?,True,False,,vscode,2025-10-13T14:53:35.638038,,"help wanted, feature-request, git, ux",1,,https://github.com/microsoft/vscode/issues/153542,"Testing #153317  <img width=""1324"" alt=""Screen Shot 2022-06-28 at 1 05 21 PM"" src=""https://user-images.githubusercontent.com/29464607/176241583-ab4864d3-9fdc-4d23-9777-7013a063bd2c.png"">"
272,Git - Show Banner To Close The File To Continue,True,False,,vscode,2025-10-13T14:53:35.641512,,"feature-request, git, ux",1,,https://github.com/microsoft/vscode/issues/153509,"Testing #153317  ![image](https://user-images.githubusercontent.com/2931520/176209760-c6f54902-288d-4d00-9f11-a31de556f6d6.png)  This Banner: ![image](https://user-images.githubusercontent.com/2931520/176209919-009bf4cc-7f54-4400-9891-b7134d32cfa5.png)  Could have a text ""Close this file to commit"""
273,"Git - SCM foldable regions like ""Changes"" should have their actions disabled when they do nothing",True,False,,vscode,2025-10-13T14:53:35.644860,,"bug, ux, scm",1,,https://github.com/microsoft/vscode/issues/153508,Testing #153366  ![Recording 2022-06-28 at 07 45 27](https://user-images.githubusercontent.com/2193314/176208901-0093faf9-41d8-4c4d-a35f-ab06a19da77d.gif)  Also I'm not sure the twisty should be there at all when there are 0 entries in the tree?
274,Reverse the visual logic of text link decorators,True,False,,vscode,2025-10-13T14:53:35.648155,,"ux, accessibility, under-discussion",1,,https://github.com/microsoft/vscode/issues/153081,"Hi!  At the moment, the default design for plaintext links in VS Code is that the links are only painted in different colour in regular states, and then on hover they get `text-decoration: underline`. This makes them rather inaccessible as W3C guidelines suggest we should [not only use colour to differentiate elements](https://www.w3.org/WAI/tips/designing/#dont-use-color-alone-to-convey-information). ← Even GitHub is doing this wrong as this link is just blue, and then underlines on hover.    ![link underline](https://user-images.githubusercontent.com/44162846/175490354-bbd0a707-c4bd-4844-9ad4-a0a226d72120.gif)  This causes issues when there is a lot of text, and users have to hunt where the links actually are. I am a professional designer and can spot a misaligned single pixel, yet I have some trouble visually focusing and finding where the links are in this screenshot:   <img width=""747"" alt=""Screenshot 2022-06-24 at 08 56 45"" src=""https://user-images.githubusercontent.com/44162846/175490514-3d1a6155-2aa7-473e-8505-71cc24e7c1ed.png"">  ## Proposed Solution  Could you please simply flip the logic - have links be underlined by default, and then on hover they lose the underline.    - - - -  Version: 1.68.1 (Universal) Commit: 30d9c6cd9483b2cc586687151bcbcd635f373630 Date: 2022-06-14T12:52:13.188Z (1 wk ago) Electron: 17.4.7 Chromium: 98.0.4758.141 Node.js: 16.13.0 V8: 9.8.177.13-electron.0 OS: Darwin arm64 21.5.0"
275,Inconsistent use of beaks in tooltip and hovers,True,False,,vscode,2025-10-13T14:53:35.651899,,"bug, ux",1,,https://github.com/microsoft/vscode/issues/153039,"## Beaks Activity bar <img width=""197"" alt=""CleanShot 2022-06-23 at 14 24 32@2x"" src=""https://user-images.githubusercontent.com/35271042/175404949-00b5c101-f7a2-4a0e-98e1-84f8adccd8a3.png"">  Status bar <img width=""299"" alt=""CleanShot 2022-06-23 at 14 25 07@2x"" src=""https://user-images.githubusercontent.com/35271042/175405034-13879e03-61d1-4555-8d59-68cf6861ff45.png"">  Command center <img width=""436"" alt=""CleanShot 2022-06-23 at 14 25 41@2x"" src=""https://user-images.githubusercontent.com/35271042/175405130-32a3b519-d188-485e-a77f-48ea3f35f7b0.png"">  Extensions <img width=""736"" alt=""CleanShot 2022-06-23 at 14 26 24@2x"" src=""https://user-images.githubusercontent.com/35271042/175405222-8b50cd6b-620b-4b01-b5e2-a6d67a038b33.png"">  <img width=""160"" alt=""CleanShot 2022-06-23 at 14 29 00@2x"" src=""https://user-images.githubusercontent.com/35271042/175405576-74b4e8f2-34aa-4daa-a5b1-2b7ce0fd340b.png"">  Peek views <img width=""946"" alt=""CleanShot 2022-06-23 at 14 35 20@2x"" src=""https://user-images.githubusercontent.com/35271042/175406428-4d7a842a-d22e-40ed-b832-597261ac3873.png"">   ## No Beaks  Editor hovers <img width=""535"" alt=""CleanShot 2022-06-23 at 14 30 57@2x"" src=""https://user-images.githubusercontent.com/35271042/175405838-71bf8768-1b66-4d46-8754-9ad0390a14ce.png"">  Custom tree views <img width=""606"" alt=""CleanShot 2022-06-23 at 14 30 33@2x"" src=""https://user-images.githubusercontent.com/35271042/175405790-f3e19972-8c87-4d6c-8e94-c410adb2ee25.png"">"
276,A change in VScode makes it confusing for a user to switch the to a different PowerShell environment in the Integrated Terminal.,True,False,,vscode,2025-10-13T14:53:35.655234,,"ux, under-discussion, workbench-status",1,,https://github.com/microsoft/vscode/issues/152862,"Issue Type: <b>Bug</b>  Steps to Reproduce:  1. Open vs code with PowerShell extension 2. Try to change to a different Integrated Terminal via the status tray.  I have been informed that this is due to a change in the way VS code works, which has had a knock-on effect on how the VScode PowerShell team have had to implement a new option to select PS versions within the Integrated . Personally, I simply could not figure this out without some guidance and lost a bunch of time trying to understand what was wrong and why I could no longer change PS versions in the Integrated Terminal.   **Old way** - very obvious: what PS version you were using: You simply clicked on `5.1`, and could swithch to another version  **New way** - completely unobvious on how to change PS versions: Now, you need to hover over the `{ }` icon next to the word PowerShell (and NOT on the word ""PowerShell"" itself) in order to see a link to the Session Menu, where you can then change the PS version.   Images to follow  VS Code version: Code 1.68.1 (30d9c6cd9483b2cc586687151bcbcd635f373630, 2022-06-14T12:48:58.283Z) OS version: Windows_NT x64 10.0.22000 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-9850H CPU @ 2.60GHz (12 x 2592)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|31.78GB (15.74GB free)| |Process Argv|--crash-reporter-id fdd18362-22ae-4526-bbb3-f5ff8550b378| |Screen Reader|yes| |VM|22%| </details><details><summary>Extensions (15)</summary>  Extension|Author (truncated)|Version ---|---|--- githistory|don|0.6.19 vscode-npm-script|eg2|0.3.25 beautify|Hoo|1.5.0 vscode-edit-csv|jan|0.7.1 rainbow-csv|mec|2.4.0 vscode-edge-devtools|ms-|2.0.0 python|ms-|2022.8.0 vscode-pylance|ms-|2022.6.20 jupyter|ms-|2022.5.1001601848 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.8 powershell-preview|ms-|2022.6.1 debugger-for-edge|msj|1.0.15 code-spell-checker|str|2.2.4 html-preview-vscode|tht|0.2.5   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 vslsvsres303:30308271 pythonvspyl392:30443607 vserr242cf:30382550 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 vscoreces:30445986 pythondataviewer:30285071 vscod805:30301674 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593:30376534 vsc1dst:30438360 pythonvs932:30410667 wslgetstarted:30449410 vscscmwlcmt:30465135 cppdebug:30492333 vsclangdc:30486549 841h4636:30513380  ```  </details>  <!-- generated by issue reporter -->"
277,Go To Source Definition UX improvements,True,False,,vscode,2025-10-13T14:53:35.659697,,"feature-request, typescript, javascript, ux",1,,https://github.com/microsoft/vscode/issues/152252,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Following up on TypeScript’s new Go To Source Definition command (d851ea5d49b0ec89b98765d9e0084c25f2ff5031), I want to track some editor-side UX improvements:  - Can we replace the error notification for “no source definitions found” with an inline message similar to Go To Definition?    <img width=""330"" alt=""image"" src=""https://user-images.githubusercontent.com/3277153/173925638-1fcba3e2-5feb-40cd-9488-3159fc19999a.png"">  - Can we somehow indicate when a result is a guess? This is already returned in the protocol response via an `unverified` property, but it is never surfaced to the user. When multiple locations are returned, maybe we could add something to the peek locations UI:    <img width=""611"" alt=""image"" src=""https://user-images.githubusercontent.com/3277153/173927129-0943cadc-85c6-4090-b8d1-c1f7f7441b37.png"">    (Note: the `unverified` flag is also sometimes set in normal Go To Definition responses, so this request is not specific to Go To Source Definition.)    When only one location is returned, maybe a notification would suffice, but I would love design input on this."
278,margin of context between right and left are different in notebook,True,False,,vscode,2025-10-13T14:53:35.663129,,"ux, polish, notebook-layout",1,,https://github.com/microsoft/vscode/issues/149264,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  版本: 1.68.0-insider (system setup) 提交: 8c882677f947ef7ec748e7f031c7b5470aaf9be1 日期: 2022-05-11T05:17:12.474Z Electron: 17.4.1 Chromium: 98.0.4758.141 Node.js: 16.13.0 V8: 9.8.177.13-electron.0 OS: Windows_NT x64 10.0.22616 Steps to Reproduce:  ![image](https://user-images.githubusercontent.com/1876302/167884528-7bcf5654-995d-4c35-83c2-c8781f3139b8.png)"
279,Scrolling suggestion docstrings with PgUp/PgDn does not work when only one suggestion,True,False,,vscode,2025-10-13T14:53:35.665993,,"feature-request, ux, suggest",1,,https://github.com/microsoft/vscode/issues/146787,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  **Summary** Scrolling suggestions' docstrings with PgUp/PgDn works only when multiple suggestions pop up. When only a single suggestion is available (e.g. when the function's name is entered in full), the scrolling with PgUp/PgDn does not work.  **Steps to reproduce** 1. In an editor, in a .py file, type in a recognised identifier that has a long docstring. 2. Ctrl+Space (`Trigger Suggest`) to toggle suggestions. 3. Ctrl+Space (`toggleSuggestionDetails`) to toggle the docstring detail if it is hidden. 4. Ctrl+Alt+Space (`toggleSuggestionFocus`) 5. PgDn to scroll down the docstring. ❌ Nothing happens. (To be precise, PgDn works in the editor mode, i.e. `cursorPageDown`) ![fails](https://user-images.githubusercontent.com/52547519/161657466-4898953c-7986-4c97-b13e-c426921dbd6e.png)  **Expected behaviour** Everything works as expected when there are multiple suggestions. 1. Type only the first few symbols, so that there multiple possible suggestions. 2. [as above] Ctrl+Space (`Trigger Suggest`) to toggle suggestions. 3. [as above] Ctrl+Space (`toggleSuggestionDetails`) to toggle the docstring detail if it is hidden. 4. [as above] Ctrl+Alt+Space (`toggleSuggestionFocus`) 5. PgDn to scroll down the docstring. ✔ Scrolls as expected. ![works](https://user-images.githubusercontent.com/52547519/161657703-c0789a7b-0efc-47e4-ba5b-43aaa3853f56.png)  **What I tried** I tried removing `suggestWidgetMultipleSuggestions` condition from the keyboard shortcuts on PageDown, but this alone did not solve the problem.  - Default keybinding:  ![default keybindings](https://user-images.githubusercontent.com/52547519/161657718-b620ac0f-c047-4f5b-b035-25efae6d7099.png)  - Modified keybinding:  ![custom keybindings](https://user-images.githubusercontent.com/52547519/161657741-33aafe36-a02e-4f18-8177-047ebe50c038.png)  **Related**: - https://code.visualstudio.com/updates/v1_13#_suggestion-list-and-documentation-side-by-side  > For keyboard centric users who want to navigate up and down long documentation, press `Ctrl+Alt+Space` to move the focus to the documentation fly-out such that it can now receive keyboard shortcuts for Page Up/Down actions.  - also https://github.com/microsoft/vscode/issues/46892#issuecomment-402949843 .  **Info** - Does this issue occur when all extensions are disabled?: N/A (extensions are required but aren't the problem) - VS Code Version:  1.66.0 (user setup) Commit: e18005f0f1b33c29e81d732535d8c0e47cafb0b5 - OS Version:  Windows_NT x64 10.0.19042"
280,Syncing changes dialog shows wrong icon,True,False,,vscode,2025-10-13T14:53:35.670209,,"feature-request, ux, scm, under-discussion, web",1,,https://github.com/microsoft/vscode/issues/146676,"<img width=""558"" alt=""CleanShot 2022-04-03 at 16 38 53@2x"" src=""https://user-images.githubusercontent.com/35271042/161453896-866c8b25-197e-4570-89f0-f985541ca30b.png"">  1. open vscode.dev where you had uncommitted changes 2. dialog asking if you want to sync 3. :bug: error appears indicating there may breaking changes  Since this is an error state, the warning icon should not be used here but instead the ""error"" icon"
281,Indicate filtered state on Timeline view,True,False,,vscode,2025-10-13T14:53:35.674730,,"ux, polish, timeline",1,,https://github.com/microsoft/vscode/issues/145769,"Currently there isn't any visual indication on the timeline view when a filter (i.e. anything unchecked from the list) has been applied:  <img width=""426"" alt=""CleanShot 2022-03-22 at 11 19 00@2x"" src=""https://user-images.githubusercontent.com/25163139/159549260-0494edf1-5ef4-4846-a43f-469a305fb20a.png"">  One potential option here would be to follow the same dual icon pattern as pinning follows:  <img width=""98"" alt=""CleanShot 2022-03-22 at 11 20 56@2x"" src=""https://user-images.githubusercontent.com/25163139/159549396-d649e9d5-8061-46b8-89a8-706c4de15eda.png"">  <img width=""97"" alt=""CleanShot 2022-03-22 at 11 21 04@2x"" src=""https://user-images.githubusercontent.com/25163139/159549407-f8f37349-e269-441a-a754-8264b6a9be67.png"">  One other thought is that the timeline view header seems to further indicate the pinned state with plain text. While this could be somewhat crammed to if it included filtered state as well, it might be worth exploring.  <img width=""329"" alt=""CleanShot 2022-03-22 at 11 21 37@2x"" src=""https://user-images.githubusercontent.com/25163139/159549481-5030533d-0038-4ef7-8b1b-be14db7d1471.png"">  cc @bpasero @misolori"
282,QuickInput error aligns weirdly,True,False,,vscode,2025-10-13T14:53:35.678510,,"feature-request, ux, quick-pick",1,,https://github.com/microsoft/vscode/issues/145672,"Testing #145626  Notice how the quick input validation message aligns weirdly with the rest of quick input: 1. It overwrites the placeholder text to ""Accept on enter..."" 2. It goes below the quick input  It feels like it was just stuck on top of the existing quick input UI. I would love it feel a bit more native in the quick input.  ![Screenshot 2022-03-22 at 12 18 57](https://user-images.githubusercontent.com/1926584/159470393-66566f5e-37ea-4cc8-ab4f-f3c8a72e79b2.png)"
283,"Toggle all files in ""refactor previews""",True,False,,vscode,2025-10-13T14:53:35.682111,,"feature-request, ux, workspace-edit",1,,https://github.com/microsoft/vscode/issues/144893,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  I'm trying to rename a symbol from `decoder` to `is_decoder`. The ""rename symbol"" commonly prompts the ""refactor preview"" panel.   **Problem**: I'm using vscode for running machine learning experiments and I use the popular weights&biases library. The library automatically creates codebase checkpoints for each new experiment.  I wanted to rename a symbol, and the ""rename symbol"" command searched through all these code checkpoints and suggested making changes in all of them. However, I want to make changes only in my main codebase.  **Suggestion**: In the ""refactor preview"" panel, add a button to ""toggle all/uncheck all"" files. Then I can select only the limited number of files was to make the code changes.  ![CleanShot 2022-03-11 at 08 06 54](https://user-images.githubusercontent.com/18227298/157827839-906fa75b-a1b6-4175-8bcf-f0e6a753f8c0.png)"
284,Align editor find widget with the notebook find widget,True,False,,vscode,2025-10-13T14:53:35.685941,,"ux, polish, editor-find",1,,https://github.com/microsoft/vscode/issues/144851,"To allow more filters/scopes for the find widget in monaco editor (for example, supporting search in strings/comments), we may want to align the ux with the notebook find widget by moving Find in Selection icon into the Find Input  <img width=""376"" alt=""image"" src=""https://user-images.githubusercontent.com/876920/157726354-b6906f8c-506b-497b-a876-a05795697cd8.png"">"
285,Dialog asking to copy or add workspace folder could mention target,True,False,,vscode,2025-10-13T14:53:35.690534,,"feature-request, ux, file-explorer",1,,https://github.com/microsoft/vscode/issues/144148,"I was testing drag and drop interaction with the explorer and found that the following dialog does not really tell me where the folder would be copied into. Especially when I drop to the empty explorer area and have multiple folders in my multi root workspace, the destination is not clear to me: will it be the first or second folder?  ![Recording 2022-03-01 at 08 19 35](https://user-images.githubusercontent.com/900690/156123128-cc0c7eb3-fd50-423f-b870-264b1b8f4c45.gif)   //cc @isidorn @misolori"
286,Refactor preview: not all checkboxes should be tabstops,True,False,,vscode,2025-10-13T14:53:35.694013,,"feature-request, ux, accessibility, workspace-edit",1,,https://github.com/microsoft/vscode/issues/143736,Focus on the refactor preview view. Press tab (wanting to focus on the apply / discard) Instead focus is moved on all the checkboxes. You have to press tab a lot 🐛   I suggest to use the same strategy as the breakpoints view. Tab does not move focus to the checkboxes. And make sure that your role of your tree items is checkbox (`TreeAccessibilityProvider` has this built in to choose roles)
287,Add status bar for parameter hints,True,False,,vscode,2025-10-13T14:53:35.697265,,"help wanted, feature-request, ux, editor-parameter-hints",1,,https://github.com/microsoft/vscode/issues/142895,"<img width=""550"" src=""https://user-images.githubusercontent.com/35271042/153687498-edfef7be-5e75-4511-95bf-38fe500f4a33.png"">  Have seen a lot of instances of users not knowing how to dismiss parameter hints (thread [here](https://www.reddit.com/r/vscode/comments/rzx2mc/help_me_remove_the_pop_up/) and [here](https://www.reddit.com/r/vscode/comments/sqck3k/why_does_vscode_display_this_when_i_write_print/)) so I was thinking that it might be useful to add a status bar to the parameter hints to give users an indication of how to dismiss, similar to the suggest widget status bar:  <img width=""421"" alt=""CleanShot 2022-02-11 at 15 54 47@2x"" src=""https://user-images.githubusercontent.com/35271042/153686177-728444ed-b0ed-4f4c-b4e0-7fa4bbe0f648.png"">  ## Suggestion  Add a status bar with actions to dismiss and others (maybe next hint?)  <img width=""530"" alt=""CleanShot 2022-02-11 at 16 17 15@2x"" src=""https://user-images.githubusercontent.com/35271042/153687473-99bb00b8-987c-482e-b1b6-80aa37db1691.png"">"
288,SCM - hard to see the file list visual structure,True,False,,vscode,2025-10-13T14:53:35.700380,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/141078,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  In the SCM panel, VS Code shows a list of modified files. When there are modified files in multiple directories (especially in a large repo), it can be difficult to navigate and make sense of the list.  VS Code offers two options:  1. View as List ![unnamed](https://user-images.githubusercontent.com/485572/150365531-007c5bf6-0d80-4c8e-8528-a75bfdaa1749.png)  * Lack of visual structure (i.e. difficulty scanning and distinguishing information). * Hard to see when two files are in the same directory (because the directory names are not aligned).  2. View as Tree ![unnamed](https://user-images.githubusercontent.com/485572/150365499-7a28a880-249b-49db-a2c5-96d28222a40e.png)  * Takes more vertical space. * Hard to see what’s the full path of a file (e.g. in which directory is content.ts?). * Easy to get lost after scrolling (the root part is no longer visible).  3. Proposal  I would like to have another rendering of the file list to fix these problems. I understand this might not be better in every case, so it should probably be a 3rd option.  ![unnamed](https://user-images.githubusercontent.com/485572/150365516-ab90b63f-62cf-45be-8e72-2b4e8a659397.png) (not a perfect mock, it's a screenshot from another tool, icons are missing)  * Compared to the screenshot 1, the filename and the path are reversed. * The part of the path that’s the same as the previous line is greyed out. * The structure is more obvious. * It requires horizontal space (this works well when the SCM panel is at the bottom).   Happy to send a PR when the proposal is accepted. I'm also happy to discuss other possible solutions."
289,Support no value for editorSuggestWidget.selectedIconForeground,True,False,,vscode,2025-10-13T14:53:35.704569,,"feature-request, ux, suggest",1,,https://github.com/microsoft/vscode/issues/139652,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Initially, the icon of suggested autocomplete items (editorSuggestWidget) has a color that depends on the type of the item.  Since recently, the selected item gets painted in white which disturbs me because, to me, white corresponds to snippets or random text.  I'm aware of the following option: `workbench.colorCustomizations -> editorSuggestWidget.selectedIconForeground`.  But this only allows forcing another color... what I want is to keep the default color whether selected or not. (for example mauve for methods, blue for fields, ...) What would be cool is to have null as a value or equivalent that would disable specific color for the icon of the selected item.  Also, I am pretty sure this problem occurred before, then went away, and came back only recently (last release maybe).  ---  See [related question on stackoverflow](https://stackoverflow.com/questions/68321114/customizing-vscode-theme-how-to-keep-original-icon-color-for-the-focused-item-i)  The solution proposed in the accepted answer didn't work for me (when using vscode default dark theme).  And since I am using the Monokai color theme, it wouldn't help anyway. I have the following colorCustomization in case it is related: ```json ""workbench.colorCustomizations"": {   ""[Monokai]"": {         ""editorCursor.foreground"": ""#0F0"",         ""focusBorder"": ""#0F0"",         ""editor.selectionHighlightBorder"": ""#D8B43C"",         ""editor.rangeHighlightBackground"": ""#D8B43C55"",         ""editor.findMatchBorder"": ""#D8B43C"",         ""editorBracketMatch.background"": ""#D8B43C55"",         ""editorBracketMatch.border"": ""#D8B43C"",         ""editorIndentGuide.background"": ""#00000000"",         ""editorIndentGuide.activeBackground"": ""#D8B43C"",         ""activityBar.background"": ""#191919"",         ""editor.background"": ""#191919"",         ""editor.lineHighlightBackground"": ""#2d2d2d"",         ""list.hoverBackground"": ""#323232"",         ""list.activeSelectionBackground"": ""#424242"",         ""list.inactiveSelectionBackground"": ""#2d2d2d"",         ""sideBar.background"": ""#1b1b1b"",         ""sideBarSectionHeader.background"": ""#232323"",         ""editor.selectionHighlightBackground"": ""#0000"",         ""selection.background"": ""#207a27""     }, } ```"
290,Different breakpoint marker for unverified breakpoint before debug session start,True,False,,vscode,2025-10-13T14:53:35.708747,,"debug, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/135105,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  If a user sets a breakpoint before the debug session starts, it will look like a successful breakpoint in red. Then once the debug session starts, it might get registered and stay red or it might fail to register and turn grey. Unless the program stops on entry, gets paused, etc, the user might never even notice that the breakpoint failed to register and wonder why it never got hit.   Displaying the preliminary breakpoint as registered is misleading. Users do not always realize that the validation will happen later and that they need to check that it succeeded ([example](https://github.com/golang/vscode-go/issues/1818#issuecomment-942745182), [example](https://github.com/golang/vscode-go/issues/1840)). I propose that a different marker is used for such breakpoints with a hover message that it will be validated once the debug session is launched."
291,Improve UX when showing raw cell output,True,False,,vscode,2025-10-13T14:53:35.712241,,"ux, polish, notebook-diff",1,,https://github.com/microsoft/vscode/issues/134309,"Testing https://github.com/microsoft/vscode/issues/134142  For me, there's two issues:  1. The expanded cell is taller than my viewport. So I have nested scrollbars and need to use both of them if I want to see the top and bottom of the cell. It should be at most ~90% of the editor height 2. When the cell expands, I need to manually scroll it into view, which can be difficult due to nesting unless I'm dragging the outer scrollbar manually. The diff should scroll such that the raw output is at the top of the viewport as soon as the user hits ""switch output rendering"""
292,Improve Buttons in SVC Conflict Resolution,True,False,,vscode,2025-10-13T14:53:35.715891,,"git, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/133589,"I think it would be more intuitive if ""Accept X"" would be next to ""X"" and just called ""Accept"". Maybe we can do something with injected text here.  Also, why is there ""Start Live Share Session""? I guess it could be useful to start a live share session to resolve conflicts, but is this a common use-case? (it could be useful to start a live share session for anything, e.g. when there are diagnostics etc.)  ![image](https://user-images.githubusercontent.com/2931520/134330680-14c22b2f-ec5b-4ec3-b519-efef05bc86c0.png)"
293,[FR] Filter commands by source improvements,True,False,,vscode,2025-10-13T14:53:35.719025,,"feature-request, ux, keybindings-editor",1,,https://github.com/microsoft/vscode/issues/131351,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  When looking for commands, it'll be great to be able to filter them by source in the table header, currently, the filter options are hidden in the top right corner, which is hard to find.  Also, typing `@source` currently won't trigger suggestions, it'd be great if it supports that.  ![image](https://user-images.githubusercontent.com/28700378/130372601-575bd140-78fe-4a59-a45f-25499ba241c3.png)"
294,Configurable peek window position,True,False,,vscode,2025-10-13T14:53:35.722312,,"feature-request, ux, editor-symbols",1,,https://github.com/microsoft/vscode/issues/131094,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hi all,  As much as I love the peek feature, I'd really like its position to be configurable, as its only position currently obstructs reading of the following lines.  I'd personally be happy with being able to have it spawn above the peeked symbol instead of bellow, but with all the work being done in allowing panes to be moved around in vscode, I guess being able to define a set part of the window for it to appear would be even better for many people.  Hope this isn't too painful to implement and gets some attention, Thanks regardless, VSCode is still great with peek as it is :)"
295,Improve discoverability of available/installable output renderers for given mime types,True,False,,vscode,2025-10-13T14:53:35.725437,,"feature-request, ux, notebook-output",1,,https://github.com/microsoft/vscode/issues/131031,"## Summary This issue captures the design explorations for improving the discoverability of output renderers. There are two main scenarios we want to focus on:  - When a notebook tries to use a renderer that is unavailable - When a notebook uses a renderer that the user did not expect to see  Given these two main scenarios, we want to explore ways to increase the visibility of output renderers.  ## Designs  ## Display badges  One simple idea would be to show a ""badge"" when there is an output renderer unavailable and also show an option to search the marketplace for other renderers:  ![image](https://user-images.githubusercontent.com/35271042/129783420-b6c7ed24-212f-4549-9c18-d6fdd616bf78.png)  <img width=""735"" alt=""CleanShot 2021-08-17 at 11 48 58@2x"" src=""https://user-images.githubusercontent.com/35271042/129783519-e517f95f-1f58-4cab-b5a1-44a857edc0a1.png"">  ## Status bar item  We could also add a status bar item for more of a seamless plug that would point to the same quick pick from above:  <img width=""760"" alt=""CleanShot 2021-08-17 at 11 49 21@2x"" src=""https://user-images.githubusercontent.com/35271042/129783659-bba1ffb2-de8f-47b2-963b-bf4bfbef8568.png"">  In the case where we have multiple outputs, we could consolidate the status bar items and show a list of the outputs before (though it's not best experience correlating the output list + visuals):  <img width=""752"" alt=""CleanShot 2021-08-17 at 11 54 17@2x"" src=""https://user-images.githubusercontent.com/35271042/129784222-658fadd1-34ab-49ac-8664-b50d2c52a64f.png"">   <img width=""650"" alt=""CleanShot 2021-08-17 at 11 53 22@2x"" src=""https://user-images.githubusercontent.com/35271042/129784161-eb0b45e1-cb00-4f70-a2c5-c4eed27b1f0c.png"">  And a ""left-aligned"" alternative:  <img width=""804"" alt=""CleanShot 2021-08-17 at 11 54 59@2x"" src=""https://user-images.githubusercontent.com/35271042/129784357-b4812368-aee7-4678-bd99-1c1faba01aae.png"">  ## New output toolbar  We could move the output actions (currently in the ellipsis) into a new toolbar above each output, which would also be a place to highlight missing renderers:  <img width=""766"" alt=""CleanShot 2021-08-17 at 11 59 33@2x"" src=""https://user-images.githubusercontent.com/35271042/129785338-8510678a-939c-4fe5-8cca-6dff1b58c5c7.png"">  An alternative would be to place alignment on the right and use a dropdown for quick changes. However, there is limited space in the dropdown to communicate and would contradict other patterns where we use the quick pick:  <img width=""807"" alt=""CleanShot 2021-08-17 at 12 07 04@2x"" src=""https://user-images.githubusercontent.com/35271042/129785814-046003e6-9db2-4807-aa1d-cab3675f1f45.png"">"
296,Controlling vertical space between output elements.,True,False,,vscode,2025-10-13T14:53:35.729176,,"ux, polish, under-discussion, notebook-output",1,,https://github.com/microsoft/vscode/issues/130287,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> [Friendly](https://github.com/friendly-traceback/friendly) is a program that can be used to help users understand the cause of tracebacks. A recent addition allows the insertion of interactive html buttons inside Jupyter notebooks to selectively show parts of the information available. Currently this is done by doing multiple calls to `display(HTML(...))`. This results in significant vertical white space between various output elements as shown in the following image.  ![image](https://user-images.githubusercontent.com/629698/128565440-b7b1b411-f197-471c-a193-bed641c9f6ba.png)  The ideal output is that of Google Colab, the output for Visual Studio is the least desirable.    Here is what is shown when one of the button is clicked to show the information. ![image](https://user-images.githubusercontent.com/629698/128566229-d2bb7f15-257f-4a27-b348-281916a82f59.png)   **Ideally, there should be a way to control/reduce/collapse the amount of vertical space between output elements in Visual Studio Code.**"
297,Label activity bar icons so we can tell what they are,True,False,,vscode,2025-10-13T14:53:35.733309,,"feature-request, ux, layout",1,,https://github.com/microsoft/vscode/issues/130051,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I keep forgetting what all of the sidebar icons mean. It would be so much easier if they were labeled with words that I can read and instantly know what they do without having to waste time hovering a mouse over each icon in order to show tooltips that describe their functions. This would increase cognitive ease and let me spend my cognitive energy doing more important things like programming.  Labels should be visible by default with the option to remove labels for people want more sidebar density and have extra cognitive energy to spend on memorizing sidebar icons.  The advantages of this user interface design convention is well researched & documented.   *   [Yes, icons need text labels](https://www.nngroup.com/videos/icon-text-labels/) *   [The Importance Of Labels](https://blogs.msdn.microsoft.com/jensenh/2005/11/01/the-importance-of-labels/) *   [The best icon is a text label](https://thomasbyttebier.be/blog/the-best-icon-is-a-text-label) *   [Icon usability](https://www.nngroup.com/articles/icon-usability/) *   [Do icons need labels?](https://uxdesign.cc/do-icons-need-labels-6cb4f4282c00) *   [The Obvious UI is Often the Best UI](https://medium.com/google-design/the-obvious-ui-is-often-the-best-ui-7a25597d79fd)"
298,"Font size for the extra info in suggestion list became smaller and can't be changed, causing problems with some fonts",True,False,,vscode,2025-10-13T14:53:35.736434,,"ux, suggest, under-discussion",1,,https://github.com/microsoft/vscode/issues/128461,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.58.0 - OS Version: Linux x64 5.8.0-59-generic (Xubuntu 20.04.2)  Steps to Reproduce:  1. Open, for example, an empty `.js` file.  2. Press <kbd>Ctrl</kbd><kbd>Space</kbd> to open suggestions. If necessary, press it again to switch to the compact list. 3. Observe following: ![pic](https://user-images.githubusercontent.com/20289055/125254109-d0f3a400-e302-11eb-8208-9f788bc82489.png)  The information about the active element uses the same monospaced font as the editor, but **with smaller size**. From what I can see, this size can't be customized.  Since I'm using a bitmap font (converted to `.ttf`), this makes it illegible. This is the only place in the app where you can't customize the size of the monospaced font."
299,Native Notebooks - Keyboard shortcut for navigating in/out of notebook,True,False,,vscode,2025-10-13T14:53:35.741099,,"bug, ux, notebook-commands",1,,https://github.com/microsoft/vscode/issues/128153,Reporting on behalf of customer:   Steps to Reproduce:  1. Put focus on cell editor 2. Press escape twice 3. Focus ends up...somewhere?  4. Pressing tab brings focus back into notebook but into a different cell completely   Should tab be returning to the same cell in the notebook?  If not is there another shortcut that could help navigate back?   ![esc behavior](https://user-images.githubusercontent.com/19276747/124814764-41717e00-df1b-11eb-88b2-6af033f6934e.gif)
300,SCM - better distinguish when repositories have the same name,True,False,,vscode,2025-10-13T14:53:35.744367,,"feature-request, ux, scm",1,,https://github.com/microsoft/vscode/issues/126828,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> In the company where I work the project structure is as follows: .../PROJ_NR/software/<.git folder>+<data> In Source Control Repositories only the parent folder is displayed, which results in displaying only 'software' names. Is it possible for SCR to recognize identical folder names and add one more parent folder when it recognizes two identical names? I am adding a picture of how it looks like in practice at the moment.   ![Screenshot_20210621_153656](https://user-images.githubusercontent.com/13761341/122772611-d7fd3880-d2a7-11eb-8c94-435873f61abe.png)"
301,More obvious UI for output mimetype selector,True,False,,vscode,2025-10-13T14:53:35.747466,,"ux, polish, notebook-output",1,,https://github.com/microsoft/vscode/issues/126610,"This selector isn't the most obvious for changing output type. Especially since an ellipses isn't an icon I'd think about clicking often, I assume it contains secondary actions that aren't everyday actions and not something I'd use often which I would for changing output types.  ![image](https://user-images.githubusercontent.com/12758612/122435028-7c037e80-cf4c-11eb-864d-0efa556894d8.png)  Previously we had an icon that looked like: `</>` but I've seen some feedback where that icon is non-intuitive and doesn't make sense to click.   I think this is also compounded by the fact that changing output isn't common in other notebook platforms so most people aren't expecting to use that icon but are expecting a different outputs mentioned here: https://github.com/tanhakabir/rest-book/issues/85#issuecomment-828896165  There's also no UI indication that a cell has more than 1 output type available.  Ideas: 1. Language picker style output picker? Like this:  ![image](https://user-images.githubusercontent.com/12758612/122446951-14ebc700-cf58-11eb-84c6-b5babe28ae79.png)"
302,Components that offer to open an editor should specify the `override` that makes most sense,True,False,,vscode,2025-10-13T14:53:35.752155,,"debt, ux, workbench-editor-resolver",1,,https://github.com/microsoft/vscode/issues/124498,"This is a follow up from https://github.com/microsoft/vscode/issues/124122 (cc @andreamah) and my review from https://github.com/microsoft/vscode/pull/124394.  In https://github.com/microsoft/vscode/issues/124122 the issue at hand is that a UI piece in VSCode provides support to open editors (in this case the Outline view). If the user has configured the default editor to be an editor that is different from what the UI piece is intending to open, you get the wrong editor opening based on the user action.  I see that https://github.com/microsoft/vscode/pull/124194 tries to resolve this by teaching the outline view which `override` to use via probing on the `viewType` property (which only exists on notebooks and custom editors currently). I think there are 2 issues to follow up:  **Outline** The outline view works with outline providers that can return the outline for the given active editor. Currently I see 2: * `notebookOutline` * `documentSymbolsOutline`  Both implement a method `reveal` which is called when you click on an entry in the outline (and I think even when you use breadcrumbs too). I think a better fix for https://github.com/microsoft/vscode/issues/124122 would be to: * explicitly pass in the right `viewType` for [`notebookOutline#reveal`](https://github.com/microsoft/vscode/blob/7ea5b137eaf1771e3fa2c7b569b2fca880db12b8/src/vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline.ts#L541-L541) implementation based on the editor * enforce to use a text editor in [`documentSymbolsOutline#reveal`](https://github.com/microsoft/vscode/blob/3b87c36e2dc5a9a6f61fd11daca1e9316474ebdc/src/vs/workbench/contrib/codeEditor/browser/outline/documentSymbolsOutline.ts#L211-L211)  I think fixing the former is straight forward because it looks like the `notebookOutline` is always constructed over a notebook editor where the view type is known.  For the latter: we have a service called [`ICodeEditorService`](https://github.com/microsoft/vscode/blob/5c4663baadf575b10b548c437fdf10c9afb7d21f/src/vs/workbench/services/editor/browser/codeEditorService.ts#L18-L18) and the intent is: * it is the service that most components use that operate within the monaco code editor (e.g. find references, goto definition) * it should always result in a text editor opening, never be overridden  As such, I would think that in the code editor service we need to either pass `EditorOverride.DISABLED` or the identifier of the default text editor.  **Other UI Components (e.g. search, problems, custom views?)** I can reproduce the issue for outlines easily with other UI components that allow to open editors, e.g. for search:  ![recording](https://user-images.githubusercontent.com/900690/119335012-0f1e0100-bc8c-11eb-9b16-671c32ab86e5.gif)  There are probably a lot more places where the user can trigger an editor to open. I think for UI components that operate on text (e.g. search, problems), we need to make sure that the resulting editor is text based."
303,Consider using focus-within for showing actions in scm,True,False,,vscode,2025-10-13T14:53:35.756918,,"ux, scm, under-discussion",1,,https://github.com/microsoft/vscode/issues/122016,"I just mostly copied the behavior of actions showing up with keyboard focus in terminal tabs, however one change I made was to use `:focus-within` for the _non-hover_ styles to avoid showing the actions unless keyboard focus is there. I think this would be a nice change for SCM as well.  <img width=""219"" alt=""Screen Shot 2021-04-23 at 5 26 17 AM"" src=""https://user-images.githubusercontent.com/2193314/115870783-97428980-a3f4-11eb-8653-44b7ad863634.png"">  See https://github.com/microsoft/vscode/commit/cfb866ac5337405606caa401c123ecc85ca7ebb5"
304,"""Reopen folder using..."" should use a more dedicated ux solution, not notifications",True,False,,vscode,2025-10-13T14:53:35.760286,,"ux, under-discussion, remote",1,,https://github.com/microsoft/vscode/issues/121805,"Refs: https://github.com/microsoft/vscode/issues/119463  Currently we have mulitple experience to reopen the folder because there is a `Dev Container` file or a `.code-workspace` file. Both of them use notifications in order to make the user aware of this.  Instead of this I propose the following: * Do not use notificaitons for this (especially painful since they appear on startup) * We should consider showing this in the empty editor area instead of action hints. Button ""Reopen in Container""  * Consider having this in the welcome view * We should have something in the explorer. Either a Ttitle area button, or a blue button in the empty area  fyi @misolori @bpasero for ideas  ![Screenshot 2021-04-21 at 12 21 42](https://user-images.githubusercontent.com/1926584/115538538-46b81880-a29c-11eb-9868-793a4c8c63c6.png)"
305,Notebook cell focus feedback should disappear when clicking the empty view content or somewhere else,True,False,,vscode,2025-10-13T14:53:35.764584,,"ux, under-discussion, notebook-layout",1,,https://github.com/microsoft/vscode/issues/121440,I finally figured out the details of something that annoys me all the time our notebooks. Notice in the GIF how that border of the focused cell doesn't disappear when clicking elsewhere... I can only make it disappear when pressing <kbd>Escape</kbd>.  ![recording (6)](https://user-images.githubusercontent.com/22350/114997392-a35aa400-9e54-11eb-8b13-e3d7f42ec9fe.gif)
306,Update enable/disable setting descriptions,True,False,,vscode,2025-10-13T14:53:35.767704,,"feature-request, ux, config",1,,https://github.com/microsoft/vscode/issues/120559,"Brought up [through user feedback](https://twitter.com/_tomalak/status/1378989217905266688) that our settings that mention ""enabled/disable"" in the description are confusing:  <img width=""600"" src=""https://user-images.githubusercontent.com/35271042/113591373-a948bd80-95e8-11eb-9f37-9a36b5753ec7.png"">  I realize that this is inconsistent with how we describe other settings and tend to use ""Enable"" only, to make that clear:  <img width=""450"" src=""https://user-images.githubusercontent.com/35271042/113591705-19574380-95e9-11eb-92a4-ecb92567b141.png"">"
307,Can not select text in markdown cell,True,False,,vscode,2025-10-13T14:53:35.770590,,"bug, ux, notebook",1,,https://github.com/microsoft/vscode/issues/120370,"Issue Type: <b>Bug</b>  Can't select text from a markdown preview, it always tries to drag the cell.  VS Code version: Code 1.55.0 (428daa3650c9b38c92d194172cba735b95a7c77f, 2021-03-26T22:22:39.145Z) OS version: Darwin x64 20.3.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i9-9980HK CPU @ 2.40GHz (16 x 2400)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|4, 4, 4| |Memory (System)|32.00GB (0.47GB free)| |Process Argv|--enable-proposed-api donjayamanne.kusto --crash-reporter-id 299c833a-1961-40e9-a094-f10b65ea4e64| |Screen Reader|no| |VM|0%| </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vstry244:30276681 pythonvsdeb440:30248342 pythonvsded773:30248341 pythonvspyt875:30259475 pythonvsnew554:30281908 pythontb:30283811 openwsldoc:30282072 vspre833:30267464 pythonptprofiler:30281270 vshan820:30276952 pythondataviewer:30283453  ```  </details>  <!-- generated by issue reporter -->"
308,Debug: current stopped line should indicate better?,True,False,,vscode,2025-10-13T14:53:35.774215,,"debug, ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/119492,Especially when you enable to show values like here:  ![image](https://user-images.githubusercontent.com/900690/112028630-aa81e100-8b38-11eb-8f5c-5541b7b1a42a.png)  You end up with so many yellow lines that the current line that is stopped becomes harder to track.  Slightly related to: https://github.com/microsoft/vscode/issues/119485
309,Design exploration for improving experience for new users,True,False,,vscode,2025-10-13T14:53:35.778263,,"ux, under-discussion",1,,https://github.com/microsoft/vscode/issues/115641,"## Overview  This design exploration aims to improve the overall experience for new users while also providing value for existing users. Going through feedback from new and existing users we've heard that:  - Activity bar icons can sometimes be hard to understand if not familiar with them - Some features (like the command palette and terminal) are hard to discover - Desire to control overall density  We also wanted to take the opportunity to explore updating the overall aesthetics like:  - Create uniform sizing/padding (using multiples of 4) - Update default color system - Alternate placement of account/settings  ## Demo  Below is an example of this exploration. Here's a few ideas that we tried:  - Adding labels to the activity bar - Moving account/settings to the top right - Introducing an omni search to include commands, files, tasks, etc. (also combining text search into this) - Introducing a ""density"" toggle (similar to email clients) - Introducing a Terminal toggle in the status bar - Introducing GUI features for Git - Condensed color system into ~10 colors   ![design mockup](https://user-images.githubusercontent.com/35271042/106676782-5c0a8a00-656c-11eb-96d8-439204827c21.png)   https://user-images.githubusercontent.com/35271042/106675880-c02c4e80-656a-11eb-8f5f-ead5e96300ba.mp4   ## Feedback  Here's the feedback I've received on this concept from our team. I'll break down the concepts into individual issue for those we are interested in pursuing more. Note: since this concept touches several ideas at once, it would be good to break down some changes (like density changes and showing more/less UI should be separate).  ### Pros - Friendlier activity bar labels for new users - Omni search helps discoverability of command palette/search - Moving settings/accounts in title bar helps separate views from menus - Consistent spacing makes for a uniform UI - Easy toggle for changing density  ### Cons - Omni search   - Can be hard to distinguish   - Could be too advanced for new users   - Takes up title bar space (will need to look into OS guidelines)   - Need to evaluate relationship between Quick Open + Command Palette   - Can take up dragging real estate for title bar - Could be costly to maintain two designs w/ density mode - Some prefer settings/accounts in activity bar  Happy to hear any additional feedback others have on this concept."
310,Native Notebooks - Collapsing output from bottom leads to incorrect scroll location,True,False,,vscode,2025-10-13T14:53:35.781530,,"ux, under-discussion, notebook-layout",1,,https://github.com/microsoft/vscode/issues/114866,"Transfer from https://github.com/microsoft/vscode-jupyter/issues/4473  > Not sure whether to classify this as a bug, as it's more a UX issue than a real bug. >  > Currently, when collapsing a very long cell output (by doing right-click and then ""collapse cell output""), it appears that the notebook retains the previous scroll coordinates. >  > This is an issue with long outputs, especially if they span more than the total screen height. In those cases, after collapsing the cell I often end up with a view of cells that are much further down in the notebook, forcing me to scroll up and waste time trying to find back where I was. >  > It would probably make more sense to automatically scroll so that the cell whose output was collapsed is visible?  I am only able to repro this behavior if I try to collapse the output from the bottom of the output. Scroll location remains correct when collapsing from the top of the output.   ![Collapse Scroll Off](https://user-images.githubusercontent.com/19276747/105639725-c31e9500-5e2e-11eb-80e9-874653fcbaae.gif)"
311,SCM - option to prefer repo name,True,False,,vscode,2025-10-13T14:53:35.785185,,"bug, ux, scm",1,,https://github.com/microsoft/vscode/issues/113401,<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Option to prefer repo name to branch name in Source Control Repository view. Please refer to https://github.com/microsoft/vscode/issues/104801#issuecomment-684589792  This design choice makes the git integration unusable for many of us.  ![image](https://user-images.githubusercontent.com/1332462/103112910-05c13780-460d-11eb-9541-f35f1cb0a0a0.png)  Versus  ![image](https://user-images.githubusercontent.com/1332462/103112929-17a2da80-460d-11eb-9aa2-d43a9d9f6d5f.png)
312,Render new lines in suggest widget details,True,False,,vscode,2025-10-13T14:53:35.788918,,"ux, suggest, under-discussion",1,,https://github.com/microsoft/vscode/issues/109937,<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  In reference to the refinement here: https://github.com/microsoft/vscode/issues/109717#issuecomment-719440817 The details view in the suggest widget no longer shows the line breaks that the text authors intended for us to see. I think it should work like the mouse over hover text where it breaks the line up if it gets too long but also shows the actual line breaks in the text. See this example: ![image](https://user-images.githubusercontent.com/42123497/98030836-e4fd1280-1e11-11eb-8c48-90f9b02e1316.png)
313,Suggest detail does not shrink to fit content when resized,True,False,,vscode,2025-10-13T14:53:35.792440,,"ux, suggest, under-discussion",1,,https://github.com/microsoft/vscode/issues/109731,"The gif is pretty illustrative. You can see that when resized, the detail view doesn't shrink. However, when suggest is retriggered, it has appropriately shrunk. I'm not sure if this is intended behavior.  ![recording (26)](https://user-images.githubusercontent.com/38270282/97697363-31a9bc00-1aa7-11eb-87d1-96f3267d9153.gif)"
314,Suggest widget: Details view doesn't resize width to fit content,True,False,,vscode,2025-10-13T14:53:35.796106,,"ux, suggest, under-discussion",1,,https://github.com/microsoft/vscode/issues/109477,"Testing #109394  The details view correctly resizes the height to fit more lines, but the width stays the same no matter the content. ![NoSizeChanges](https://user-images.githubusercontent.com/42123497/97301877-94594880-1858-11eb-9ef4-3ff2a49ad530.gif) I think it should resize up to the edge of the editor and add a scrollbar if needed. Alternatively the width I set should persist across sessions so I can drag it to the edge once and never think about it again."
315,Safari/iPadOS: UI affordance for non default cursor style,True,False,,vscode,2025-10-13T14:53:35.799750,,"ux, under-discussion, safari, ios-ipados",1,,https://github.com/microsoft/vscode/issues/108832,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  On Desktop, we use `cursor: ` CSS rule a lot to change the mouse style for various purposes, but it's not availbale on iOS. However, we still get the `:hover` event when iOS is attached with an external mouse/trackpad. We need to go through all places we modify cursor style to ensure we have a proper fallback for iOS.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No"
316,Option to combine tabs and title bar,True,False,,vscode,2025-10-13T14:53:35.802593,,"feature-request, ux, workbench-tabs, titlebar",1,,https://github.com/microsoft/vscode/issues/107123,"<!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I generally use VS Code in fullscreen mode to maximize the vertical space available for code. However, I also frequently have to use it as a regular window so I can see something next to it, such as a debugger or other tool. I'd love to be able to reclaim the extra space I get in fullscreen mode even when in a window.  Specifically, I'm interested in an option to combine editor tabs and the title bar. Literally just wedge them together. I don't need the buttons on the right side of the tab region, so this actually looks fairly clean, imo.  Current ![image](https://user-images.githubusercontent.com/484784/93721703-b0c1e100-fb46-11ea-8e09-1448f32c65ec.png)  Desired ![image](https://user-images.githubusercontent.com/484784/93721825-6c831080-fb47-11ea-844b-3a069f7453fb.png)  Honestly, don't really need the logo either ![image](https://user-images.githubusercontent.com/484784/93721895-cedc1100-fb47-11ea-90cd-bf28313f6086.png)"
317,Tweak peek inside notebooks,True,False,,vscode,2025-10-13T14:53:35.807093,,"feature-request, ux, polish, notebook-cell-editor",1,,https://github.com/microsoft/vscode/issues/101513,"@isidorn had shared this with me a while back  * have a notebook * run reference search or F8 for errors <img width=""913"" alt=""Screenshot 2020-07-01 at 17 04 56"" src=""https://user-images.githubusercontent.com/1794099/86259989-ffea1c80-bbbc-11ea-8357-81be4fbd07c9.png"">  Issues/suggestion:   * there are many lines for peek and for the focus border * the peek editor has some whitespace at its left and right side * instead of lines we should experiment with more background color, e,g drop the outline and only use background"
318,Support reparenting views during drag and drop without destroying and recreating them,True,False,,vscode,2025-10-13T14:53:35.811605,,"feature-request, ux, workspace-edit, workbench-views",1,,https://github.com/microsoft/vscode/issues/100147,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> Version: 1.46.0 Commit: a5d1cc28bb5da32ec67e86cc50f84c67cc690321 Date: 2020-06-10T08:59:04.923Z Electron: 7.3.1 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Linux x64 5.3.0-59-generic  Steps to Reproduce:  1.trigger the refactoring preview window, 2.drag it to wherever you like ---- oops, cannot drag them and yes it can be reproduced on the Insider version  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes"
319,"Ellipsis in search viewlet shows more UI, not commands",True,False,,vscode,2025-10-13T14:53:35.815304,,"debt, ux, search",1,,https://github.com/microsoft/vscode/issues/99892,"<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  In the search viewlet, the ellipsis button is used to reveal include and exclude input boxes. I don't think ellipsis should be used to permanently modify the UI. I believe ellipsis should only be used to temporarily show UI or commands for which there currently is not enough space to show permanently. ![EllipsisInSearchViewletShowsMoreUINotAdditionalCommands](https://user-images.githubusercontent.com/1704059/84418591-52b06400-ac0f-11ea-8f0f-969080c80d34.png)   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No"
320,Improve rendering of find matches touching each other,True,False,,vscode,2025-10-13T14:53:35.818133,,"feature-request, ux, editor-find",1,,https://github.com/microsoft/vscode/issues/95425,"Issue Type: <b>Bug</b>  I need to remove some lines of text from about 80 files (every file has about 2000 rows) at the same time. I wanted to use search&replace tool in vs Code(ctrl+shift+f).   And my issue consists of two different problems: ## Problem 1   Given following rows: ``` být=elektronický=zásilka být=jiný=způsob být=poskytování=pozáruční být=poskytování=servisní být=pozdě=třetí být=pozáruční být=pozáruční=servis být=příslušný=krajský být=příslušný=poškozený být=schopný=dodaný být=servis být=servisní být=servisní=služba být=služba=zahrnující být=zejména=uvedený ``` where I need to remove whole row with occurence. This works correctly and matches 3+grams:  `^být=[^=]+=.*` This incorrectly matches also 2grams: `^být=[^=]+=.*\n`  Then i thought - ok, I can make some workaround and split it to two regexps which lead to problem 2.  ## Problem 2  When I removed all occurences of this `^být=[^=]+=.*` from all files, then I needed to remove blank lines. I used the same tool for multi search and replace in all files from the same folder. I used this regexp `^\n` and the button for replace all (it said about 2000 occurences) didn't do almost anything (changed about 3 files from 80).   Ok I tried to click to replace all button in multisearch window file by file. Reached 3rd file where it stopped to work as well.   Ok if I click fast enough I might be done soon I thought and clicked on replace for each occurence in multisearch window.  And I was terrified when I later found that it instead of deleting blank lines also deleted lines with text. (e.g. `cena=náhradní=díl`)   VS Code version: Code 1.44.1 (a9f8623ec050e5f0b44cc8ce8204a1455884749f, 2020-04-11T01:48:12.622Z) OS version: Windows_NT x64 10.0.18363  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2808)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: enabled<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off_ok<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|31.87GB (20.32GB free)| |Process Argv|| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (14)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-base64|ada|0.1.0 vscode-markdownlint|Dav|0.34.0 jsonpath-extract|dav|1.2.3 gc-excelviewer|Gra|2.1.34 Angular2|joh|9.1.2 rainbow-csv|mec|1.6.0 vscode-docker|ms-|1.0.0 csharp|ms-|1.21.17 vscode-kubernetes-tools|ms-|1.1.1 python|ms-|2020.3.71659 powershell|ms-|2020.3.0 vscode-typescript-tslint-plugin|ms-|1.2.3 vscode-yaml|red|0.7.2 markdown-all-in-one|yzh|2.8.0   </details> <!-- generated by issue reporter -->"
321,Minor UI inconsistencies: Input theme references,True,False,,vscode,2025-10-13T14:53:35.822295,,"ux, settings-editor, under-discussion",1,,https://github.com/microsoft/vscode/issues/93024,"I expected that the overall search input in the UI preferences view is styleable via `settings.textInputBackground` and `settings.textInputForeground`. But currently it is styled via `input.background` and `input.foreground` only.  Please take a look at the attached screenshot. And you may want to use this setting snippet for further debugging.  <img width=""1280"" alt=""vscode-input-theme-references"" src=""https://user-images.githubusercontent.com/3532570/76908802-e640f580-68a9-11ea-9c7e-c2644cf3dc85.png"">  ```     ""workbench.colorCustomizations"": {         ""input.background"": ""#0000ff"",         ""input.border"": ""#ffff00"",         ""input.foreground"": ""#ffffff"",         ""settings.textInputBackground"": ""#00ff00"",         ""settings.textInputForeground"": ""#000000"",         ""settings.textInputBorder"": ""#ff0000"",     }, ```"
322,Improve parameter hints UX,True,False,,vscode,2025-10-13T14:53:35.826060,,"feature-request, ux, editor-parameter-hints",1,,https://github.com/microsoft/vscode/issues/92174,"This is similar to https://github.com/microsoft/vscode/issues/14165, but focuses specifically on parameter hints. Here's the comparison of UI for IntelliJ and VS Code:  IDEA: ![good](https://user-images.githubusercontent.com/1711539/76109452-c1609e80-5fdc-11ea-85b1-26cd06e18b24.png)  VS Code: ![wtf](https://user-images.githubusercontent.com/1711539/76109454-c1f93500-5fdc-11ea-9378-b2cbd69897f1.png)  IDEA's version is massively more useful, because:  * it uses a single line (so no spacing wasted for wrapping, no weird breaks mid parameter) * it is *centered* at the cursor position (as opposed to being to the right)  Although this is far from an extreme case, the VS Code version is nigh unusable :-(   Note that many language servers for VS Code implements parameter snippet completion, where arguments of the function call are prefilled:   ![image](https://user-images.githubusercontent.com/1711539/76109788-7b580a80-5fdd-11ea-93d7-121f16487df8.png)  I think that this behavior is basically a work-around for VS Code parameter hints not being very useful."
323,Find/replace icons are not intuitive,True,False,,vscode,2025-10-13T14:53:35.829921,,"feature-request, ux, editor-find",1,,https://github.com/microsoft/vscode/issues/91211,"Issue Type: <b>Bug</b>  Related to my feedback on find/replace behavior (#91210), the dialog is also difficult to use because of its reliance on mystifying icons over labeled buttons.  * Several icons are just variants of `Aa` and `Ab` and `AB` etc. which are hard to keep straight without tool tips * The ""find in selection"" icon doesn't convey selection * Replacement options are hidden behind a generic disclosure triangle * ""Match whole word"" doesn't convey much, there are 3 lines and I don't know what any of them represents * ""Replace"" vs ""Replace all"" is reasonably intuitive but I'm not sure why ""replace all"" is differentiated with multiple characters being replaced rather than just multiple occurrences.  Aside from its icon, I'm not sure why ""find in selection"" is over to the right by the controls for navigating between occurrences, rather than an option that controls search behavior like ""ignore case"".  I also noticed that some button tooltips are in Title Case and others are in Sentence case, not sure if there is a reason for that.  VS Code version: Code 1.42.1 (c47d83b293181d9be64f27ff093689e8e7aed054, 2020-02-11T14:44:27.652Z) OS version: Darwin x64 19.3.0"
324,CodeIcon: in documentation hover could get some polish,True,False,,vscode,2025-10-13T14:53:35.832903,,"ux, polish, suggest, workbench-hover",1,,https://github.com/microsoft/vscode/issues/89497,"Refs: https://github.com/microsoft/vscode/issues/89328  I think once a codicon is in the text, we need to adjust the lineheight or some other styling to make it look nicer:  ![image](https://user-images.githubusercontent.com/900690/73275539-8ef6a100-41e7-11ea-8862-7f8df2c33ab9.png)"
325,Rename refactoring context actions work on the entire input,True,False,,vscode,2025-10-13T14:53:35.836222,,"ux, under-discussion, workspace-edit",1,,https://github.com/microsoft/vscode/issues/89414,Testing https://github.com/microsoft/vscode/issues/89331  ![image](https://user-images.githubusercontent.com/22350/73253459-e16e9800-41bc-11ea-9612-fa36136ab872.png)  1. Right click a refactor row and choose `Apply Refactoring`  All the checked changes will be applied and the view will disappear. I would expect only the refactoring I've right clicked on would be applied.
326,Expose a dropdown on the sidebar for extensions,True,False,,vscode,2025-10-13T14:53:35.839739,,"feature-request, api, ux, tree-views",1,,https://github.com/microsoft/vscode/issues/89243,"<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Expose a dropdown on the side bar (see screenshot) to extensions to allow users switch between views within a view container. This can allow an extension to scale as the number of views increases, without having the need for an extension to have multiple icons in the activity bar. It also keeps the number of icons in the activity bar manageable for the users. ![image](https://user-images.githubusercontent.com/4393177/73089497-35127600-3e8b-11ea-811c-4f82640df074.png)  @misolori"
327,Improve header(h1/h2/h3) styling in hover markdown,True,False,,vscode,2025-10-13T14:53:35.843415,,"bug, ux, polish, workbench-hover",1,,https://github.com/microsoft/vscode/issues/88417,"Our LSP server produces markdown for hover, and the way headers are rendered doesn't seem ideal. Two main issues:  # Font sizes are too large  This natural-looking markdown:  `````markdown # function `x`  ---  `void x(),` `````  renders with an extremely large title that's inconsistent with overall VSCode font sizes.  ![image](https://user-images.githubusercontent.com/548993/72149988-bd314f80-33a4-11ea-816e-f032e4837137.png)  There's a fairly easy workaround of using `<h3>` (`###`) instead, but this isn't ideal for language servers that are supposed to be portable across editors.  # Too much spacing  There's a lot of value in popups being unobtrusive, and the default margin of 1em h1/h2/h3 is very high for such a context.  For the following markdown: `````markdown ### function `x`  ---  `void x(),` ````` The current rendering is margin-heavy: ![image](https://user-images.githubusercontent.com/548993/72150443-d5ee3500-33a5-11ea-97a2-4178d6e6d8dd.png)  With top/bottom margin reduced to `0.5em`, IMO this is at least as easy to read: ![image](https://user-images.githubusercontent.com/548993/72150375-b525df80-33a5-11ea-82ed-33be95c9188b.png)"
328,Suggest widget has greyscale rendering,True,False,,vscode,2025-10-13T14:53:35.846431,,"feature-request, ux, polish, suggest, lcd-text-rendering",1,,https://github.com/microsoft/vscode/issues/86184,"Ref #85143   Parameter hints doesn't have this issue, but hover and suggest widget suffer from it.  Top to bottom are parameter hint, suggest and hover:  ![image](https://user-images.githubusercontent.com/4033249/70094049-82364200-15d6-11ea-95a9-a3eac4a81b77.png)  Version: 1.41.0-insider Commit: 97855786a014be2440751b038b373c3726e11fe8 Date: 2019-12-03T05:31:49.954Z Electron: 6.1.5 Chrome: 76.0.3809.146 Node.js: 12.4.0 V8: 7.6.303.31-electron.0 OS: Linux x64 4.15.0-55-generic"
329,"Make `editor.gotoLocation.multiple: ""goto""` state UX more discoverable",True,False,,vscode,2025-10-13T14:53:35.849286,,"ux, under-discussion, editor-symbols",1,,https://github.com/microsoft/vscode/issues/74585,"**Steps to Reproduce:** 1. Set `""editor.gotoLocation.multiple"": ""goto""` 2. `f12` on `IFileService` in https://github.com/microsoft/vscode/blob/87d3f3e77b5c7108babf8e86f70eedac5820bba2/src/vs/platform/files/common/files.ts#L20  **Request** We currently show the navigation state in the status bar:  ![Screen Shot 2019-05-29 at 2 28 22 PM](https://user-images.githubusercontent.com/12821956/58592762-0b328200-821e-11e9-999a-53eea621d961.png)  This is not very discoverable the first time you use this feature. It can also be hidden if you have terrible status bar cramping:  ![Screen Shot 2019-05-29 at 2 29 15 PM](https://user-images.githubusercontent.com/12821956/58592841-35843f80-821e-11e9-87ab-fffd00e968c3.png)     <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes"
330,Wasted space in the multiline search input,True,False,,vscode,2025-10-13T14:53:35.852986,,"feature-request, ux, search",1,,https://github.com/microsoft/vscode/issues/64328,"Testing #64270  <img width=""216"" alt=""screenshot 2018-12-04 at 13 42 34"" src=""https://user-images.githubusercontent.com/5047891/49442689-8fa1cc00-f7ca-11e8-9664-e774e7a2f424.png"">"
331,Workspace ... scrollbar area is totally invisible,True,False,,vscode,2025-10-13T14:53:35.856338,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/43936,"<!-- Do you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.21.0-ins - OS Version: win7x64  How about to make scrollbar area a little bit visible? Cause you don't even see where to click, when you want to scroll some hundreds of folders instantly.  For now it's totally invisible:  ![scrollbar area is invisible](https://user-images.githubusercontent.com/24613274/36354190-0e5a1078-14d9-11e8-8e5a-5b55d328fdc2.gif)"
332,Expose git diff functions outside of overflow menu,True,False,,vscode,2025-10-13T14:53:35.859702,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/43862,![screen shot 2018-02-16 at 2 00 08 pm](https://user-images.githubusercontent.com/156888/36331197-b6a5c006-1321-11e8-9c89-7cc24560c82f.png)  These commands like revert selected ranges etc are pretty commonly useful commands. Would make sense to extract them into buttons to the left of the overflow menu.  Consider git tools like SourceTree  ![screen shot 2018-02-16 at 2 01 23 pm](https://user-images.githubusercontent.com/156888/36331252-ed167630-1321-11e8-8b62-7449e69d3d20.png)
333,Support workspace projects / folders under different colors in sidebar and tabs,True,False,,vscode,2025-10-13T14:53:35.862576,,"feature-request, ux, themes, workbench-tabs, workbench-multiroot",1,,https://github.com/microsoft/vscode/issues/31308,"- VSCode Version: Nightly - OS Version: Any  Workspace feature is really useful as it is today, but could themes API be extended so to display different projects with different colors/nuances?   See:  ![projects_with_colors_in_vsc_workspace](https://user-images.githubusercontent.com/11835025/28514861-dd1a39b0-705b-11e7-9ed3-fca12a8cefe3.png)   It would be even better if tabs could have different colors, to resemble the project they belong to:  ![projects_and_tabs_with_colors_in_vsc_workspace](https://user-images.githubusercontent.com/11835025/28514909-062f4fca-705c-11e7-8376-17fbcd1a4130.png)  Thanks for all the beautiful code and the effort you put in this superb project.  Roberto."
334,Provide Task Runner viewlet,True,False,,vscode,2025-10-13T14:53:35.865513,,"feature-request, tasks, ux",1,,https://github.com/microsoft/vscode/issues/28235,"<!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  We did a Task 2.0 deep dive today and this issue collects the combined feedback received.   ### Task Properties  - echo should be true by default so that users get a better idea of the task executed - we should support flattening the JSON properties as we do with other settings (e.g `""terminal.echo"": true` instead of `""terminal"": { ""echo"": true }` - we should better separate task declaration from task customization. Currently both happens in the tasks array property and the differentiating element is the `customize` property.  ### Task Picker  The task picker should support a decription / detail message to better explain what the task does. We also discussed whether the task picker should support MRU which would automatically move the most used tasks up to the top without customization. If we provide a task panel (see below) such a MRU list could be useful there as well.  ### Task Customization  The task customization is currently instance based where the task instance is identified by a task id, which can be quite 'cryptic'. An alternative way would be to identify a task based on a type and a key that is defined by the type and therefore can vary from task runner to task runner. So instead of having something like: ```json 	{ 		""customize"": ""vscode.npm.run build"",	 		""taskName"": ""npm: run build"" 	} ```  a customization would look like this  ```json 	{ 		""customize"": { 			""type"": ""npm"", 			""file"": ""${workspaceRoot}/package.json"", 			""script"": ""build"" 		}, 		""problemMatcher"": [""$tsc""] 	} ```  where the structure of the identifying attribute is defined by the extension providing the runner support. In the example above the fact that a npm script is identified by the location of the package.json file and the script name comes from the npm extension. This might look different for task contributed by gulp of TypeScript  ### Problem Matchers  For task that execute a target of a task runner (e.g. gulp, npm, grunt) VS Code can't decide which problem matchers to attach. Since picking the right problem matcher currently requires editing the tasks.json file we should better support the user with this. We discussed the following ideas:  - always attach all known problem matchers if a task has no problem matchers. This might result in false positives and might require us to support removing problem matchers via a configuration mechanism. - we could help the user attaching a problem matcher by generically scanning the output for problems and suggest problem matchers that exactly match these. If selected we update the tasks.json file for the user.  ### Task panel  It was suggested to run tasks in its own panel instead of reusing the terminal panel. They should still be executed using the terminal to get ANSI control character support and other nice terminal features (e.g. Ctrl+C). The panel could offer additional features like:  - a task summary (execution time, exit code, ...) - the output of a task could be folded (like travis does for example) - allow for in place customization of a task (for example attach a problem matcher) without the user being forced to edit a tasks.json file.  We also discussed the need of a task viewlet but decided that this will not add any big additional value over the task picker and a separate panel.  ### Top Level Menu  We were also discussing whether the tasks deserve a top level menu. In general this was consider a good idea. However such a menu should be semantically not technical. So instead of naming it Tools or Tasks it would be better to offer top level menus like Build, Rebuild All, Clean, Run Tests. The downside of such an approach is that such a menu looks out of place if none of these entries trigger any meaningful action in the workspace (e.g. if a simple JS project is open at lease Build, Rebuild All and Clean don't make any sense)   ### Better Selfhosting  Would be great if we can improve the self hosting coverage of tasks. This is currently hard to do due to the fact how we build. But @dbaeumer will tweak our tasks.json to support more tasks currently run in the terminal (e.g run tests, linting, ...)"
335,Marked brackets range on scrollbar,True,False,,vscode,2025-10-13T14:53:35.869112,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/26604,"- VSCode Version:1.12.1 - OS Version:Linux  Steps to Reproduce:  1. Click on the code, inside the brackets. 2. Marked brackets range on scrollbar. Internal bracket marked with a main color. External brackets in gray (all). Same with more nesting brackets. ![brackets-range-on-scrollbar](https://cloud.githubusercontent.com/assets/16800535/26028968/9dececb0-382a-11e7-814b-fff32eecd0be.png) 3. As soon as one brackets, it's just the main color. ![brackets-range-on-scrollbar2](https://cloud.githubusercontent.com/assets/16800535/26028965/97c3ada6-382a-11e7-81fa-c72370054c10.png)   This will be very useful. Particularly for longer code blocks, so that you can easily see where it ends and where it starts."
336,Drop cursor missing if drop location === current cursor location,True,False,,vscode,2025-10-13T14:53:35.872463,,"ux, under-discussion, editor-drag-and-drop",1,,https://github.com/microsoft/vscode/issues/25401,<!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  Refs: #25338  IMO the current cursor location is less important that the drop indication. So the cursor should show the drop location style.  ![cast](https://cloud.githubusercontent.com/assets/1931590/25428184/5e0f94d4-2a75-11e7-9d52-fdbd3a533e72.gif)
337,Editor drag and drop mouse feedback missing,True,False,,vscode,2025-10-13T14:53:35.875532,,"ux, under-discussion, editor-drag-and-drop",1,,https://github.com/microsoft/vscode/issues/25391,"Refs: #25338  OS X, insider  1. Enable editor drag and drop and select some text 2. Drag that text 3. Notice that the editor cursor nicely updates however the mouse cursor does not update to reflect that I am dropping something. This leaves me puzzled as the user what is going on as there is no prominent feedback that I am actually dragging the text in the editor  It would be great if we could fix this as it would greatly increase the experinece imho Notice in the gif that I am dragging the text all the time while the mouse is unchanged  ![dnd](https://cloud.githubusercontent.com/assets/1926584/25426320/03ffde14-2a6f-11e7-9482-9e3274d2df66.gif)"
338,Problem saving keybindings,True,False,,vscode,2025-10-13T14:53:35.878482,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/25356,"<!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.11.2 and 1.12.0 - insiders - OS Version: Windows 10  -- Sorry for the English, I used Google Translator --  When I set a shortcut, if you press <kbd>Ctrl</kbd> + <kbd>k</kbd>, the VSCode is waiting for a second combination. Which works great.   But if I press any keyboard and then <kbd>Ctrl</kbd> + <kbd>k</kbd>, this key takes the function of <kbd>Ctrl</kbd> + <kbd>K</kbd> and always waits for a second combination.  Example: <kbd>n</kbd> <kbd>Ctrl</kbd> + <kbd>k</kbd>  If you type a text and press <kbd>n</kbd> it is waiting for the second combination.  I know the same open multiple ports for shortcuts, but maybe one maybe a setting where I only limit use to <kbd>Ctrl</kbd> + <kbd>k</kbd> to receive a second combination.  My suggestion is (I do not know if it's possible):  1- Limit second combination only to <kbd>Ctrl</kbd> + <kbd>k</kbd>, or until the user changes. 2- Whenever you have this situation, reverse the shortcuts automatically, either on the new screen or manually. If you typed <kbd>n</kbd> <kbd>Ctrl</kbd> + <kbd>k</kbd> it should interpret or edit the file for <kbd>Ctrl</kbd> + <kbd>k</kbd> <kbd>n</kbd> 3 - Prevent saving the shortcut key if it is wrong or prevents it from working."
339,Symbol outline multi-line highlight is visually inconsistent when interleaved with code lens,True,False,,vscode,2025-10-13T14:53:35.882008,,"feature-request, ux, editor-core",1,,https://github.com/microsoft/vscode/issues/23921,"If the symbol outline is highlighting an entry that spans multiple lines and there is a code lens within that range, the code lens line is not highlighted. See attached image.  It seems like the code lens line should also be highlighted in the same color.  - VSCode Version: 1.10.2, happens on 1.11 insiders as well. - OS Version: Win10  ![image](https://cloud.githubusercontent.com/assets/356714/24696929/29556e48-19a0-11e7-9522-1894e91ab250.png)"
340,Feature request: highlight problem indicator with color when problems exist,True,False,,vscode,2025-10-13T14:53:35.885142,,"feature-request, ux, themes, error-list",1,,https://github.com/microsoft/vscode/issues/22346,"<!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.10.2 - OS Version: Windows 7 SP 1 & Windows 10  For a better callout (those icons aren't very noticeable normally), it would be nice if when there are errors or warnings detected, it highlighted the respective icon (yellow for warning, red for error)."
341,Outline matching selections instead of highlight,True,False,,vscode,2025-10-13T14:53:35.888393,,"feature-request, ux, editor-theming, editor-highlight",1,,https://github.com/microsoft/vscode/issues/21898,"<!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.10.1 - OS Version: macOS 10.12.2  Steps to Reproduce:  1. Highlight a selection with multiple instances.  2. Look how hard it is to distinguish which instance is selected.  ![screen shot 2017-03-03 at 7 33 55 am](https://cloud.githubusercontent.com/assets/10407384/23555115/e1ab96e6-ffe4-11e6-9d82-687e859a8f26.png) ![screen shot 2017-03-03 at 7 36 55 am](https://cloud.githubusercontent.com/assets/10407384/23555118/e38522ac-ffe4-11e6-968d-7913e65f2b49.png)  There are three fundamental issues that this request entails:  1. When you make a selection and there are multiple instances, it's extremely hard to distinguish which one is actually selected. This image shows VSCode's standard Monokai theme. This is not a ""theme"" issue, users should be able to use any theme that is available in the marketplace.   2. When you make a selection, matching instances shouldn't be highlighted at all. Being highlighted indicates that they are also selected, which is not the case. So when I double click on a single word to select it, all the matching instances get highlighted too, creating the appearance that they are all selected.  3. The check that looks for matching instances should be _case sensitive_, so that when I select `contract`, a camel-case instance of `newContract` should not have that instance of contract highlighted."
342,Option to render proper scrollbar,True,False,,vscode,2025-10-13T14:53:35.892293,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/15106,"The current VS Code scrollbars (both vertical and horizontal) are OK, but I would prefer: - The scrollbars not to disappear when the mouse stops moving - The scrollbars to be a bit thicker, thus easier to click - An up and a down arrow at the top and bottom (or left and right of the horizontal one) to scroll one line per click - The scrollbar to jump ""towards"" where you click on empty space either side of the scroll handle, instead of the handle immediately jumping to where the mouse cursor is  In short, they should be like the Visual Studio 2015 scrollbars.  Maybe a setting could be introduced to render this more ""traditional"" type of scrollbar."
343,Triggering actions.find causes active match to lose its highlight.,True,False,,vscode,2025-10-13T14:53:35.895083,,"bug, ux, editor-find",1,,https://github.com/microsoft/vscode/issues/15067,"- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z) - OS Version: Windows_NT ia32 10.0.14393  Steps to Reproduce:  1. In any file, highlight the text to find. 2. Trigger the `actions.find` command with the keyboard (`Ctrl+F`). 3. Observe that the originally highlighted text is not highlighted in any way that distinguishes it as the active match or target for replacement.  Alternate Steps to Reproduce:  1. In any file, highlight the text to find. 2. Trigger the `editor.action.startFindReplaceAction` command with the keyboard (`Ctrl+H`). 3. Observe that the originally highlighted text is not highlighted in any way that distinguishes it as the active match or target for replacement.  Example of both Steps and Alternate Steps shown in the following gif. In the gif, you can see that whenever the Find/Find+Replace box is shown, the originally highlighted text is no longer marked as the active match, even though it is the active match.  This is a major problem because there is no way to confirm what the very first replacement will be.  ![vscode-find-replace](https://cloud.githubusercontent.com/assets/623736/20039981/9d36c112-a41c-11e6-9b6c-7c8151d255c0.gif)"
344,Mac: Provide a setting to hide the title bar and inline the window controls,True,False,,vscode,2025-10-13T14:53:35.897801,,"feature-request, ux, macos, titlebar",1,,https://github.com/microsoft/vscode/issues/12377,"Hello there, a lot of the standard apps in recent versions of macOS have started to inline their titlebar into their tabs, menu buttons etc. I assume this is mainly to save vertical space on laptops. However, like all UI trends, apps that don't quite keep up end up feeling old-fashioned 👯   I started a fork of VS Code that uses the inline style:  ![screen shot 2016-09-21 at 12 59 09](https://cloud.githubusercontent.com/assets/49038/18710082/332cefb6-7ffb-11e6-8303-338bee1d6c35.png)  There needed to be a few changes: - I moved the sidebar width to 76, to fit the traffic lights - I increased the height of the elements that act as the titlebar by one pixel, mainly so that they align with the centre position of the titlebar items - Allow mouse dragging via the sidebar, and the title elements  Fork: https://github.com/orta/vscode/tree/inline-titlebar Changes: https://github.com/orta/vscode/compare/master...mac-titlebar-inline  I realise that VS Code is a cross-platform project, and so these changes should _probably_ only be applied in the context of macOS, which I'm happy to look into with some advice (I don't have a windows/linux machine to hand for example).    I also know that no-one wants big unexpected UI changes on their OSS projects, so I've not made it as a PR, but I'd love to know if/what I can do to move this upstream?  _Sidenote:_ If someone can tell me how, I'm happy to make a downloadable build for people to try too, I couldn't find a way to do it - I'm still quite fresh to npm projects."
345,Offer code mark styles and gutter marks,True,False,,vscode,2025-10-13T14:53:35.901179,,"feature-request, ux",1,,https://github.com/microsoft/vscode/issues/9209,"_From @darkred on July 10, 2016 23:30_  _(Using VSCode 1.3.0 in win 10 x64 build 10586 with vscode-eslint extension 1.10.18)._  Currently the code marks(for errors and warnings) appear only as squiggly underline (i.e. as **spellchecker errors** in browsers, e.g. Firefox, Chrome): _(the error is in red, and the warning is in green)_ ![2016-07-11_020259](https://cloud.githubusercontent.com/assets/723651/16716650/b635a444-470b-11e6-82fc-90770e8bea05.png)  My suggestion is to offer more code mark styles (ideally  the **outline** style, as it highlights the errors/warnings the best way -see below- ) and **gutter marks** : _(with the errors to be in red, and the warnings to be in yellow, as ESLint itself uses these colors - not green)_ ![2016-07-11_020203](https://cloud.githubusercontent.com/assets/723651/16737733/59dedc70-479b-11e6-8da9-0789ade17143.png) ([here is another screenshot](https://sublimelinter.readthedocs.io/en/latest/_images/marks-outline-dark.png))  It's more easy to distinguish the errors this way.  Thank you  ---  _For reference SublimeLinter3 package offers [five different code mark styles](https://sublimelinter.readthedocs.io/en/latest/mark_styles.html) :_  - fill,  - outline   _(the default style)_, - solid underline,  - squiggly underline, and  - stippled underline  _and two types of gutter marks:_  - errors, and  - warnings  _Copied from original issue: Microsoft/vscode-eslint#99_"
346,Show quick open results as preview while navigating through them,True,False,,vscode,2025-10-13T14:53:35.904082,,"feature-request, ux, quick-open",1,,https://github.com/microsoft/vscode/issues/8939,- VSCode Version: 1.3.0 - OS Version: Windows 10 64bit & Mac OS X 10.11.3  Steps to Reproduce: 1. Open the Quick Open box 2. Type a file name that returns several results 3. A new Preview editor pops up and receives focus with the first result loaded into it 4. Scroll through the results in the Quick Open box and the Preview editor changes to the file that's highlighted 5. Selecting a result will fully open the file. Canceling can close the Preview editor or leave it open. I'd prefer if it closed the preview.
347,Add find all button,True,False,,vscode,2025-10-13T14:53:35.907637,,"ux, editor-find",1,,https://github.com/microsoft/vscode/pull/7559,Fixed #14836 ![demo](http://ww2.sinaimg.cn/mw1024/534b48acgw1f4rjrts0k1g20dw0b40xb.gif)
348,Implement an overflow design for status bar entries,True,False,,vscode,2025-10-13T14:53:35.911304,,"feature-request, ux, workbench-status",1,,https://github.com/microsoft/vscode/issues/6651,"Hello,  For now, when you add a lot of items to the statusbar via plugins, only first few items are displayed and the remaining items are hidden.  It would be great to have a dropdownlist which will show all those remaining items.  I hope such a feature could enhance vscode.  Thanks in advance for your comments."
349,Add setting to automatically hide the side bar,True,False,,vscode,2025-10-13T14:53:35.914143,,"feature-request, ux, layout",1,,https://github.com/microsoft/vscode/issues/3742,Would it be possible to add a option to automatically hide the files explorer after a configurable duration ?
