Título: Adjust extension badge positioning in extension list items
Descripcion: Modify the positioning of the extension badge to improve its alignment within the extension list items.  Before: <img width="424" height="94" alt="image" src="https://github.com/user-attachments/assets/49e552b6-7caa-4227-ad32-5578b93a0d3c" />   After: <img width="336" height="89" alt="image" src="https://github.com/user-attachments/assets/86efe97c-f0f4-40cd-9280-0505ba4f5a66" />
---
Título: Improve Settings Navigation with Grouping and Breadcrumb Navigation
Descripcion: ## Problems  1. **Poor Scannability**: Long, flat lists of settings are difficult to scan and navigate 2. **Wasted Vertical Space**: Current navigation consumes too much vertical space 3. **Poor Discoverability**: Hard to find settings without knowing exact search terms 4. **Accessibility Issues**: Input field contrast may not meet WCAG standards across all themes  <img width="1268" height="783" alt="Image" src="https://github.com/user-attachments/assets/c3df73d6-e318-4930-a33c-2ca311c1f60d" />   ## Proposed Solution  ### 1. Visual Grouping - Group related settings under collapsible section headers - Add visual separators between groups - Example: "Editor Typography" and "General Typography" sections within "Chat > Appearance"  ### 2. Horizontal Breadcrumb Navigation - Replace vertical indicators with horizontal breadcrumbs (e.g., "Chat > Appearance") - Make breadcrumbs clickable for easy navigation - Position at top to maximize vertical space for settings  <img width="1268" height="783" alt="Image" src="https://github.com/user-attachments/assets/ec3e33b1-b6fb-4cb1-b08e-d9f263b65c07" />  ## Goals  - Increase settings discoverability and reduce search time - Improve spatial awareness within settings hierarchy - Reduced cognative load - Ensure WCAG 2.1 Level AA compliance  ## WCAG Accessibility Requirements  **Must meet these standards:**  - **Contrast (1.4.11, 1.4.3)**:    - Input fields/borders: 3:1 minimum contrast ratio   - Normal text: 4.5:1 contrast ratio   - Large text (18pt+): 3:1 contrast ratio    ## Implementation Notes  - Test against light, dark, and high-contrast themes - Maintain search functionality across grouped content - Audit all input field colors for WCAG compliance  ## Testing Checklist  - [ ] Input field borders meet 3:1 contrast - [ ] Full keyboard navigation works - [ ] Screen reader properly announces groups - [ ] Windows High Contrast Mode compatibility - [ ] All themes meet WCAG AA standards  ## Related issues  - https://vscodeteam.slack.com/archives/C1C2M1KEZ/p1760780786274819?thread_ts=1760747040.544629&cid=C1C2M1KEZ - https://github.com/microsoft/vscode/issues/181976 - https://github.com/microsoft/vscode/issues/93024
---
Título: Search default enabled control in odd place
Descripcion: I would expect the only enabled control by default to be at the start of the list, not in the middle  Screenshot:  <img width="405" height="90" alt="Image" src="https://github.com/user-attachments/assets/10873b7b-4f0f-4b63-af52-d3e9d1cbe7f3" />  By placing `Open new search editor` at the start, it would align with other views with `open/new/create` actions:  <img width="397" height="40" alt="Image" src="https://github.com/user-attachments/assets/3a2161ac-15c7-4f69-adb7-150b7b39cdfd" />  <img width="403" height="69" alt="Image" src="https://github.com/user-attachments/assets/c77f5f6e-2778-4483-bf25-67f8703c5a37" />  Environment Information: - VS Code Version: 1.106.0-insider - OS: macOS (arm64) - Workspace: 2 folder(s) open  --- This issue was filed using the Issue Filer extension
---
Título: Chat: retrying a request shows my face
Descripcion: Notice how suddenly my name and photo appears when I retry a chat request:  <img width="553" height="261" alt="Image" src="https://github.com/user-attachments/assets/b45632f3-d1db-4b27-91b6-0dffabe4fc09" />  This is quite inconsistent with the rest of the UI where neither my handle nor photo appear.  //cc @isidorn @mrleemurray
---
Título: Spinners rotate at different speeds
Descripcion: It also looks like they are using different easing curves:  ![Image](https://github.com/user-attachments/assets/4458dffa-e4e9-47a5-99e2-d66f6d504695)  --- This issue was filed using the Issue Filer extension
---
Título: Allow customizing SCM branch button size
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> **Problem**: The branch checkout button in the SCM view takes up significant space, especially when working with multiple repositories.  **Proposed solution**: Add settings to control the size/appearance of the SCM branch button: - `scm.compactBranchButton`: Show only the branch icon without text - `scm.branchButtonSize`: Control font size and padding  **Use case**: Users with many repositories open want a more compact SCM view while still having quick access to branch switching.
---
Título: Allow hiding of welcome prompts
Descripcion: Related: https://github.com/microsoft/vscode/issues/266374 Related: https://github.com/microsoft/vscode/pull/271596  The context menu on welcome prompts should include a `Hide Prompt` option  <img width="352" height="689" alt="Image" src="https://github.com/user-attachments/assets/3aa92910-e2da-42ec-b6c0-fee01aedb9f4" />
---
Título: Rename prompt icon inconsistent with rename chat history icon
Descripcion: imo the `pencil` is a clearer signal to "rename" (or I was used to it after renaming so many chats in the history). The icon in the prompt quickpick looks more like a "find an replace" icon, I didn't realize it was intended to rename.  <img width="1283" height="660" alt="Image" src="https://github.com/user-attachments/assets/c842599b-69fd-4e0d-b24c-c8fd41108274" />  <img width="1346" height="420" alt="Image" src="https://github.com/user-attachments/assets/90eface9-59b2-488a-b3b6-e5727c2df6c5" />
---
Título: Chat placeholder not responsive to smaller height windows
Descripcion: Content should respond to smaller height viewports.  Screen Recording:  ![Image](https://github.com/user-attachments/assets/9a1c0abf-b211-4bcc-92c8-584be0a4eeab)  --- This issue was filed using the Issue Filer extension
---
Título: Additional actions bar item renders differently to other items on hover
Descripcion: When the chat panel has a thinner width, the `CHAT` label converts to an icon button with an ellipsis. On hover, this button renders differently:  - **20 x 20px size** instead of 22 x 22px - **0px border radius** instead of 5px  Screenshot:  <img width="278" height="71" alt="Image" src="https://github.com/user-attachments/assets/b646f3c4-3937-46b2-947d-32175bfdf983" />    UX/Design Issue: This issue is related to user interface, design, or user experience.  Environment Information: - VS Code Version: 1.106.0 - OS: macOS (arm64) - Workspace: 0 folder(s) open  --- This issue was filed using the Issue Filer extension
---
Título: revised prompt titles and tile width
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. --> Removed '/' from prompt title, revising font size and weights, changed tile width to match input box width.   https://github.com/user-attachments/assets/a272fbd3-9644-4779-b1ae-081b42c52d96
---
Título: Improve count badge CSS padding for better alignment and layout
Descripcion: Adjustments to the padding in the count badge CSS to make a perfect circle with single digits
---
Título: Reduce the width of the default activity bar
Descripcion: With the development of the new codicon font, there is an opportunity to reduce the width of the default Activity Bar. Currently the width is `48px` - this issue will track the exploration of a smaller width & the knock-on size change of the codicons & 3rd party extension icons.  <img width="439" height="57" alt="Image" src="https://github.com/user-attachments/assets/2863043e-81f1-437a-8ebb-3dff3da5dfd6" />  <img width="395" height="78" alt="Image" src="https://github.com/user-attachments/assets/c142dfa3-640b-49fc-bf05-2885a9a50b35" />  <img width="1249" height="111" alt="Image" src="https://github.com/user-attachments/assets/d96ced12-4152-4db5-b00c-92e0cc9e6b30" />  <img width="550" height="69" alt="Image" src="https://github.com/user-attachments/assets/72dae6c2-c5b9-4788-8d37-c3d8795339f7" />
---
Título: Increase status bar height, icon size, text size
Descripcion: There is an opportunity to make the statusbar content more legible & mitigate any future minimum target size issue.  Current font size is `14px`, which causes sub-optimal icon rendering as designs are made on a 16px grid - updating to `16px` would ensure crisper rendering, especially on lower-resolution displays. This would also better align icon sizes across the product UI.  To reduce size differences between icons & text, I propose to increase the font size from `12px` to `13px`. This does come at a horizontal space cost. We could run an experiment to understand impact for customers.  Increasing the statusbar height from `22px` to `24px` would make it pass minimum target size requirements, while only increasing `2px` in height. This slight increase would also provide vertical padding for the larger icons.  <img width="720" height="215" alt="Image" src="https://github.com/user-attachments/assets/f1b2233f-61ef-46b4-b918-e17ce56004d9" />
---
Título: chat empty state "plan" is the only thing that has a blue border on hover
Descripcion: https://github.com/user-attachments/assets/89fd3b5a-47ad-4927-88ed-443e96f93b49  i think this is kind of strange. we should just use the regular hover and only have border on `focus`, not `hover`
---
Título: Update button styles for high contrast mode
Descripcion: Enhance button background color and add a border to the chat action bar for better visibility in high contrast mode.  **Before** <img width="737" height="638" alt="image" src="https://github.com/user-attachments/assets/9bdbca5f-5892-4da1-adc4-29fe960154f6" />    **After** <img width="717" height="586" alt="image" src="https://github.com/user-attachments/assets/44d79ddc-052e-45aa-ae02-4ddaa1c58860" />
---
Título: Increase activity bar icon size
Descripcion: Adjust the size of icons in the activity bar for improved visibility and usability.
---
Título: Add space in string for new editor empty state
Descripcion: <img width="858" height="223" alt="Image" src="https://github.com/user-attachments/assets/ca951203-4e21-46fb-a5c1-50c60fcef69b" />  We should reconsider what this string should be in general, but at the very least we need to add a space between GitHub and Copilot
---
Título: Add high contrast theme support for settings editor links and buttons
Descripcion: Implement high contrast theme support to enhance color visibility for links and buttons in the settings editor.  Before: <img width="1064" height="250" alt="image" src="https://github.com/user-attachments/assets/6872a055-e627-401b-bacb-32af8319a6cd" />  After: <img width="1130" height="608" alt="image" src="https://github.com/user-attachments/assets/65e6f564-3399-4dc8-b126-21fd84736554" />
---
Título: Chat Context Clearing
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **Chat Context Clearing:** Users tend to remain in the same chat session rather than starting new ones, causing context accumulation. This leads to: Responses becoming less precise, an increase in token usage and response time per request, an increase in operational costs per response.  We have to reduce context accumulation by guiding users to a new session between distinct tasks, while offering an easy path back to previous sessions.   **Design Considerations:** Direction A (current implementation, needs revisit. cc: @isidorn ) - Start a new chat session on reload/restart. - Show previous 3 sessions in empty state as quick entry point to closed session.   Direction B (cc: @bpasero) - Show previous chat session in dimmed state on reload/restart. - Start new session: Use placeholder text (or a different UI element) to indicate that next request will start a new session.  - Return to previous (dimmed) session: Click dimmed session and send request.   Direction C (cc: @joaomoreno)  - Explore alternatives: UI nudges users to create new sessions between tasks (manual approach), or new sessions are started automatically (preferred).    **Open Questions:**  What is the frequency of vscode reloads or restarts per user session? How many requests are typically sent before a user starts a new chat session? At what token threshold do users typically start a new session (instead of continuing in same session)? What triggers users into starting a new session (errors, latency, task change)?  **October Goals:** Conduct light competitive analysis and review current telemetry data to answer open questions. Create high fidelity prototypes illustrating three distinct design directions for reducing context accumulation. Gather quick feedback from users via unmoderated usability testing. Use internal and user feedback + telemetry to define North-Star vision and MVP feature set.  **November Goals:** Work with @justschen to implement feature set behind an EXP setting enabled for a percentage of Insiders. Continue with larger rollout if solution indicates a reduction in context accumulation per request.  Related issues: https://github.com/microsoft/vscode/issues/251187#issuecomment-3363506574, https://github.com/microsoft/vscode/issues/266075 [WIP Figma](https://www.figma.com/design/ZrCYw0Mi0Z9GsRGKpekhCl/Chat--July-2025---Present-?m=auto&node-id=7044-181736&t=Xgd8fzMtAYfcStpi-1)
---
Título: Empty chat history item
Descripcion: I found a chat history item that has no title:  <img width="3286" height="752" alt="Image" src="https://github.com/user-attachments/assets/4a95d047-1dd8-4813-a2e1-71875dea4b5b" />  I am not sure how I got there, but we need to fill in a placeholder if there is no title.
---
Título: Overlapping chat parts in short-ish window
Descripcion: If we can't fit everything, we should have some reasonable overflow behavior  <img width="587" height="422" alt="Image" src="https://github.com/user-attachments/assets/7ed438d2-1078-4d0a-9986-67825446e609" />
---
Título: Improve Issue Reporter UX - design explorations
Descripcion: As part of @Yoyokrazy 's work on overhauling the Issue Reporter feature, there is an opportunity to greatly reduce the friction of submitting issues & feedback & align the UI to the rest of the product. This initial effort will consist of exploring various design proposals to gather feedback from the team for use in generating an implementation plan
---
Título: Codicon refresh | Alignment with Fluent iconography
Descripcion: This effort is around modernizing the codicon design language & bringing closer alignment to the Visual Studio icon set & Fluent language.  This will involve updating, testing & iterating on ~500 icons to ensure:  - at-a-glance metaphor understanding - visual consistency - legibility at low resolution - legibility in all built-in themes - minimal impact to the overall product UI, & creating issues for impacts  > Note: new icons may be created during this process  This effort also forces closer alignment between the Figma design files & codicon library / repository.
---
Título: Implement design tokens for font sizes
Descripcion: Parent Issue [#248725](https://github.com/microsoft/vscode/issues/248725)  To bring consistency to current & future UI implementations, develop a set of CSS variables for the product font ramp & adopt across the product.
---
Título: MacOS - Window corner border is cut off in high contrast mode
Descripcion: Screenshot:  <img width="232" height="180" alt="Image" src="https://github.com/user-attachments/assets/90d2fa99-b4cf-4f52-9a45-2f679605e738" />  <img width="198" height="170" alt="Image" src="https://github.com/user-attachments/assets/736a5bb6-a341-4fc5-b323-71df8dc5946c" />   Environment Information: - VS Code Version: 1.105.0-insider - OS: macOS (arm64) - Workspace: 2 folder(s) open  --- This issue was filed using the Issue Filer extension
---
Título: Extract elements line-height values to CSS variables
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  When developing custom UI elements to be presented in VS Code, the rule of thumb is to reuse built-in CSS variables to match the workbench style. Basic examples are:  ```text --vscode-font-family --vscode-font-size  // Or for a specific element type  --vscode-button-foreground --vscode-button-background ```  There is a fundamental CSS variable that is missing: `line-height`.   Using the correct line height allows pixel-perfect alignment of custom elements, or - at least - it allows matching how VS Code aligns things.  <img width="371" height="501" alt="Image" src="https://github.com/user-attachments/assets/6b006301-554d-435d-a02b-0ffc4512e595" />
---
Título: AI-First Profile MVP
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **AI-First Profile MVP:** We plan to update user profiles to support AI-first workflows (profile contents for chat configurations, profile descriptions, layouts that center AI) with the goal of providing AI-first profile templates. Current templates are not optimized for AI-first scenarios.  **October Goals:** Update Profiles UI to include descriptions, contents for chat configurations (prompts, instructions). (cc: @sandy081)   Define jobs to be done and create an AI-first profile to share for internal feedback.   Address accessibility concerns: https://github.com/microsoft/vscode/issues/223297#issuecomment-3383200893  **Design Considerations:** What are the discover and onboard strategies? Which AI features should be configured at a profile vs workspace level?  **November Goals:** Evaluate internal feedback and conduct unmoderated testing on set up, usage, and management of AI-first profiles to determine next steps beyond MVP (exploring concepts like: centrally managed sharable profiles, generated descriptions and JSON comments indicating differences between profiles, etc). (cc: @cwebster-99)   Related feature requests https://github.com/microsoft/vscode/issues/267269, https://github.com/microsoft/vscode/issues/224725  <img width="675" height="286" alt="Image" src="https://github.com/user-attachments/assets/70e521f6-908f-48ff-b806-ffa62bac3ae7" />
---
Título: Chat Session Branching MVP
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **Chat Session Branching MVP:** This feature will allow users to branch off from a chat session or llm response to explore alternatives or delegate steps of a larger workflow to coding agents.   **Current Limitations:**  Limited worktree support for parallel chat sessions editing the same file. This MVP will limit branching to one level deep (no nested branching, yet).  **October Goals:** Enable feature MVP behind EXP setting, dogfood internally and enable for 5-10% of insiders. Track telemetry points (number of branching events, number of requests before branching, longevity of branched sessions, coding agent delegation, chat mode, model) to build accurate user flows. (cc @bhavyaus)   Define jobs to be done and create three high fidelity prototype variations. Conduct unmoderated usability testing. Use testing results to define golden scenarios. (Charles)  Share successfully tested high fidelity prototype (demonstrates real world examples that fit into real user workflows) on X to gauge public responses and funnel users to EXP setting. (Olivia)  **Design Considerations:** How will we visualize relationships between branches as nested branching scales? Is there an opportunity for adaptive surfacing entry points or in the moment education? Current entry points may clutter the UI. What is the mental model for chats as context, are we treating the main chat as a hub with spokes?  **November Goals:** Review telemetry and public/internal qual data to determine next steps beyond MVP. (cc: @cwebster-99)  Related feature request https://github.com/microsoft/vscode/issues/258271 [MVP WIP Figma](https://www.figma.com/design/ZrCYw0Mi0Z9GsRGKpekhCl/Chat--July-2025---Present-?m=auto&node-id=7979-110234&t=vPZr605wrb8plrsU-1)  https://github.com/user-attachments/assets/8912c0a6-b1a7-4742-b847-5217dd48b9aa
---
Título: No bottom padding in inline chat
Descripcion: Bug Description: No bottom padding in inline chat  <img width="794" height="273" alt="Image" src="https://github.com/user-attachments/assets/4e05a571-a5a6-4005-8e35-40024a811600" />  Increase bottom padding to improve layout.
---
Título: Responsive chat panel (dynamic compression)
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. --> CSS solution for responsive chat panel  https://github.com/user-attachments/assets/0dec2072-b2b7-4e1a-afe6-f1970b2b2a4b
---
Título: VS Code Figma Component Update: Menu
Descripcion: - [x] check out component - [x] Fix dark/light mode issues - [ ] issue with key labels in light mode https://github.com/microsoft/vscode/issues/266464 - [x] icon issue - [ ] Fix icons
---
Título: revived new chat button in empty state
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->  'New chat' button now shows in empty state when chat history is enabled. <img width="429" height="156" alt="Screenshot 2025-10-02 at 2 44 41 PM" src="https://github.com/user-attachments/assets/8a73eea0-4528-428b-a64f-e2787fa45fdf" />
---
Título: VS Code Component  Update: Status Icons
Descripcion: We need to make the icons for Status SVG. However, doing so will have a direct impact on areas where those icons are sized with font size, such as the dialog.  https://www.figma.com/design/AJnTgc00iEI0KTVdyoN997/Visual-Studio-Code-Toolkit?node-id=2608-38358&t=9twUli3OAKXTD9uj-4  <img width="151" height="285" alt="Image" src="https://github.com/user-attachments/assets/f40ad239-764c-4ebd-ace2-50134a477a7b" />
---
Título: Editor overlay widgets do not have backgrounds in high contrast dark theme - unreadable
Descripcion: Bug Description: Editor overlay widgets do not have backgrounds in high contrast themes - unreadable  `--vscode-button-background` is not defined in hc-dark, with no fallback value.   Screenshot:  <img width="327" height="150" alt="Image" src="https://github.com/user-attachments/assets/946e9524-9517-439f-9cdf-4971cf763482" />  Navigation widget  <img width="109" height="58" alt="Image" src="https://github.com/user-attachments/assets/4b703453-c1b8-4a3a-9a17-02f6e061e360" />  Individual change widget   Updating these values in dev tools looks like this:  <img width="635" height="185" alt="Image" src="https://github.com/user-attachments/assets/384afc64-cedd-487f-9506-188f9a0db6d7" />  --- This issue was filed using the Issue Filer extension
---
Título: Enhance action label styling for high-contrast themes
Descripcion: Improve the styling of action labels in high-contrast themes by adding outlines for non-uri-icon elements and adjusting the wrapper for uri-icons to prevent masking issues.
---
Título: replaced frog with chat sparkle
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->  Removed frog icon and revised welcome title.  <img width="598" height="354" alt="Screenshot 2025-10-02 at 8 27 33 AM" src="https://github.com/user-attachments/assets/f7a256fa-9db6-4215-a1c9-ceafa044c04d" />
---
Título: Add hover and focus styles for extension contributed action item labels in sidebar
Descripcion: Introduce new styles for hover and focus states of extension contributed action item labels in the sidebar to align user experience.  Addresses: #269184
---
Título: Inconsistent hover states for extension contributed side bar buttons
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> When hovering over chat extensions in the secondary sidebar, hover states are inconsistent with product contributed buttons.   https://github.com/user-attachments/assets/59a1d8a3-3ca8-41a9-aedd-d154c66b2eef  CC: @hawkticehurst
---
Título: Better search header? to account for mcp server
Descripcion: Testing #268910  Should we change the wording `Search extensions...` to include mcp? I'm not sure how much we want to additionally hint for mcp to benefit visibility.   <img width="316" height="985" alt="Image" src="https://github.com/user-attachments/assets/cd9d9097-ac78-4703-ac82-bda62f74e386" />
---
Título: Improve status bar item hover colors for accessibility
Descripcion: Enhance visibility and accessibility of status bar items by updating hover background and foreground colors for both light and dark themes.
---
Título: Inline chat for a chat session model picker does not apply to delegated sessions
Descripcion: When I send additional input to a chat session, e.g. on a diff hunk, the model picker should adjust to the model I picked in the chat session:  <img width="3002" height="1488" alt="Image" src="https://github.com/user-attachments/assets/a9df563d-8344-42ac-89af-bee64794c0a7" />
---
Título: Can't tell if marketplace item is MCP server
Descripcion: Testing #268910  It would be helpful to have something in the view or the webview that indicates that this is an MCP server and not an extension.  <img width="3473" height="978" alt="Image" src="https://github.com/user-attachments/assets/ee112c52-b1a9-47b8-94ad-a953884944aa" />
---
Título: Half pill shaped warning for MCP unclear to me
Descripcion: Testing #268976  When cancelling the GitHub MCP servers ask to sign in with GitHub I am left with this:  <img width="392" height="130" alt="Image" src="https://github.com/user-attachments/assets/97fe0451-4af6-4e46-8cdf-23227e72ed20" />  There is a server icon on the left and the warning icon on the right. Both seem to have the same hover though.   I have to say this UI is both confusing and looks partially broken.  //cc @mrleemurray @hawkticehurst @joaomoreno @isidorn
---
Título: suggested prompt style and reposition
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. --> Adjusts suggested prompts style and reverts disclaimer text positioning. Minor impact on pre-install tiles.  https://github.com/user-attachments/assets/a4672a49-1960-4656-8c89-ae2d9e6aaa60  <img width="1728" height="1117" alt="Screenshot 2025-09-29 at 8 23 10 PM" src="https://github.com/user-attachments/assets/02508f28-b491-45f7-8f9f-85ea9890c81b" />
---
Título: Add context button label
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Show 'Add context...' button label if no context is attached.
---
Título: Chat: Model picker value should be cached
Descripcion: The model picker currently doesn't show up a few good seconds after startup. We should really cache these models as best we can. Then:  - If the model list didn't change since the last exec, all good, - Otherwise:   - If the currently selected model is still there, all good,   - Otherwise, just switch the user to Auto (or next best thing).  https://github.com/user-attachments/assets/8d69ec5e-6d12-41e3-a3ff-ffac9d33f3d3
---
Título: "Continue waiting..." controls still interactive after the command has completed
Descripcion: Steps to Reproduce: 1. Let copilot trigger a process with an unknown duration (e.g. `npm test`) 2. Do not provide a response to "Continue waiting?" dialog 3. If the process completes before the 2 minute limit, the Yes / No buttons will still be visible & clickable   Expected Behavior: I expected the Yes / No buttons would be hidden once the process had completed   Actual Behavior: The Yes / No buttons remained visible (& clickable). Clicking the buttons hides them.    Screenshot:  <img width="523" height="248" alt="Image" src="https://github.com/user-attachments/assets/a6bfac5a-d194-4f28-9a47-8a77cf466a5e" />  --- This issue was filed using the Issue Filer extension
---
Título: Create new chat icon `+` isn't shown on empty chats
Descripcion: I noticed that + isn't shown on empty chats, which makes logical sense but may not be best UX since it's a learning opportunity when a user opens chat for the first time and explores it.
---
Título: Vs code avatar issue
Descripcion: Issue: In VS Code, the signed-in user’s avatar is not displayed properly. Expected: Similar to Visual Studio, the avatar should at least show initials (first and last name letters) when no profile picture is available. Impact: Causes confusion and led to accidental code commits under the wrong account.  Reference image from visual studio which I would like to have replication  ![Image](https://github.com/user-attachments/assets/de8e8f4d-fbd2-43ef-be20-29a7d114a88e)
---
Título: `Copilot Code Review` button does not overflow with ellipsis in smaller panel sizes
Descripcion: Expected Behavior:  I expected the button to truncate it's text with an ellipsis like the other buttons in the view    Screenshot:  <img width="190" height="692" alt="Image" src="https://github.com/user-attachments/assets/af597bec-2aa4-42d0-810a-b3f50b1ec371" />    UX/Design Issue: This issue is related to user interface, design, or user experience.  Environment Information: - VS Code Version: 1.105.0-insider - OS: macOS (arm64) - Workspace: 4 folder(s) open   --- This issue was filed using the Issue Filer extension
---
Título: Theme Light High Contrast - code link has low contrast
Descripcion: Type: <b>Bug</b>  When implementing a VSCode extension, wrapping `<code>` into a link `<a>` leads to no contrast between link text itself and a background. Other default themes looks good.  ER: color of the text is white, not dark blue.  <img width="218" height="103" alt="Image" src="https://github.com/user-attachments/assets/60e8ff0f-98e6-4535-a414-0c47cc3bef1a" />  <img width="581" height="84" alt="Image" src="https://github.com/user-attachments/assets/6154c8bd-1376-4b35-8552-4e740df878be" />  <img width="438" height="248" alt="Image" src="https://github.com/user-attachments/assets/7e1d4f05-2c41-4a02-a0de-35823983a77f" />  VS Code version: Code 1.104.2 (e3a5acfb517a443235981655413d566533107e92, 2025-09-24T11:21:37.073Z) OS version: Darwin arm64 24.6.0 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Apple M2 Max (12 x 2400)| |GPU Status|2d_canvas: enabled<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: enabled_on<br>trees_in_viz: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|4, 3, 2| |Memory (System)|64.00GB (2.78GB free)| |Process Argv|--crash-reporter-id 4cc8a9cc-e293-4d3d-b150-a83171749e52| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (11)</summary>  Extension|Author (truncated)|Version ---|---|--- esbuild-problem-matchers|con|0.0.3 vscode-eslint|dba|3.0.16 RunOnSave|eme|0.2.7 cpptools|ms-|1.27.7 nrf-connect|nor|2025.9.798 nrf-connect-extension-pack|nor|2025.4.4 nrf-devicetree|nor|2025.8.140 nrf-kconfig|nor|2025.9.123 nrf-terminal|nor|2025.8.103 gnu-mapfiles|tro|1.1.0 cmake|twx|0.0.17   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 pythonvspyt551:31249599 binariesv615:30325510 nativeloc1:31344060 dwcopilot:31170013 dwoutputs:31242946 copilot_t_ci:31333650 e5gg6876:31282496 996jf627:31283433 pythonrdcb7:31342333 usemplatestapi:31297334 6518g693:31334701 aj953862:31281341 cs4_fixed:31391938 nes-set-on:31351930 6abeh943:31336334 aa_c:31379599 0cj2b977:31352657 cloudbuttont:31379625 todos-0:31390406 treatment_gpt5applypatchexclusively:31392058 3efgi100_wstrepl:31382709 metis-embeddings:31388492 trigger-command-fix:31379601 auto_model_enabled:31385282 use-responses-api:31390855  ```  </details>  <!-- generated by issue reporter -->
---
Título: Rich hover for chat history
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Removed hover description in empty state chat history. Does not provide value when chat titles are displayed in full. For next phase, consider using rich hover for both command palette and empty state history:  > Here is an idea: what if we made the hover really show more info, like how many files changed, which model, the duration, the token use? That might also make it easier to relate to the chat session? - @bpasero   > SCM graph rich hover example: > <img width="1954" height="488" alt="Image" src="https://github.com/user-attachments/assets/55d069ac-b85f-41c2-b44d-ad48867d8fd6" />
---
Título: Empty state chat history 2.0
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->  Redesign of history in chat empty state: 1. Adds right click menu to configure empty state settings and hide chat history (plan is to eventually set setting as default and remove, future proofing hide/show) https://github.com/microsoft/vscode/issues/267522, https://github.com/microsoft/vscode/issues/266447 2. Fixes overlapping disclaimer text and inconsistent padding https://github.com/microsoft/vscode/issues/267430, https://github.com/microsoft/vscode/issues/265071 3. Fixes hover state overlap with history entries https://github.com/microsoft/vscode/issues/266373 4. Removes secondary toolbar with history title and icon, replaces with link to open workspace chat history https://github.com/microsoft/vscode/issues/267860  https://github.com/user-attachments/assets/52a59735-130e-4208-bfb9-b2b946ca97c5  _Closing individual PRs in favor of this one. CC: @hawkticehurst @justschen @mrleemurray_
---
Título: Todos don't truncate with elipses
Descripcion: <img width="352" height="273" alt="Image" src="https://github.com/user-attachments/assets/f2f079e3-4340-4bb5-89c1-ff150e159dc2" />
---
Título: Removed history toolbar, replaced with chat history link
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->  Revised chat history in empty state. Removed secondary toolbar and added chat history link. Addresses https://github.com/microsoft/vscode/issues/267860 <img width="704" height="154" alt="Screenshot 2025-09-23 at 11 30 56 AM" src="https://github.com/user-attachments/assets/8202cad8-d2a1-4dca-8d2e-d0b9f16aed02" />
---
Título: fixed overlapping disclaimer text
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->   Fixes overlapping disclaimer text in chat empty state: https://github.com/microsoft/vscode/issues/265071 <img width="177" height="308" alt="Screenshot 2025-09-22 at 9 48 20 PM" src="https://github.com/user-attachments/assets/4f325361-82ef-40ed-8145-58840be10401" />
---
Título: Don't auto-open files while the agent is generating suggestions
Descripcion: As we scale our use of agent mode and agent mode's ability to make edits to many files, we should remove the behavior that auto-opens files in the editor while the agent is making changes.   Users can still 'watch' these changes by opening the file from the working set area, but if they're multi-tasking or spinning off multiple long-running tasks they can focus on something in the editor and not be interrupted by the agent opening a file unexpectedly.
---
Título: Hide the 'Keep' 'Undo' and diff buttons on the working set until changes are complete
Descripcion: Problem:  Today while code suggestions are generating we show the 'keep' and 'undo' buttons as disabled. These items are non-interactive and add more visual noise to the UI.   Suggestion:  Hide the 'keep', 'undo', and diff buttons while the code is generating, then show when the file changes are ready for review. This will bring further attention to that area and make it more clear what the current state is (as opposed to when folks are watching the chat or checking in while it's in progress). Furthermore, if there are tool calls or confirmations that utilize a primary button while the agent mode is in progress, then focus can remain on that as the action to focus on.  <img width="1268" height="783" alt="Image" src="https://github.com/user-attachments/assets/3af9c716-f8b8-4106-8e94-2d81fd9377c2" />
---
Título: Restyle the tool overlay to use secondary colors
Descripcion: Suggested changes to the toolbar overlay for reviewing file diffs from chat: - Make the overlay toolbar for the file AND individual changes the secondary button color instead of primary - Replace the 'keep' and 'undo' text with icons (same icons that show on hover when you open the file from the list of suggested changes in chat) - Put "X of Y" between the arrows so it's more clear what they're related to? - If there needs to be an additional action here, a) use it sparingly, b) put on top of the toolbar so toolbar is always in consistent location, and c) use primary color  UX Mock: <img width="1268" height="815" alt="Image" src="https://github.com/user-attachments/assets/a804b8b9-614f-408f-bc80-a89d6f8c46ca" />
---
Título: Chat empty state history preview: Remove 'Show more...' from workspace history in command palette
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Under setting `chat.emptyState.history.enabled`, when user clicks 'Chat history...' to open workspace history in command palette, show full scrollable history by default. Do not hide any sessions by default and remove the option to 'Show more...'.  <img width="615" height="324" alt="Image" src="https://github.com/user-attachments/assets/56bf317d-7f60-4296-a0c6-e29bfc79dace" />   > Clicking on Show History - shows the quick pick, which is good. But now that quick pick should not have an action "Show More" - that is exactly the reason why the user clicked here, so it should be the full list  CC: @isidorn
---
Título: All small buttons should have a height of 24 (minimum click-target for a11y)
Descripcion: Today the 'small' button size has a height of 22px with 11px left- and right-padding.  To meet minimum click target size requirements, we need the button to be 24px high.  I believe we can keep the size of the font and other elements within the button the same, and just have a slightly bigger top- and bottom-padding.
---
Título: Update tool confirmation buttons to size 'small'
Descripcion: Currently the tool call confirmation uses the 'default' button size (28px high). To address button inconsistencies while working in chat and reviewing code (#261472 ) we'd like to make the tool confirmation size "small". The small button has a height of 22px with 11px left- and right-padding.  Mock of the tool call confirmation with small size: <img width="1268" height="783" alt="Image" src="https://github.com/user-attachments/assets/117b3716-0ce0-455f-a2e2-f113f3a8203b" />  Separately, the small button height needs to be updated from 22px to 24px to meet accessibility requirements for a minimum click-target size.
---
Título: Chat empty state history preview: Remove secondary toolbar with history title and icon
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  1. Remove secondary toolbar with history title and icon from `chat.emptyState.history.enabled`. 2. Add 'Chat history..." link at end of list to open workspace history in command palette (replacing history icon functionality).  <img width="1054" height="374" alt="Image" src="https://github.com/user-attachments/assets/ae93eb60-aea5-4b70-8d18-f625cf76554e" />
---
Título: Fix chat welcome history tooltip positioning to prevent overlap with other UI elements
Descripcion: Fixes an issue where tooltips for chat history items in the welcome view were overlapping with other items in the list, creating a poor user experience. The tooltip placement now properly adapts based on the panel location, similar to how tooltips work in the file explorer.  ## Problem  Chat welcome history tooltips were appearing with fixed positioning that caused them to overlap with adjacent list items and other UI elements, making the interface difficult to use when hovering over truncated chat session titles.  ![Before fix showing overlapping tooltips](https://github.com/user-attachments/assets/4fa0cccf-4776-4c79-837e-64072ebcdee5)  ## Solution  Implemented position-aware tooltips that respect VS Code's panel layout system:  - **Sidebar panels**: Tooltips appear on the opposite side of the sidebar (left sidebar → right tooltips, right sidebar → left tooltips) - **Auxiliary bar panels**: Tooltips appear on the same side as the sidebar position   - **Bottom panel**: Tooltips appear to the right (default behavior)  ## Implementation  1. **Created `ChatHistoryHoverDelegate`** - A specialized hover delegate extending `WorkbenchHoverDelegate` that determines tooltip positioning based on the current view container location and sidebar position.  2. **Enhanced `ChatHistoryListRenderer`** - Added tooltip support to chat history list items using the hover service with the position-aware delegate.  3. **Integrated existing layout services** - Leveraged the existing `ChatContextKeys.panelLocation` context key and `IWorkbenchLayoutService` to determine the current panel configuration.  4. **Added CSS styling** - Included `.chat-history-item-hover` class for consistent tooltip appearance with proper max-width and word-wrapping.  The implementation follows the exact same positioning logic as VS Code's SCM history view tooltips, ensuring consistency across the application.  ## Testing  - Verified tooltip positioning logic with all layout combinations - Confirmed compilation success with no TypeScript errors - Implementation matches existing VS Code tooltip patterns for position-aware behavior  Fixes microsoft/vscode#<issue_number>  <!-- START COPILOT CODING AGENT SUFFIX -->  ---- **Additional instructions:**  > Tooltip placement for empty state history list items should be dependent on whether the view is in the primary or secondary panel, just like the tooltip hover for files in the filetree in the File Explorer panel.  Fixes microsoft/vscode#266373  <!-- START COPILOT CODING AGENT TIPS --> ---  💬 Share your feedback on Copilot coding agent for the chance to win a $200 gift card! Click [here](https://survey3.medallia.com/?EAHeSx-AP01bZqG0Ld9QLQ) to start the survey.
---
Título: History is not hidden when not required
Descripcion: There doesn't seem to be a way to turn off this history feature I'm referring to the 3 chat history items displayed on the top of the chat UI.  <img width="852" height="479" alt="Image" src="https://github.com/user-attachments/assets/0a15f3c6-8eb1-48cb-8a72-7f9cb16c6a49" />
---
Título: no padding in the chat disclaimer welcome message when it has no chat history
Descripcion: I notice that in recent versions of copilot/ vscode, the chat padding for the disclaimer welcome message seems to have no padding.  <img width="401" height="576" alt="Image" src="https://github.com/user-attachments/assets/6468e492-2b05-4f04-ae61-7eea13831ba6" />  Created the pr here: #267054,  can I get someone to review it please?
---
Título: Keep/undo buttons on right of code spacing is off
Descripcion: <img width="1050" height="526" alt="Image" src="https://github.com/user-attachments/assets/882de6b3-a142-43b4-af10-7d13a4c3b6e2" />  See how the spacing/alignment between the icons is off:  <img width="562" height="216" alt="Image" src="https://github.com/user-attachments/assets/17bfad14-be26-481c-8505-bd3082a08f76" />
---
Título: thinking header does not look good in codex
Descripcion: atm, thinking does not look good in codex  <img width="451" height="264" alt="Image" src="https://github.com/user-attachments/assets/18e17a58-7ffe-4823-963f-60428e817cfa" />  <img width="424" height="372" alt="Image" src="https://github.com/user-attachments/assets/fe1c8b47-8ec7-47a8-8dbe-5525e4b945ac" />  fix:  <img width="675" height="288" alt="Image" src="https://github.com/user-attachments/assets/b8f38e4b-d552-474c-aee5-d930e4489274" />  cc. @sandy081 @kieferrm
---
Título: Icon request: Copilot with in progress chat sessions
Descripcion: Ask for a copilot icon with a little progress indicator to show when chat sessions are in progress in the status bar.  Related: https://github.com/microsoft/vscode/issues/265168
---
Título: Removed 'add context...' from chat input button label
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->  Removed 'add context...' from chat input button label <img width="552" height="157" alt="Screenshot 2025-09-22 at 1 30 10 PM" src="https://github.com/user-attachments/assets/d609c9da-ef76-4c4b-8c92-350eedcb8928" /> <img width="545" height="131" alt="Screenshot 2025-09-22 at 1 36 55 PM" src="https://github.com/user-attachments/assets/b371735f-8167-4573-8926-5f04e21c595f" />
---
Título: VS Code Figma Compontent Update: Utilities
Descripcion: - [x] Check for differences between stable and component set - [x] Figma plug in does not support having both recommended and installed.
---
Título: VS Code Figma Compontent Update: Titlebar
Descripcion: - [x] Check for differences between stable and component set - [x] Icon updates - [x] update split button - [x] SVG swaps
---
Título: VS Code Figma Compontent Update: Templates
Descripcion: - [ ] Check for differences between stable and component set   <img width="916" height="775" alt="Image" src="https://github.com/user-attachments/assets/a6aa5d3e-884b-48de-aa57-a2a8993a5d8f" />
---
Título: VS Code Figma Compontent Update: Tabs
Descripcion: - [ ] Check for differences between stable and component set - [ ] Swap file type icons to SVG
---
Título: VS Code Figma Compontent Update: Suggest Widget
Descripcion: <img width="556" height="282" alt="Image" src="https://github.com/user-attachments/assets/6ebae95d-db76-44ad-bd92-1fbfb92ddd97" />  - [x] Check for differences between stable and component set - [ ] Swap icons to SVG - [x] Padding is off - [x] Fix light mode and darkmode, updating tokens
---
Título: VS Code Figma Compontent Update: Status bar
Descripcion: - [ ] Check for differences between stable and component set - [ ] Update icons - [ ] Update icons size (using codicon small which is 14px) - [ ] Updated dark/light mode issues  <img width="366" height="145" alt="Image" src="https://github.com/user-attachments/assets/05bd40d3-389c-4148-972a-89942711ddf2" />
---
Título: VS Code Figma Compontent Update: Sidebar
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Settings
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Quick Pick
Descripcion: - [ ] Check for differences between stable and component set - [ ] Remove dark theme variable - [ ] Back button dissappears when all are selected - [ ] Checkbox w/ Icons
---
Título: VS Code Figma Compontent Update: Progress
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Panel
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Peek Views
Descripcion: - [x] Check for differences between stable and component set - [ ] Research what tokens to use - [ ] Update/crete tokens
---
Título: VS Code Figma Compontent Update: Notifications
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Notebooks
Descripcion: - [ ] Check for differences between stable and component set - [ ] Theming issue
---
Título: VS Code Figma Compontent Update: List
Descripcion: - [x] Check for differences between stable and component set - [x] Fix light and dark mode - [ ] fix icons
---
Título: VS Code Figma Compontent Update: Labels
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Hovers
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Extensions
Descripcion: - [x] Check for differences between stable and component set - [x] Added Pre-release flag - [ ] Swap out codiicon
---
Título: VS Code Figma Compontent Update: Editor
Descripcion: - [ ] Check for differences between stable and component set
---
Título: VS Code Figma Compontent Update: Dialog
Descripcion: - [x] Check for differences between stable and component set - [ ] Change the icon to SVG - [x] Update dark/light mode toggle
---
Título: VS Code Figma Compontent Update: Activity Bar
Descripcion: documentation: https://code.visualstudio.com/api/ux-guidelines/activity-bar  - [x] Check for differences between stable and component set - [x] Check if component is using auto layout - [x] Check if if layer name are symantic - [x] Check if no unused layers - [ ] Swap from using codicon to fonts - [ ] Use variable instance swap for changing icons - [ ] Uses variable spacing - [x] Uses variable colors
---
Título: Chat input field and context cleanup
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Left aligning the chat input field (moving 1 to 2 pixels to the right). Remove the button label 'Add context...'?. This takes up so much space when displaying added context.  The hover state would remain the same.  <img width="1278" height="1214" alt="Image" src="https://github.com/user-attachments/assets/f400005e-0927-44e7-8ea0-9633d268f924" />
---
Título: Add right click menu to chat history
Descripcion: To address the noise feedback, we can include a right click menu to relocate or hide chat history (considering the same for tiles). We could get ahead similar feedback once these setting are enabled by default for all users.  <img width="720" height="431" alt="Image" src="https://github.com/user-attachments/assets/77b00835-3979-41c0-8002-3b402b7af62b" />  <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->
---
Título: Chat History list remains after clearing history.
Descripcion: Steps to Reproduce:  1. Observe the chat history list appearing in new chat session 2. Invoke command `Clear All Workspace Chat` 3. Chat history list in panel should be cleared. 4. 🐛 History list remains. Clicking on an item in the list is no-op   Needs a full reload to clear the list.
---
Título: Chat welcome history hovers overlap other items in the list
Descripcion: <img width="775" height="171" alt="Image" src="https://github.com/user-attachments/assets/4fa0cccf-4776-4c79-837e-64072ebcdee5" />
---
Título: SCM - customize is show of checkout branch/tag in sidebar for git
Descripcion: Type: <b>Feature Request</b>  in my workflow, two git respository will be open in one space, for sidebar, it function is to quickly switch respository, checkout branch usualy happend in status bar, however, in recent version, checout is force display in sidebar, which caused me to frequently widen sidebar, or wrong trigger checkout  <img width="311" height="280" alt="Image" src="https://github.com/user-attachments/assets/7a7d42eb-0919-4b27-a91c-a8c574ed7e81" />  VS Code version: Code 1.104.0 (f220831ea2d946c0dcb0f3eaa480eb435a2c1260, 2025-09-10T06:46:18.035Z) OS version: Windows_NT x64 10.0.26100 Modes:   <!-- generated by issue reporter -->
---
Título: Updating Figm Chat Component
Descripcion: Change requsts - [x] checkpoints - [x] null state - [x] seperator on top action bar - [x] attached file on user message - [ ] progress row (Read: file) - [x] Files with diff numbers - [x] Prompt box drawer - [ ] Adjust all color tokens  Later - [ ] todos   https://www.figma.com/design/AJnTgc00iEI0KTVdyoN997/branch/UX6NOkBjsRfD9UZBktO00M/Visual-Studio-Code-Toolkit?m=auto&node-id=20087-269628&t=4pIvET56Fw5SqmIB-1
---
Título: Revise agent mode placeholder text
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Remove extensions @ from agent mode   > @ extensions does not have to be so prominent in Agent mode. - @isidorn   <img width="432" height="100" alt="Image" src="https://github.com/user-attachments/assets/c44bf106-c48b-40b3-9467-6502cf26b5cd" />
---
Título: Remove chat.emptyChatState.enabled setting
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> This setting is enabled by default for 100% of stable. We can remove this setting and its containing code, and replace the current empty state.  <img width="567" height="108" alt="Image" src="https://github.com/user-attachments/assets/b7eb1a28-74fa-4c22-a638-fc5efbf3ae65" />
---
Título: Update options in chat split menu
Descripcion: Customer problem: users aren't familiar with options for viewing/opening chat in different areas of the VS Code layout.   Current menu options: <img width="480" height="358" alt="Image" src="https://github.com/user-attachments/assets/8538d258-3aee-49b2-b2ae-9822ef4ed230" />  Questions to answer: How can we let users easily switch and/or open chat in different areas of VS Code?  What defaults should we support from different entrypoints? How do these options live alongside existing options?
---
Título: Improve Styling of chat.promptFilesRecommendations Display on Welcome Page
Descripcion: Type: <b>Feature Request</b>  The chat.promptFilesRecommendations feature in GitHub Copilot is highly useful for quick access to prompt files, but its current styling on the welcome page appears jarring and inconsistent with the overall UI design. The recommendations could benefit from more polished visual integration, such as better spacing, subtle animations, or alignment with existing welcome page elements to create a smoother, more cohesive user experience. This enhancement would make the feature feel more native and less disruptive while maintaining its practical value for developers.  VS Code version: Code - Insiders 1.104.0-insider (f220831ea2d946c0dcb0f3eaa480eb435a2c1260, 2025-09-09T22:13:39.933Z) OS version: Windows_NT x64 10.0.26100 Modes:   <!-- generated by issue reporter -->
---
Título: Extension pre-release and recommended modifiers are applied inconsistently
Descripcion: Extension pre-release and recommended labels are applied inconsistently  Screenshot:  <img width="1181" height="206" alt="Image" src="https://github.com/user-attachments/assets/36bf7398-e095-4faf-aca5-86dddfb81401" />  <img width="1210" height="212" alt="Image" src="https://github.com/user-attachments/assets/31302d09-93ec-4a7a-8e28-9b79f6a16196" />  <img width="111" height="93" alt="Image" src="https://github.com/user-attachments/assets/9a980272-8695-466c-9d86-333a2604eeec" />  <img width="121" height="85" alt="Image" src="https://github.com/user-attachments/assets/414db87b-7e52-46be-aa0b-84296c763cf3" />  There are also different treatments for MCP servers:  <img width="490" height="103" alt="Image" src="https://github.com/user-attachments/assets/ac64d28e-59ba-48ca-b9cd-01363e33dac5" />  <img width="1082" height="283" alt="Image" src="https://github.com/user-attachments/assets/42408e08-49f2-4676-90ef-3d0d65818543" />
---
Título: Welcome view history should not allow opening chat twice
Descripcion: This is basically the same issue we just fixed in https://github.com/microsoft/vscode/issues/264680, it ocurred to me that it could happen here too  - Open some chat session in a chat editor - Go the history list in the chat view - Click the same session that is already open in the editor - Now the same session is open twice, in an editor and the sidebar, we cannot allow this - If I close the chat editor, then the chat view will break completely and need the window reloaded to recover  You could use a similar strategy to our fix to that issue to say that if the clicked chat session is already open, just don't open it.
---
Título: Explore options for terminology & labels around remote/background agents
Descripcion: Specifically:  - Test language around 'delegate to agent' - Test entrypoints and introduction of concept - Help connect UI in agents tasks list to the chat sessions and PR views - Iterate on in-chat 'hand-off', how can we make it more clear what this action is and where the task 'lives'
---
Título: Explore user problems and provide UX improvement recommendations for making modes more usable
Descripcion: Modes and the ability to customize them is a powerful feature in VS Code. How can we further improve the discoverability and utility of the feature? Specifically:  - How can we make sure new users trying chat can be successful without having to learn about modes first? - How can we suggest when users should switch or customize modes?  - How can we make customizing modes easier?
---
Título: Issue Reporter has no Markdown preview
Descripcion: Type: <b>Bug</b>  issues are written in markdown, however there is no preview for markdown  also I can't paste images into VSCode's Issue Reporter  and no where does it state that this issue will be reported publicly  and the issue report should be opened in draft mode on GitHub don't instantly create the issue  <img width="681" height="856" alt="Image" src="https://github.com/user-attachments/assets/463fc11d-aa1b-4eed-970e-67482a03c7a4" />  VS Code version: Code 1.103.1 (360a4e4fd251bfce169a4ddf857c7d25d1ad40da, 2025-08-12T16:25:40.542Z) OS version: Windows_NT x64 10.0.26100 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 5 2600 Six-Core Processor             (12 x 3400)| |GPU Status|2d_canvas: enabled<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>trees_in_viz: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|23.92GB (15.03GB free)| |Process Argv|--crash-reporter-id 6787231e-58b0-4969-923e-74f4af57ddb2| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (20)</summary>  Extension|Author (truncated)|Version ---|---|--- tsl-problem-matcher|amo|0.6.2 vscode-wasm|dts|1.4.1 yaml-embedded-languages|har|1.3.0 vscode-tree-sitter-query|jri|0.0.6 highlight-on-copy|mgu|1.1.6 compare-folders|mos|0.25.3 hexeditor|ms-|1.11.1 vscode-js-profile-flame|ms-|1.0.9 gitignore-ultimate|que|0.3.0 json-embedded-languages|Red|0.3.3 regexp-syntax-highlighter|Red|1.1.0 snippets-snippets|Red|0.1.3 tmlanguage-syntax-highlighter|Red|2.7.8 heatscroll|rth|0.0.4 extended-embedded-languages|rus|1.3.0 code-spell-checker|str|4.2.6 pdf|tom|1.2.2 paste-diff|ufy|1.0.1 sysinfo-vscode|wra|2.6.0 pretty-ts-errors|Yoa|0.6.1   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vswsl492cf:30256860 pythonvspyt551:31249599 binariesv615:30325510 nativeloc1:31344060 dwcopilot:31170013 dwoutputs:31242946 copilot_t_ci:31333650 e5gg6876:31282496 996jf627:31283433 pythonrdcb7:31342333 usemplatestapi:31297334 jjjhb125:31275178 aj953862:31281341 nesew2to5:31336538 agentclaude:31350858 nes-set-on:31351930 6abeh943:31336334 0927b901:31350571 aa_c:31379599 45650338:31358607 0cj2b977:31352657 0574c672:31362109 newchatstate:31363049 pylancealldocsf:31379511 cloudbuttont:31379625 retryenabled:31370050 search_len_ctrl:31380232 3efgi100_wstrepl:31374188 trigger-command-fix:31379601  ```  </details>  <!-- generated by issue reporter -->
---
Título: general thinking part ux feedback
Descripcion: - [ ] double thinking header (next to chevron and in thinking tokens) - at the moment, the headers are duplicated in the body and the header <img width="580" height="182" alt="Image" src="https://github.com/user-attachments/assets/b3d85221-d51f-4ed1-a1d0-4e22cf075cf1" />   - [ ] thinking chain alignment - thinking chains can maybe be aligned with tool call checkmarks <img width="484" height="880" alt="Image" src="https://github.com/user-attachments/assets/50e57548-25ef-4073-8073-7ff58e7d9837" />   - [ ] thinking sections are broken up - should be fixed with connors fix for failed tool calls   - [ ] \n\n is not line breaking for thinking sections - expected a line break between "blocks" and "also" <img width="491" height="164" alt="Image" src="https://github.com/user-attachments/assets/c79761ab-ca49-484b-8fa6-a041dfbc4467" />  - [ ] progress UX for collapsed thinking part is not great - working progress could be renamed to "thinking", or maybe a spinner in the header instead. <img width="498" height="72" alt="Image" src="https://github.com/user-attachments/assets/a5dfe026-5f1d-4062-af0d-8f661ee6612b" />
---
Título: Button should not grow vertically when there's horizontal space
Descripcion: From @digitarald   cc @connor4312 and @justschen for the chat elicitation request part  <img width="421" height="183" alt="Image" src="https://github.com/user-attachments/assets/15925c8e-6ae3-4a81-8431-de65de62811b" />
---
Título: Chat: Vertical grid alignment of tool calls
Descripcion: If that padding is just 6px, the tools would be nicely aligned as a vertical grid (but I am scared to make 1-line CSS changes)  16px <img width="351" height="331" alt="Image" src="https://github.com/user-attachments/assets/78b35e8d-de26-4455-bc71-c043e6b27e01" />  6px <img width="301" height="228" alt="Image" src="https://github.com/user-attachments/assets/2d089b16-40f8-4b27-bacd-480df832d12d" />  cc @jo-oikawa
---
Título: Improve indication of active chat session in status bar
Descripcion: ![Image](https://github.com/user-attachments/assets/52117814-2bc2-40aa-9835-648c9fa138d2)  Can we make this more elegant without pushing the item width? Maybe a little spinning animation over the existing icon?  cc @eli-w-king @hawkticehurst
---
Título: Tree indent indicators/lines have strange placement
Descripcion: The vertical indentation lines in tree views have a non-standard placement in relation to the chevrons / twisties:  <img width="834" height="409" alt="Image" src="https://github.com/user-attachments/assets/00ea21d3-f7a8-4c5a-9605-47e764a97e22" />  I propose to horizontally align them either centrally or to the left:  <img width="850" height="892" alt="Image" src="https://github.com/user-attachments/assets/8bd45def-2ad6-4478-bbff-0c2fc15510dd" />  Personally, I think left aligned is the better approach as it will give file / tree item icons & chevrons more breathing room.
---
Título: AI Search has no empty state for no results
Descripcion: Bug Description: AI Search has no empty state for no results   Description: There is an opportunity to provide more context to the user when copilot search does not return any results.  Steps to Reproduce: 1. Open search 2. Enter a long random string to simulate something that can't be found in the codebase 3. Wait for Copilot to finish searching  Screenshot:  <img width="504" height="613" alt="Image" src="https://github.com/user-attachments/assets/a201acc7-5ab7-418b-81e4-ae795e3f7caf" />   UX/Design Issue: This issue is related to user interface, design, or user experience.  Environment Information: - VS Code Version: 1.104.0-insider - OS: macOS (arm64) - Workspace: 2 folder(s) open
---
Título: Overlapping text in welcome view
Descripcion: Testing #264269  <img width="306" height="277" alt="Image" src="https://github.com/user-attachments/assets/fb637d2f-8cc8-4dca-b135-6dec9190c807" />
---
Título: Statusbar icon for worktrees
Descripcion: Test for #264055  <img width="392" height="90" alt="Image" src="https://github.com/user-attachments/assets/03bb0b96-bfe2-41df-b60b-564bce53f920" />  Currently there is no persistent UI to indicate that the user is working in a worktree - I suggest adding the `list-tree` codicon to the status bar item:  <img width="392" height="72" alt="Image" src="https://github.com/user-attachments/assets/75929618-18ee-41e1-bcd6-5d18931f9fbc" />
---
Título: Different variations of primary buttons in the UI
Descripcion: There are 3 different shaped and sized buttons in this screenshot:  <img width="1117" height="472" alt="Image" src="https://github.com/user-attachments/assets/ab9b1358-550f-417d-8420-dccca18376af" />  cc @isidorn
---
Título: Cramped source control
Descripcion: Testing #264055  I don't particularly have a suggestion besides maybe a 2nd line... but it's pretty cramped... and this is on my MacBook Pro 16in...  <img width="332" height="286" alt="Image" src="https://github.com/user-attachments/assets/589d3385-f75f-4c95-9a4d-d5f6d8c36a1b" />  <img width="1728" height="1117" alt="Image" src="https://github.com/user-attachments/assets/82b242d6-cdc4-4b39-9565-7e5521a590bb" />
---
Título: Want link to more info about copilot debug logs in issue reporter
Descripcion: Testing #264098  How will I know if my logs contain private info? If we could make some of this text clickable and point to a reference explaining how I can determine this, that'd be a great help!  <img width="585" height="83" alt="Image" src="https://github.com/user-attachments/assets/fbcc21cc-ada5-424f-84ed-6d9a0a0bf971" />
---
Título: Alignment of `Open` and `Closed` feels off in issue reporter `Similar issues`
Descripcion: Testing #264098  It feels like `Open` and `Closed` aren't quite aligned in the middle / aligned with the info icon:  <img width="952" height="389" alt="Image" src="https://github.com/user-attachments/assets/0675883a-d5f3-444e-b6f1-8eaffc69f7d2" />
---
Título: Chat history does not update between chat sessions
Descripcion: Testing #264269  Chat history in empty state does not update between chat sessions, only when switching modes.   https://github.com/user-attachments/assets/aff5456c-d531-4f13-8b5d-031a1a13385d
---
Título: History does not update when deleting chats
Descripcion: Testing #264269  Expected behaviour: the list would update when I delete an item displayed in the list.  ![Image](https://github.com/user-attachments/assets/e8ab88f4-7424-47ab-ad50-b67d897cc4a8)
---
Título: Perhaps link could be a button with the same UI as the `Create on GitHub` button
Descripcion: Testing #264098  This is a UI item which I created with the purpose of discussing the UI of the button which links to the repo in the issue reporter. The link/button is the repo name in the image below. I am wondering if the UI would look better if the link was instead a button with text `View Repo` which on hover would show the repo name. The button could have the same styling as the `Create on GitHub` button. Pinging @mrleemurray about the UI.  <img width="263" height="119" alt="Image" src="https://github.com/user-attachments/assets/db996a32-2468-4645-80a4-b1f16838a1b2" />
---
Título: Selecting option `Preview on GitHub` could change permanently option `Create on GitHub` to it
Descripcion: Testing #264098  This is a small UX discussion point. I saw the following pattern used on GitHub and in the Pull Requests extension where selecting an option from the dropdown permanently changes the button state by default. The option `Create on GitHub` could then be placed into the dropdown (the two would essentially swap). I am just wondering if this could be a good UX change. @mrleemurray
---
Título: Issue reporter font size is larger than editor font size
Descripcion: Testing #264098  This is not really an issue, it's just something I noticed. I noticed that the issue reporter font size is larger than the editor font size, which is made more apparent when these two are placed side by side. Perhaps we could standardize the font size between the two.  <img width="771" height="836" alt="Image" src="https://github.com/user-attachments/assets/9fc91ebe-f9e6-4736-aba8-763b5690fc93" />
---
Título: Settings editor workspace folder selector dropdown opens too far away from tab
Descripcion: Bug Description:  Setting tab dropdown opens too far away from control  Screenshot:  <img width="449" height="241" alt="Image" src="https://github.com/user-attachments/assets/ce1ffc70-a219-4edd-91de-a170c10be99a" />  Other context menus & dropdowns open at the bottom right of the control:  <img width="361" height="189" alt="Image" src="https://github.com/user-attachments/assets/d4d310a2-0cb0-4dcf-8d84-74bc7fc80925" />  <img width="203" height="118" alt="Image" src="https://github.com/user-attachments/assets/605fd279-319e-4682-8413-4726a5965131" />
---
Título: Terminal pane close button can get hidden
Descripcion: Bug Description: Terminal pane close button can get hidden   Description: Breakpoints are too loose, leading to concealment of close button in certain panel widths   Screenshot:  <img width="211" height="90" alt="Image" src="https://github.com/user-attachments/assets/74c464d8-1ba0-4edb-ac22-36664df48e82" />  ![Image](https://github.com/user-attachments/assets/9dab9a36-cc86-49f3-8df1-3f7447b94d99)
---
Título: Setting tab drop down not consistent
Descripcion: Description: Currently a filled triangle instead of a down chevron  <img width="349" height="155" alt="Image" src="https://github.com/user-attachments/assets/e6349caa-0f0d-4645-b046-8ac620cac656" />  What it should use `chevron-down`  <img width="71" height="41" alt="Image" src="https://github.com/user-attachments/assets/a0f9121d-47cf-462c-a93c-dee9d4235cc5" />
---
Título: Eli/history
Descripcion: Added chat history to empty state under setting `chat.emptyState.history.enabled`. Addresses https://github.com/microsoft/vscode/issues/251187  https://github.com/user-attachments/assets/c58b1711-bebd-4120-8a61-dab3813b1180
---
Título: No horizontal scrolling in activity and chat bar
Descripcion: Bug Description: No horizontal scrolling in activity and chat bar   Description: When there are more tabs in activity and chat bars than fit within the panel width, we show an overflow menu. Why not introduce horizontal scrolling%3F  Steps to Reproduce: 1.  2.  3.   Expected Behavior: What did you expect to happen   Actual Behavior: What actually happened    Screenshot: Please attach your screenshot by dragging and dropping it into the issue description area below.  <img width="549" height="146" alt="Image" src="https://github.com/user-attachments/assets/48d7b7c1-447c-4aa7-ad3c-9ce8b29aa154" />  <img width="285" height="125" alt="Image" src="https://github.com/user-attachments/assets/0c9939c7-6af1-4c47-825d-e1882c82a559" />   UX/Design Issue: This issue is related to user interface, design, or user experience.  Environment Information: - VS Code Version: 1.104.0-insider - OS: macOS (arm64) - Workspace: 1 folder(s) open  Extensions: Please list any relevant extensions that might be related to this issue -   Additional Context: Add any other context about the problem here Include error messages, console output, or other relevant information   Reproduction Steps (Detailed): If the basic steps above are not sufficient, provide more detailed reproduction steps   --- This issue was filed using the VS Code Issue Filer extension
---
Título: Font size scaling should not apply to codicons
Descripcion: Codicons are tuned for appearing at 16x16. When that's not the case they do not render well especially on standard DPI monitors. It's a little hard to visualize the problem outside of one of these monitors but it doesn't look like a complete circle anymore due to the loss in fidelity at the top and bottom.  <img width="227" height="89" alt="Image" src="https://github.com/user-attachments/assets/06b34e6d-29be-469c-937e-cf3b8faf9adc" />  <img width="436" height="408" alt="Image" src="https://github.com/user-attachments/assets/463d1e01-34f8-4d04-93d4-b9d0ec8157ef" />
---
Título: Update wording in Copilot chat extension
Descripcion: We still add a lot of "GitHub Copilot..." related commands to the core from the extension:  <img width="777" height="543" alt="Image" src="https://github.com/user-attachments/assets/ee4eb1d1-1b0a-4867-b46c-191636f9c422" />  Similar to our recent changes around calling it "Chat" or "AI", we should think about copilot chat provided UI elements and rebrand them.
---
Título: Thought bottom padding not consistent
Descripcion: <img width="685" height="278" alt="Image" src="https://github.com/user-attachments/assets/d917138e-d094-497c-bee4-63dece8bed0d" />  <img width="334" height="92" alt="Image" src="https://github.com/user-attachments/assets/2d5c99fd-774e-469b-a356-91bb8b79cdde" />
---
Título: Remove the 'Keep' button in Chat Agent mode and use standard save behavior
Descripcion: In agent mode, after the agent modifies a file, the current user experience presents a confusing "in-between" state. The file can be saved, but it is not "kept" until the user explicitly clicks the "Keep" button. This results in several unintuitive behaviors: - Files can be deleted by the user, but if the user clicks "Undo" after the file is deleted but not "kept", the file can reappear. - It is unclear to the user whether changes are permanent or not, and the distinction between "save" and "keep" is not obvious or necessary.  #### Proposal Remove the "Keep" button and the associated intermediate state in agent mode. Instead, when the agent modifies files, the modifications should be handled as normal file edits within VS Code. Saving (or auto-save) should work as it does with any file, respecting the user's configured settings for saving. There should not be a separate "keep"/"undo" state after agent edits—just standard save/undo as with any other manual edit.
---
Título: addressed review comments
Descripcion: Added chat history to empty state under setting `chat.emptyState.history.enabled`. Addresses https://github.com/microsoft/vscode/issues/251187  <img width="1728" height="1082" alt="Screenshot 2025-08-19 at 9 27 00 PM" src="https://github.com/user-attachments/assets/15e43aa7-1088-47ff-b053-9a76f3ecb1d1" />
---
Título: Git: Apply Stash picker, worktree is shown when closed
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:   "Git: Apply Stash..." shows worktrees as well when you have to choose a repository. I didn't expect that, since that worktree is not open in the current window.  <img width="718" height="160" alt="Image" src="https://github.com/user-attachments/assets/f960abbe-3f2f-4958-a9bd-24255fe1b92e" />
---
Título: Too much margin above checkpoint line
Descripcion: Sorry if there is already an issue for this. I feel like there is too much margin above the checkpoint line. I understand we must leave some space for the toolbar from the previous message. But I feel like we could compress this by 2-8px  <img width="688" height="128" alt="Image" src="https://github.com/user-attachments/assets/567f179c-f6d1-45cd-a18b-88381ed1f96e" />  fyi @jo-oikawa
---
Título: UI clarity: Discard changes and Open file icons are confusing
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  # Confusing icons in version control view  These two icons has been confusing me for the last few years.  Both the button "Open File" that takes you to the file and the REVERT button contains arrows, and they are next to each other.  So every time I want to go to the actual file, which is a very common action, I'm scared to delete my work (even though there's a confirmation screen). Luckily we can fix this easily as seen below.  **Figure 1:** The way it's currently: <img width="673" height="185" alt="Image" src="https://github.com/user-attachments/assets/29fc7b57-9460-4a7e-b0b6-7d7d90d5f8c7" /> **Figure 2:** An improvement that removes the possible confusion: <img width="673" height="185" alt="Image" src="https://github.com/user-attachments/assets/c125c926-5d3c-4d9c-92e9-33aee1684caa" />
---
Título: Repo name is not displayed in Source Control sidebar
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  **Note**: this looks like a regression of https://github.com/microsoft/vscode/commit/ed24319ef9264a668ceec8d025c2f37763da8363 See https://github.com/microsoft/vscode/commit/e7be6e9cff48691fcea95842998f2101b64463fc#diff-87e0ff1d8aa33251109869f70c4b40afdb62f995035b783765095726c7137118  Since a recent update, the Source Control sidebar no longer displays *any part* of the repo name if the branch name is too long.  This is a problem for us since we work with a lot of sub-repos and use the same branch names for each (automatically created from the ticket title, which makes them long).  As it stands, VSCode can display several entries with no way to easily differentiate between them, and even if different branch names are used, without seeing the repo name we cannot know if we have the right branch checked out. For example, see the first three lines here:  <img width="371" height="405" alt="Image" src="https://github.com/user-attachments/assets/27786a9b-70c2-493b-942b-e1a42094800c" />  I understand that some people prefer to see the branch while others prefer to see the repo, so why not make it configurable? Or give an option to set a minimum width for the repo field so we can at least see the tooltip on hover.  There is no need to choose a side when a configuration option can make everyone happy. Or, you know, just fix the regression :)
---
Título: left scroll anchor does not work
Descripcion: Type: <b>Bug</b>  1. Open Release Notes in VSCode. 2. The left sidebar anchor does not highlight when scrolling down  VS Code version: Code 1.103.0 (e3550cfac4b63ca4eafca7b601f0d2885817fd1f, 2025-08-06T21:40:10.271Z) OS version: Windows_NT x64 10.0.26100 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|12th Gen Intel(R) Core(TM) i5-12500 (12 x 2995)| |GPU Status|2d_canvas: enabled<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>trees_in_viz: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|15.69GB (5.76GB free)| |Process Argv|| |Screen Reader|no| |VM|50%| </details><details><summary>Extensions (75)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-openapi|42C|4.38.0 codesnap|adp|1.3.4 vscode-nginx-conf|ahm|0.3.5 ng-template|Ang|20.2.1 vscode-tailwindcss|bra|0.14.26 path-intellisense|chr|2.10.0 vscode-eslint|dba|3.0.16 docker|doc|0.14.0 quicktype-refresh|dog|1.0.2 xml|Dot|2.5.1 vscode-wasm|dts|1.4.1 gitlens|eam|17.3.3 EditorConfig|Edi|0.17.4 prettier-vscode|esb|11.0.0 vue-3-vscode-snippets|exe|0.8.0 copilot|Git|1.350.0 copilot-chat|Git|0.30.0 go|gol|0.48.0 todo-tree|Gru|0.0.226 vscode-drawio|hed|1.9.0 rest-client|hum|0.25.1 svg|joc|1.5.4 bash-ide-vscode|mad|1.43.0 caddyfile-support|mat|0.4.0 rainbow-csv|mec|3.20.0 symbols|mig|0.0.24 dotenv|mik|1.0.1 vscode-containers|ms-|2.1.0 vscode-docker|ms-|2.0.0 vscode-dotnet-runtime|ms-|2.3.7 vscode-kubernetes-tools|ms-|1.3.25 playwright|ms-|1.1.15 black-formatter|ms-|2025.2.0 debugpy|ms-|2025.10.0 python|ms-|2025.12.0 vscode-pylance|ms-|2025.7.1 vscode-python-envs|ms-|1.2.0 jupyter-keymap|ms-|1.1.2 jupyter-renderers|ms-|1.3.0 remote-containers|ms-|0.422.1 remote-ssh|ms-|0.120.0 remote-ssh-edit|ms-|0.87.0 remote-wsl|ms-|0.99.0 vscode-remote-extensionpack|ms-|0.26.0 azure-repos|ms-|0.40.0 hexeditor|ms-|1.11.1 js-debug-nightly|ms-|2025.8.817 live-server|ms-|0.5.2025063001 powershell|ms-|2025.2.0 remote-explorer|ms-|0.5.0 remote-repositories|ms-|0.42.0 vscode-speech|ms-|0.16.0 vscode-typescript-next|ms-|6.0.20250810 vscode-websearchforcopilot|ms-|0.1.2025073101 vsliveshare|ms-|1.0.5948 prisma|Pri|6.13.0 vscode-xml|red|0.29.0 vscode-yaml|red|1.18.0 LiveServer|rit|5.7.9 code-spell-checker|str|4.0.47 even-better-toml|tam|0.21.2 msbuild-project-tools|tin|0.6.7 tooltitude-pb|too|0.37.0 native-preview|Typ|0.20250810.1 luna-paint|Tyr|0.17.0 sort-lines|Tyr|1.12.0 errorlens|use|3.26.0 explorer|vit|1.26.4 vscode-icons|vsc|12.14.0 quokka-vscode|Wal|1.0.734 vscode-todo-highlight|way|1.0.5 browserslist|web|1.1.0 JavaScriptSnippets|xab|1.8.0 pretty-ts-errors|Yoa|0.6.1 markdown-all-in-one|yzh|3.6.3   </details> <!-- generated by issue reporter -->
---
Título: Display the repository name in the tooltip when hovering over the repository in the Source Control section
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  <img width="591" height="468" alt="Image" src="https://github.com/user-attachments/assets/957a6cb1-f909-4921-842d-14a26bda6163" />  In the provided screenshot, the hover tooltip currently only shows the branch name only. The request is to have it display both the branch name and the repository name in the tooltop. This is particularly useful when working with multiple repositories within a single window, as it can be difficult to determine which repository is being viewed without expanding the left sidebar.  Prior to update 1.103.0, this was not an issue because VS Code displayed both the trimmed branch name and repository name in the UI, and hovering over the repository UI would reveal the repository name.   If this is planned, can we also add the option to toggle branch name trimming in status bar. Currently, it is like this, in my case trimming would save a lot of space in status bar.  <img width="842" height="291" alt="Image" src="https://github.com/user-attachments/assets/fb1937b3-e79d-4dc2-a2c2-aa7d385c56df" />
---
Título: Polish AI Usage Statistics Status Bar Icon: Reduce Size and Show Details on Hover
Descripcion: Type: <b>Feature Request</b>  The AI Usage Statistics in the VS Code status bar needs to be polished. Currently, it uses an oval icon, which takes up too much valuable space in the status bar. Please use a smaller icon, and display details only when the mouse hovers over it.  VS Code version: Code - Insiders 1.103.0-insider (e3550cfac4b63ca4eafca7b601f0d2885817fd1f, 2025-08-06T21:32:58.381Z) OS version: Windows_NT x64 10.0.26100 Modes:   <!-- generated by issue reporter -->
---
Título: Feature Request: Allow Queued Prompts for Copilot Agent Chat
Descripcion: It would be useful to support queuing prompts for the Copilot Agent chat interface, where a second prompt can be submitted while the first is still running, and automatically processed once the current task completes.  ### Why this matters:  There are many scenarios where you already know what your *next* prompt will be, but you have to wait until the agent finishes its current operation before you can submit it. This interrupts workflow and slows down the feedback loop.  This queuing feature would be especially helpful when the second prompt depends on the *result or code changes* made by the first. For example:  * I ask Copilot to refactor a block of code. * I already know I want to generate a related unit test after that refactor completes. * Since the second prompt depends on the updated code, it's not something I can run in parallel via a second agent. * Instead of waiting manually, I could queue the next prompt to be executed right after the first completes.  ### Proposed behaviour:  * Allow a secondary prompt to be queued while a Copilot Agent is busy. * It gets automatically submitted once the previous task finishes. * (Optional) A visual indicator or prompt queue list would help keep track of what's pending.  This would improve usability without requiring parallel agents or manual timing.  @burkeholland
---
Título: Move the AI usage pill into the Copilot dashboard
Descripcion: <img width="75" height="64" alt="Image" src="https://github.com/user-attachments/assets/32ca8e07-cc9d-4b07-b781-003def8b21d5" />  I think the 🤖 dashboard would be a great fit for this indicator, as it already contains quota information. It is very easy to add more entries.
---
Título: Hover color for chat requests seems a bit off
Descripcion: ![Image](https://github.com/user-attachments/assets/4b7e4286-9868-45df-8e07-377a63a58eb5)  I really like the interaction to edit a request, but the hover color seems off compared to how the UI typically feels in VS Code otherwise. It is quite bright, maybe even not matching color contrast ratio anymore (cc @meganrogge).  Can we find an alternative that is more feeling like the rest of the UI in VS Code? For example when I hover an item in a tree or list, the feedback is subtle:  <img width="646" height="228" alt="Image" src="https://github.com/user-attachments/assets/a8a4b639-63f1-4654-959c-73becff94714" />
---
Título: Separator in notebook toolbar should show with opacity
Descripcion: <img width="633" height="70" alt="Image" src="https://github.com/user-attachments/assets/f1828770-e8bf-4b8a-a389-966bdc10ddd3" />  Typically separators show with some opacity to be less visually noisy, I wonder why it shows up in normal light white for me in dark modern theme 🤔
---
Título: New Welcome Experience | Tip rendering seems off
Descripcion: Currently the tip is too large & too close to the primary button:  <img width="552" height="358" alt="Image" src="https://github.com/user-attachments/assets/8df92181-e297-40ab-ac33-f7180388a307" />  I would recommend a design like this:  <img width="541" height="325" alt="Image" src="https://github.com/user-attachments/assets/68986bd6-c31a-48c7-87a0-d2052fab6923" />  This is the CSS I applied to `shortcut-message`:  ```css margin-top: 12px, font-size: 12px, display: flex, gap: 8px, color: var(--vscode-descriptionForeground), ```
---
Título: Allow to pin secondary sidebar to stay maximised even when editors open
Descripcion: <img width="904" height="250" alt="Image" src="https://github.com/user-attachments/assets/671e2f42-83e9-4b9a-91b8-ce8a4ed332c3" />  https://x.com/spencer_i_am/status/1951302101708968088
---
Título: Chat participant descriptions should render in listbox and not require hover
Descripcion: <img width="743" height="435" alt="Image" src="https://github.com/user-attachments/assets/4d80831c-3885-4659-a759-6d5f45bf4a65" />  No information is available when doing @ in agent mode to reference a chat participant, making it difficult for users to understand what the chat participant is doing.  This information is available on hover but developer did not organically discover this.
---
Título: Alias @ to # in Chat input to reference context
Descripcion: Users returning to VS Code from using other products like Cursor have muscle memory trained to use @ to reference context.  Should we alias @ to # so we don't break muscle memory for returning developers from other products?
---
Título: Adding context in Chat using vscode-copilot-chat repo adds a ton of unnecessary symbols
Descripcion: Steps to Reproduce:  1.  On latest vscode-copilot-chat, switch to agent mode in Chat and use #  <img width="814" height="488" alt="Image" src="https://github.com/user-attachments/assets/d7392220-3021-494d-9821-dc71257322eb" />
---
Título: add existing worktree
Descripcion: Test for #257910  If I remove a worktree from the SCM view with "close repository", the directory remains on disk, but I don't seem to be able to add it back as a worktree entry.  I could also imagine having other branches checked out into different folders already, and it could be useful to add those as worktree entries
---
Título: dense source control view with work trees
Descripcion: Testing #257910  this view is very dense (which I get there is a ton of info to show) maybe some more veridical padding between the publish blue button and the tree name below it would help. Also I would want to be able to adjust the container (ie expand or shrink the container of a given worktree)  <img width="450" height="495" alt="Image" src="https://github.com/user-attachments/assets/fd9742a6-6184-4289-a179-2358c0e176ff" />
---
Título: Create PR sparkle text not updated
Descripcion: Testing #258340  Expected Generate Title and Message:  <img width="603" height="325" alt="Image" src="https://github.com/user-attachments/assets/e77089e2-9f46-4c67-a965-ded417c6a833" />
---
Título: Different icon for the third state (partially selected)?
Descripcion: Testing #258318  I was testing the checkboxes and noticed that if you partially select the children of a tree, the tree node will show a dash to indicate the children are partially selected. I suppose this is the tri-state checkbox. I wonder if instead of a dash, we could use some sort of other marker like three dots (ellipsis). The issue with the dots is that it can look like an icon for opening up a context menu, so I am really not sure if that is a good idea, but pinging @mrleemurray about it for the design side.  <img width="627" height="63" alt="Image" src="https://github.com/user-attachments/assets/a63ca1b3-87d9-4c3f-aae9-006676846ced" />
---
Título: Feature Request: Support forking chat history
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Sometimes I've worked with Copilot on some code and I feel like it works really well and the active copilot chat contains knowledge useful for tackling lots of tasks.  It would be great if I could duplicate the chat at this point such that I can continue working with copilot in the active chat session and later on work with the forked chat, that doesn't contain all the newer messages afterwards.  I would then afterwards have that same nice state as basis for tackling another task.  I can approximate this feature by manually copying around chat messages, but this is lossy and tedious.
---
Título: feature requests to make chat confirmation required prompts more explicitly visible to screen reader users
Descripcion: Type: <b>Feature Request</b>  ## Context When Copilot needs to perform an action such as executing a command on the terminal, it asks the user to confirm (approve) the action. The Chat confirmation required signal plays and the screen reader announces the command that a user needs to run, along with the announcement to press control+enter to accept and alt+backspace to reject (exact wording may be different).  While this is great, a user could likely miss that they need to approve an action if they are not paying very close attention to the IDE (e.g. if they are multitasking). Additionally, screen reader users who may be new to this feature do not seem to have a way to re-visit the keyboard shortcut to accept and reject actions if they miss the announcement.  ## Feature Suggestions I am making the following feature suggestions in an attempt to increase the usability of chat confirmations: 1. Provide more explicit wording in the chat confirmation view to indicate that the agent is waiting on user input. The current messaging seems to indicate a runn command:, followed by the command, and a brief description for the command. While I have not explicitly checked, I am anticipating the messaging to be similar for tool execution requests. 2. provide the buttons to accept and reject actions in the toolbar for the accessible view. This would align information sources and user flows with suggestions in the accessible view, where the buttons to accept and reject along with the keyboard shortcuts are surfaced. 3. provide an indicator in the title bar, similar to the "circle bullet" for edited files, indicating that the editor is waiting on a user action. This could help users quickly realize that they need to approve for the agent to proceed. This could especially be useful if users are multi-tasking. A similar messaging could also be appended to the label of the chat input box so that the user hears it when they switch focus to it. 4. have the agent respond asking the user to respond to the user action required prompt if they ask it to perform additional tasks. This is if the user misses the audio cues, forgets to check the accessible view, and misses the indicator proposed in item 3. I intentionally ignored a chat confirmation required prompt to see what happens and the agent seems to just be playing the progress sound without giving the user any indication of what it is doing. There may be other design considerations to keep in mind for this suggestion but I hope the team will take this into consideration.   VS Code version: Code - Insiders 1.103.0-insider (d7ac7f7c61a2cc07dd8adc4a7146023131314d9a, 2025-07-24T05:04:03.203Z) OS version: Windows_NT arm64 10.0.26100 Modes:   <!-- generated by issue reporter -->
---
Título: Update sign in dialog to better support social sign in flows
Descripcion: Last week GH shipped support for Sign In/Up with your Google account. We currently support this in our sign in dialog, however we do not communicate the opportunity to create an account and in order to optimize the flow we may consider pulling in GH TOS into the dialog. We should rethink this design to better scale, and communicate the potential user paths and their implications   We may need to consider adding a parameter we pass to GH that indicates a user is approved to go through a streamlined flow (i.e. this user has been presented the terms of service)  <img width="553" height="662" alt="Image" src="https://github.com/user-attachments/assets/ab6c5a6b-93ad-4098-802e-23c9c8f45411" />   Currently we only show the public code warning in the dialog as users are directly to a GH splash page that presents the TOS, we should also work with legal to combine these paragraphs   <img width="477" height="81" alt="Image" src="https://github.com/user-attachments/assets/d3d6cd7a-a674-455f-a5a2-99c0e144cb25" />  <img width="478" height="112" alt="Image" src="https://github.com/user-attachments/assets/112ed209-8654-49e2-80d3-c370b428dc45" />
---
Título: Support for Chain of Thought tokens
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  #### Implementation  - [x] Plumb the cot feature through the various layers in core and extension   - [x] Store data in chat history (summary, id, metadata)   - [x] Add cot data to chat debug logs   - [x] Get cot data by tool_call when constructing the request messages   - [ ] BYOK       - [ ] Use thinking data when provider does not use LM APIs (E.g Anthropic)       - [x] Use model specific endpoints to adjust messages    #### Chat UI Implementation 🎨  - [ ] Design UX for displaying thinking data in chat UI - [x] Implement LM API to stream cot information to core - [ ] Develop Chat UI API for accessing thinking data  Ref: https://github.com/microsoft/vscode-copilot-release/issues/11758
---
Título: Run in terminal: Explain why something was auto approved or not
Descripcion: 
---
Título: Chat: Reflect multiple editor selections in current document bubble
Descripcion: 1. Open chat 2. Open a document 3. Make a selection, notice the current document bubble reflects the selection 4. Add another selection to the editor  🐛 There's no change to the bubble at all  Even worse:  5. Remove the initial selection  🐛 Now the second selection isn't even reflected  https://github.com/user-attachments/assets/b8ba6110-abff-44b9-8138-53227e192edd
---
Título: Chat: When having selection in the editor, the current document gets automatically added
Descripcion: 1. Open chat 2. Open a document, notice it's not automatically added to chat 3. Make a selection  🐛 The selection in the current document is automatically added to chat and it's not possible to override that.  I can see why we might've done this on purpose... but I argue this is counter-intuitive for the average user. I would treat the "current document" UX always the same way, despite there being a selection or not.  https://github.com/user-attachments/assets/f073f50d-6d7d-484c-b7cf-7fd1013e714e
---
Título: Chat: Current document pill grows a couple pixels when added to context
Descripcion: https://github.com/user-attachments/assets/cab2ec13-f891-4f01-9fcf-5a3ee1c6aecb
---
Título: Chat: Current document pill pretends to have two click regions
Descripcion: The current document pill in the chat pretends to have two click regions, yet clicking on either the label or the `+` sign will do literally the same: add the file to the context.  Also 🐛 why is there additional hover feedback for the `+` but not for the label itself?  I suggest to simply remove that additional hover feedback for the `+`.  https://github.com/user-attachments/assets/27d442e0-f442-41bb-b3fb-b858acabbbca
---
Título: Checkpoint shows up when pausing due to rejecting continue to iterate
Descripcion: I pressed pause after agent mode asked if I wanted to keep going which prints a `selected "Pause"` message and what I assume is a canned message from Copilot:  <img width="624" height="472" alt="Image" src="https://github.com/user-attachments/assets/bb603460-0f48-4e5f-88c5-538f0f1b0d8c" />  The checkpoint here doesn't add any value.
---
Título: Checkpoints UI Polish
Descripcion: Quick list of UI polish issues from first round of Insiders release feedback/testing.  ## 1. Button shouldn't lose opacity on hover. Expected: The button should get lighter when moving from hovering on the container to hovering on the button itself.  Actual: Button loses opacity and you can see the dotted line through it.  <img width="166" height="67" alt="Image" src="https://github.com/user-attachments/assets/baa99b6a-af5b-4e8c-a2df-d4ee2da5de6a" />  ## 2. Buttons should use sentence case. Expected: Buttons should follow the VS Code convention of using sentence case instead of title case, and feature names should not be capitalized unless they're proper 1P features. Specifically, "Restore checkpoint" and "Redo last request". Actual: Both buttons are capitalizing every word.  ## 3. Edit button appears empty sometimes. Expected: Edit button appears when hovering over the input message. Actual: Occasionally the container appears but is missing the icon.  <img width="1000" height="225" alt="Image" src="https://github.com/user-attachments/assets/d46b4cce-4675-4c4d-8df8-66625b914743" />  ## 4. Too much space between the last response and checkpoint line. Expected: Spacing between input message, checkpoint line, and output/response message is equally distributed. Actual: There's a large gap after the output/response message, even considering room for the toolbar.  <img width="984" height="1478" alt="Image" src="https://github.com/user-attachments/assets/096a6248-0ff1-4180-898d-fc30df20d532" />
---
Título: Chat: Context wraps not very nicely
Descripcion: [Follow_instructions_in__implement_prompt_md__file__exports.tar.gz](https://github.com/user-attachments/files/21232607/Follow_instructions_in__implement_prompt_md__file__exports.tar.gz)  <img width="405" height="222" alt="Image" src="https://github.com/user-attachments/assets/de242dcf-4d54-495d-ba68-4a873a6f8ab4" />  When you have a longer context response, it seems to wrap not very nicely.
---
Título: Chat: Reconsider showing checkpoint UX on first message
Descripcion: Do we really need a `Restore Checkpoint` after the very first message?  <img width="409" height="515" alt="Image" src="https://github.com/user-attachments/assets/8130457a-b80d-4834-b410-49ba49beb2c2" />
---
Título: Surface how many characters / lines were added by AI
Descripcion: It would be nice if I could see in a quick, visual way: * how much AI I used today (characters, lines) * how much AI contributed to the code I wrote today * (stretch) how much time AI saved me today * (stretch) reviewing exactly what AI did for me today.  I'm imagining something like an energy class indicator or maybe like Apple's activity circles.  We could render something in the status bar or have an entry in the Copilot menu in the titlebar and that could open an editor showing more detailed stats, like the last 100 completions I accepted, etc.  ---  <img width="270" height="156" alt="Image" src="https://github.com/user-attachments/assets/2c2dbad2-4455-401d-ab27-9b8b990b1ac6" />  ---  <img width="220" height="244" alt="Image" src="https://github.com/user-attachments/assets/01a9be91-67ec-441e-b76f-6244bfee4d01" />  ---
---
Título: Review large context menu structures
Descripcion: I feel our context menus are growing very complex and very large, to the point where I wonder if we can apply some general rules where an item should be appearing. Popular new entries are around adding to Chat for example, that are located sometimes in the middle and sometimes at the end of a menu.  **Explorer**  File: <img width="335" height="421" alt="Image" src="https://github.com/user-attachments/assets/5a1bc2f0-1c2d-48b9-8f46-a52f2df0f036" />  Folder: <img width="297" height="386" alt="Image" src="https://github.com/user-attachments/assets/c40e6bca-2691-4f07-9e64-f0f855c43c8e" />  **Tab**  <img width="387" height="502" alt="Image" src="https://github.com/user-attachments/assets/eb6f26f1-d86f-45a0-88fe-117011f27f03" />  **Editor**  <img width="284" height="563" alt="Image" src="https://github.com/user-attachments/assets/c6cca886-aa0e-4007-83a8-5d215aadc1e6" />
---
Título: Broken chat response rendering (inline chat)
Descripcion: <img width="869" height="419" alt="Image" src="https://github.com/user-attachments/assets/8bc1c6bb-7138-40ee-a5ae-8ffa2d84f396" />  [also_print_the_right_terminal_command_to_start_exa_exports.tar.gz](https://github.com/user-attachments/files/21184400/also_print_the_right_terminal_command_to_start_exa_exports.tar.gz)
---
Título: Variables are not highlighted in the chat request
Descripcion: <img width="451" height="145" alt="Image" src="https://github.com/user-attachments/assets/01a00e47-5b6f-4ba1-b037-1886cf5860ed" />  I would have expected here that my file references are highlighted and maybe even clickable.  [Read_from__file_project_instructions_md__and_fill__exports.tar.gz](https://github.com/user-attachments/files/21183770/Read_from__file_project_instructions_md__and_fill__exports.tar.gz)
---
Título: Revisit our boring progress indication
Descripcion: When agent is busy we show this:  <img width="270" height="104" alt="Image" src="https://github.com/user-attachments/assets/f12bf7ac-b689-4943-b365-3d04063b6f0b" />  Its not very entertaining. Some inspiration:  <img width="1096" height="122" alt="Image" src="https://github.com/user-attachments/assets/b094446c-f532-413e-a5f6-45646f2a06f3" /> <img width="1120" height="114" alt="Image" src="https://github.com/user-attachments/assets/3c9b3a89-77d8-41ec-8a52-43b8f255f0a9" />  Specifically seeing token use is pretty nice to get an understand about the overall complexity of the messages exchanged. The time is also interesting because it gets you a feeling for how long the task is running at.  //cc @isidorn
---
Título: Revisit "AI Actions"
Descripcion: I am not a big fan of "AI Actions" as that is a very generic term. I would much prefer we could call this closer to what is actually inside the menu.  I wonder if the actions to add to chat should move top level and then this menu is only about "source actions" or "generate code" actions?  <img width="461" height="227" alt="Image" src="https://github.com/user-attachments/assets/2e7f6024-1c08-4497-b5b6-f641be97db86" />  //cc @isidorn @kkbrooks
---
Título: No hover feedback for editing chat message
Descripcion: I really like the in-place edit input box. But now: - There is zero hover feedback other than the revert action apparently just floating in mid air, so I have no idea where I can or cannot click, - Even in the area I can click, the mouse cursor still looks like default, and not a hand pointer.  https://github.com/user-attachments/assets/b9e9dfe6-85a6-4b1b-8d1a-16e5adec291a
---
Título: Inline Copilot actions in SCM graph
Descripcion: > @lszomoru Similar to the SCM Graph: >  > <img width="468" height="352" alt="Image" src="https://github.com/user-attachments/assets/81e05059-368b-482f-a15f-9cdae6222e48" /> >  > I would just inline those and also rename them to lose the "history item" terminology, which is API specific: >  > - Add to Chat > - Describe Changes    _Originally posted by @joaomoreno in [#255320](https://github.com/microsoft/vscode/issues/255320#issuecomment-3061513706)_
---
Título: Chat view shows bad placeholder
Descripcion: It says:  > Build autonomously, # context  <img width="362" height="119" alt="Image" src="https://github.com/user-attachments/assets/3d67fe6d-3283-46cd-b106-07835ab6b2ff" />  cc @eli-w-king
---
Título: Cleanup menus that have chat context specific actions
Descripcion: <img width="594" height="433" alt="Image" src="https://github.com/user-attachments/assets/342f4df2-a1a1-426c-a1ae-a79415a1abf9" />  I find 1 action for a submenu is too much, I suggest to lift it to top level.  //cc @isidorn @eli-w-king
---
Título: Rendering code references in a less heavy manner
Descripcion: Our code references are wrapped in bordered bubble with an icon to the left. However, it hinders readability   <img width="3024" height="1964" alt="Image" src="https://github.com/user-attachments/assets/43cf7080-f375-49ea-8671-e8515708e056" />   migrated from https://github.com/microsoft/vscode-copilot/issues/18505
---
Título: Panel chat gear dropdown should have hints on hover
Descripcion: I get lost in all the different kinds of prompt attachments and it would be great if I could hover over each entry in the dropdown and see what it is. We could convert it to a non-native dropdown if needed. Having (i) icon on each entry which could be hovered over that would explain what this entry is   <img width="454" height="452" alt="Image" src="https://github.com/user-attachments/assets/c639248e-2845-4383-a9af-48ec07d5dceb" />
---
Título: Revisit tool update indicator
Descripcion: I fail to understand the UX reasoning behind this:  ![Image](https://github.com/user-attachments/assets/82986848-f9cd-4b8e-8e17-62df52b042f3)  It seems to tell me that new tools are available using 2 buttons: * a server rack (?!) * a refresh button  But there already is a location for tools:  <img width="82" height="62" alt="Image" src="https://github.com/user-attachments/assets/79b2b706-e049-4594-baed-3ffaed3a86f8" />  I suggest to: * render a blue dot over that icon * when you open tools you see a refresh button in the list * or alternatively we just refresh automatically?  <img width="346" height="106" alt="Image" src="https://github.com/user-attachments/assets/604049b2-641e-45ae-97bf-43c9d73b0436" />  //cc @isidorn @joaomoreno
---
Título: revised new welcome experience intro slide to use correct color token…
Descripcion: Revised new welcome experience intro slide to use correct color tokens, updates to correct color per theme.    **Example before:** <img width="1488" alt="Screenshot 2025-07-07 at 1 39 24 PM" src="https://github.com/user-attachments/assets/7d0e54c1-f8b4-468f-a057-3dd337e692c9" />   **Example after:** <img width="1496" alt="Screenshot 2025-07-07 at 1 39 49 PM" src="https://github.com/user-attachments/assets/2d2f3f02-b67b-4b24-b299-24acfa6b2dae" />  Applied to all three intro slide illustrations. Addresses: https://github.com/microsoft/vscode-copilot/issues/17929    <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->
---
Título: Double click button selects text
Descripcion: Testing #253022  <img width="317" alt="Image" src="https://github.com/user-attachments/assets/4cdb8429-99fc-462d-8610-16dbc779bbcf" />
---
Título: Context pills are too much
Descripcion: ![Image](https://github.com/user-attachments/assets/5a5f8207-f78f-45b8-a0e0-d46219f6c8b3)  No, I do not think they add anything to the AI workflow that helps me. I would hide them somewhere and show them only when I request this.
---
Título: Update the icon when in snooze mode
Descripcion: Testing #253022  * enable snooze mode * the status bar icon doesn't update to indicate that snooze mode is on  <img width="297" alt="Image" src="https://github.com/user-attachments/assets/64bfe9a4-c2c8-4e9b-95b3-b7e073dbf620" />
---
Título: Inline chat looks cramped with context
Descripcion: <img width="1226" alt="Image" src="https://github.com/user-attachments/assets/b8389a6e-a5cf-4609-9ad7-27ceb96b6d09" />  As a reference, here is cursor:  <img width="1172" alt="Image" src="https://github.com/user-attachments/assets/b1237104-144c-4cbe-ba2c-72ba6f6390b7" />
---
Título: When Chat real estate is small (due to other windows/zoom) the placeholder text renders strangely
Descripcion: ![Image](https://github.com/user-attachments/assets/eaf7ea16-17b2-4f2e-b67e-b32b93085ff5)
---
Título: Simplify and condense chat output for better readibility
Descripcion: The fix was great, and 2 lines of code change:  <img width="1350" alt="Image" src="https://github.com/user-attachments/assets/e685a252-9535-47f2-bab8-d3ae7ce92053" />  Why do I have to read through 3 pages of explanation 🤔   <img width="891" alt="Image" src="https://github.com/user-attachments/assets/d19f2ba2-f7e8-465d-b233-13eaa2211b1c" />  <img width="900" alt="Image" src="https://github.com/user-attachments/assets/78c25761-ac7c-483a-a66b-cddbaa213797" />  <img width="888" alt="Image" src="https://github.com/user-attachments/assets/c6b1b434-22fb-4c49-8f41-5738051c27dd" />
---
Título: Make blue button hover feedback consistent
Descripcion: In keybinding.json there is no hover feedback:  <img width="222" alt="Image" src="https://github.com/user-attachments/assets/89b7c8ba-c7fb-46e5-8031-14ee78ffb77c" />  In SCM there is subtle feedback (see left is darker than right):  <img width="293" alt="Image" src="https://github.com/user-attachments/assets/06aeb89a-d3fb-4a27-80f9-084c517ed689" />
---
Título: Generate instructions seems wrongly located
Descripcion: <img width="273" alt="Image" src="https://github.com/user-attachments/assets/d9876ef5-0856-4d1f-b0b6-8c3b33f1ff92" />  When I click this, I suddenly get a chat message sent, while the others show pickers and allow me to configure instructions and prompts. I do not see how the one and the other are related?
---
Título: Do not invent a new notification system with a button that takes space
Descripcion: <img width="376" alt="Image" src="https://github.com/user-attachments/assets/cc995f43-a526-4524-8886-fa3659b23b3a" />  I would put a decoration over the existing icon.  //cc @mrleemurray
---
Título: VS Code does not differ file.php and Class.php, it should be different icon
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> VS Code does not differ file.php and Class.php, it should be different icon    ![Image](https://github.com/user-attachments/assets/5f1ea217-a25d-4e1d-97cf-43ec8c6a5261)  ![Image](https://github.com/user-attachments/assets/05c0fb2f-266b-4015-a23e-748f8c76257b)
---
Título: Git push does not provide feedback or success/fail confirmation
Descripcion: Type: <b>Bug</b>  Pushing changes to Git repository does not have any visual indicator that the process worked or failed. A lack of feedback does not imply success. Make your program provide POSITIVE feedback, as well as pending status during the operation so the user knows if it's stuck or not, and if it worked or not.  ![Image](https://github.com/user-attachments/assets/7cbe6b15-a043-49d8-83b1-9b17cfceb5ec)  VS Code version: Code 1.101.2 (2901c5ac6db8a986a5666c3af51ff804d05af0d4, 2025-06-24T20:27:15.391Z) OS version: Windows_NT x64 10.0.26100 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 7 5700G with Radeon Graphics          (16 x 3800)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|31.80GB (12.75GB free)| |Process Argv|--crash-reporter-id 78bcdb77-bcd5-4394-adc8-689d3ff0e9ac| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (76)</summary>  Extension|Author (truncated)|Version ---|---|--- pascal-formatter|ale|2.9.1 flutter-snippets|ale|3.0.0 racket-repl|And|1.5.8 markdown-mermaid|bie|1.28.0 vscode-tailwindcss|bra|0.14.23 npm-intellisense|chr|1.4.5 dart-code|Dar|3.112.0 flutter|Dar|3.112.0 vscode-markdownlint|Dav|0.60.0 macos-modern-theme|dav|2.3.19 docker|doc|0.11.0 python-environment-manager|don|1.2.7 EditorConfig|Edi|0.17.4 vscode-ghci|eri|0.0.2 magic-racket|evz|0.7.0 code-runner|for|0.12.2 vscode-icontheme-nomo-dark-macos|Gau|1.0.3 copilot|Git|1.336.0 copilot-chat|Git|0.28.3 go|gol|0.46.1 svg|joc|1.5.4 language-haskell|jus|3.6.0 racket|kar|0.0.3 idx-monospace-theme|kek|1.4.0 git-graph|mhu|1.30.0 azure-pipelines|ms-|1.249.0 vscode-containers|ms-|2.0.3 vscode-docker|ms-|2.0.0 csdevkit|ms-|1.20.35 csharp|ms-|2.80.16 vscode-dotnet-runtime|ms-|2.3.6 vscode-edge-devtools|ms-|2.1.9 debugpy|ms-|2025.8.0 isort|ms-|2025.0.0 python|ms-|2025.8.0 vscode-pylance|ms-|2025.6.2 jupyter|ms-|2025.5.0 jupyter-keymap|ms-|1.1.2 jupyter-renderers|ms-|1.1.0 vscode-jupyter-cell-tags|ms-|0.1.9 vscode-jupyter-slideshow|ms-|0.1.6 remote-containers|ms-|0.417.0 remote-ssh|ms-|0.120.0 remote-ssh-edit|ms-|0.87.0 remote-wsl|ms-|0.99.0 vscode-remote-extensionpack|ms-|0.26.0 cmake-tools|ms-|1.20.53 cpptools|ms-|1.26.3 cpptools-extension-pack|ms-|1.3.1 live-server|ms-|0.4.15 makefile-tools|ms-|0.12.17 powershell|ms-|2025.0.0 remote-explorer|ms-|0.5.0 remote-server|ms-|1.5.2 vsliveshare|ms-|1.0.5948 java|red|1.43.0 vscode-yaml|red|1.18.0 roo-cline|Roo|3.22.5 haskell-formatter-vscode-extension|ser|0.0.2 markdown-preview-enhanced|shd|0.8.18 pdf|tom|1.2.2 cmake|twx|0.0.17 haskelly|UCL|0.5.5 stylish-haskell|vig|0.0.10 intellicode-api-usage-examples|Vis|0.2.9 vscodeintellicode|Vis|1.3.2 vscode-svg-previewer|vit|0.7.0 vscode-gradle|vsc|3.16.4 vscode-java-debug|vsc|0.58.2 vscode-java-dependency|vsc|0.24.1 vscode-java-pack|vsc|0.29.2 vscode-java-test|vsc|0.43.1 vscode-maven|vsc|0.44.0 vscode-icons|vsc|12.13.0 file-icons-mac|way|1.0.1 five-server|yan|0.3.9  (11 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscod805:30301674 binariesv615:30325510 c4g48928:30535728 azure-dev_surveyone:30548225 962ge761:30959799 h48ei257:31000450 pythontbext0:30879054 cppperfnew:31000557 dwnewjupyter:31046869 pythonrstrctxt:31112756 nativeloc2:31192216 5fd0e150:31155592 dwcopilot:31170013 471b6256:31263136 6074i472:31201624 dwoutputs:31242946 customenabled:31248079 9064b325:31222308 copilot_t_ci:31333650 e5gg6876:31282496 pythoneinst12:31285622 bgtreat:31268568 4gafe986:31271826 c7cif404:31314491 pythonpulldiag:31335739 996jf627:31283433 pythonrdcb7:31303018 usemplatestapi:31297334 0aa6g176:31307128 7bj51361:31289155 jjjhb125:31275178 6518g693:31334701 aj953862:31281341 generatesymbolt:31295002 convertfstringf:31295003 91889449:31338102 i851h500:31338111 usemarketplace:31336439 nesew2to5:31336538 agentclaude:31335814 nes-diff-11:31337487 66g5g415:31337488 6abeh943:31336334 yijiwantestdri0626-t:31336930  ```  </details>  <!-- generated by issue reporter -->
---
Título: Auto mode
Descripcion: Thoughts on Auto mode can be found [here](https://microsofteur-my.sharepoint.com/:w:/g/personal/inikolic_microsoft_com/EZOkgdTgx8dMqPqtZm2OoDoBYOkVHfOblUboxHrp6qRKZw?e=WYMIo9)  CAPI will be picking up this work in July, and here are the things we probably need to do on the Client side to have a nice Auto experience. I might be missing something - so do chime in and let me know:  - [ ] Figure out business case (what is the multiplier) and available models for Auto @isidorn  - [ ] Change model dropdown visuals such that there is no "Standard / Premium models". There is no included, it is `0x`. so basically each model just has a multiplier, and that's it. - [ ] Chat needs to call into CAPI before request sent to figure out what model will actually be used. Or what is the set of models that have capacity. CAPI can provide a new API for this. The question is how often does Chat call into CAPI to figure this out? Once per agent session? What is sent as part of the request (prompt + history?) What is the actual API contract? - [ ] Once CAPI gives us the model to use via previous request, we construct the prompt and everything for that model, and then Chat sends "auto request but use model A that you just told me" - [ ] Auto needs to be transparent (for users to love it):   - [ ] Figure out with CAPI how do we show a set of models Auto chooses from. Is this just a `details` that we show on hover in model dropdown, or something else. The goal is that the user is aware of what models Auto might pick before the request is made   - [ ] On response done, we need to render what model was actually used. I personally like this LMStudio UI (but we can use whatever we find best  I do not know how this would work in Inline Chat. Ideally same API flow, but as step 1 transparent UI on model used does not have to be there.  <img width="468" alt="Image" src="https://github.com/user-attachments/assets/e9704576-4ce1-44ba-8bde-90ca1f508731" />
---
Título: Allow custom chat modes to have custom colors
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> To make it easier to quickly notice which mode is selected, users should be able to specify a color (with a color picker) for their mode ala Cline which has different colors for the chat box based on whether the user is in Plan or Act mode.  ![Image](https://github.com/user-attachments/assets/9494831a-e3d5-4141-81b3-f15f053b8679)  ![Image](https://github.com/user-attachments/assets/4ac3b28b-cde6-4eef-9396-8274f72a2974)
---
Título: Pause interaction is weird
Descripcion: When I send a request to the Chat Input we show both a Pause and a Stop.  I am not convinced that Pause button is needed. @connor4312 I know you had a vision for this - can you remind me what's the difference to stop? I wanted to check in telemetry if users are actually using Pause but looks like we do not report telemetry for it.  My suggestion:  1. Remove Pause action 2. Modify stop icon to something slightly stronger (larger) - attaching what ChatGPT uses as inspiration  fyi @jo-oikawa @roblourens @bpasero   <img width="266" alt="Image" src="https://github.com/user-attachments/assets/6b4448f8-38bb-43ca-926f-56e6b9d23bf5" />   <img width="1674" alt="Image" src="https://github.com/user-attachments/assets/9c2e6b44-1483-4ad7-b421-afa75a11dad3" />
---
Título: Agent mode: Overflow behavior isn't great
Descripcion: My chat view is often quite narrow like this:  ![Image](https://github.com/user-attachments/assets/f4402113-f089-463d-95b9-a01930a531a8)  We need better overflow behavior here. The mic and tools icons should go into an overflow menu in this case, maybe even the model as I rarely change it.
---
Título: MCP: I hate the refresh button
Descripcion: Can't remember if I've reported this before, but I have a visceral reaction every time I see this. I have not yet really engaged with MCP, yet it's the most visible button in the entire chat panel:  ![Image](https://github.com/user-attachments/assets/06865c78-e5a4-4169-9400-ff4a296b83e1)  It's also a super weird button in that it's 2 icons with a single hover.  Questions:  - Why does the user need to know there's a new tool, can we not just automatically update or pull in or whatever? - Can we show this contextually instead when the user cares? - Maybe it was related to Pylance?     ![Image](https://github.com/user-attachments/assets/8119b8cf-c180-4ce6-b8ec-67ac6442791b)
---
Título: Custom modes should have a `name` attribute in frontmatter
Descripcion: Rather than relying on the file name in front of `.chatmode.md` to determine the mode name, we should have an attribute in the frontmatter to specify a name:  ``` --- name: 'Planning' description: 'Implement a feature based on a specification and implementation plan.' tools: ['changes', 'codebase', 'editFiles', 'extensions', 'fetch', 'createFile', 'insertEdit', 'findTestFiles', 'githubRepo', 'new', 'openSimpleBrowser', 'problems', 'readCellOutput', 'runCommands', 'runNotebooks', 'runTasks', 'search', 'searchResults', 'terminalLastCommand', 'terminalSelection', 'testFailure', 'usages', 'vscodeAPI'] ---  Your goal is to implement a feature based on a specification document and implementation plan. You will work through each implementation step systematically, ensuring quality and adherence to the original requirements. ```  This avoids situations in source where file names are commonly lowercase from appearing strangely in the modes dropdown. From a user:  ![Image](https://github.com/user-attachments/assets/a7b68304-7767-46f4-80f0-e245a24485ad)
---
Título: There is a lot of wasted space in the margin of the copilot chat when you move it to its own window
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Look at the boxes I drawn in the margins. I should be able to make the chat take up the entire window like it does in full Visual Studio 2022. I asked the copilot and it said there is no setting to fix this yet.   ![Image](https://github.com/user-attachments/assets/4dcfb752-d17e-48ea-9256-f94415e489af)
---
Título: Run command confirmation can have some UX styling
Descripcion: <img width="533" alt="Image" src="https://github.com/user-attachments/assets/edb4e285-397e-40b5-a8f6-9305b5e7921c" />  Visually there is a title, a command and an explanation.   I find it hard to distinguish between title and explanation, can we do something to make this visually easier to understand?  //cc @mrleemurray @isidorn   Claude code:  <img width="878" alt="Image" src="https://github.com/user-attachments/assets/83bf6eba-f2a3-432f-a680-77c090b07ce2" />
---
Título: Border around chat tag is cut off
Descripcion: The `+new` tag has the bottom border cut off in chat   ![Image](https://github.com/user-attachments/assets/0a6f020a-adb5-4c64-a14e-084b80692d01)
---
Título: Terminal icon picker is really behaving strange
Descripcion: Steps to Reproduce:  1. go to terminals 2. select to change the icon  🐛 🐛 🐛   <img width="554" alt="Image" src="https://github.com/user-attachments/assets/97a30d40-17e4-464e-9d51-36031960f620" />  This widget seems nothing like anything we have in our UI normally (or is it maybe a hover?). It: * is positioned wrongly, even though it has a beak * its outline is cut off to the top making it look as if it goes outside of the window * there is a "add" thing that I am not even sure what that is?  <img width="500" alt="Image" src="https://github.com/user-attachments/assets/3f1320e3-8b2b-4215-9d21-dfef831e7890" />
---
Título: Copilot is almost ready after being ready?
Descripcion: Unexpected:  ![Image](https://github.com/user-attachments/assets/07e9cb60-a5d2-40ad-9dda-cd1517aa2fa5)  Repro was trying to use after reloading window.
---
Título: MS download page for VSCode lacks clear spacing between x64 and arm64 download icon links
Descripcion: There's an important (and easily solved) UI problem on the the VSCode [download page](https://code.visualstudio.com/download): there are boxes/icons shown (as download links) which separate x64/arm64 variants under each listed OS (Windows, Linux, Mac).   The problem is that for the column for Windows installers, the x64/arm64 boxes/icons/links **_appear as just one box_**...which is of course INCORRECT, as they are indeed separate installers (for those who would realize this). If they don't, they could end up with an arm64 installer for an x64 machine, which will fail with "_this program does not support the version of Windows your computer is running_". That's not then an obvious problem to solve.  See below for screenshots of the error and the site. And to be clear, this happened in Edge, Firefox, and Chrome, whether on a low- or high-resolution monitor. It's almost certainly just some CSS issue. I tried by didn't readily find it.  BTW, I do realize that the link for "Windows" above them would give you the proper installer for your OS...but not everyone will notice that and may tend to click one of these links below that.  Indeed, I was helping someone today who was trying to install VSCode for the first time who had encountered this error, and in a zoom session I saw the issue--then confirmed it on my own, so I wanted to bring the issue to someone's attention.   And apologies if this may not be the right place to raise such a site, but on the page was a "report issues" link that pointed to this repo.  Again, screenshots below.  ![Image](https://github.com/user-attachments/assets/8d3dbd3b-c25c-4fd8-b7cc-697181d89e88)  ![Image](https://github.com/user-attachments/assets/1c0ea704-2363-4d4c-a8d0-a1ca34193230)
---
Título: Settings editor appears slow when it falls back to AI search
Descripcion: For a user its not clear if a search for a setting is just slow or done by AI:  ![Image](https://github.com/user-attachments/assets/f5f1f134-32fd-4189-8e21-dfc2e6327804)  We need to better communicate to the user that some fallback search was used, otherwise it seems VS Code has an incredibly slow settings search.  //cc @kkbrooks
---
Título: Re-think the Chat view welcome
Descripcion: When a user opens a new Chat view in agent mode they see the following:  ![Image](https://github.com/user-attachments/assets/691e6228-f49e-49ea-b7be-1614f7591570)  I think this view is a testiment to how we evolved the feature (it was first chat then agent). We need to re-think this as the future will be agentic first and only. Some comments on the current look:  1) There is no need for the Copilot Frog icon. I think we can survive without any icon at all. AI is key to the experience, no need to have a special simbol for it 2) "Edit with Copilot" is completely not important. It is agent, not "copilot". We should not push the Copilot brand 3) Explanation paragraph - hopefully not needed, users just start and figure it out. It's not like we have an explanation in the editor how to use it 4) "Powered by AI mistakes are possible" - I can discuss with CELA / Responsible AI folk that we put this somewhere else (make it smaller) 5) "Internal user..." only internal users see this, not important 6) @ and # are not important in agent mode. Agent figures out all by itself, and we have "@ Add Context" affordance already for this  Thus looking at the current content, I can not say any of it is useful.  Zed shows and empty view and at the bottom recent chat sessions.  ![Image](https://github.com/user-attachments/assets/f3f3b7c2-6706-492a-8798-460007888819)  Cursor similar, but they start with the input at the top, recent sessions at bottom, and then once chat starts they move input to the bottom. Windsurf similar, but they show the input in middle, and recent sessions at bottom, once chat starts the move input to the bottom.  ![Image](https://github.com/user-attachments/assets/60cd1d08-8ef9-4a34-98b8-3cd245e76213)  ChatGPT mac app just shows an empty space (lol, but I like it).  How can we improve the Agent welcome experience? Industry seems to be aligning on the pattern it seems, should we follow?  fyi @roblourens @kkbrooks @bpasero @pierceboggan
---
Título: Add full set of color tokens for chat panel
Descripcion: ### Problem  Currently the chat panel is using color tokens intended for other areas of the UI which don't always work with this context or with the paired foreground/background in chat.  ### Proposal  Add new color tokens to `chatColors.ts` for... - [x] chat prompt background (added as `chatRequestBubbleBackground`) - [ ] chat response background - [ ] chat prompt foreground - [ ] chat response foreground - [ ] chat response secondary foreground  - [x] chatLinesAddedForeground - [x] chatLinesRemovedForeground   cc @roblourens @justschen @jo-oikawa
---
Título: Buttons in dialogs are larger than expected
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->   The vertical padding for Buttons should be `4px`, resulting in `28px` height, like the below example:  ![Image](https://github.com/user-attachments/assets/944cbb82-cfd7-416c-981a-70f67387a544)  The current Buttons in dialogs are larger, with a total height of `30px`:  ![Image](https://github.com/user-attachments/assets/16b1678f-9b50-4e94-abd3-03f8c4787690)  A solution to align sizes is to update the vertical padding to `4px`:  ![Image](https://github.com/user-attachments/assets/4eead302-99aa-40f7-a6f0-42802af6d585)
---
Título: Unhelpful alert dialog when encountering pre-commit errors
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.101.0-insider (Universal) Commit: f832c6b59a2ed11890f4988a29e85658b092a69a Date: 2025-06-06T20:43:03.362Z Electron: 35.5.1 ElectronBuildId: 11708675 Chromium: 134.0.6998.205 Node.js: 22.15.1 V8: 13.4.114.21-electron.0 OS: Darwin arm64 24.5.0  When I am working with CSS Variables I regularly encounter this error message when committing changes:    <img width="320" alt="Image" src="https://github.com/user-attachments/assets/6a90b7f3-0da3-48da-881b-f7bbb321c258" />  This took a long time to figure out initially - there was no indication from the message content that the problem stemmed from a precommit error:  <img width="514" alt="Image" src="https://github.com/user-attachments/assets/5d0c6155-a310-4ce7-891a-f6e994d8807f" />  This was confirmed when successfully making the same commit using the `--no-verify` flag.  My expectation was that the error dialog would contain this information, or at least instructions on how to debug & where to look. Here is a mockup:  ![Image](https://github.com/user-attachments/assets/c185567c-c2c9-4985-9e41-5cf53156a674)  Steps to Reproduce:  1. Update some CSS value to use a variable that doesn't exist in `vscode/build/lib/stylelint/vscode-known-variables.json` 2. Attempt to commit the change
---
Título: Primary Buttons in settings are smaller than expected
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  The vertical padding for Primary Buttons should be `4px`, resulting in `28px` height, like the below example:  ![Image](https://github.com/user-attachments/assets/944cbb82-cfd7-416c-981a-70f67387a544)  The current Primary Buttons in settings are smaller, with a total height of `24px`:  ![Image](https://github.com/user-attachments/assets/1c438776-a778-4f2a-bd9c-38f0c4730344)  A solution to align sizes is to update the vertical padding to `4px`:  ![Image](https://github.com/user-attachments/assets/465b7aa8-7826-4b08-b300-44b44e777853)
---
Título: Primary Buttons in walkthroughs are smaller than expected
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  The vertical padding for Primary Buttons should be `4px`, resulting in `28px` height, like the below example:  ![Image](https://github.com/user-attachments/assets/944cbb82-cfd7-416c-981a-70f67387a544)  The current Primary Buttons in walkthroughs are smaller, with a total height of `24px`:  ![Image](https://github.com/user-attachments/assets/e5d41642-3c71-4952-be3f-2e9a8c3b2407)  A solution to align sizes is to update the vertical padding to `4px` & set the line-height to `inherit`:  ![Image](https://github.com/user-attachments/assets/b0ded854-4930-4881-a07a-34adf355f344)
---
Título: Icons misalignment
Descripcion: <img width="385" alt="Image" src="https://github.com/user-attachments/assets/7cc54e02-f8f8-4157-ba17-4c392f824282" />
---
Título: Chat code block pill token updates
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->  Adjusted the color tokens used in the chat code block pill to meet color contrast requirements called out in an [accessibility review](https://github.com/microsoft/vscode-copilot/issues/16075).   cc @meganrogge   ### New color variables for chat UI:  * [`src/vs/workbench/contrib/chat/common/chatColors.ts`](diffhunk://#diff-7b0d817f156537fe45e5332dc51ae82feb44214e17e8f60cb480c8cdae7faf7bR60-R69): Added `chatLinesAddedForeground` and `chatLinesRemovedForeground` variables to define the foreground colors for added and removed lines in chat code block pills. These colors are customizable for different themes.  ### Integration of new color variables:  * [`src/vs/workbench/contrib/chat/browser/media/chatCodeBlockPill.css`](diffhunk://#diff-5f1e5bde29da543da65c665707b55f0b0280f7f44809141b941e01ed6ef16b40L61-R67): Updated the `span.label-added` and `span.label-removed` styles to use the new `--vscode-chat-linesAddedForeground` and `--vscode-chat-linesRemovedForeground` variables, replacing the previous editor gutter colors.  * [`src/vs/base/browser/ui/iconLabel/iconlabel.css`](diffhunk://#diff-93ac308d9370d907e287adb9c39b7ed81f8cc28502bf5a060cf4c4bcbe1dfffeL63-R68): Modified `.label-suffix` and `.label-description` styles to use `--vscode-peekViewTitleDescription-foreground` for more accessible color contrast.  ### Configuration updates:  * [`build/lib/stylelint/vscode-known-variables.json`](diffhunk://#diff-57580bfa2d192c3c9eb714af64b8b9eb3891cfd7cf14a62a4cf9b5774b8d1b64R62-R63): Added the new `--vscode-chat-linesAddedForeground` and `--vscode-chat-linesRemovedForeground` variables to the list of known variables for validation.  fixes https://github.com/microsoft/vscode-copilot/issues/16075
---
Título: UX bug: unexpected hover behaviour - attached file
Descripcion: Testing #250358  Version: 1.101.0-insider (Universal) Commit: 1ca21f8a13ad30d022e80888716156f4264297d0 Date: 2025-06-03T05:04:14.310Z Electron: 35.4.0 ElectronBuildId: 11602177 Chromium: 134.0.6998.205 Node.js: 22.15.0 V8: 13.4.114.21-electron.0 OS: Darwin arm64 24.5.0  ![Image](https://github.com/user-attachments/assets/8e2a0c7f-4b62-4a13-ae5f-0c26687e185f)  Expected behaviour - one of two options:  1. When hovering over an attached file the whole background would continue to change color, like the suggested file - clicking any part of the control would remove the suggested file (currently only the `x`) 2. when hovering over the main body of the attached file, the cursor would not change to a pointer - this would only change when hovering over the `x` of the file
---
Título: Retry experience not good
Descripcion: Multiple things with retry experience that I do not like: 1) The icon looks like a explorer refresh icon (not specific enough) 2) Why would anyone retry without editing the prompt (except when encountering a server side error)  ![Image](https://github.com/user-attachments/assets/2888b650-a8eb-4a0a-af17-af8ee140e0b1)  Should we just use a better icon (chat gpt uses a nice one)? Or get rid of the retry experience and merry it with the edit experience? E.g. way to retry is to actually click into the request and just clicking enter one more time.  fyi @bpasero @roblourens   I do not think any of this is urgent and we can discuss / tackle whenever you want.  ![Image](https://github.com/user-attachments/assets/808c6ce2-425a-4fa1-b714-20e0cb07356b)
---
Título: Chat response border not visually appealing
Descripcion: ![Image](https://github.com/user-attachments/assets/f536107c-44bd-40f4-afd0-159580042f9a)  Issues: * Does not align with rounded corner of nice request border * When there is space at the bottom the border also takes up that part  I do not know what is a good solution here. I am fine if we post pone this one to some other milestone (since we were always behaving like this).  @jo-oikawa @bpasero @roblourens
---
Título: 🚀 Feature Request: Make Git Inline Action Icons (Stage/Revert/etc.) Position Configurable
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  -----  #### Summary  Please provide a setting to configure the **position of inline Git action icons** (such as `Stage Change (+)`, `Revert (↶)`, `Navigate Change (↑/↓)`, etc.) in the **Git diff view**. Currently, these icons are **fixed on the right side** of the editor, which introduces usability issues for users working with large screen resolutions or when focused editing is on the left side of the file.  ---  #### Problem Description  When working in the **Source Control > Changes** view, and reviewing diffs or working copies, the action icons appear in the upper right-hand side of the modified block:  * Users often focus on the **left side** (line numbers, code gutter, and modified lines). * To stage or revert changes, we must **drag the mouse all the way to the right**, which is disruptive and inefficient, especially for users on ultrawide monitors or using keyboard-centric workflows. * The UI flow would be significantly more ergonomic if these action icons were positioned **closer to the code itself**, or at least **configurable**.  ---  #### Benefits  * Improves accessibility and usability, especially for:  * Users with ultrawide monitors or limited mouse mobility. * Developers who frequently stage/undo selective changes from inline views. * Increases focus and reduces cognitive load during code review and change management.  ---  #### Screenshots for Context  Current (right-aligned icons):  ![Image](https://github.com/user-attachments/assets/a1731957-09d5-4906-8b43-faa4ab3007ba)  (Proposed: left-aligned variant would be closer to line gutter.)  ---  Thank you for considering this! 🙏 This small improvement could go a long way for Git power users in VS Code.
---
Título: Remove GitHub Copilot title are from chat response
Descripcion: "GitHub Copilot" title in response just takes up space and add zero value. The bubble background makes it clear what is user initiated. I suggest we simply remove it.  fyi @jo-oikawa @roblourens @bpasero   Here's the before and after  ![Image](https://github.com/user-attachments/assets/f2181818-cc28-440a-9381-6043a0628eeb)  ![Image](https://github.com/user-attachments/assets/b710da37-4bfc-48fe-92d8-c1305f07878e)
---
Título: Focus border on user message in chat is off
Descripcion: Now that we are rendering use chat messages in bubble the click on focus border looks visually way off  ![Image](https://github.com/user-attachments/assets/2b31ed35-3753-4a93-b3b9-59b0ca8d531a)  The border should go just around the bubble.  fyi @roblourens @jo-oikawa @bpasero
---
Título: Chat should take full width of pane it is in
Descripcion: ![Image](https://github.com/user-attachments/assets/e4ad99b1-6e3b-4d54-84da-c44456b02814)  Why do we set max-width on chat? If the user gives extra space to the chat view it should take 100% of the width. I know we already have this behaviour in Stable, but I wonder why?  Other tools (zed, cursor) always go 100% width.  fyi @roblourens @bpasero
---
Título: Multi line chat message is wrongly indented
Descripcion: 1. Send a multiline chat message 2. Notice the wrong indentation in the second line 🐛   ![Image](https://github.com/user-attachments/assets/b2d5db33-ac29-4f12-86c7-6935b943062d)  fyi @bpasero
---
Título: Transparency around tokens use
Descripcion: We get a lot of user feedback about missing transparency around tokens used (and no transparency around rate limits). As a step 1, I think we should introduce some UI affordance that tells the user how many tokens they are about to consume (have consumed so far in the session).  LM Studio has nice affordance that shows token use after every message, and the text input also shows how much tokens the current input consumes. Below the input is a simple tokens N / MAX  ![Image](https://github.com/user-attachments/assets/24fae525-4f02-4c73-8a38-fb962fefba9f)  ![Image](https://github.com/user-attachments/assets/b31e2a93-810e-4f1e-b47a-5244dece3b1d)  Zed simply shows an affordance in the title area, which is very minimalistic but I believe gets the job done.  ![Image](https://github.com/user-attachments/assets/864474b0-f2a2-409f-aaa0-11b7c4ad1cc0)  fyi @justschen @bpasero @jo-oikawa
---
Título: Chat: Add UX/UI to highlight changes to URLs and key variables
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  There have been many times when breezing through a session with Agent mode that I'll miss the fact that a critical constant / variable or URL is subtly changed without realizing it. The code will still "work", but it will always cause issues later down the road that are really really hard to trace/debug.  It would be great if we had the capability, UI, and UX to call out (and maybe even have folks confirm) when a suggested change includes any updates to stuff like URLs, configurations, environment variables, global constants, etc that should/_need_ to be verified by a human.  As another anecdotal example: A friend did a live stream a few weeks ago where he spent an entire hour trying to debug a CORS issue only to realize the problem was caused by a subtle change to the URL he was trying to fetch that he had missed.
---
Título: Feature Request: Quickly Display Active Settings Sync Account in UI
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Hi VS Code Team,  I'm writing to propose a feature request regarding the native Settings Sync functionality.  Problem: Currently, when Settings Sync is active, it's not immediately obvious to the user which specific Microsoft or GitHub account is currently being used for synchronization. While the "Accounts" icon in the Activity Bar indicates that an account is logged in, and clicking it allows for account management, it doesn't prominently display the active sync account (e.g., username or email) at a glance.  Users who manage multiple personal and work accounts (both GitHub and Microsoft) or simply want to quickly confirm their sync status might find it cumbersome to verify which account is active. They might have to rely on memory or dig into the Output channels to confirm.  Proposed Solution / Suggestion: I suggest enhancing the user interface to provide a quicker way for users to see the active Settings Sync account. Here are a few ideas:  Example:  Change the existing menu item Settings Sync is On to: `Settings Sync is On (GitHub: example@gmail.com)`  or `Settings Sync is On (Microsoft: your_email@outlook.com)`  ![Image](https://github.com/user-attachments/assets/cfc30831-498c-4723-920e-0e8a5ee6e0a1)
---
Título: Replace 'x' action with "Edit" in chat
Descripcion: ### Problem - The "x" action on the previous messages doesn't clearly set expectations for what happens when you click the button  ### Goals - Update the UI without adding unnecessary complexity or new concepts - Allow users to redirect the conversation in a new direction  #### Notes - This issue has been updated to focus on editing UX first, then we'll reassess options for checkpoint
---
Título: Improve VS Code design resources in Figma
Descripcion: Our Figma library is out of date, lacks documentation, and we've received feedback that its difficult for extension teams to use when designing their experience.  ### Areas to improve - [x] Add variables for spacing and corner radius - [ ] Remove outdated color styles - [ ] Rebuild controls with up-to-date features (auto layout, modes, etc)     - [ ] https://github.com/microsoft/vscode/issues/266450     - [ ] https://github.com/microsoft/vscode/issues/266262     - [x] https://github.com/microsoft/vscode/issues/266452     - [ ] https://github.com/microsoft/vscode/issues/266453     - [ ] https://github.com/microsoft/vscode/issues/266454     - [ ] https://github.com/microsoft/vscode/issues/266455     - [x] Input     - [ ] https://github.com/microsoft/vscode/issues/266456     - [ ] https://github.com/microsoft/vscode/issues/266457     - [x] Menu     - [ ] https://github.com/microsoft/vscode/issues/266458     - [ ] https://github.com/microsoft/vscode/issues/266460     - [ ] https://github.com/microsoft/vscode/issues/266461     - [ ] https://github.com/microsoft/vscode/issues/266462     - [ ] https://github.com/microsoft/vscode/issues/266463     - [ ] https://github.com/microsoft/vscode/issues/266464     - [ ] https://github.com/microsoft/vscode/issues/266465     - [ ] https://github.com/microsoft/vscode/issues/266466     - [ ] https://github.com/microsoft/vscode/issues/266467     - [ ] https://github.com/microsoft/vscode/issues/266468     - [ ] https://github.com/microsoft/vscode/issues/266469     - [ ] https://github.com/microsoft/vscode/issues/266470     - [ ] https://github.com/microsoft/vscode/issues/266471     - [ ] https://github.com/microsoft/vscode/issues/266472 - [ ] Add relevant links to API documentation to each applicable control - [ ] Redo Type, Colors, Icon page - [ ] Redo README/intro page - [ ] Republish to the community as a UI Kit
---
Título: Show context size for each Copilot model
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Copilot should show the user, in some way, and in the documentation, the context window available for each model. There is a huge difference between models currently (Gemini Pro 2.5 having around 64k and o4-mini having around 100k) and this is hidden from the user.  When picking a model, this information is really important.  Cursor does this this way: https://docs.cursor.com/models  @isidorn
---
Título: Tokenize VS Code UI
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> In an effort to standardize, make the current (& future) product UI more consistent, as well as improving & aligning the design system with the product codebase, the design team proposes to implement a token based approach to UI elements, replacing hard-coded CSS styles with semantic variables based on an agreed upon superset of tokens.  The values in question include:  - spacing: padding, margin, & other dimensional values - border-radius - stroke-weight - shadows - font-size - font-weight - line-height  The broad outline of the effort:  - audit all UI elements to identify existing values & uncover any usage patterns - research existing token systems in other products & design systems (i.e. Fluent) - rationalize values, develop top-level values, assignment logic, naming convention - develop guidelines & documentation for developers - replace hard-coded values with variables across UI - test & bug fixes  The result should allow for the creation & implementation of consistent net new product UI, that adheres to design guidelines, while building a system that allows for the global update of values & increased customizability in the future (e.g. dynamic density).
---
Título: MCP Card / Dropdown polish
Descripcion: While working on #16836 I've noticed a few places where we can/should polish the current MCP card / dropdown design.  1. [x]  Add rounded background to tool name 2. [x]  Implement truncated see more behavior for tool descriptions and make description text color descriptionForeground 3. [x] Add "Input" label above input content 4. [x] Move disclaimer text to down to be right above the action buttons, remove icon, and make text color descriptionForeground  **Proposed updates:**  <img width="1246" alt="Image" src="https://github.com/user-attachments/assets/6bac4086-6d36-43bc-ac3b-880f1f630583" />  **Current design for reference:**  <img width="518" alt="Image" src="https://github.com/user-attachments/assets/1c65807f-6739-4466-b9bd-41c165594637" />
---
Título: Chat: Improve inline add context menu
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  From discussion in #243223:  > Something that I feel is missing for us is that if I open "Add Context", I see a nice overview of context types, and it's obvious that I can add files, and my open files are easily visible. But if I type #, I see this:  > ![Image](https://github.com/user-attachments/assets/054b448b-bd95-492b-8ecf-829b03ffd9aa)  > which feels like a lot with all the tools, and it's not immediately obvious that I can add files like this. I'd like to see my open files when going that route.  My $0.02 (assuming it's possible with our current implementation of inline menus) would be to copy exactly what the add context quick pick does today (i.e. a high level menu organized by categories/types of context with sub menus).  Effectively something along these lines but with appropriate styling / inline menu behavior and probably remove the search bar at the top and recommended files at the bottom:  <img width="791" alt="Image" src="https://github.com/user-attachments/assets/a930163f-f72b-4193-9b5f-19e5f8a2ad72" />  *Note: The above screenshot was made by just dragging the add context quick to be placed above a `#` in the input.*
---
Título: `Cmd+Shift+I` should toggle chat view
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Using the `Cmd+Shift+I` keybinding will currently only _open_ chat.   I think it would be a nice quality of life improvement to have this keybinding toggle the chat open _**and**_ close.
---
Título: Add Context Menus to Figma Toolkit
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Once #247713 has been resolved, update the Figma Toolkit library with the final design.
---
Título: Quick pick UX | Difficult to discover & use drag feature
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  Currently, there it difficult to discover that the quick pick menu is able to be dragged & repositioned, offering no visual indicator to communicate the functionality:  <img width="609" alt="Image" src="https://github.com/user-attachments/assets/a9f660a5-8f0e-4e82-96bd-af61d3c02bf9" />  In addition, when the feature has been discovered, it is difficult to know what part of the UI is "grabbable". After some trail & error I discovered that the area in question is the 6px padding around the text input, which is hard to easily grab:  ![Image](https://github.com/user-attachments/assets/20bc8abe-8308-435e-b302-60b16873cb8c)  A potential solution to this issue would be to mimic the macOS Spotlight Search behaviour, making the entire text input draggable when empty:  ![Image](https://github.com/user-attachments/assets/dcc32805-2169-4ea2-9242-c333d113f43b)
---
Título: Chat attachments mouse/keyboard navigation issues
Descripcion: The chat attachments are not really pleasant to be used with keyboard/mouse:  ![Image](https://github.com/user-attachments/assets/159b92f2-c1d2-49ea-af7e-45b24f3193d6)  To summarise what I see and would expect: * clicking an attachment with mouse should not move focus into the editor but preserve it in the pill * pressing `Delete` to remove an attachment does not work for the `Current file` (works for others) * tabbing around always requires 2 tabs because you end up on the close action which seems redundant because you can remove with `Delete` key * ideally I can use arrow keys to go left/right through the attachments  cc @isidorn @hawkticehurst @leereilly
---
Título: Opening chat in new window will stop a currently running prompt
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  If a prompt is in the middle of running and then I select the option to open the chat in a new window the run will be stopped and I'll need to start over. We should have the ability to seamlessly open a chat in a new window without stopping any actively running chat/agentic flows.  https://github.com/user-attachments/assets/3d0eec64-6ea3-4c31-aaa5-cc8cd33b8dd5
---
Título: Hide/collapse MCP tools when server is disabled
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  As I continue to install more MCP servers it's becoming a pain to enable and disable them because all servers/tools are always visible. In the worst case I need to scroll to the very bottom of the list to enable/disable the last server.  It would be great if the tools in a server were hidden whenever the server is disabled and then shown again when enabled. Hoping this kind of pattern is possible/okay with the current quick pick API/implementation?  https://github.com/user-attachments/assets/4c0b3c1b-f0cf-485a-82c7-aae046c45880
---
Título: Standalone chat window moves focus when tool call prompts occur
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  I've been playing with the standalone chat feature a lot recently as a sort of standalone chat app. This means I'll sometimes move the window to a different workspace on my computer where I'm doing work (for example: using the Blender MCP server to make adjustments to a model).  There's an annoying behavior, however, when a tool call confirmation card is rendered that will bump the focus back to the main VS Code app, resulting in an experience where I need to scroll between different workspaces multiple times during a chat session. The focus should remain on the standalone chat window.  https://github.com/user-attachments/assets/f0b8836b-b966-4307-902f-cd1d805119cf
---
Título: Let me see the result of built-in fetch tool call
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Currently, when the built-in fetch tool is used in chat there's no way to see what the result (success, error, content, etc) of these tool calls is –– all you get is a list of the URLs that were fetched.   It would be great if we could give the fetch tool the same treatment as the MCP tool card/dropdown where input / output is provided for auditing purposes.  Scenario: I fetched a bunch of issue links (including links to private repos) but I can't tell if any of the fetch calls were successful or not and what they did/did not return.  <img width="526" alt="Image" src="https://github.com/user-attachments/assets/8080ef11-e5a7-4612-9694-78907689d896" />
---
Título: "New tools available" button needs UI/UX polish
Descripcion: <img width="621" alt="Image" src="https://github.com/user-attachments/assets/b64e378b-9c9e-441c-aec1-9cf4e841cbf1" />  There are two UI issues I see with it:  1. The current rendering of a partial button with one regular action and another primary action looks like screen cheese. Also, if we have a primary action in that row of actions it should always be the `Send Message` one. 2. Turns out it's not two actions at all, but just one. 😕   There's also major UX issue:  - It's not clear to the user why this shows up. - It's not clear to the user what happens on click. - Once I click it, it's gone (after an async refresh) and I'm left confused as to what I have just done.
---
Título: MCP Dropdown: Remove chevron focus outline
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Just noticed that when someone clicks on the chevron to open an MCP card/dropdown there's a blue focus outline that remains visible until you click on something else. We should remove this and ideally make the entire dropdown "header" have a focus outline instead.  <img width="521" alt="Image" src="https://github.com/user-attachments/assets/bc3b88ca-6061-4810-bd63-ba76df412324" /> <img width="519" alt="Image" src="https://github.com/user-attachments/assets/908a15a7-2880-41b2-a698-340683e9c173" />
---
Título: Chat: Add progression UX/UI for tool calling
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Related to #247909, I also found it to be very confusing to see that many tool calls back to back without any indication that progress was being made. I initially thought I had just ended up in some kind of infinite loop.  It would be great if we had some type of UI, UX, or even just copy that let people know a lot of tool calls are about to me made and to just sit tight. Even better would be the ability to show how are along you are in that process (i.e. 8/24 tools run).  With that said, is something like this even possible to do? Are we able to prompt each AI model to give that information and then render it in a reliable way?
---
Título: Chat: Add collapsed/combined state for bulk tool calls
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Ran into a scenario today where there were like 25 back to back tool calls during a chat session resulting in a kind of ridiculous UX/UI. @eleanorjboyd had a great idea during standup to add some type of UX that combines bulk tool calls into a smaller UI.  <img width="548" alt="Image" src="https://github.com/user-attachments/assets/5040176f-b596-4733-b4c4-9a68331d21fe" />
---
Título: Improve UX for cell output -> chat dnd
Descripcion: refs: https://github.com/microsoft/vscode/issues/245364  ---   Overall issue is discoverability. Users struggle to initially find the right way to drag cell outputs to chat.   https://github.com/microsoft/vscode/issues/247460#issuecomment-2834570833 https://github.com/microsoft/vscode-copilot/issues/16648#issue-3025795539  Default behavior is that we support dragging a subset of mimes that boil down to images and textual outputs. Images can be dragged directly and textual outputs need the `alt` modifier as well. More info:  Image mime outputs can be dragged into chat directly, however the caveat is that the output element itself (the image in this case) has to be dragged, and after testing it seems that the intuition is to use the 'grabber' cursor icon from while the user hovers in the cell output container (which can and often contains multiple output elements). The correct method is to drag directly starting from the output itself.   Text mime outputs pose another issue, where users will often want to select the text in the output, which makes directly dragging not viable. If enabled, that would effectively prevent users from selecting any text within the output since the drag handler would steal it. The current UX is that users need to hold the `alt` modifier and that will enable dragging of textual outputs.   Proposed idea from UX: - add a "drag" icon to the upper right corner of the output element. This would be per output, as currently there is not support for dragging the entire cell/entire output to chat.   ![Image](https://github.com/user-attachments/assets/0217ad42-ad5e-4dde-bb22-bf0031478ec9)
---
Título: Addressing accessibility issues | minimum control sizing
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  To maintain our accessibility rating, we need to update the minimum sizes of our UI controls to 24 x 24px. So far, we have 3 issues detected by the accessibility team:  - #222103  - #246689 - #246602  If we address these issues individually, inconsistencies will develop throughout the UI causing future UX debt. This list of issues is expected to grow, which will only compound the problem.   There has been a desire to create [UI density modes](https://github.com/microsoft/vscode/issues/168671), which would address the above issues for customer who choose to use larger UI controls, however it has been made clear that there is not enough resourcing to make this update to the entire product UI in one pass.  Taking this info into account, we should develop an approach which will address the current issues, maintain UI consistency, & ensuring compatibility with any future density updates.   One approach would be to develop a set of CSS padding / size tokens & gradually update controls to use these variables over time.   Updating the value of the CSS variables, via a user setting, to configure the control sizes, would allow customers to use the larger sized controls if required (disabled by default) & once all controls have been ported over, we can then develop dynamic density consistently across the whole UI.
---
Título: Custom actions control, NES control and context menu alignment
Descripcion: I find the custom actions control, NES control and context menu could align better, because the former seems to be like a beefed up version of the latter (section headers, footer actions). Overall I even feel like they both could use the same underlying widget to reduce the chance of further misalignment.  As we now expand the use to more locations like NES and Chat, I feel this is becoming more important.  Things noticed: - [ ] keybindings are presented differently - [ ] active item has different background color - [ ] separator is not stretching same way  **Context menu:**  ![Image](https://github.com/user-attachments/assets/e0b9e8ee-fde1-4bb4-82f3-034ced95f6d0)  **Actions widget:**  ![Image](https://github.com/user-attachments/assets/f74f4223-9fae-4163-bf49-891999d47232) ![Image](https://github.com/user-attachments/assets/e3a76028-c5b1-4593-922e-4397723343c3)  <img width="256" alt="Image" src="https://github.com/user-attachments/assets/c565fe62-201d-4f98-b635-10b654ea221d" />  //cc @joaomoreno @isidorn @Tyriar
---
Título: UI and image fixes for new walkthrough
Descripcion: - fixed theme mapping for the SVG -  updated font sizing for new walkthrough layout  <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->
---
Título: Chat: Add custom context menu for send message split button
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  While testing #247399, I noticed we now have a custom context menu for the mode picker in chat (🥳). Sadly, I also noticed we still don't have the same treatment applied to the send message split button context menu.   We should **_really_** try to add a context menu there too before we ship next week.  Yay!  <img width="580" alt="Image" src="https://github.com/user-attachments/assets/8f5ad627-58f7-4053-83df-2f7cef147ac0" />  Less yay :(  <img width="587" alt="Image" src="https://github.com/user-attachments/assets/b328f8e5-2cf2-4fe5-bef4-35b8ac9c6634" />
---
Título: Test: Inconsistent keyboard navigation in add context quick pick
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  Testing #247399  There's currently inconsistent keyboard navigation capabilities for certain menu items in the add context quick pick. When inside a sub menu, click the escape key will navigate back to the main menu, while other times the entire quick pick will be closed.  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  Steps to Reproduce:  1. Open add context quick pick 2. Using keyboard navigate to "Files & Folders..." and click enter 3. Once sub menu is visible click escape key 4. Should navigate back to main menu 5. Now navigate to "Instructions..." and click enter 6. Once sub menu is visible click escape key  This final escape key press will close the quick menu when I would've expected to go back to the main menu. This is an issue for "Instructions..." and "Symbols..." menu items.  https://github.com/user-attachments/assets/ca16f9f4-13cd-4ee8-89f9-e3ebebabe301  Version: 1.100.0-insider Commit: c456afbf30ea22be07e2ec867db6c024ca7748ca Date: 2025-04-28T11:20:01.206Z Electron: 34.5.1 ElectronBuildId: 11369351 Chromium: 132.0.6834.210 Node.js: 20.19.0 V8: 13.2.152.41-electron.0 OS: Darwin arm64 23.6.0
---
Título: MCP: Adding an NPM package which doesn't exist should have a better error flow
Descripcion: Testing #247533  1. Add an NPM MCP server 2. Type something which doesn't exist like `fasoidjhiosajdoas`  🐛 You get a weird in-quick-pick error experience.  The moment I press <kbd>Enter</kbd> I would expect (1) quick pick stays open, (2) gets disabled and (3) shows loading progress. If it's a success, we hop to the next step. Otherwise, we stay on the same pick and show the error using a different affordance.  https://github.com/user-attachments/assets/40e21326-dd02-4f90-b2c9-6446db3dc8fc
---
Título: Attachment hint should be closer to input box
Descripcion: Testing #247399  I would think that a hint/instruction for user what to put in the input box could be closer to the input box. Not sure if related to the TPI too much   ![Image](https://github.com/user-attachments/assets/be49d06d-5cb2-477c-afea-2547bf855678)
---
Título: Tools icon doesn't have visual indication if all/some/none tools are added
Descripcion: Testing #247399  The icon could have some indication if all/some/all tools are added so that user knows they might've turned some tools off or something.  The icon could have a single tick at right bottom corner for some tools and double tick for all-tools-attached scenario.   This issue is a bit of a nit perhaps. I don't know yet from experience if users would partially enable tools (though there are definitely use cases when a particular tool isn't really needed for the task). Feel free to close   ![Image](https://github.com/user-attachments/assets/7c03510c-3717-4772-ae98-800d6baa556e)
---
Título: Some active breakpoints can be removed only from the Breakpoints menu
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  OS: Ubuntu 22.04 VScode: Version: 1.99.0 Commit: 4437686ffebaf200fa4a6e6e67f735f3edf24ada Date: 2025-04-02T21:35:19.530Z Electron: 34.3.2 ElectronBuildId: 11161073 Chromium: 132.0.6834.210 Node.js: 20.18.3 V8: 13.2.152.41-electron.0 OS: Linux x64 6.8.0-57-generic  Here is an exemplary state:  ![Image](https://github.com/user-attachments/assets/51c2fde9-c8af-476f-8e8a-92dd5696952a)  Both breakpoints are active, but only the one on top has the red circle and can be toggled on/off from the editor. The other has no mark to the left and can only be removed using the Breakpoints menu. This causes some inconvenience during debugging with lots of such breakpoints.  Steps to Reproduce:  1. Get some python code 2. Mark a few breakpoints 3. Observe some of them not being marked with the red circle, yet being in the Breakpoints menu
---
Título: UX Polish: Icons reordered depending on chat mode
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Just noticed that the icons in the bottom left of the chat input are reordered depending on whether they are in Ask or Agent mode. I think we should make the ordering consistent.  $0.02: Icons that are consistent across modes (i.e. voice chat) should be on the far left, and any icons that change/get switched out should be placed on the far right.  <img width="521" alt="Image" src="https://github.com/user-attachments/assets/77cfeecf-ddd4-49e7-aecb-30a6dca37693" /> <img width="524" alt="Image" src="https://github.com/user-attachments/assets/7c0df021-8de7-44a3-b4fc-ad39504a20c2" />
---
Título: UX: Custom model picker doesn't behave like native
Descripcion: Related to https://github.com/microsoft/vscode/issues/247136  The custom model picker has the following issues:  - Only opens on mouse up. Native menus open on mouse down. - User needs 2 clicks to open and select an item. Native menus can do this on a single mouse down, drag, mouse up interaction. - Dropdown button has no style when menu is open. Native menus keep the `active` style rendered while they are open. - Menu items stay selected if mouse moves away from the menu. Native menu items get unselected the moment the mouse goes away from them. - `Manage Models...` is a link. It should be a simple menu item. - After opening the picker, pressing `Tab` moves focus to `Manage Models...`. Pressing `Tab` again closes the picker.
---
Título: UX: Copilot pickers need alignment
Descripcion: We have 3 pickers at the bottom of the chat view, 2 of them use native controls while the model picker uses custom.   https://github.com/user-attachments/assets/40eda6b7-388d-4527-add9-6e524bde8b98  It feels like there's no good reason to use the custom picker at all since there's only an additional _non-menu-item-like_ option at the bottom to manage models. This could easily be done with native menus by adding a separator between the models to pick and the `Manage Models` item.  <img width="261" alt="Image" src="https://github.com/user-attachments/assets/b75d02eb-d453-4dc4-a102-40d396e45206" />
---
Título: Change VsCode icon to a more modern version
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> It is just a small non-technical request about changing VsCode icon to the more modern attached version.  \#Aesthetics Matter  ![Image](https://github.com/user-attachments/assets/9953085d-7b6f-426c-a314-31d48bfa1cba)
---
Título: UX: Improve discoverability of chat controls
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Currently, we're getting feedback that indicates a lot of folks are not finding chat controls (i.e. undo/redo, new chat, and chat history) which are currently located at the very top of the chat panel.  Core proposal: Move these controls to be much closer to the chat input.  _Note: Just started working on design proposals/mocks, so will update this thread when they're done._
---
Título: Chat: Move tool picker button to bottom of chat input
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  In UX Sync this week there was a discussion about how the location of the tool picker button is a bit out of place in the top part of the chat input UI.  The top area of the UI is used to render chat message attachments (i.e. files, folders, etc), but the tool picker button is used to configure which tools should be allowed to run. This kind of prompt configuration usually lives in the bottom of the UI (i.e. mode and model drop downs).  I propose we move this button to the bottom left of the chat input. Here's some ideas for what that could look like and their tradeoffs.  **Option A – No Tool Numbers**  Pros: - Most space efficient / clean design - Aligns the best to how we render the icons in the bottom bar (i.e. icon button with no extra information) - Doesn't add extra visual information that needs to be parsed  Cons: - Loose the ability to quickly understand how many tools are toggled on / off  **Option B – Tool Numbers**  Pros: - Best design for quickly understanding how many tools are toggled on / off  Cons: - Big risk of this design taking up too much space over time (i.e. what if someone has thousands of tools?) - If we want to add more icons to the bottom left of the input UI, it would look very weird / clunky to have one icon button with text and others without  **Option B – Tool Numbers on Hover**  Pros: - Happy medium solution for being able to understand how many tools are toggled on / off somewhat quickly while keeping a clean space efficient default design  Cons: - Big risk of this design taking up too much space over time (i.e. what if someone has thousands of tools?) - If we want to add more icons to the bottom left of the input UI, it would look very weird / clunky to have one icon button with text and others without when hovered - By having content displayed on hover, any content immediately placed next to the right of this button will be pushed out further to left which will result in an experience/motion that looks very clunky  <img width="1050" alt="Image" src="https://github.com/user-attachments/assets/12702fc7-d2a6-41ce-9641-63a2edf64db2" />
---
Título: MCP: Add Server's show configuration keeps confusing users that just copy it over
Descripcion: Heard from several users that had a broken MCP setup, all caused by clicking _"Show Configuration"_ after clicking an install button.  How might we avoid that confusion while providing a preview.  cc @connor4312
---
Título: Chat Context: Icons per type versus icons per item?
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Moving the discussion over at https://github.com/microsoft/vscode/issues/246541#issuecomment-2805194749 to a separate issue.  Currently, the items in the chat context quick pick largely have unique icons per item, but as @jrieken pointed out this can add confusion and a lot visual/information density. Instead could we/should we group related types together and give icons to those types?  The core question of this issue is what groupings/types should there be?  ![Image](https://github.com/user-attachments/assets/d7a12a64-d5b3-4b36-b821-e6ff52fceb9b)
---
Título: Chat Context: Inconsistent use of ellipsis
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Auditing some of the Chat/MCP UI today and noticed that some of the chat context options we provide use ellipsis while others don't. Wondering if there's a reason for this? If not, I think we should adjust it so it's consistent.  $0.02: I lean towards removing the ellipsis.  <img width="746" alt="Image" src="https://github.com/user-attachments/assets/11bb7185-125b-4393-8171-a40a5ce2e7b0" />
---
Título: NES/Actions widget and alignment to context menu
Descripcion: Custom context menus put the `hr` all the way through:  <img width="605" alt="Image" src="https://github.com/user-attachments/assets/57a84808-533f-4882-96c6-390e6a6f4ada" />  Same for Copilot status:  <img width="333" alt="Image" src="https://github.com/user-attachments/assets/7f7550ce-339e-4139-b539-6c3c10b3f8eb" />  I would suggest to make NES and actions widget go all the way through as well:  <img width="394" alt="Image" src="https://github.com/user-attachments/assets/33c29964-00b4-43bf-b1a4-f56d7326854d" />  <img width="510" alt="Image" src="https://github.com/user-attachments/assets/4327b6a8-95e8-4d12-be20-c68480ab3333" />
---
Título: fix the activity bar "top" design
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Please fix the activity bar "top" design like this. It feels so good 🤌  https://github.com/user-attachments/assets/9b0d4812-a9af-429c-a1a9-6be42727087d
---
Título: Implement different sorting logic for add context quick pick
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Just noticed that we seem to use an alphabetical sorting logic for the add context quick pick. I think we may want to change this because there's the risk that an extension contributes so many tools/resources that it will fill the entire quick pick (see screenshot below).   I worry this will cause recurring frustration to have to scroll past these options when you don't need them, plus be a slight hit on the discoverability of other options.  I propose we instead implement an opinionated "pinned list" of options, followed by a "most recently used" sort. For example, I think the following order would be nice:   - "Codebase" - "Fetch Web Page" - "Find Test Files" - "Folder" - "Git Changes" - "Problem" - "Terminal Last Command" - "Terminal Selection" - "Test Failure" - ... Insert other tools/resources sorted by most recently used ...  This would ensure there's a nice set of common/helpful tools available right at the top and generally improve discoverability of the kinds of things you can attach as context.  **Stretch goal**  Even better than "most recently used" sort would be an AI-powered recommendation based on the the files you have open, the other context you have already attached, most recently used context/tools, etc, etc.  **Screenshot**  <img width="752" alt="Image" src="https://github.com/user-attachments/assets/318d6ec7-72f9-4355-8cb1-3c87d9ffb6a2" />
---
Título: Color contrast ratio less than required - Accessibility
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:   Steps to Reproduce:  1. Navigate to any input field in the software, and focus on it. The blue highlight border comes up. 2. Use a color contrast checker tool, such as Color Contrast Analyser, to determine the ratio between the color on the inside of the input field to the blue highlight border.  Problem: For accessibility, the color contrast ratio is less than the minimum required ratio, 3:1. PFA screen captures.  <img width="419" alt="Image" src="https://github.com/user-attachments/assets/c0af1a87-589f-4a81-8719-7ce16e126089" />  <img width="481" alt="Image" src="https://github.com/user-attachments/assets/0897ae05-ed7e-48e7-8dca-ae9efd4eb932" />
---
Título: MCP: Input preview can be confused with looking like in-file configuration
Descripcion: Had questions from multiple devs (not new, but they that spend a lot of time on MCP configs in VS Code), if the `inputs` are somehow written to the mcp.jcon file, as they show up as ghost-text-styled text:  <img width="861" alt="Image" src="https://github.com/user-attachments/assets/07aed087-15ee-41c1-8b85-4cba68135835" />  <img width="741" alt="Image" src="https://github.com/user-attachments/assets/2cea64ee-d163-4d7f-a30a-c37f4c1147fb" />  cc @hawkticehurst
---
Título: Offer "danger" (orange) style between "warning" (yellow) and "error" (red)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  ## Overview  Right now, there are two warm-color severities for "squigglies" in code:  * [`editorWarningForeground`](https://github.com/microsoft/vscode/blob/7ff86e6dcdf8af5c62c877d081f64a8b4755e521/src/vs/platform/theme/common/colors/editorColors.ts#L79-L81) `#CCA700`: often used for lint reports and other warnings * [`editorErrorForeground`](https://github.com/microsoft/vscode/blob/7ff86e6dcdf8af5c62c877d081f64a8b4755e521/src/vs/platform/theme/common/colors/editorColors.ts#L66-L68) `#F14C4C`: often used for type checking reports and other errors  Using the explicit "warning" color for lint reports is problematic. Linters such as ESLint provide two levels of reports, themselves also called "warn" and "error". ESLint and most of its community plugins default to enabling rules as "error", leaving "warn" as just for transient tooling states or for rare uncertain rules. There is no ideal way to surface lint reports in VS Code for this system:  * Warnings (yellow): is not correct, as lint "errors" are not high-level "warnings", they are often configured to break builds and are indeed errors * Errors (red): makes it conceptually confusing and difficult to distinguish them with other errors such as TypeScript's.  Proposal: can we insert a color tier between warning and error? Tentatively named **Danger**, with a midpoint between the two existing colors? It might make sense to also tweak the existing warning yellow and error red to be more distinct from danger. Maybe:  * Warning: `#E6BC00` _(optional change)_ * Danger: `#DF7A26` * Error: `#F82626` _(optional change)_  This would allow surfacing lint reports as a "danger" state that is higher severity than a warning but still lesser severity than type checking errors.  ### Additional Information  vscode-eslint surfaces lint reports with their respective level by default and seems to be blocked on changing that by this feature request (https://github.com/microsoft/vscode-eslint/issues/1199, https://github.com/microsoft/vscode-eslint/issues/1352, https://github.com/microsoft/vscode-eslint/issues/1880, https://github.com/microsoft/vscode-eslint/issues/1983). An `eslint.rules.customizations` option was added (https://github.com/microsoft/vscode-eslint/pull/1164) but that still suffers from the downsides of lint report _errors_ being surfaced semantically as _warnings_.  I don't think this is the same as #3915 or #9209. Those issues suggest adding more places to put styles, such as outlines around text or gutter marks. This issue is for adding >=1 new color to the existing list of color styles.
---
Título: Color contrast ratio of keyboard focus present on "C#" control is 1.277:1 which is less than 3:1: A11y_Visual Studio Client_Create new project_Non-text Contrast
Descripcion: ### GIT Hub Tags: #A11yTCS, #A11ySev2, #Visual Studio Code Client, #BM-VisualStudioCodeClient-Win32-Jan2024, #DesktopApp, #A11yMAS, #WCAG1.4.3, #ColorContrast, #Win11, #FTP,  ### Environment and OS details: Application name: Visual studio code  ### Reproduction Steps:  1. Open Visual studio code 2. Open command palette  4. Open accessibility insights for windows and check color contrast ratio of "Remote" text. 5. Observe that keyboard focus on any quick pick.  ### Actual behavior: Color contrast ratio of keyboard focus is 1.277:1 which is less than 3:1  ### Expected behavior: Color contrast ratio of keyboard focus should be greater than or equal to 3:1  ### User Impact: Low vision users will not be able to understand where the keyboard focus is present if color contrast ratio will be less than 3:1  ### Attachment:  ![Image](https://github.com/user-attachments/assets/14938c01-94c4-4f8d-b6fb-7ac9d7bbfd21)
---
Título: Add `project icon` for `IntelliJ IDEA`
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  improve the look and feel by using a project icon.  it's about polishing and making things nice and shiny which UI/UX is kind of about.  https://github.com/checkstyle/checkstyle/issues/16813  Same as here:   - [Spring Framework PR](https://github.com/spring-projects/spring-framework/pull/34444)   - [Rewrite Static Analysis PR](https://github.com/openrewrite/rewrite-static-analysis/pull/467)   - [PMD PR](https://github.com/pmd/pmd/pull/5538)  https://github.com/editorconfig/editorconfig/issues/425
---
Título: MCP Tool Dropdown UX Improvements
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Cataloging a list of various UX improvements to VS Code's MCP Tool Dropdown / Confirmation Card that we should discuss / implement for the April 2025 milestone.  Companion issue: #245721  ## ~~Add first-time server run confirmation card~~  **_EDIT: Decided to cut this proposal/idea. See discussion below._**  ~~Currently there's a warning attached to every single tool call along the lines of:~~  ~~> This tool is from 'filesystem' (MCP Server). Note that MCP servers or malicious conversation content may attempt to misuse 'Code - Insiders' through tools. Please carefully review any requested actions.~~  ~~I think we can offload a lot of this language to a single confirmation card that is shown when a new MCP server is used for the first time in any given chat session.~~  - ~~Goal: Allow us to simplify the language used in individual tool confirmation cards~~ - ~~Goal: Surface server level controls right in chat~~   - ~~Allow server to run for the current chat session (default) –– Least trust~~   - ~~Allow server to run in the current workspace –– Medium trust~~   - ~~Allow server to always run –– Most trust~~  <img width="599" alt="Image" src="https://github.com/user-attachments/assets/e17272d3-8961-4f7e-9b26-656303c94959" />  ##  Add more information to tool dropdown closed state  Currently, the closed state of a tool dropdown only shows the name of the tool that will be run and buttons to continue or cancel the tool run. I propose that we also add the server name and simplified text warning/prompting folks to review what the tool will do before proceeding.  - Goal: Improve the ability to quickly parse which server a tool comes from   - I know we started with a design along these lines and then moved server information inside the dropdown, but after lots of feedback I now think it's more important to surface this information at the top level - Goal: Co-locate the text warning/prompting tool review next to the buttons where action is taken   - Currently, this kind of information is hidden within the dropdown and is easy to miss  _Design note: "Run {tool_name}" uses the `foreground` color token, while server name and warning text uses `descriptionForeground`._  <img width="715" alt="Image" src="https://github.com/user-attachments/assets/ccde8fc4-bbc1-4b1b-a689-8188e1ada2c0" />  ## Human readable tool names  @digitarald [pointed out](https://github.com/microsoft/vscode/issues/245721#issuecomment-2795177679) that the MCP spec now includes the ability to include a human readable tool name. It seems like most (all?) MCP servers have not started to use this yet, but as they do we should be prepared to gracefully "upgrade" to use this name instead of the "raw" tool name.  <img width="706" alt="Image" src="https://github.com/user-attachments/assets/cb31e57c-0824-439c-aa2b-3f96bb1a5311" />  ## Wrap long content in see more/see less UI and add input label  Currently, tool descriptions are rendered inside tool dropdowns without any alterations. This is fine for short descriptions but they can get quite long, so we should wrap long content in a See more / See less collapsible UI.  - Goal: Ensure that all the information inside a tool dropdown remains visible / easy to parse  Additionally, we do not label tool input and think we should.  - Goal: Improve clarity of what the JSON/text snippets inside tool dropdown represent  See more/see less closed:  <img width="706" alt="Image" src="https://github.com/user-attachments/assets/fe0aaf14-24ad-4e5e-970c-82e1ce6f7a52" />  See more/see less expanded:  <img width="829" alt="Image" src="https://github.com/user-attachments/assets/ffe5c47b-7805-49f0-b874-a9c52c488f2c" />  ## Add more information to post-tool-run dropdown  Currently, post-tool-run dropdown just include an unlabeled JSON/text snippet of the tool run output. I propose we add the following:  - Tool description - Tool input - Add label to tool output  _Note that all of these can be wrapped in the collapsible See more / See less UI mentioned above if needed._ Additionally, add a green check mark to the far right of the tool run dropdown title section.  - Goal: Make it easier to go back and review/audit a tool run by adding all the relevant information someone might want/need - Goal: Add further visual indication that the tool run was successful while maintaining the ability to have a dropdown chevron  <img width="824" alt="Image" src="https://github.com/user-attachments/assets/27e2a6d8-1d74-4a7b-95cf-b959e09add2b" />  <img width="649" alt="Image" src="https://github.com/user-attachments/assets/92953da5-65ad-43ac-b700-5f4b8cf3fee3" />  ## Overall tool dropdown UI polish  While a lot of UI changes/polish have already been demonstrated in the screenshots above, two more updates that haven't been noted yet are:  - Wrap post-tool-run content in rounded rectangle/card UI   - Goal: Add a consistent visual indicator to tool usage in chat views   - Goal: Ensure that checkmark icons are easy to parse / associate with a given tool run - Adjust hover / click area to take full width of dropdown header   - Goal: Make it easier to identify / open tool dropdowns  <img width="670" alt="Image" src="https://github.com/user-attachments/assets/dcae9418-2243-48e6-9c4b-17d37d442ad3" />
---
Título: MCP Tool Picker UX Improvements
Descripcion: Cataloging a list of various UX improvements to VS Code's MCP support that we should discuss / implement for the April 2025 milestone.  ### Use custom theme-able checkboxes in tool picker  Switch out native checkboxes with custom checkboxes found in the Settings page.  - Goal: Reduce visual noise and better match editor theming  <img width="400" alt="Image" src="https://github.com/user-attachments/assets/883217d5-58fd-4f62-897b-b6c809f6a042" /> <img width="400" alt="Image" src="https://github.com/user-attachments/assets/5c7befe6-985f-4b7e-82ce-5a78fa815abd" />  ### Lowercase server location  The text "From {location}" should be changed to align with other quick picks across VS Code. This means changing "From" to "from."  <img width="751" alt="Image" src="https://github.com/user-attachments/assets/1d97388e-8f64-452a-9305-75239a59c6a1" />  ### Remove product names from server location text  Currently when displaying the locations of MCP servers we sometimes show the product name (i.e. "Claude Desktop") and other times show the file/path where the MCP server(s) are configured.  I propose we remove all cases of product names and always to show the file/path that contributes a server. This removes the need to keep track of the names of products that contribute MCP servers that may come and go over time. Also, if tools are contributed via an extension we should just say "from extension".  Edge case: Displaying full absolute file paths will get verbose/untenable very quickly, so I propose we display opinionated versions of contributing files since we'll be manually detecting these files anyway. For example, just displaying "claude_desktop_config.json" should be descriptive enough for folks to understand where it's coming from. But in cases where `mcp.json` is used we'll need to be a bit more prescriptive (i.e. ".vscode/mcp.json" vs ".cursor/mcp.json").  _Bonus: This fixes an issue that will be caused by the lowercase server location proposal where we would otherwise have a weird mix of lowercase and capitalized text. Aka "from Claude Desktop" turns into "from claude_desktop_config.json"._  <img width="750" alt="Image" src="https://github.com/user-attachments/assets/8c3d4f68-ece1-4290-b621-144e2e2e0433" />  ### Remove server status from tool picker  I'm leaning towards suggesting that we remove the server status (i.e. "Stopped" / "Running") from the tool picker. As @connor4312 [mentioned in another thread](https://github.com/microsoft/vscode/issues/245338#issuecomment-2773072140):  > tools are still available to the model and the server will be started on-demand when a model want to use one of those tools  Given that reality, I think displaying server status leads to more confusion / unnecessary work (i.e. starting a server when you don't need to) than is needed.   Additionally, server status information and the affordance to manually stop/start servers is still available via the "MCP: List Server" command.  - Goal: Clean up the UI a tiny bit and reduce the density of information that needs to be parsed  <img width="758" alt="Image" src="https://github.com/user-attachments/assets/3c215676-f7b9-461b-b575-b9851ea69850" />  ### Add settings gear to server menu items  Currently, you must go through a multi-step process to access and configure MCP server settings via the "MCP: List Servers" command. While we should certainly keep that command, we should also introduce an easy way to access these server settings via the tool picker.  We should align with the existing quick pick UX pattern of rendering the settings-gear icon on selection/hover. Clicking or tabbing to this icon should take you to the server settings you'll find while using the List Servers command.  <img width="978" alt="Image" src="https://github.com/user-attachments/assets/c1ed8a12-a3ca-43b1-a5a4-719e2cfa72a3" />  ### MCP Tool Dropdown / Confirmation UI Updates  ~~Coming soon... It's what I'm working on this week and will have more to share in this issue thread next week.~~  See: https://github.com/microsoft/vscode/issues/246287
---
Título: MCP: Better discovery/registry and one-click installation flow
Descripcion: Finding and installing MCP servers should be at least as easy as VS Code's extension experience.  Will update as we get closer to a plan. Subscribe and like to stay updated.
---
Título: Polish the workspace index indicator
Descripcion: It is nice that the workspace index indicator landed in the status bar, but it needs polish.  ### Learn more  Rather than having a big blue link, leverage the new support for actions to learn more to the right of the header:  <img width="289" alt="Image" src="https://github.com/user-attachments/assets/9a305d8c-7d40-4021-9e54-360427acd5b2" />  ### Progress message  I find this line does not read well:  <img width="278" alt="Image" src="https://github.com/user-attachments/assets/be35d8a5-5642-4a06-b90e-96ec04e15a09" />  We should try to tweak this because the info is not all on the same level.  Also, when the status updates, it breaks to the next line because the hover does not update its size.+  ![Image](https://github.com/user-attachments/assets/b23f5459-2798-4d4e-a945-d006dda39471)  //cc @joaomoreno
---
Título: Add 'repo-pinned' icon to codicons library
Descripcion: This pull request includes a minor update to the `codiconsLibrary` in `src/vs/base/common/codiconsLibrary.ts`. The change adds a new icon registration for `repoPinned`. This PR also updates the vertical position of the `repo` & `repo-clone` icons to improve optical vertical centring - the `repo-pinned` icon also adheres to this design.  * [`src/vs/base/common/codiconsLibrary.ts`](diffhunk://#diff-423edf7b71c9eaefb5792626a3db11cfb2cf5ae699540157b7d014194f96a835R596): Added a new icon registration for `repoPinned`.<!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->
---
Título: Chat shows scrollbar when I send more requests
Descripcion: This maybe intentional to put my current request always to the top?  ![Image](https://github.com/user-attachments/assets/1715a51a-1cd7-4edf-a730-c9b33cf3127e)  But then is it intentional that the previous response still shows a little bit?  //cc @joaomoreno
---
Título: Extension search box updates
Descripcion: Addresses #222103   This pull request includes changes to the `src/vs/workbench/contrib/extensions/browser/media/extensionsViewlet.css` file to improve the layout and padding of the extensions viewlet's search container and actions, in order to meet mininum accessible button sizes for `clear` & `filter`  Styling improvements:  * Added padding to the `.suggest-input-container` within the `.extensions-search-container` to enhance spacing. * Adjusted the `right` position of the `.search-box` to 4px for better alignment. * Added padding to the `.action-label` within the `.extensions-search-actions-container` for consistent spacing in the toolbar.<!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->
---
Título: Dialog `dismissOnLinkClick` is problematic
Descripcion: Coming across `dismissOnLinkClick` for dialogs:  https://github.com/microsoft/vscode/blob/c54bb3df3ab55f91c4bba1cb376a08470bd1d3cf/src/vs/platform/dialogs/common/dialogs.ts#L286  I find this problematic because as a user I do not know: - which of the dialog buttons was now considered, if at all - how to get back to the dialog  If the intent is to open a file and make it visible, please consider the `AUX_WINDOW_GROUP` option in `openEditor` to open in a new floating window.
---
Título: Accessibility - High contrast theme on activity bar inconsistent
Descripcion: Type: <b>Bug</b>  1. Enable any high contrast theme 2. Hover over the activity bar icons   Normal:   ![Image](https://github.com/user-attachments/assets/0be393f2-d731-43bd-8304-838141d25cdd)   Some extensions (no dashed outline):   ![Image](https://github.com/user-attachments/assets/4272e902-7e92-46b3-a65b-535cc6f91e4f)  3. Click activity bar icons   Normal:   ![Image](https://github.com/user-attachments/assets/d76ee221-b150-4816-b167-5805a2da4c98)   Some extensions (no outline):   ![Image](https://github.com/user-attachments/assets/34d4fd62-4362-495b-9860-a03c4afc6991)  Expected: All icons behave the same  Actual: Icons available by default are consistent, but other icons' look varies depending on Extension support.  Solution: This issue doesn't feel like it should depend on Extension support. Understandably not many Extension developers use High-Contrast themes, so lack of support is easy to miss.  This should probably be fixed upstream, so that Activity Bar icons can only behave in one way.  VS Code version: Code 1.98.2 (ddc367ed5c8936efe395cffeec279b04ffd7db78, 2025-03-12T13:32:45.399Z) OS version: Windows_NT x64 10.0.22631 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-9750H CPU @ 2.60GHz (12 x 2592)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|undefined| |Memory (System)|23.90GB (5.99GB free)| |Process Argv|--folder-uri file:///c%3A/GitHub/lyric --crash-reporter-id ee03a05e-9a6e-4778-8b8a-c72b2ec19706| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (94)</summary>  Extension|Author (truncated)|Version ---|---|--- adb-qr|Aak|0.2.0 better-comments|aar|3.0.2 vscode-icalendar|af4|1.0.1 vscode-nginx-conf|ahm|0.3.5 Bookmarks|ale|13.5.0 vscode-sqlite|ale|0.14.1 a-file-icon-vscode|ato|2.0.1 vscode-intelephense-client|bme|1.14.3 vscode-tailwindcss|bra|0.14.12 exe-runner|bra|1.1.1 vscode-opennewinstance|chr|0.0.15 npm-intellisense|chr|1.4.5 path-intellisense|chr|2.10.0 vscode-express|Com|0.0.5 dart-code|Dar|3.106.0 flutter|Dar|3.106.0 mustache|daw|1.1.1 vscode-eslint|dba|3.0.10 es7-react-js-snippets|dsz|4.4.3 gitlens|eam|16.3.2 vscode-html-css|ecm|2.0.13 vscode-flutter-i18n-json|ess|0.28.0 vscode-gift|eth|0.1.11 vscode-gift-pack|eth|0.0.3 vscode-gift-preview|eth|0.0.15 font-switcher|eva|4.1.0 vscode-diff|fab|2.1.2 html-preview-vscode|geo|0.2.5 copilot|Git|1.293.0 copilot-chat|Git|0.25.1 remotehub|Git|0.64.0 vscode-github-actions|git|0.27.1 vscode-pull-request-github|Git|0.106.0 gc-excelviewer|Gra|4.2.63 vscode-graphql|Gra|0.13.2 vscode-graphql-syntax|Gra|1.3.8 todo-tree|Gru|0.0.226 rest-client|hum|0.25.1 discord-vscode|icr|5.8.0 better-cpp-syntax|jef|1.27.1 vscode-peacock|joh|4.2.2 vsc-python-indent|Kev|1.21.0 google-apps-script|lab|0.2.2 flutter-intl|loc|1.19.3 dart-import|lua|0.3.1 vscode-moodle-snippets|Mat|1.0.346 vscode-pdf|mat|0.1.5 asm-code-lens|maz|2.6.2 rainbow-csv|mec|3.18.0 syntax-mcfunction|Min|1.0.1 vscode-docker|ms-|1.29.4 csharp|ms-|2.69.25 vscode-dotnet-runtime|ms-|2.3.0 debugpy|ms-|2025.4.1 isort|ms-|2023.10.1 python|ms-|2025.0.0 jupyter|ms-|2024.11.0 jupyter-keymap|ms-|1.1.2 jupyter-renderers|ms-|1.1.0 vscode-jupyter-cell-tags|ms-|0.1.9 vscode-jupyter-slideshow|ms-|0.1.6 remote-containers|ms-|0.401.0 remote-ssh|ms-|0.118.0 remote-ssh-edit|ms-|0.87.0 remote-wsl|ms-|0.88.5 azure-repos|ms-|0.40.0 cpptools|ms-|1.23.6 hexeditor|ms-|1.11.1 live-server|ms-|0.4.15 remote-explorer|ms-|0.4.3 remote-repositories|ms-|0.42.0 vscode-serial-monitor|ms-|0.13.1 vsliveshare|ms-|1.0.5948 vscode-flutter-freezed-helper|mth|0.1.0 gremlins|nho|0.26.0 indent-rainbow|ode|8.3.1 material-icon-theme|PKi|5.19.0 vscode-xml|red|0.28.0 flutter-riverpod-snippets|rob|1.2.2 ssh-here|sat|0.0.3 markdown-preview-enhanced|shd|0.8.15 mcscript|Ste|0.0.3 even-better-toml|tam|0.21.2 lilypond|tru|0.0.1 errorlens|use|3.23.0 vscode-svg-previewer|vit|0.7.0 vscode-nginx|wil|0.7.2 php-debug|xde|1.35.0 php-pack|xde|1.0.3 txt-syntax|xsh|0.2.4 pretty-ts-errors|Yoa|0.6.1 save-as-root|yy0|1.10.0 markdown-all-in-one|yzh|3.6.3 php-intellisense|zob|1.3.3  (5 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscod805:30301674 binariesv615:30325510 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyonecf:30548226 962ge761:30959799 h48ei257:31000450 pythontbext0:30879054 cppperfnew:31000557 dwnewjupyter:31046869 nativerepl1:31139838 pythonrstrctxt:31112756 nativeloc1:31192215 iacca1:31171482 5fd0e150:31155592 dwcopilot:31170013 6074i472:31201624 dwoutputs:31242946 customenabled:31248079 hdaa2157:31222309 copilot_t_ci:31222730 850i5325:31264362 968h8231:31271074 jda6j935:31233686 pythoneinst12cf:31262606 bgtreat:31268568 fh1c7952:31258891 4gafe986:31271826 31787653:31262186 3e8i5726:31271747 49da9784:31264548  ```  </details>  <!-- generated by issue reporter -->
---
Título: Changes view moves up when opened for the first time
Descripcion: Steps to Reproduce:  1. I tried on windows, fresh install, opened a folder with 2 changes 2. click on changes view 3. notice how the view shifts up quickly  Proof:  ![Image](https://github.com/user-attachments/assets/7bf9afc1-bee5-41b5-9662-71add5edb86a)  https://github.com/user-attachments/assets/821d239f-0cc9-40fb-ab67-688abc70f2cd
---
Título: Edits: undo/redo does not restore decoration for the edit
Descripcion: Steps to Reproduce:  1. have copilot edits make changes to the editor 2. accept or reject one edit 3. undo in the editor 4. redo  => 🐛 the copilot edit decoration is not restored, but I think that would be great to be able to see the edit was done by Copilot  ![Image](https://github.com/user-attachments/assets/abd9b5e7-650b-4e85-89ad-5ecfb99ae9a9)
---
Título: Feature Request: Add Separate Border Theming for Secondary Buttons
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hi, VS Code team,  I'm currently developing a theme extension and would like to implement distinct styling for secondary buttons to better differentiate them from primary buttons.  My current approach is:  - Primary buttons: Filled style - Secondary buttons: Outline style  This visual distinction follows common design patterns.  Currently, we have a `button.border` in theme configuration that maps to `--vscode-button-border` CSS Variable. We can utilize this to create outline-style buttons.  <img width="709" alt="Image" src="https://github.com/user-attachments/assets/78d413ba-34b2-4a49-9a61-25d5185b290e" />  If you zoom in on the screenshot and examine the details, you'll notice the primary button's border doesn't match well with its background color.This occurs because button.border is applied to both primary and secondary buttons.  <img width="636" alt="Image" src="https://github.com/user-attachments/assets/67204772-8890-4fd3-b75a-a0f66c74e128" />  My VS Code version:  **`1.98.2`**   I'm not sure if there's a workaround or additional configurations to address this issue.  If not, I'd like to propose adding a `button.secondaryBorder` configuration to allow separate border styling for primary and secondary buttons.   ```diff // theme.json {   "button.background": "#3f3f47", // primary buttons background   "button.border": "#3f3f47", // primary buttons border      "button.secondaryBackground": "#00000000", // secondary buttons apply outline style with transparnt background  + "button.secondaryBorder": "#959077" // secondary buttons border, **new configuration** } ```   I'm curious whether the VS Code team has plans to implement this feature. Alternatively, I'd be happy to contribute a PR for this change.  Thank you.
---
Título: MCP: Make it easier to restart servers during local development
Descripcion: When working on local servers, it's easy to just run a watch command to get an updated build. But then to get VS Code to restart the server requires going into the command list servers, clicking into the server, and restarting there, which is very cumbersome. Alternatively, you need to have the mpc.json open and click restart there (not something I have opened during local development).  How might we simplify the restart for these quick iteration scenarios?  @hawkticehurst I shared this before during UX checkins, having a quick access ⚙️ to the server quick pick from the tools dropdown could help.
---
Título: Full set of Programming language Profile Icons
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I know work was done with https://github.com/microsoft/vscode/issues/188972 But in 1.98 it's missing the most popular languages. It has very few actually.  Isn't creating profiles by programming language one of the most  common needs or am I wrong (or am I missing the point of profiles)?  Although i can remember that GO is a bookmark and Python is a megaphone, it certainly isn't as mentally quick as seeing the actual language icon.
---
Título: Update status-bar item icon & text spacing to not use spaces (" ")
Descripcion: Currently, the status bar items use a space character (" ") to manage the gap between icon & text <img width="170" alt="Image" src="https://github.com/user-attachments/assets/2c4b8b1c-8664-42e5-9d9b-bdd5a293430a" />  <img width="306" alt="Image" src="https://github.com/user-attachments/assets/d6afea86-10e0-442a-a526-d9b3a09db7f0" />  Ideally, the spacing should be controlled by a CSS variable in order to maintain consistency & scalability.
---
Título: VSCode should support presenting the extension panel in the form of an independent window.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> VSCode should support presenting the extension panel in the form of an independent window. AI-assisted development is now very popular, and the AI-assisted panel and the development panel should be able to be presented separately. Otherwise, it will be too crowded when they are all on the same screen. For other extensions, if the information to be presented is quite rich and users need to interact with the code editor at the same time, it will be too narrow for the extension panel to be presented only in a small area.
---
Título: Tool update indication
Descripcion: <img width="89" alt="Image" src="https://github.com/user-attachments/assets/5c64931d-5ff3-4841-adf8-3b0c891486a0" />  This makes it look as if I can click the refresh icon to refresh, but in reality clicking the server also refreshes, so I wonder why we have the separation.
---
Título: SCM status bar: Show pin indicator when pinned
Descripcion: https://github.com/microsoft/vscode/issues/244464  Small polish: Could show a small pin icon on the repository in the SCM status bar when it is pinned. This might be enough affordance to click on the status bar item for users wondering why it doesn't update (e.g., they forgot that they pinned it).
---
Título: Unsure how to read longer hints in terminal suggestion widget
Descripcion: Testing https://github.com/microsoft/vscode/issues/244479  Using Windows 11 Insiders, latest VS Code Insiders  ``` Version: 1.99.0-insider (user setup) Commit: 299b150bd5c0227099c9b03dc56c5073ec0ff5e2 Date: 2025-03-24T05:03:53.092Z Electron: 34.3.2 ElectronBuildId: 11161073 Chromium: 132.0.6834.210 Node.js: 20.18.3 V8: 13.2.152.41-electron.0 OS: Windows_NT x64 10.0.26120 ```  I'm uncertain how to read the rest of the gray text explaining `code-tunnel` or `code-tunnel-insiders`. Hovering didn't seem to do anything, and I don't see a horizontal scroll bar:  ![Image](https://github.com/user-attachments/assets/2514ddd3-967a-42cb-937c-cda85dfd59f5)
---
Título: Use same hover group for all copilot actions near input
Descripcion: See in inline chat how the @ and mic icons show the hover immediately:  ![Image](https://github.com/user-attachments/assets/bd5ee64b-a403-4456-8d65-49cb7b34fa20)  This also happens in the chat view for @ and mic icons, but not for ask/model/send side:  ![Image](https://github.com/user-attachments/assets/c3188ead-f622-4ea0-afe3-62cd0eea38cc)  We should just stick them all in the same hover group so regardless of alignment they show instantly.  API in hover service:  https://github.com/microsoft/vscode/blob/fba9b2d7ef6a2b4299fb5adf3cdbd8d5c58d5432/src/vs/base/browser/ui/hover/hover.ts#L233-L252
---
Título: Add an easier way to apply an update of extensions
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> If extension updates are to be applied, I get a number badge on the extension icon. To update, I have to:  1. open the Extensions sidebar, 2. find an updated extension among installed ones and 3. press the (relatively small) button `Restart extensions` or `Reload window`.  I want to update extensions in one, at most two steps. Therefore I set up a keyboard shortcut for the `workbench.action.reloadWindow` command. However, I don’t find it perfect as I still want to review the extensions to be updated first.  I can imagine a few ways to implement this:  ## Option 1: Action button in the Extensions sidebar  If there were extensions to update, a big action button `Restart extensions` or `Reload window` should be available at the top of the Extensions sidebar, similarly to the `Commit`, `Sync` etc. buttons in the Source Control sidebar.  ![mock screenshot](https://github.com/user-attachments/assets/8ba185b2-9884-462f-884c-d310893d87b9)  This way might be useful for #225654 as well.  ## Option 2: Notification  If there were extensions to update, a notification could appear. It should list the extensions to be updated and offer the action button (`Restart extensions` or `Reload window`) and likely another button to `View extensions`.  ![mock screenshot](https://github.com/user-attachments/assets/0d5aa7a7-5fb7-43fa-a7a5-64914db6d977)
---
Título: MCP Tool Picker: Clicking enter to toggle server/tool closes quick pick
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  Currently when toggling a server/tool in the MCP tool picker using a keyboard, pressing the `enter` key will close the quick and the item will not be toggled.  My expectation is that pressing `enter` should have the same behavior as `space` (i.e. toggle item and keep quick pick open) or perhaps it should at least toggle the item and then close the quick pick.  Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: `1.99.0-insider` - OS Version: `macOS 14.7.3`  Steps to Reproduce:  1. Open MCP tool picker 2. Use keyboard to navigate to a server or tool 3. Click enter 4. Quick pick will close / item will not be toggled  ![Image](https://github.com/user-attachments/assets/deaaff12-e3c6-44b0-9f75-4136c0c624f2)
---
Título: MCP Tool Picker: Toggling server/tool with keyboard moves focus
Descripcion: Currently, when using a keyboard to toggle tools/servers in the MCP tool picker focus will be moved to the parent container after a toggle. The result is that you need to start from the top of the list every time you want to toggle another item in the list.  Fix: Focus should not move after toggling an item in the list.  ![Image](https://github.com/user-attachments/assets/51e5c3ee-d52b-435b-ba12-c4006cf765f9)
---
Título: VIsual bug | Applying Edits widget uneven padding and redundant animations
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.99.0-insider - OS Version: macOS Sequoia 15.3.2  The "Applying Edits" widget has uneven horizontal padding. Also having both a spinner & an animated ellipsis feels redundant:  ![Image](https://github.com/user-attachments/assets/4da413ec-51af-4c30-a147-f7defc8bcebb)
---
Título: Checkbox text should be click-able
Descripcion: Currently, one cannot click on text corresponding to checkboxes to (un)check the checkbox. It would be nice (matching other websites/apps) if the text were clickable.   ![Image](https://github.com/user-attachments/assets/49d177a9-fc42-4e29-b982-d914c6f47d57)  Version: 1.99.0-insider Commit: 2c7a0283817355c81e1b106f34d911762950a4d9 Date: 2025-03-14T05:04:14.195Z Electron: 34.3.2 ElectronBuildId: 11161073 Chromium: 132.0.6834.210 Node.js: 20.18.3 V8: 13.2.152.41-electron.0 OS: Darwin arm64 24.3.0
---
Título: Polish the tool confirmation step for MCP servers
Descripcion: It rarely fits into my screen right now, especially for larger inputs or tooling descriptions.  Some ideas here in the screen. cc @hawkticehurst @isidorn   ![Image](https://github.com/user-attachments/assets/1b89e5c6-3847-4243-85a8-d93209114365)
---
Título: Make MCP tools input should be collapsed by default
Descripcion: Tools input should be collapsed by default. Maybe only showing the first line of the JSON?  Using the GH issue tools as example, the tools parameters can get extremely lengthy.  ![Image](https://github.com/user-attachments/assets/9c78c22b-25d6-44b0-98f3-66ad47f5e47e)
---
Título: Update codicon font file to latest version with updated thumbs up and down styles
Descripcion: Updating `codicons.ttf` file. The following icons have been updated with more modern styling:  - `thumbsdown` - `thumbsup` - `thumbsup-filled` -  `thumbsdown-filled`  Resolves #243108
---
Título: [Colour Variables] A subset of inverted colours would be great
Descripcion: Hello dear VS Code people,  I'm a lead designer of [SAP Fiori tools](https://marketplace.visualstudio.com/search?term=SAP%20Fiori%20tools&target=VSCode&category=All%20categories&sortBy=Relevance) product, a suite of tools inside of VS Code that helps developers make great SAP based apps. We are essentially a gateway for anyone developing something within SAP dev space.  - - - - -  In the apps we build, we are trying to (as best as possible) semantically use colour variables as they were intended to be used. So if there's a button, it will of course be painted with `--vscode-button-background`, and the text on it will be `--vscode-button-foreground`. Of course, the colour variable set cannot include all of the variables for all possible instances of UI, so sometimes we are faking it with some sort of "closest available semantic set". For example, we have a toggle switch UI component, but there are no `--vscode-switch-XXX` variables so we are constructing this out of `button` and `widget` sets. And it makes sense, because you click the toggle switch, so it's kind of a button, and it's also a widget of sorts, so if you squint your eyes a bit, it makes sense to make it like that. 😄   <img width="153" alt="Image" src="https://github.com/user-attachments/assets/38dc7a9e-4fb4-4bb9-8113-10713f6426cc" />  Onto the issue.  We have in some instances a need for inverted little dialog window. Mainly because if we stick with semantically correct variables, the window looks a bit invisible. If there's a white UI, and a little dialog opens that's also white, we have reports from users that they sort of don't see it appearing.  In the image below there are three columns, each representing a colour state. First column is Dark Modern, second is Light Modern, and third is High Contrast Black.  Then the rows are:  Row 1 - A regular usage of colour variables. Background of the dialog is `--vscode-editorWidget-background`, foreground text is classic `--vscode-foreground`. This looks good, but, as I've mentioned, sometimes it simply blends with the rest of the app too much and is _invisible_.  Row 2 - I had an idea to simply invert the background and foreground, so that the text is painted as `--vscode-editorWidget-background` and backplate is `foreground`. This works until you get to the High Contrast row which then totally fails.  Row 3 - This is me completely dirtying it up by using variables which make no sense whatsoever, as well as CSS stacking them so that in High Contrast some of them don't render at all and fall down to the next cascade. For example, the backplate is `list-activeSelectionForeground` & `terminal-ansiBlack` in cascade. In regular themes, first variable is picked up, and in HC, that variable doesn't exist, so it doesn't render, so it cascades to `terminal-ansiBlack`. This optically works, but is very dirty, very manky, and totally not elegant, and I don't like it.   <img width="1300" alt="Image" src="https://github.com/user-attachments/assets/26cec899-bd19-4779-b80c-b49afa2940f8" />   So, the feature requirement would be for VS Code to offer some subset of core variables (like foreground, button, editorWidget, sidebar, ...) in **inverted** style that would enable us designers to sometimes go outside of the regular "everything is just one colour" style and have elements which are inverted, but that inversion is done through semantically correct variables and it works in HC by default, doesn't require too much hammering to get it to work there.  If this makes sense, I could work with you to define some subset that could use inverted pairing, and define hex values for VS Code native themes, so you could just release this out into the world.  ____  By the way, I've just tested my colour variables as presented above, and it totally fails in HC White 😄 So that's off the table. Therefore, it would really be cool if I could get some official _inverted_ variables so I can do this elegantly.
---
Título: MCP: Support rich MCP tool controls in chat
Descripcion: @jrieken has some nice initial entrypoints in chat to get started, but I think we will want some additional UI for controlling MCP servers in chat. Users should be able to...  - See the tools that are available grouped by MCP servers.     - (I am in the camp of having extension-contributed tools shown in the same way, here, though this is not a v0 item) - See the status of servers (starting/started/stopped/errored) and control their state - Enable and disable tools on a per-server and per-tool level - Have actions to help them install new extensions/MCP servers (for now this probably just opens docs until registries mature?), and we should be able to place more actions here in the future - There may be very many tools and mcp servers available, so there should be a filtering mechanism. - We should bear in mind that MCP servers can publish things other than tools that we may want to show in this UI in the future, though don't over-index on that.
---
Título: Chat context: same file can appear twice
Descripcion: When I explicitly add a file as context, I would not expect it to appear twice based on the active editor:  <img width="561" alt="Image" src="https://github.com/user-attachments/assets/0e2bad6f-ec03-4142-8b24-97ba5b6bc165" />  //cc @isidorn
---
Título: Typing a chat context with `#` should automatically add it to the context bar
Descripcion: When I reference context via the prompt, automatically add it to the 📎 bar:  <img width="582" alt="Image" src="https://github.com/user-attachments/assets/3a97267a-f3ae-4cf7-b41d-bdc6628ce3e2" />  If I remove it from there, it could remove it from the prompt, or alternatively we do not allow to remove these.  //cc @isidorn @benibenj
---
Título: Improve `Select for Compare`
Descripcion: When we use `Select for Compare` on 2 files with same filename. It's hard to distinguish left file path and right file path.   ![Image](https://github.com/user-attachments/assets/954fc705-2008-47d0-a1eb-0f3f1a552c57)
---
Título: References to files are not clickable until chat response is done
Descripcion: When a chat response is still streaming, clicking on a file reference is a no-op:  <img width="818" alt="Image" src="https://github.com/user-attachments/assets/007becfb-f9f4-4d5a-865a-6d69c37ed997" />  //cc @isidorn
---
Título: Help and clear entries are duplicated
Descripcion: <img width="251" alt="Image" src="https://github.com/user-attachments/assets/619c7c33-13bc-47bb-9cb8-08b9a1303796" />  From the suggest list in a chat prompt, help and clear appear twice  //cc @isidorn
---
Título: Selecting `file` from context picker with mouse is a no-op
Descripcion: Click this with a mouse:  <img width="1124" alt="Image" src="https://github.com/user-attachments/assets/44b71a95-db3a-4e33-bd21-c1f3a25bc14f" />  This closes quick pick right away making it seem like a no-op  //cc @isidorn
---
Título: Copilot edits indicator uses a native hover
Descripcion: Hovering over the copilot edits indicator shows a native hover for some reason:  <img width="522" alt="Image" src="https://github.com/user-attachments/assets/8cea3408-c3d6-4696-a503-a18444ab6918" />  //cc @isidorn
---
Título: Code snippet editor has many editor features that are not working
Descripcion: When you get a code snippet and right-click, you see many entries that are non functional:  <img width="516" alt="Image" src="https://github.com/user-attachments/assets/b2425a6b-7aa9-44a1-b661-bebf7fa936f9" />  I would have only accepted basic things like we do for simple readonly editors (Copy).  //cc @isidorn
---
Título: "Insert into Terminal" should be a primary action when code snippet is a terminal script
Descripcion: Currently the "Insert into Terminal" is hidden behind a "..." menu of a code snippet. Could we detect the language of the snippet and offer it as primary action if its a terminal script?  <img width="299" alt="Image" src="https://github.com/user-attachments/assets/3b768618-4433-4ca0-bc9b-40ccf7af8553" />  //cc @isidorn
---
Título: "Insert At Cursor" should be disabled when no text editor is opened
Descripcion: With a code snippet as chat response, there are actions to apply the code. The second one is to "Insert At Cursor". This action is enabled even when no text editor is visible, resulting in a dialog as error. I would suggest to disable the action via context keys.  <img width="378" alt="Image" src="https://github.com/user-attachments/assets/8aaf453f-506b-4bf2-a41b-92fb38dc8ed3" />  //cc @isidorn
---
Título: Icons for voting look very dated
Descripcion: <img width="70" alt="Image" src="https://github.com/user-attachments/assets/e4daa2ab-7e9e-4beb-8b7f-c4dfe33d1af2" />  and in context:  <img width="225" alt="Image" src="https://github.com/user-attachments/assets/f866d8bd-a077-4dea-84c2-89003ea35d24" />  I would prefer a more modern touch, such as:  <img width="81" alt="Image" src="https://github.com/user-attachments/assets/9207fdf9-0598-482e-88eb-b4f10b5385e7" />  //cc @isidorn
---
Título: UX: Align terminal and editor suggestion UI
Descripcion: Currently, the terminal and editor suggestions UI are slightly different but should be aligned.  Areas of focus:  - Corner rounding - Ensuring padding/spacing of menu items is the same  <img width="669" alt="Image" src="https://github.com/user-attachments/assets/717b5198-9c0c-4bb2-8575-e96fcaf90d9b" /> <img width="694" alt="Image" src="https://github.com/user-attachments/assets/4dd4cbc2-2438-48ad-8d16-bbbac30dead0" />
---
Título: Git: background color of current commit in graph
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> add background color of current commit in the git graph, because currently it is indicated by an empty circle, but takes me a moment to identify. Subtly coloring the current commit's background would improve ux
---
Título: Status: explore to hide tooltip when clicking status entry with rich hover
Descripcion: Today the same hover just appears over and over, maybe if its locked/focused, we hide it so that it becomes a toggle?  ![Image](https://github.com/user-attachments/assets/df2ad032-a07c-44e9-8814-c8deb4ea186e)
---
Título: Notifications hide the chat bottom of Copilot Chat
Descripcion: <img width="1618" alt="Image" src="https://github.com/user-attachments/assets/0a8c1cd0-2b48-4ac1-9b43-90d7bcff284a" />  Its been weeks using Github Copilot Edit and chats and many times when I receive a new notifications, I need to hide or wait until will be finish and its cause hiding chat field and I can't write or see the bottom !!  Should to improve UX for this problem !  Regards
---
Título: Test error decoration glitch when zoomed in
Descripcion: ![Image](https://github.com/user-attachments/assets/9f9420d6-8256-4458-9dbc-dfd79442d23b)  //cc @mrleemurray
---
Título: Banner for workspace trust is not significant enough and themed as info-only
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.98.0-insider (system setup) Commit: 44028decf1ca81a0cbf99a65ab72cca6735449f2 Date: 2025-02-14T05:04:46.748Z Electron: 34.1.0 ElectronBuildId: 10990655 Chromium: 132.0.6834.194 Node.js: 20.18.1 V8: 13.2.152.38-electron.0 OS: Windows_NT x64 10.0.26120  # Problem NEW users to VS Code and our extension are getting challenges with Workspace Trust creating extensions in restricted mode and thus the commands for the extension are not visible to them.  Our users are repeatably getting in to a state where the **banner** about workspace trust is not discernable as something as important that may be blocking their functionality. It is marked as a security banner (the keyhole badge), but it is 'info' themed:  ![Image](https://github.com/user-attachments/assets/87b4e369-53d4-4ddc-bc2e-43fbe6385396)  This is very ignorable in the visual of a large screen. Even in our internal team case studies seasoned developers didn't see this as an important banner.  We have root-caused customer reports (https://github.com/microsoft/vscode-dotnettools/issues/1653) to our extension (that have been coming in at a sustaining pace) to this problem. This creates some new-user onboarding problems users exiting our workflow/funnels in getting in to the tool and our platform extension.  # Proposal We believe the banner should be more 'alert' styled and NOT themed with other color areas to remain CONSISTENT with the UX of an alert and not 'just a button' something like this:  ![Image](https://github.com/user-attachments/assets/5d642718-e13f-4b87-892e-e3078511918b)  Is a much more visible cue to take action/understand the repercussions of any prior choice. It changes no functionality but alerts the user better than what exists today and tests well as a visible alert to pay attention to that may affect their experience.
---
Título: terminal restart task icon has different thickness than others
Descripcion: I am reusing the `debug-restart` for the terminal rerun task one.   @TylerLeonhardt has pointed out this looks a little funny next to our spinner icon, which has less thickness. ![Image](https://github.com/user-attachments/assets/be6697cd-a844-4b47-8011-3d9b6a046cad)  cc @Tyriar   I think we'd need a new icon to address this.
---
Título: SCM - Setting for adjusting branch names/tags
Descripcion: Type: <b>Feature Request</b>  The Source Control Graph is a wonderful new feature. One painful problem is the colored branch names or tags are simply too small to fit the branch name. My branches often follow a conventions, such as "dev/dev-user-name/feature", but the tags are only wide enough to get the common text, so it's very difficult to tell which branch is which at a glance. I have to hover over the branch name/tag to see the full name.  VS Code version: Code 1.97.0 (33fc5a94a3f99ebe7087e8fe79fbe1d37a251016, 2025-02-04T22:41:26.688Z) OS version: Darwin arm64 24.3.0 Modes:   <!-- generated by issue reporter -->
---
Título: Git - Fixed alignment-column for git 'inline blame' annotations, regardless of line-length
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->   The new inline git blame "editor decoration" renders at different horizontal locations depending on the length of the active line:  <img width="581" alt="Image" src="https://github.com/user-attachments/assets/5c4110f5-2d8e-411f-8ef6-43698803e8ab" />  <img width="581" alt="Image" src="https://github.com/user-attachments/assets/2da57b56-a903-440f-87d7-f4e8e76c20c6" />  I'd argue that the horizontal location of these annotations should stay basically the same when possible. I understand the impulse to make the maximal use of the available space, but personally, I don't mind if the not-always-all-that-relevant blame information rolls "under the fold" and becomes less visible when I've got a lot of open windows packed together.  Potentially the best solution is a configuration option, something like `git.blame.editorDecoration.startColumn` (i.e. `80`). For any line shorter than that value, the blame-decoration is shifted to left-align to that column.  Prior art: There's a similar option in [vscode-error-lens](https://github.com/usernamehw/vscode-error-lens): ``` "errorLens.alignMessage": { "end": 100 }, ```
---
Título: Terminal suggest: Come up with list of terminal completion kinds we want to support
Descripcion: This will feed into the icons that each of these kinds would have.  [Editor intellisense reference](https://code.visualstudio.com/docs/editor/intellisense#_types-of-completions)  What we have now:  ```ts export enum TerminalCompletionItemKind { 	File = 0, 	Folder = 1, 	Flag = 2, 	Method = 3, 	Argument = 4, 	Alias = 5, } ```  An alias icon was requested in https://github.com/microsoft/vscode-codicons/issues/279  This is what fig defines:  ```ts   type SuggestionType =     | "folder"     | "file"     | "arg"     | "subcommand"     | "option"     | "special"     | "mixin"     | "shortcut", ```  PowerShell command types from `Get-Command`:  ``` Alias Function Filter Cmdlet ExternalScript Application Script Configuration All (this is a bit mask, maybe just part of how pwsh does enums?) ```  PowerShell completions types from `TabExpansion2`:  | Value | Name              | Description |-------|-------------------|------------ | 0     | Text              | An unknown result type, kept as text only | 1     | History           | A history result type like the items out of get-history | 2     | Command           | A command result type like the items out of get-command | 3     | ProviderItem      | A provider item | 4     | ProviderContainer | A provider container | 5     | Property          | A property result type like the property items out of get-member | 6     | Method            | A method result type like the method items out of get-member | 7     | ParameterName     | A parameter name result type like the Parameters property out of get-command items | 8     | ParameterValue    | A parameter value result type | 9     | Variable          | A variable result type like the items out of get-childitem variable: | 10    | Namespace         | A namespace | 11    | Type              | A type name | 12    | Keyword           | A keyword | 13    | DynamicKeyword    | A dynamic keyword
---
Título: SCM - fix action button top/bottom spacing
Descripcion: <img width="471" alt="Image" src="https://github.com/user-attachments/assets/e7506b87-f525-4b09-9dd0-95bba773e1cc" />
---
Título: Filter input on the Output view hides all other panel tabs
Descripcion: It's quite easy to get into a state where, even with a reasonable window size, the Filter input is really massive. E.g. here after reloading without interaction, it grows to basically hide all other panel titles   https://github.com/user-attachments/assets/263b7945-10e4-42ff-ac1b-9be5ec23db20
---
Título: Trust dialog disappears when clicking links
Descripcion: Testing #238847  When I click on any link from the Trust dialog that opens the browser, the dialog is dismissed (assume Cancel). I then have to go to the Extensions View and click on Install again to bring up the dialog.    I'm a little mixed on this behavior. I would prefer the dialog to stay open so that if I want to click on multiple links to learn more then I don't have to keep going back to the Extensions View and clicking Install again.  At the same time, I don't want a modal dialog.  Can we keep the same dialog but just not close it when going to the browser?
---
Título: GitHub - Consider using modal dialog
Descripcion: Testing #238835  > Click on the "Open on GitHub" action >    Confirm that you receive a notification that the commit does not exist on GitHub  This shows an info notification, but since it directly resulted from the user trying to run an action that can't be completed, a modal dialog might be more appropriate.
---
Título: SCM - Last row in these hovers are not consistent
Descripcion: Testing #238852  Last row in these hovers are not consistent. One has background and other does not. They should either both have background or both should not  <img width="966" alt="Image" src="https://github.com/user-attachments/assets/db8ec76e-db88-484d-916f-11742afbaacb" />  <img width="504" alt="Image" src="https://github.com/user-attachments/assets/2fbb4fa2-d7ef-4d8e-8b4c-22787e39f53b" />
---
Título: SCM - Avatar and the title line are not aligned
Descripcion: Testing #238852  I believe it looks good if the title line aligns to the middle of the avatar and also adding padding top to the avatar  <img width="873" alt="Image" src="https://github.com/user-attachments/assets/1b5052c4-e505-4cb6-be5d-1df6d145de3c" />  <img width="944" alt="Image" src="https://github.com/user-attachments/assets/da574605-a213-4799-b4e5-d1296cf80a22" />
---
Título: Allow scm.diffDecorationsGutterWidth to take values between 1 and 9, not just 1 and 5
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> `scm.diffDecorationsGutterWidth` currently takes values between 1 and 5.  I would like it to take values between 1 and 9 (I like my gutters **fat**).
---
Título: Explore a QuickPick-like experience close to what invoked it
Descripcion: Scenarios: * The attach context in Chat: ![image](https://github.com/user-attachments/assets/a1692e9b-08bf-44c1-9e39-7392e13bcfbc) * Git branch status bar item: ![image](https://github.com/user-attachments/assets/79d4bb11-be3e-432a-8436-38da1b85c59f) * Language, Encoding, Tab Size status bar items: ![image](https://github.com/user-attachments/assets/7a0ed401-ecd2-4abc-907b-e33a0c9e760a)  All of these open Quick Picks that are aligned at the top... and we've gotten wishes that the quick pick could be rendered closer to these items.  # Explorations  ## Explore simply moving the existing quick pick closer to what's invoking it  Hacked up in https://github.com/microsoft/vscode/commit/88f4209887aa16faa8253f77cc78a5ccb43dae97 if you click in the Chat input and click the paper clip, the quick pick renders closer to it: ![image](https://github.com/user-attachments/assets/cf9d1581-5478-42bf-8898-5e54e4e6443b)  another example if your cursor was in the Search: ![image](https://github.com/user-attachments/assets/7b7fc5cd-48d6-4a1f-8496-8adf6bab7ce7)  and another example if you use the branch picker: ![image](https://github.com/user-attachments/assets/925eeb25-98e7-4ce1-8581-118272dffc58)  There are a few things to iron out: * this commit only renders things close to things if they're in the outer 30% of the screen. This would be modified to logic that says " always render close to the thing... if you're in the main editor part, render in the middle".. but requires additional layer work since WorkbenchLayerService is in `workbench` and quick pick is in `platform` * Clicking on buttons does not take focus... so if my cursor was in the Search bar, and I clicked the Attach Context with my mouse, the quick pick will render close to Search * current logic breaks D&D and that would need to come back  Those are things that could be solved with some work... but I think the big problem is that........ it just doesn't look that great. I was really expecting it to look and feel nicer, but I don't think it does. I wish that the quick pick felt more attached to the thing that is opening it... like the attach context, or the Git status bar item.  That inspired the 2nd exploration.  ## Explore a new kind of widget  For the attach context and the status bar items, the wish is for something that really feels attached to that. Something like the label picker on GitHub: ![image](https://github.com/user-attachments/assets/3b456b09-16c1-4ea2-b03b-0e601a5c5e35)  but with a tail like a hover (like the Language Status Bar item): ![image](https://github.com/user-attachments/assets/c7f0bb13-b508-4917-a6fa-a22b357d3d03)  It could look something like this (please forgive my bad Figma skills): ![image](https://github.com/user-attachments/assets/e72f6883-faaf-4a40-bbfa-07ef01fccad9)  and in the branch picker: ![image](https://github.com/user-attachments/assets/fdd1b7d5-7032-4798-9306-7ac266045d48)   Writing down a loose idea from notes:  ``` * make a QuickContextWidget that is similar to a quick pick, but smaller and attachable to a UI component (it could use shared code with QP) * adopt this in Core for the attach context * adopt this for all Core contributed Status Bar Items * add a `showQuickContext(items: QuickContextItem[]): Promise<QuickContextItem | undefined>` * adopt the `showQuickContext` in git extension ```  I think we need more mockups... open questions: * What would the height of these be? * Could we render the input at the bottom? * What do InputBoxes look like (instead of QuickPicks)?
---
Título: Git - have `+` icon for staging changes in the "..." menu
Descripcion: The original intent with our toolbars in views and editors was to have a maximum of 3 "primary actions" followed by N secondary actions in the "..." menu. I know we have not written down this rule, nor do we enforce it in all the places. However, when we have the chance to discuss a newly added primary action - as it is the case with the `+` action for staging changes - we should.  ![Image](https://github.com/user-attachments/assets/5d741988-c404-45f1-84fa-f07df12f53bd)  We already have staging related actions in the diff editor in the "..." menu:  ![Image](https://github.com/user-attachments/assets/db2d74cf-e4ad-40eb-81d3-724f4a0824cf)  //cc @Tyriar
---
Título: View/Editor actions padding inconsistent
Descripcion: Related to https://github.com/microsoft/vscode/issues/236223  The change in https://github.com/microsoft/vscode/commit/276e24792198ecb7e83533d575568b66da722064 reduced `padding` of actions in toolbars to `2px`. But the change does not seem to impact the editor part, resulting in different paddings for components that originally were designed to be the same:  `2px` padding in views: ![Image](https://github.com/user-attachments/assets/517d35be-4801-476e-98e7-7931d5796ff0)  `3px` padding in editors: ![Image](https://github.com/user-attachments/assets/ae610ec6-01a4-454e-82ef-d760f677947a)
---
Título: Statusbar has strange theme defaults
Descripcion: In default dark, you get a nice hover feedback:  ![Image](https://github.com/user-attachments/assets/c1ebf921-97a2-4047-8acc-4716a3eca4cf)  Even for prominent items:  ![Image](https://github.com/user-attachments/assets/b9e91ae7-fcde-4496-8ef9-900437363400)  In default light theme, there is no hover feedback at all?  ![Image](https://github.com/user-attachments/assets/42ea5c11-cf00-4698-aa1f-e03d1ba4f95a)  In high contrast themes, should we be using background color at all for prominent or other indicators?  ![Image](https://github.com/user-attachments/assets/8af9b3d4-55f2-42d4-8c9b-a6861b40d5c9)  Because we do not in dark high contrast.
---
Título: SCM Graph - better handle long branch names in the hover
Descripcion: ![Image](https://github.com/user-attachments/assets/03e0fc21-c6ef-4cb2-8645-316b61c080f4)
---
Título: Inline chat message/buttons should be aligned with the right edge of the input box
Descripcion: Repro:  1. Wide monitor 2. Open chat 3. Ask "hi", 🐛 yellow message shows on the far side right of the screen 4. Hover The message, 🐛 yellow message shifts to middle and feedback buttons show on far right side  ---  Actual:  ![Image](https://github.com/user-attachments/assets/d12fadba-2f6f-4720-85f7-362aa970f87c)  Expected:  ![Image](https://github.com/user-attachments/assets/354b6e0e-d409-4cbd-856d-dee18d72cc63)  ---  Hovering actual:  ![Image](https://github.com/user-attachments/assets/3f0f439e-8e8c-43d5-a96b-e55fb3e7f91e)  Hovering expected (something like this?):  ![Image](https://github.com/user-attachments/assets/04db99f2-773b-4bfd-b0a1-b18347698815)  ---  Happens in terminal on hover too:  ![Image](https://github.com/user-attachments/assets/4d0cc22c-4b20-4715-a88f-704845879e10)
---
Título: Paste mode button looks different to other inline buttons
Descripcion: The blue background is very heavy and it's white on blue compared to the normal buttons that show up (yellow/blue foreground lightbulbs on transparent)  ![Image](https://github.com/user-attachments/assets/de0f4019-69bd-4d9c-8d7f-014aff06837a)  It also features a shadow which the light bulbs don't:  ![Image](https://github.com/user-attachments/assets/7190b5b2-8a69-487a-81be-43a666162157)  ![Image](https://github.com/user-attachments/assets/8557a43d-a4c7-46bf-88c4-c41222a98cf2)
---
Título: Very small buttons for expandable hover
Descripcion: Testing #234989  First of all, I think this is a great feature! - really useful :) I wish the UX was better though, in terms of its really hard or rather takes very conscious effort to carefully click on + or - which are really close to each other.   We may want to consider giving more gap in between the two buttons or separating them to left and right? (This might look ugly but would be better in terms of giving better experience for people actually clicking the button)  I do notice the effort to null one of them out if they are deemed invalid (if its in only expandable state the - gets blacked out), so that is great.  Honestly buttons are too small :/  Perhaps there are keyboard shortcut to these that I dont know about though!   ![Image](https://github.com/user-attachments/assets/4a9cd5e3-3e5b-4cd0-8a8d-97723d9579ab) ![Image](https://github.com/user-attachments/assets/566f9059-b2c9-48d1-a8a3-bfafc11f987c)
---
Título: SCM Graph - Add horizontal scrollbar for source control graph
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Add horizontal scrollbar to source control graph in the source control panel. It should probably appear automatically if source control graph content doesn't fit into window, like it does in text editors. `shift+scroll` for horizontal scrolling would also be nice. I checked out source control settings but couldn't find any mention of horizontal scrolling. I also haven't found a similar feature request.  Maybe it won't be useful 99% of the time, but once in a while you get assigned to one of *those* projects... ![Image](https://github.com/user-attachments/assets/802ef20f-cea2-4206-a3eb-1beeab4c0c07)
---
Título: With the `Light+` theme,  the input area of Chat in Editor is indistinguishable from the background when out of focus
Descripcion: Version: 1.96.0-insider Commit: 1bdee4500fc32f4eb195e087501b8c9331447fb3 Date: 2024-11-28T10:48:06.788Z Electron: 32.2.5 ElectronBuildId: 10579404 Chromium: 128.0.6613.186 Node.js: 20.18.0 V8: 12.8.374.38-electron.0 OS: Darwin x64 22.6.0 Steps to Reproduce:  1.  Set `"workbench.colorTheme": "Default Light+"` 2. Open Chat in Editor. 3. Focus to a other part. 4. The input area of Chat in Editor is indistinguishable from the background.  The input area should have a border even when out of focus.  ![Image](https://github.com/user-attachments/assets/913e84a6-3cb0-4043-be49-ae7f0555eb68)
---
Título: Git - Git blame editor decoration color
Descripcion: With `git.blame.editorDecoration.enabled`. I was expecting it to pick up my theme's comment color as the default color since that's the closest thing to what it is:  ![Image](https://github.com/user-attachments/assets/6575b653-37f1-4437-afcb-0cd842ad4308)  Personally I want it to be very subtle just like comments.
---
Título: Horizontal scroll position resets in file when seek peek definition called
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.95.2 - OS Version: linux mint mate 21.3  Version: 1.95.2 Commit: e8653663e8840adaf45af01eab5c627a5af81807 Date: 2024-11-07T11:07:22.054Z Electron: 32.2.1 ElectronBuildId: 10427718 Chromium: 128.0.6613.186 Node.js: 20.18.0 V8: 12.8.374.38-electron.0 OS: Linux x64 5.15.0-126-generic  __Issue:__ With long lines in a code file and horizontally scrolled to bring the remaining part of the line into view In this scroll position, when tried to seek peek definition  the seek peek definition shows inline, but the original code file horizontally scrolls back to start position   Steps to Reproduce: 1.  Identify long code line in a file and horizontally move to bring a symbol to view 2.  select seek peek definition for this symbol  sample images -  ![Image](https://github.com/user-attachments/assets/2de853df-32de-4585-b0f1-f1d17b704b00)  ![Image](https://github.com/user-attachments/assets/41d014a1-9bb8-4351-ab4d-5c2c9e1e8e56) ( note the horizontal scroll position has come to start position ) and have scroll back to see symbol in code.  __Expected behaviour:__ horizontal scroll position to be retained during seek peek definition as in sample image below  ![Image](https://github.com/user-attachments/assets/fb1a4243-2c09-4203-a031-03acfc608e38)
---
Título: SCM - Add margin in file tree
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Please add more margin (5px for example) in file tree Because without a margin it is too close to a vertical line, which is not very aesthetic  ![Image](https://github.com/user-attachments/assets/212d5aaa-1a93-405c-a3cc-cc8fad5e01d4)
---
Título: vscode window is large then it seems. transparent unclickable area around all windows.
Descripcion: Type: <b>Bug</b>  Unable to click anything under window, transparent area of aproximately 50px, all around. Since there is a shadow around, every vscode window, issue reporter included, has this issue. I'm guessing it has something to do with the shadow.   Basically the window is larger then it seems and clicking at the edge of vscode, i'm unable to switch to another app that is underneat it. Representated by white rectangular, aproximation of area around the window.  ![Image](https://github.com/user-attachments/assets/f38391d4-fd27-4f6d-ba40-4f97d45ed140)  VS Code version: Code 1.95.2 (e8653663e8840adaf45af01eab5c627a5af81807, 2024-11-07T11:07:22.054Z) OS version: Linux x64 6.11.7-300.fc41.x86_64 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 7 5800X3D 8-Core Processor (16 x 3553)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: disabled_software<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off<br>webnn: disabled_off| |Load (avg)|1, 0, 0| |Memory (System)|62.71GB (55.33GB free)| |Process Argv|/home/tomi/Documents --crash-reporter-id ac1fc1ed-1df5-4e41-a000-f6055199a477| |Screen Reader|no| |VM|0%| |DESKTOP_SESSION|gnome| |XDG_CURRENT_DESKTOP|GNOME| |XDG_SESSION_DESKTOP|gnome| |XDG_SESSION_TYPE|wayland| </details><details><summary>Extensions (5)</summary>  Extension|Author (truncated)|Version ---|---|--- xml|Dot|2.5.1 vscode-docker|ms-|1.29.3 default-keys-windows|smc|0.0.10 php-debug|xde|1.35.0 php-intellisense|zob|1.3.3   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscod805:30301674 binariesv615:30325510 vsaa593cf:30376535 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyone:30548225 vscrpc:30673769 962ge761:30959799 9b8hh234:30694863 pythonnoceb:30805159 asynctok:30898717 pythonmypyd1:30879173 2e7ec940:31000449 pythontbext0:30879054 cppperfnew:31000557 dsvsc020:30976470 pythonait:31006305 dsvsc021:30996838 724cj586:31013169 dvdeprecation:31068756 dwnewjupytercf:31046870 2f103344:31071589 impr_priority:31102340 nativerepl1:31139838 pythonrstrctxt:31112756 cf971741:31144450 iacca1:31171482 notype1:31157159 5fd0e150:31155592 dwcopilot:31170013 stablechunks:31181875  ```  </details>  <!-- generated by issue reporter -->
---
Título: Chat welcome jumps when context wraps
Descripcion: Steps to Reproduce:  1. have enough context and a narrow chat that the context pills wrap 2. clicking through files notice how the chat welcome jumps up and down  Maybe we could reserve enough space that this jumping does not happen:  ![Image](https://github.com/user-attachments/assets/2d105e2d-ed91-4d03-98d3-cf60bd5e21b6)
---
Título: Zooming into types moves the +/- buttons off screen
Descripcion: Awkward UX:  ![Image](https://github.com/user-attachments/assets/1a69cab7-aeb7-4b64-9281-36220974bfb8)
---
Título: Accept Current Change / Accept Incoming Change: add tooltip
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  When doing a merge or rebase you may get merge conflicts.  In VS Code this is presented with a window showing "Accept Current Change" and "Accept Incoming Change".  It may be helpful if it told you, in parenthesis or with a tooltip, which branch each is so you can differentiate them.
---
Título: Side bar close button is not consistent depending on activity bar
Descripcion: Steps to Reproduce:  1. when the activity bar is hidden or bottom, the primary sidebar shows no X to close 2. compare with the aux sidebar where we have it  I am curious why we would not align both sidebars in this case  ![Image](https://github.com/user-attachments/assets/2042b4b5-d8ea-4ac8-a00a-c74f5480bbf0) ![Image](https://github.com/user-attachments/assets/164f944e-3375-436e-9c4e-04fa878322b5)
---
Título: View / view container title context menu entries inconsistent
Descripcion: 1. activity bar to the top 2. right click on a view title in the secondary side bar 3. 🐍 No activity bar position action...  **Primary Sidebar**  ![Image](https://github.com/user-attachments/assets/a3ac592d-bb2c-4e6c-a8b0-b38861779d08)  **Secondary Sidebar**  ![Image](https://github.com/user-attachments/assets/67a21c75-536a-4577-b73f-c0a755df1d81)
---
Título: Inline chat code blocks extend more to right than chat input and also overlap the scroll bar
Descripcion: Inline chat with response streaming in shows the code block overlapping with scroll bar:  ![Image](https://github.com/user-attachments/assets/7b13862a-4038-46c0-9d22-6b10cb027f6d)  This is also a problem in terminal chat but wouldn't want to fix that until the editor inline chat is perfect  ![Image](https://github.com/user-attachments/assets/a637fd30-768b-4455-956c-96cc725abd4d)
---
Título: IFrame/Webview scrollbar style is inconsistent with the rest of the workbench
Descripcion: 1. Launch VS Code Insiders 2. Open Extensions editor and scroll up/down in the readme 3. Preview a markdown document and scroll up/down in the document 4. Open a PR description and scroll up/down
---
Título: Toggling views/panels has inconsistent focus behaviour
Descripcion: While investigating https://github.com/microsoft/vscode/issues/198293 I noticed that our action to toggle visibility of primary or secondary side bar or panel has inconsistent behaviour when it comes to passing focus to the view that becomes visible or not.  Notice when the explorer is active how focus remains in the editor:  ![Image](https://github.com/user-attachments/assets/a18f64dd-6d9c-4def-b62d-26ad32d14810)  And now with the SCM view:  ![Image](https://github.com/user-attachments/assets/de572695-04b1-4333-ae7c-cc2e06325caa)  First of all, these actions seem to call into methods to toggle visibility of the container via layout service which eventually calls into `openPaneComposite`, e.g. for the primary sidebar:  https://github.com/microsoft/vscode/blob/4520d915c98954dc96dd0bc00b8bb68181cbf2b6/src/vs/workbench/browser/layout.ts#L1750  The last parameter is a `true` to indicate that focus should move to that pane.  However, at the point where we want to focus the pane, it is not yet visible because the grid only updates a few lines below:  https://github.com/microsoft/vscode/blob/4520d915c98954dc96dd0bc00b8bb68181cbf2b6/src/vs/workbench/browser/layout.ts#L1756  Any view that implements `focus` by e.g. focussing the list will be a no-op because the DOM nodes are not yet visible. The SCM view is probably a bit async and that is why it works by chance.  I am actually not sure how to address this: people might have gotten used to the fact that these commands typically preserve focus for most of our views. I still think that the implementation is currently buggy around focussing the pane when the container becomes visible, so maybe a fix would need to be: * handle focus properly after the container in the grid is visible * make focus more explicit so that the toggling actions can explicitly pass in `focus: false` to preserve todays behaviour  //cc @sbatten
---
Título: Learning Mode (Without Intelissense, Auto-complete and Other Automations)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  ## Learning Mode (Stop Easily Automations)  The intelissense / autocompletion provided by VsCode and related plugins is nice at work, but as a college student i could say, when education is the case  (mainly in classes at colleges), these are rather damning for learning.  I haven't found in vscode docs and in the application no way to deactivate almost everything so that i would need to type everything (without any automation to be seen or made). I just found this script here (to add in `settings.json`:  ```  // TURN OFF AUTOCOMPLETION     // Controls if quick suggestions should show up or not while typing     "editor.quickSuggestions": false,      // Controls the delay in ms after which quick suggestions will show up     "editor.quickSuggestionsDelay": 90,      // Enables parameter hints     "editor.parameterHints": false,      // Controls if the editor should automatically close brackets after opening them     "editor.autoClosingBrackets": false,      // Controls if the editor should automatically format the line after typing     "editor.formatOnType": false,      // Controls if suggestions should automatically show up when typing trigger characters     "editor.suggestOnTriggerCharacters": false,      // Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.     "editor.acceptSuggestionOnEnter": "off" ```  It'd be good to have an option that could be named as 'turn on learning mode' or something else, which would deactivate everything related to intelissense and autocomplete (automation in general) in VsCode, independently of plugins turned on at the moment.  ![Image](https://github.com/user-attachments/assets/21223e1f-23da-4bce-8970-545d292c89af)
---
Título: Wrong colors for chat buttons in light theme
Descripcion: ![Image](https://github.com/user-attachments/assets/8c1ab2c5-0e6f-4174-b715-1109c6095920)  cc @mjbvz I think you added this for the attachment X, thought it was working at one point?
---
Título: UI Animations and Transitions:
Descripcion: UI transitions and animations in VS Code could be more fluid and modern. Enhancing these would improve the overall user experience.
---
Título: SCM - move action buttons on inline window to the left
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  There are inlinine windows for git actions, whetever there is new change in the codebase the aeria on right side form the line numbers can be clicked and inline window will be opened. 99% of the time, my desired action is to revert changes by clicking button which is on the right side of the inline window, and if someone has wide monitor that can be inconvinient. I am proposing to move those buttons to the left side, closer to line numbers.  If that is not feasable could we have context menu with right click on the green lines, that indicates git changes, and there we can have revert changes action?  ![Image](https://github.com/user-attachments/assets/8362ea47-b522-4be4-b100-045c1410dc67)   I would also propose for Peek References and other actions that require inline window, that the view is inverted and moved to the left, such as button and list of references/implementations etc, as it shortens the mouse drag and increase convinience, however on the other side I can imagine that people are used to this view, but hey, if something will improve the dev flow I am for it. ![Image](https://github.com/user-attachments/assets/701179dd-5d11-4e56-aca2-eae66727868c)
---
Título: The chat scroll to bottom button doesn't align with the extension detail scroll to top button
Descripcion: Similar idea but the icon in particular is a different style:  ![Image](https://github.com/user-attachments/assets/16805789-710c-4d4b-9380-50bd5b2f2ed0)  ![Image](https://github.com/user-attachments/assets/32e11727-9da1-43a0-a03b-d8ddad527b40)
---
Título: Chat input toolbar buttons overflow container in narrow viewports
Descripcion: ![Image](https://github.com/user-attachments/assets/41824f98-71eb-43c7-9dbe-1711ed549dca)
---
Título: Breadcrumb label not perfectly aligned with tab label when tabs disabled
Descripcion: Steps to Reproduce:  1. disable tabs (`workbench.editor.showTabs` set to `single`) 2. make sure breadcrumbs are enabled 3. open a file at root (e.g. `index.js`)  => 🐛 notice how the breadcrumb label is not nicely aligned to the editor label, it is slightly more to the top:  ![Image](https://github.com/user-attachments/assets/f3387d29-5210-4228-b62f-6d6e31855788)  Compare this with the "description" part of a tab that is perfectly aligned on the bottom (hacked here using dev tools to repeat `index.ts`):  ![Image](https://github.com/user-attachments/assets/b54416c2-fa23-4c44-a8a4-19bfddace0d6)  The "description" part is in a `span` called `label-description`:  ![Image](https://github.com/user-attachments/assets/5d208d88-1681-401a-934a-7253b382ca73)  While the breadcrumb is in a `span` called `label-name`:  ![Image](https://github.com/user-attachments/assets/dcf32476-df16-49de-8157-0b6ce1bcd192)  Pointers to CSS for breadcrumbs: https://github.com/microsoft/vscode/blob/1aecebe3ebbb5ce354d74abdc097b2e39c0e97bd/src/vs/workbench/browser/parts/editor/media/singleeditortabscontrol.css#L29  I suspect that this maybe an issue with how rendering works in the browser: in the case without breadcrumbs, there is 2 `span` next to each other (tab name, tab description) while in the breadcrumbs case the `span` is isolated, making it maybe harder to align to the `span` in the other div 🤔   Opening for help wanted for a CSS wizard to look into.
---
Título: Please introduce an option to force all hover-state controls that are hidden by default to be visible.
Descripcion: Type: <b>Feature Request</b>  Controls that only appear when you hover (with a delay!) make it very difficult to discover possible actions.  I had to go search the internet to find out that I could fold code in JSON mode - which led me to a keyboard shortcut.  Only after learning that it was even a feature, did I go try to find the mystery meat by hovering around the line number bar - and then the fold chevrons appeared.   Please introduce an option to force all hover-state controls that are hidden by default to be visible.  VS Code version: Code 1.94.2 (Universal) (384ff7382de624fb94dbaf6da11977bba1ecd427, 2024-10-09T16:08:44.566Z) OS version: Darwin arm64 24.0.0 Modes: Restricted   <!-- generated by issue reporter -->
---
Título: Chat response: actions are always visible
Descripcion: Each chat response shows actions, which is quite noisy, I would have expected the actions for a response only to become visible when I have focused on a response or hovered over it, similar to the "X" button a chat request:  ![Image](https://github.com/user-attachments/assets/3635d69f-2119-4c28-a90c-c571c1469ef8)
---
Título: Part and view title actions are not aligned
Descripcion: Notice (in the SCM view for example) how the action toolbars do not share the same margins for the last "..." action:  ![Image](https://github.com/user-attachments/assets/e78df4df-4b3a-4a6f-80be-de51abe1207c)  Related: https://github.com/microsoft/vscode/issues/159517
---
Título: SCM - Briefer titles on SCM views
Descripcion: This PR closes #230687  ![image](https://github.com/user-attachments/assets/94610075-6846-47e5-9e88-eb50ba26dccb)  Graph moved to Explorer container:  ![image](https://github.com/user-attachments/assets/4421cfe5-8023-43cc-bb75-6c97c0bf984d)  Graph in its own container on Secondary Side Bar:  ![image](https://github.com/user-attachments/assets/9cf32827-9a8e-4515-8a52-61e706b3a13d)
---
Título: SCM - Source control UI improvements
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  The text labels in the source control view are a little verbose and repetitive because the phrase "Source Control" appears in every section (see the screenshot below). What do you think about simplifying the labels? For example:  - Source Control Repositories → Workspace Repositories - Source Control → Repository - Source Control Graph → Graph  ![scm-ui-improvements](https://github.com/user-attachments/assets/f13fa8d1-fcff-43ba-9243-cbf36f8dfb86)
---
Título: Right side blue focus outline of chat is missing if we maximize the chat panel
Descripcion: ![image](https://github.com/user-attachments/assets/85a1fa69-3ebc-432e-a8ea-c44b9a67629f)  right side blue outline of the missing if we maximize the chat panel
---
Título: Move cursor when adding secondary cursors
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> The multi-cursor experience with VSCode can feel a bit jarring. It supports advanced and smart features, but seems to lack support for basic / minimal features or implementations. Especially when considering use cases like not wanting to touch a mouse for text editing.   To put it simply, I'd like to be able to make basic multi-cursor editing work the way it does in Notepad++. (Specifically with "Enable Multi-Editing" enabled but "Enable Column Selection to Multi-Editing" disabled.)  Currently, the basic way to edit multiple lines simultaneously is to use the keyboard shortcuts for editor.action.insertCursorAbove and editor.action.insertCursorBelow to spawn secondary cursors. If your cursor is on line 22. pressing editor.action.insertCursorBelow twice will result in cursors on lines 22, 23, and 24. If you then press editor.action.insertCursorAbove once it will result in cursors on lines 21, 22, 23, and 24.   If you accidentally press either keybind too many times, you can either use the cursorUndo keybind to sequentially remove the secondary cursors or use the removeSecondaryCursors keybind to exit multi-cursor mode and start over.   If you press the keybind to removeSecondaryCursors then your cursor will be back on line 22, where it was before you spawned any secondary cursors.    This alone is already an unintuitive implementation. It operates differently from other selection / editing modes such as, for example, highlighting text with cursorUpSelect and cursorDownSelect.   I propose that keyboard-centric manipulation of multi-line editing should instead work like the following:  If your cursor is on line 22, pressing editor.action.multiCursorExtendDown twice will result in cursors on lines 22, 23, and 24. If you then press editor.action.multiCursorExtendUp once it will result in cursors on lines 22 and 23. If you then press editor.action.multiCursorExtendUp once more it will result in a single cursor on line 22, effectively exited multi-cursor mode. If you then press editor.action.multiCursorExtendUp once more again it will result in cursors on lines 21 and 22.   If you press the removeSecondaryCursors keybind then your cursor will be on line 21, the last place you moved your cursor to.  Preferably, this would also come with a toggle setting to make the 4 unmodified arrow buttons exit multi-cursor mode instead of moving the (rectangular) multi-cursors. Specifically, up or down would move the cursor up or down as normal, left would move the cursor to where the top-left multi-cursor was, and right would move the cursor to where the bottom-right multi-cursor was. All resulting in a single cursor, obviously  I've used two mock commands in my example proposal as I presume some may prefer the current paradigm, and thus it'd be easier to implement this functionality using new commands rather than changing the behavior of existing commands.
---
Título: SCM Graph: Incorrect display of empty commit message
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: **Yes**  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: **1.93.1** - OS Version: **N/A**  Steps to Reproduce:  ```sh git init test && cd test git commit -m "Initial commit" --allow-empty --signoff git commit -m "" --allow-empty --signoff --allow-empty-message git commit -m "" --allow-empty --allow-empty-message ```  <img src="https://github.com/user-attachments/assets/4f608654-051c-4fc5-bdbe-cad9cd3800ec" width="369">
---
Título: SCM Graph - Unsure how to tell when graph is locked to a repository
Descripcion: Testing #229375  I noticed when I selected a specific repository for the SCM graph that the repository name next to the book icon changed, but that the branch icon still had the text "auto" next to it. Is there some indicator for when I have the SCM graph set to a specific repository versus when I have it set to auto?
---
Título: Wrong selected color for branch icon
Descripcion: Testing #229359  There is a second branch on the same commit, and the icon is dark when selected in light+ theme  ![Image](https://github.com/user-attachments/assets/5ded0651-39e7-4af5-8fa7-57734bd80e68) ![Image](https://github.com/user-attachments/assets/cda613c4-732a-4029-894f-6849c9809dd5)
---
Título: SCM Graph - Title and Icons of SCM Graph actions
Descripcion: Testing #229364  The view works as expected. Possible improvements: - Although I don't have a concrete proposal, "Go to Current History  Item" feels like an awkward name to me since "Current" and "history" seem to exclude each other. "Go to checked out commit" seems more appropriate. - When looking for the "Go to Current History  Item" in the title bar I intuitively went to the "Fetch from all remotes" action. The bull's eye didn't convey any meaning to me.   ![Image](https://github.com/user-attachments/assets/43f06755-87b6-48f4-bade-d4b7691aca7d)
---
Título: Show multiple tags in one icon?
Descripcion: Testing #229359  I wonder how well it scales to show multiple tag icons, why not find a new icon that resembles multiple tags:  ![Image](https://github.com/user-attachments/assets/fdbd04e2-8554-4f2d-a0a6-229d89b62df7)
---
Título: SCM Graph - Make repository picker a dropdown with a "More..." entry
Descripcion: Testing #229375  I would put the top 5 repos in a dropdown and only show quick pick when you click "More..."  ![Image](https://github.com/user-attachments/assets/ca222098-ef59-44a5-a5ff-de1580e8a737)
---
Título: SCM Graph - Limit Number Of Lines
Descripcion: Testing #229364  ![Image](https://github.com/user-attachments/assets/4a284ca2-7d91-4638-b0e3-8fd8477a9964)
---
Título: Badge order seems unexpected when filtering to a specific branch in graph
Descripcion: Testing #229381  Here, I've chosen `alexr00/rear-vulture` as the filter for the graph. Because of this, I somehow expect that the first badge on the first element revers to `alexr00/rear-vulture` and not `main`.  ![Image](https://github.com/user-attachments/assets/a4486f5c-7cae-4a4c-8de3-30619e7e537d)
---
Título: Terminal chat: two primary buttons
Descripcion: We should imho not have 2 primary buttons in blue but just one:  ![Image](https://github.com/user-attachments/assets/b772cf6e-16a5-4f1b-bcda-1a2b60424b1c)
---
Título: Resolve confusion between "New Window" and floating window (Priority: low)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.93.1 - OS Version: Windows 10 22H2  If this exists already, I couldn't find it using "Move to New Window" or "floating window". This is probably a result of https://github.com/microsoft/vscode/issues/10121  Steps to Reproduce:  1. In a usual VS Code window, open up several tabs. 2. Right-click on tab to bring up the drop-down menu (I'm referring to it as the "tab drop-down menu")  3. Tab drop-down menu > "Move to New Window" Result: it will create a floating window not a new instance of VS Code unlike File > New Window  Issue: It is confusing to use the same name for both a full VS Code instance and a floating window with unavailable panels. A simple word change would clarify confusion.  Resolution:  a) Change the tab drop-down menu from "Move to New Window" to "Move to Floating Window" to at least distinguish that it is a minimized-features window.  OR  b) Launch a new instance
---
Título: Multifile diff editor leaks models and editor after closing and hiding
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.93.0 (Universal) - OS Version: OS: Darwin arm64 23.6.0  Steps to Reproduce:  1. Make `Refactor Preview` appear (e.g. open some file and try some of `Refactor...` context actions) 2. Close the preview editor via `Discard` button 3. Call `vscode.window.visibleTextEditors` 4. It contains the `vscode-bulkeditpreview-editor://...` editor that corresponds to the `Refactor Preview` we just closed **as well as the file** that refactor preview was referencing  Repro and demo:  https://github.com/user-attachments/assets/4418fe28-9a5f-499a-baae-44219805d642
---
Título: SCM Graph item picker: Float existing selection to the top
Descripcion: Type: <b>Feature Request</b>  I have selected `main`, `origin/main` and `upstream/main` but when I bring up the picker again I can't see this until I filter.  ![image](https://github.com/user-attachments/assets/8aeda71e-3515-40b0-a520-83a61f73c668)  Workaround (assuming the items I previously selected have a string in common):  ![image](https://github.com/user-attachments/assets/9796c854-e385-488f-b84d-00a8be7ea66c)    VS Code version: Code - Insiders 1.94.0-insider (8b7eb51f54d7e1492d9baf70454ab6547a4ff9df, 2024-09-10T05:04:21.546Z) OS version: Windows_NT x64 10.0.22631 Modes:   <!-- generated by issue reporter -->
---
Título: Make VSCode Source Control Useful
Descripcion: Type: <b>Feature Request</b>  On multi-root workspaces, Source Control in VSCode is becoming not useful as the UI is very distracting and I'm not even sure where to look at.   VS Code version: Code 1.93.0 (Universal) (4849ca9bdf9666755eb463db297b69e5385090e3, 2024-09-04T13:02:38.431Z) OS version: Darwin arm64 23.6.0 Modes:  ![Screenshot 2024-09-09 at 1 03 55 PM](https://github.com/user-attachments/assets/b192634e-ae39-4df8-9094-2ec44b84c7e1)   <!-- generated by issue reporter -->
---
Título: SCM Graph - Should selecting an item in the scm graph highlight the lines similar to indent guides in the editor?
Descripcion: Testing #226648  Current:  <img width="483" alt="Screenshot 2024-08-27 at 10 09 04 AM" src="https://github.com/user-attachments/assets/00610c55-97b8-46a2-87fb-c3bafa9bdfa0">  Basic idea:  ![image](https://github.com/user-attachments/assets/3283d138-0dcf-4ff6-ba6e-684bf5f91a52)  This will allow easier tracking of the line(s) when scrolling
---
Título: Lines indenting and deindenting adds visual noise
Descripcion: Testing #226648  Current:  <img width="591" alt="Screenshot 2024-08-27 at 10 00 17 AM" src="https://github.com/user-attachments/assets/59c360bd-a44b-435d-be43-621ff4165556">  Proposal:  ![image](https://github.com/user-attachments/assets/7330f224-5881-43d0-8797-83c9e2281189)  While doing this would take up a little more horizontal space, it would make things more readable especially for cases like this:  <img width="239" alt="Screenshot 2024-08-27 at 10 02 16 AM" src="https://github.com/user-attachments/assets/af26e21f-da8a-4045-9e03-ec2b59ad8c00">
---
Título: Consider using better contrasting colors than red and green
Descripcion: Testing #226648  I mentioned red, green, yellow in https://github.com/microsoft/vscode/issues/226792 which should probably be associated with their meaning. Even if they're renamed, consider not using red and green in areas where contrast is important as red/green color blindness is very common.   ![image](https://github.com/user-attachments/assets/053da987-c111-4b07-97c0-cbda511bc4e0)
---
Título: SCM theme keys should not reference colors
Descripcion: Testing #226648  green, red, yellow here:  <img width="460" alt="Screenshot 2024-08-27 at 9 44 12 AM" src="https://github.com/user-attachments/assets/59fa80ca-d312-4d92-b73f-3a25035b8c57">  They should be associated with their meaning, not their color. This might be just a case where it should be `<something><number>` like the below, which would imply to me that they are used 1st, 2nd, 3rd, etc.:  <img width="380" alt="Screenshot 2024-08-27 at 9 44 54 AM" src="https://github.com/user-attachments/assets/58325768-5cac-4074-bfa8-91a8297218b1">
---
Título: Requesting customizable or alternative colour scheme for source control graph
Descripcion: Testing #226648  I was confused at first because I noticed a green branch merging into main and later on a red branch merging into main, and I wasn't sure whether the red colour meant something went wrong with that merge.
---
Título: Show documentation when hovering on the autocompletion dropdown list item
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I find that `completionItem.documentation` need to be highlighted and user need to click on one of the documentations to show up. **Can we add a feature to show the documentation when hovering over a completion item?**  For example, is there any services like `hoverProvider` that works on **completion Item**? ![image](https://github.com/user-attachments/assets/8b635113-e1ef-4e2f-8b7f-f19e8cad8d10)
---
Título: Source Control Graph view: Make the current HEAD more prominent
Descripcion: Testing #226648  Version: 1.93.0-insider Commit: ff7a154d5e5e9034914f0466420f0f1407f0c95e Date: 2024-08-27T05:04:20.235Z Electron: 30.4.0 ElectronBuildId: 10073054 Chromium: 124.0.6367.243 Node.js: 20.15.1 V8: 12.4.254.20-electron.0 OS: Linux x64 5.15.0-119-generic  When looking at the graph view, I'm orienting myself on the commit that represents HEAD. I want to see what's incoming and what the history is.  When there are a lot of incoming commits, I find it sometimes difficult to find that commit. The bigger blue dot and the crosshair icon visualizes this, but I find it very subtle.  Here I'm on main, but there's an incoming change:  ![Image](https://github.com/user-attachments/assets/1876ed9f-1c6e-4a44-8b42-57b02d963e42)  Here I am on a branch, but main and origin/main are much farther  ![Image](https://github.com/user-attachments/assets/09e99a28-5820-4f5e-8c32-e92fbc0dc6d2)   For older release I even need to scroll down to find it:  ![Image](https://github.com/user-attachments/assets/a2d43e5b-5aa6-42f6-9d3f-a730ac7c8afb)  Steps:    - switch to an older branch    - find the curretn commit by manually scroll down  Some ideas:  - Switching a branch should reveal the commit that is HEAD. - offer an actions in the toolbar that reveal the current head. The icon could use the crosshair icon that is already used to mark head. - make the item that has head more prominent: Maybe a different background color
---
Título: SCM - show repositories view by default with multiple repositories
Descripcion: Opening a multi root workspace with 3 repositories, here is my default UI in SCM:    ![Image](https://github.com/user-attachments/assets/51733ee0-ba03-431e-bdd6-4f2226d3d751)   I find this quite a complex UI esp. since buttons repeat N times.  I would suggest to show the repositories view as soon as I deal with multiple and only select the first by default for a much calmer experience:    ![Image](https://github.com/user-attachments/assets/d2992fa2-ed06-49b9-96ed-53e36b698c79)  //cc @daviddossett @joaomoreno
---
Título: Source Control Graph: right-hand badges collide with actions location
Descripcion: Already discussed in standups, the indicators for current commit and remote commit are nice but I think conflict with typical actions location in trees/lists there:    ![Image](https://github.com/user-attachments/assets/2534f98d-8793-4b80-8429-1a037f77591c)  Maybe we can find some other way to distinguish this.  //cc @daviddossett
---
Título: There's no apparent way to make files open in a new tab by default.
Descripcion: Type: <b>Bug</b>  I've searched the settings for "tab" and found no way to address this: VS Code consistently but inexplicably stops opening new tabs after the second one, as you click on files in the treeview.  The context menu on files in the treeview doesn't even offer an "open in new tab" option, so there's no discoverable hotkey to do so either. I looked in the File and Edit menus too.  One might suspect that double-clicking will do it, but nope. Option-clicking will in fact do it... but in the wrong pane (screen grab attached).  VS Code version: Code 1.92.1 (eaa41d57266683296de7d118f574d0c2652e1fc4, 2024-08-07T20:16:39.455Z) OS version: Darwin arm64 23.5.0 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Apple M1 Pro (10 x 2400)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off| |Load (avg)|2, 2, 3| |Memory (System)|32.00GB (0.33GB free)| |Process Argv|--crash-reporter-id 078df501-2baa-4a67-99eb-d56e79af23af| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (31)</summary>  Extension|Author (truncated)|Version ---|---|--- mustache-syntax-vscode|att|0.1.0 doxdocgen|csc|1.4.0 vscode-deno|den|3.38.0 cmake-integration-vscode|go2|0.7.1 codewind-openapi-tools|IBM|0.14.1 better-cpp-syntax|jef|1.27.1 vscode-docker|ms-|1.29.1 debugpy|ms-|2024.10.0 isort|ms-|2023.10.1 python|ms-|2024.12.2 vscode-pylance|ms-|2024.8.1 remote-containers|ms-|0.380.0 remote-ssh|ms-|0.113.1 remote-ssh-edit|ms-|0.86.0 remote-wsl|ms-|0.88.2 vscode-remote-extensionpack|ms-|0.25.0 cmake-tools|ms-|1.18.44 cpptools|ms-|1.21.6 cpptools-extension-pack|ms-|1.3.0 makefile-tools|ms-|0.10.25 vscode-thunder-client|ran|2.24.13 java|red|1.33.0 cmake|twx|0.0.17 intellicode-api-usage-examples|Vis|0.2.8 vscodeintellicode|Vis|1.3.1 vscode-gradle|vsc|3.16.3 vscode-java-debug|vsc|0.58.0 vscode-java-dependency|vsc|0.24.0 vscode-java-pack|vsc|0.28.0 vscode-java-test|vsc|0.42.0 vscode-maven|vsc|0.44.0  (1 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscod805cf:30301675 binariesv615:30325510 vsaa593:30376534 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyone:30548225 a9j8j154:30646983 962ge761:30959799 pythongtdpath:30769146 welcomedialog:30910333 pythonnoceb:30805159 asynctok:30898717 pythonregdiag2:30936856 pythonmypyd1:30879173 h48ei257:31000450 pythontbext0:30879054 accentitlementst:30995554 dsvsc016:30899300 dsvsc017:30899301 dsvsc018:30899302 cppperfnew:31000557 dsvsc020:30976470 pythonait:31006305 dsvsc021:30996838 bdiig495:31013172 pythoncenvpt:31062603 a69g1124:31058053 dvdeprecation:31068756 dwnewjupyter:31046869 2f103344:31071589 impr_priority:31102340 nativerepl1:31104043 refactort:31108082 pythonrstrctxt:31112756 wkspc-onlycs-c:31111717 wkspc-ranged-t:31111713  ```  </details>  <!-- generated by issue reporter -->  https://github.com/user-attachments/assets/9be3d887-4628-47d0-abbf-82a45640e255
---
Título: Incorrect Incoming/outgoing history graph
Descripcion: ![image](https://github.com/user-attachments/assets/72bacdeb-b578-4e3c-9993-496d4885d178)
---
Título: Content lost on failed save
Descripcion: Type: <b>Bug</b>  # STEPS - I opened a new tab by double clicking on empty space - Copy pasted a markdown document from teams - Made some small edits - Pressed CTRL+S to save  # Expected Save dialog somes up for me to choose name/locatione etc  # Actual A message on bottom right that said something like: "Can not save document due to xyz (could not read fast enough)...." It contained C:\untitled01 type of string (why?!)  Right when the message showed up, the tab closed automatically and I could not get my content back in any way.  I tried to reproduce it and I could not. **But loss of data is concerning**.  For reference: - I did not press ENTER after CTRL+S - i didn't see any dialog box - after I pressed CTRL+S, I got the message and tab was gone with the content - Pressing CTRL+S shows "documents" folder (right now), not `C:\`   VS Code version: Code 1.91.1 (f1e16e1e6214d7c44d078b1f0607b2388f29d729, 2024-07-09T22:06:49.809Z) OS version: Windows_NT x64 10.0.22631 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|12th Gen Intel(R) Core(TM) i5-12400 (12 x 2496)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled| |Load (avg)|undefined| |Memory (System)|31.22GB (7.84GB free)| |Process Argv|--crash-reporter-id 5aceeabc-a644-4083-a04e-80ed32291469| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (11)</summary>  Extension|Author (truncated)|Version ---|---|--- markdown-checkbox|bie|0.4.0 markdown-preview-github-styles|bie|2.0.4 bruno|bru|3.1.0 copilot|Git|1.219.0 copilot-chat|Git|0.17.1 ldif|jta|0.2.0 caddyfile-support|mat|0.4.0 vscode-docker|ms-|1.29.1 remote-containers|ms-|0.380.0 remote-wsl|ms-|0.88.2 code-spell-checker|str|3.0.1   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vspor879:30202332 vspor708:30202333 vspor363:30204092 vscorecescf:30445987 vscod805cf:30301675 binariesv615:30325510 vsaa593:30376534 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyone:30548225 a9j8j154:30646983 962ge761:30959799 pythongtdpath:30769146 welcomedialog:30910333 pythonnoceb:30805159 asynctok:30898717 pythonregdiag2:30936856 pythonmypyd1:30879173 h48ei257:31000450 pythontbext0:30879054 accentitlementst:30995554 dsvsc016:30899300 dsvsc017:30899301 dsvsc018:30899302 cppperfnew:31000557 dsvsc020:30976470 pythonait:31006305 dsvsc021:30996838 da93g388:31013173 pythoncenvpt:31062603 a69g1124:31058053 dvdeprecation:31068756 dwnewjupytercf:31046870 newcmakeconfigv2:31071590 impr_priority:31102340 refactort:31101459 ccpltc:31103427 pythonrstrctxt:31103193 wkspc-onlycs-c:31102393  ```  </details>  <!-- generated by issue reporter -->
---
Título: Make dropdown control looks more consistent with other parts
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> ![image](https://github.com/user-attachments/assets/1fbe51f8-d9d4-42cc-ba03-3c0de44b3f8b) Control like this uses native select control. I think there are several drawbacks: 1. No smooth scrolling 2. No shadow 3. It's hard to change its appearance or extend its function in the future. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#styling_with_css 4. The separator is of the same height as other options and not enough width (since it's just a disabled option with text ----). It should be like in the normal menu, extending to both sides and having a smaller height.  Therefore I suggest using a custom control instead.
---
Título: SCM - history graph UX improvements
Descripcion: 1. Additional theme colors for the graph 3. Rethink the history item group label (ex: main, origin/main) 4. Think about history item group actions (ex: compare)
---
Título: Larger hit area for custom hover
Descripcion: https://github.com/user-attachments/assets/f4dde175-0b5d-4f84-af0e-7035cfe9813b  I was trying to move the cursor into the hover so I can click on the buttons in the custom hover. Pressing alt can make the hover sticky but I think in general the hover should not be this easily dismissed.
---
Título: Allow to collapse the Incoming/Outgoing changes tree
Descripcion: I would like to be able to collapse the tree with the Incoming and Outgoing changes in the SCM pane. It has many nodes and it distracts me from the changes view:  <img width="1339" alt="Screenshot 2024-07-25 at 16 38 36" src="https://github.com/user-attachments/assets/ba1ed3b0-a5c8-466f-af7f-af1fc29f21bc">
---
Título: SCM Graph - View commit action on multiple commits is showing no changed files
Descripcion: Testing #223106   https://github.com/user-attachments/assets/efff4839-53ff-4017-97ac-b0dd0fd552e3
---
Título: Commit author is mostly hidden always due to long commit names
Descripcion: Testing #223106  SCM view is on the Side bar that has limited horizontal space. Most of the times commit names are big and therefore author name is mostly hidden due to the wrapping that wraps author name first.  ![Image](https://github.com/user-attachments/assets/b9ab98fd-97b4-4e32-93b8-336cc5694c64)
---
Título: Profiles editor is not accessible / usable by keyboard
Descripcion: Testing #223080  The profiles editor is not usable by keyboard (only by mouse).  I cannot put focus on this widget and use the arrow keys/tab to select an option:  ![Image](https://github.com/user-attachments/assets/084032d2-f27f-46b7-b0da-4bf93570e925)
---
Título: Target size of buttons "Clear extension" and "Filter extension" is 22X22 which is less than required size 24x24pixel: A11y_VS Code_Extension_Target Size
Descripcion: ### GitHub Tags: #A11yMAS, #A11yTCS, #A11ySev3, #DesktopApp, #SH_WCAG2.2_Visual Studio Code Client_Win32_April2024, #Visual Studio Code Client, #Win32, #Win11, #WCAG2.5.8, #FTP, #A11yWCAG2.2, #TargetSize,#Closed,  ### Environment and OS details: Version: 1.92.0-insider (user setup) Windows 11 pro Version 23H2 OS Build: 22631.3672  ### Repro Steps:  1. Open Visual Studio Code Insiders editor. 2. Tab till extension and press enter. 3. Tab till clear extension button and press enter. 4. Observed that Target size of buttons "Clear extension" and "Filter extension" is 22X22 which is less than required size 24x24pixel.  ### Actual Result: Target size of buttons "Clear extension" and "Filter extension" is 22X22 which is less than required size 24x24pixel.  ### Expected Result: Target size of buttons "Clear extension" and "Filter extension" should be minimum 24x24pixel. If the controls have spaced in-between, then those spaces should not intersect each other and target size with spacing should be 24x24 pixel for each one.  ### User Impact: Users with dexterity limitations and those who have difficulty with fine motor movement find it difficult to accurately activate small targets when there are other targets that are too close. Providing sufficient size, or sufficient spacing between targets, will reduce the likelihood of accidentally activating the wrong control.  ### Attachment:  https://github.com/user-attachments/assets/0e931192-bafc-4ee1-9654-ca241f91eadc  Ruler Attachment:   https://github.com/user-attachments/assets/1e89adfd-23c4-4452-b8e6-cc6196899bb6
---
Título: Improve extension auto update experience
Descripcion: ## Problems  ### Inconsistent UX  Installing a specific version of an extension disables auto updating the extension. UI representing this state is not consistent when selectively enabling an extension for auto update  ![Image](https://github.com/user-attachments/assets/8c9c3412-0a9d-4a55-935d-657b4e4a1480)  vs  ![Image](https://github.com/user-attachments/assets/c606056b-0f30-461c-806e-9bb5126b6be4)  Sometimes, it does not even show any indication that auto update is disabled for an extension  ### Not Intuitive  When auto update is enabled for all extension, it is not straight forward to disable auto updating an extension. One has to Install another version of an extension to do so.  ### Confusing Auto Update Modes  - Current set of Auto Update Modes are too confusing to understand.  ![Image](https://github.com/user-attachments/assets/d25e118d-b137-4e71-9c1d-19bb77eb1663)  - When Auto Update is disabled, it automatically switches to **Selected Extensions** when user enables an extension to auto update.   - **Selected Extensions** mode is too vague to understand the intention.    ## Solution  - Simplify Auto Update mode to Enable/Disable Auto Updating All Extensions. When Enabled all extensions will get auto updated otherwise not.  - Indicate if auto update is enabled at extension level and allow to configure it.
---
Título: SCM Graph - high contrast colors
Descripcion: Testing #217398  <img width="357" alt="image" src="https://github.com/user-attachments/assets/d151a1b1-ea9d-4681-98ed-5d378e1b3192">  I'm not actually sure... but it feels not.  cc @daviddossett
---
Título: Profiles Editor: align with form layout/settings UI
Descripcion: Testing #217139  Related to other feedback I've given, here's a quick sketch of what I think gets us more aligned with things like the settings UI. Ideally we could even reuse the basic settings UI under the hood, but I don't know how portable it is off the top of my head. This isn't totally thought through but hopefully conveys the general idea I had in mind.  Main talking points: - Name and icon inputs are clearly labeled and have their own rows - Descriptions are added where needed - Actions are consolidated on the list item for each profile - Form actions are moved to the bottom - Table gets a name/description  ![CleanShot 2024-06-25 at 11 06 49@2x](https://github.com/microsoft/vscode/assets/25163139/17cdc67d-e323-4f66-936a-cd4dac45d7bb)
---
Título: Profiles Editor: modal for successful export seems heavier than needed
Descripcion: Testing #217139  Any particular reason we wouldn't just use a notification here?  ![CleanShot 2024-06-25 at 10 24 21@2x](https://github.com/microsoft/vscode/assets/25163139/cdb10402-5270-461e-91cd-8169cc538fdc)
---
Título: Profiles Editor: not clear why table dropdowns turn into checkboxes
Descripcion: Testing #217139  As a user, I don't know why these turned into checkboxes. Can I not choose to configure this to copy from a profile post-creation? If that's the case, maybe disable the option in the dropdown + provide messaging? It's strange to see the overall UI component change.   ![CleanShot 2024-06-25 at 10 21 31@2x](https://github.com/microsoft/vscode/assets/25163139/02a16861-855c-4c39-bbcc-d2f4ae8ca5f6)
---
Título: vscode.dev: better focus for the git password entry field when git pushing from terminal
Descripcion: I ran git push from a terminal in a hosted instance of vscode.dev and didn't notice that it was opening an "enter password" input. It seemed like the git push was just hanging. I was using the default light theme but don't easily notice the input field in the dark theme either. I've attached a screenshot below.  Input element: `<div class="quick-input-header"></div>`:  <img width="686" alt="Screenshot 2024-06-23 at 13 01 45" src="https://github.com/microsoft/vscode/assets/8116382/67e2c1a9-31eb-45e0-9749-09027637331e">  Version: 1.90.2 Commit: 5437499feb04f7a586f677b155b039bc2b3669eb User Agent: Mozilla/5.0 (Macintosh, Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36 Embedder: vscode.dev  <!-- generated by web issue reporter -->
---
Título: Sync icon rotation is uneven (it is wobbling)
Descripcion: Greetings,  currently, the sync icon in the bottom bar is not rotating evenly (it is actually wobbling). The effect can be seen here:  [Before.webm](https://github.com/microsoft/vscode/assets/7782966/ef9bc95e-24f0-4e1d-aa2d-df415dc73417)  This is caused since the used text icon is not centered properly. The effect has been reproduced on both Windows and Linux versions of VSCode.  - VS Code Version: 1.90.1  Steps to Reproduce:  1. Open a project with a remote git repository attached 2. Click on the sync icon in the bottom bar 3. Observe the wobbling icon
---
Título: Make Workspace Extensions more intuitive to find and activate
Descripcion: I twice had a hard time finding the workspace extensions as I wanted to activate them. I would not have expected it to be part of the recommended extensions which is why I did not search there. I think it's fine to show it in the recommended view, but I think we can do a bit more to make it easier to find/activate.   Some ideas: - Have an entry in the file explorer to activate/deactivate a workspace extension - Allow searching the extension. I am aware that this mainly searches the marketplace, but this was one of the first actions I did when looking for the workspace extensions - Add a filter `Workspace Recommendations` or `Workspace Extensions` - Show it in the list of installed extensions. This makes sense as it is already "installed"
---
Título: Ugly flicker when having suggested prompt
Descripcion: * have a squiggle * open inline chat for it * the UI flickers when coming up   https://github.com/user-attachments/assets/7e235ce5-3c3f-4333-bde9-637b05bdccaf
---
Título: I want have a 'Infinite Canvas'
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I want have a 'Infinite Canvas', We can manage a lot of windows  see：[https://juejin.cn/post/7375586227984220169](https://juejin.cn/post/7375586227984220169)  ![image](https://github.com/microsoft/vscode/assets/31685984/fa37e29b-9f56-4a84-a706-dfa8ebf534cb)
---
Título: Make sticky scroll more explicit for new users
Descripcion: Sticky scroll is turned on by default for a couple of builds now. We are receiving issues and concerns from users who do not know what the sticky widget is and who confuse it with the editor lines. They think the sticky widget is an editor bug. This issue is about how to handle this issue. Several ideas have been proposed:  - Turn the sticky widget on by default only when an outline provider is available. For some languages like C# where allman style braces are used, if there are no outline providers, one can see only brackets in the sticky widget, which provides little useful information. To mitigate this, we can introduce a setting which shows the sticky scroll lines only when an outline provider is available. The lines in the sticky widget would then carry in general more useful information.  - Add a pin on the sticky widget in the far right bottom corner of the sticky widget. When the pin is unpinned (by clicking on it), this would remove the sticky widget. This is a quick way to remove the sticky lines, and indicates to new users this is an individual widget.  - Instead of adding a pin, we could add a gear icon on the far bottom right, which when clicked, opens the context menu from which it would be possible to toggle the sticky scroll on and off. - The sticky widget background color corresponds to the editor background color. This is done for aesthetic purposes. Perhaps we could change the sticky scroll widget background color to something lighter or darker than the default background colors of the base themes.  - We could also make larger the drop shadow of the sticky widget. This would make it clearer that the sticky widget lies on top of the editor. - We could add a tooltip on the sticky widget. When you would hover over the sticky scroll lines, you would see a tooltip with some information like 'Line 14 is the sticky scroll widget'.  Pinging @daviddossett about thoughts, cc @hediet
---
Título: Activity Bar Product Icon Size
Descripcion: Type: <b>Feature Request</b>  The current icon sizes on the Activity Bar look too big, at `24px`, while the Activity Bar width is `48px`. How about changing the icon sizes to `20px`?  VS Code version: Code 1.90.0 (Universal) (89de5a8d4d6205e5b11647eb6a74844ca23d2573, 2024-06-04T19:34:44.157Z) OS version: Darwin arm64 23.4.0 Modes:   <!-- generated by issue reporter -->
---
Título: I am trying to find the resize handle in diff editor every time
Descripcion: I am a big fan of the explicit actions in the diff editor to stage or undo a change, but I find myself constantly trying to find the location where I can grab and resize:  ![Recording 2024-06-04 at 07 13 18](https://github.com/microsoft/vscode/assets/900690/020c6f48-4cda-46b4-a0b6-f3c455bf2e55)  As you can see, its inconsistent: the first sash is somewhere in the middle (but not exactly!) and the second sash is exactly on the right where the shadow is.  I would love if we could go back to just 1 sash but make the hit area clearly visible by showing a vertical line when you hover anywhere in between the 2 diff editors.
---
Título: Same length of `Remote Host` and `Activity bar`
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  To be possible to make the same length `Remote Host` as it is `Activity bar`  <img width="61" alt="Screenshot 2024-05-25 at 21 12 56" src="https://github.com/microsoft/vscode/assets/46487312/c84bef1a-934d-4cb6-b3e1-999a2ec570d9">  ---  <img width="72" alt="Screenshot 2024-05-25 at 21 14 34" src="https://github.com/microsoft/vscode/assets/46487312/3951376c-ea4e-4c2c-a50f-56d747508c91">
---
Título: Can't click on links in streaming chat response
Descripcion: I wanted to go and see the file that copilot was talking about before its response finished. It seems like links to files and methods are detected in realtime, as they appear in blue in chat, but clicking on them does nothing until the response is finished.
---
Título: Two code-actions entry points with same icon
Descripcion: Both sparkle icons trigger code actions but the lower one has one more non-quick-fix code action. This is confusing.  ![image](https://github.com/microsoft/vscode/assets/16353531/f25cbcf9-b8ee-4da8-a8bb-739ecd097198)  Version: 1.89.0-insider Commit: dfa434a13c74b847c9edc4a82e5ca0588f24ce9d Date: 2024-04-29T22:54:38.075Z Electron: 28.2.8 ElectronBuildId: 27744544 Chromium: 120.0.6099.291 Node.js: 18.18.2 V8: 12.0.267.19-electron.0 OS: Darwin arm64 23.4.0
---
Título: Find/replace bar obscures top lines in narrow editors
Descripcion: Type: <b>Bug</b>  I'm doing some work on V8, and since the code style is mandated at 80 columns and I'm working on a small laptop monitor, I've configured my VSCode window to have three side-by-side editor groups, each just a little wider than necessary to hold 80 columns of text plus scrollbars/gutters/etc.  This works great most of the time, _except_ if the Ctrl-F find bar is open. Even at its minimum width (see screenshot) it obscures most of the top two lines of the window. If the replace UI is visible as well, it obscures the top four. This causes moderate issues when sticky scroll is operating properly, as it means the outer two/four contexts will be mostly-obscured, it causes major issues when the text being found is in the top two/four lines, because you can't scroll the editor up far enough to see what's being operated on.  ![image](https://github.com/microsoft/vscode/assets/605817/b967b83f-071d-4663-a104-5642ebe8d8c0) ![image](https://github.com/microsoft/vscode/assets/605817/c993e07e-464e-41fc-bf5b-396bef69ac2d)  Perhaps, in the same way as you can scroll the document _down_ past the end of a file, you could scroll _up_ past the top if the top lines are obscured? Perhaps the sticky-scroll lines could scoot down when the find/replace bar is open?  VS Code version: Code 1.88.1 (e170252f762678dec6ca2cc69aba1570769a5d39, 2024-04-10T17:41:02.734Z) OS version: Windows_NT x64 10.0.22631 Modes: Remote OS version: Linux x64 5.15.146.1-microsoft-standard-WSL2  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|12th Gen Intel(R) Core(TM) i9-12900H (20 x 2918)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled| |Load (avg)|undefined| |Memory (System)|39.70GB (22.28GB free)| |Process Argv|--folder-uri vscode-remote://wsl%2Bubuntu/home/dchurch/v8/v8 --crash-reporter-id 8501f115-52d2-449c-9863-9cd416a1d592| |Screen Reader|no| |VM|0%|  |Item|Value| |---|---| |Remote|WSL: Ubuntu| |OS|Linux x64 5.15.146.1-microsoft-standard-WSL2| |CPUs|12th Gen Intel(R) Core(TM) i9-12900H (20 x 2918)| |Memory (System)|19.39GB (16.48GB free)| |VM|0%| </details><details><summary>Extensions (21)</summary>  Extension|Author (truncated)|Version ---|---|--- gitlens|eam|14.9.0 vscode-clangd|llv|0.1.28 cpptools|ms-|1.19.9 vscode-torque|v8-|1.0.3 clang-format|xav|1.9.0 remotehub|Git|0.62.0 vscode-systemd-support|han|2.2.0 sln-support|log|0.0.1 debug-tracker-vscode|mcu|0.0.15 peripheral-viewer|mcu|1.4.6 remote-containers|ms-|0.354.0 remote-ssh|ms-|0.110.1 remote-ssh-edit|ms-|0.86.0 remote-wsl|ms-|0.88.0 vscode-remote-extensionpack|ms-|0.25.0 azure-repos|ms-|0.38.0 remote-explorer|ms-|0.4.3 remote-repositories|ms-|0.40.0 remote-server|ms-|1.5.1 vscode-gn|npc|1.1.0 grammarkdown-language|rbu|0.3.3  (2 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492:30256859 vscod805:30301674 binariesv615:30325510 vsaa593cf:30376535 py29gd2263:31024239 c4g48928:30535728 azure-dev_surveyone:30548225 962ge761:30959799 pythongtdpath:30769146 welcomedialogc:30910334 pythonidxpt:30866567 pythonnoceb:30805159 asynctok:30898717 pythontestfixt:30902429 pythonregdiag2:30936856 pyreplss1:30897532 pythonmypyd1:30879173 pythoncet0:30885854 h48ei257:31000450 pythontbext0:30879054 accentitlementsc:30995553 dsvsc016:30899300 dsvsc017:30899301 dsvsc018:30899302 cppperfnew:31000557 d34g3935:30971562 fegfb526:30981948 bg6jg535:30979843 ccp2r3:30993541 dsvsc020:30976470 pythonait:31006305 jchc7451:30973076 gee8j676:31009558 dsvsc021:30996838 f3je6385:31013174 pythoncenvpt:31022790  ```  </details>  <!-- generated by issue reporter -->
---
Título: Suggest widget height is calculated incorrectly
Descripcion: ## Issue description  The height of the suggest widget is calculated so that twelve elements are displayed, but I think the calculation is not quite correct because the height of the widget is too large:  ![bug](https://github.com/microsoft/vscode/assets/1312807/1250d377-35ee-4477-917a-3e9118bff6f9)  Because of the two additional pixels, the list elements are shifting when scrolling down:  https://github.com/microsoft/vscode/assets/1312807/ece66535-515d-4754-839f-112db2247043  In the `getLayoutInfo` method, the border width (one pixel for normal themes, two pixels for high contrast themes) is included in the default height, but the `defaultSize` is later used to set the height of the list element *without* the border:  https://github.com/microsoft/vscode/blob/bcca025d403e13914b0b4e0f2fc20ecc298cb256/src/vs/editor/contrib/suggest/browser/suggestWidget.ts#L912  https://github.com/microsoft/vscode/blob/bcca025d403e13914b0b4e0f2fc20ecc298cb256/src/vs/editor/contrib/suggest/browser/suggestWidget.ts#L884  Here's another example with a high contrast theme:  ![bug-hc](https://github.com/microsoft/vscode/assets/1312807/92f94a74-1d13-42ec-b9db-f833c4765432)  ## Possible solution  I tried to remove the border from the calculation and the result looks better:  https://github.com/microsoft/vscode/assets/1312807/282b7511-c534-4084-a5c9-ebc5c1c27d50  VS Code version: Code 1.88.1 (e170252f762678dec6ca2cc69aba1570769a5d39, 2024-04-10T17:43:08.196Z) OS version: Darwin arm64 23.4.0 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Apple M1 (8 x 24)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled| |Load (avg)|2, 2, 2| |Memory (System)|16.00GB (0.32GB free)| |Process Argv|| |Screen Reader|no| |VM|0%| </details> <!-- generated by issue reporter -->
---
Título: Language Status popup commands/links stop working after an update is received and it shows outdated text (until it's closed/re-shown)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes (but you need an extension like the C/C++ extension that updates the language status info).  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: Version: 1.89.0-insider (user setup) Commit: ed6c6d3f28fa4cb66f6d73918365e41fb81db14c Date: 2024-04-08T05:50:44.055Z Electron: 28.2.8 ElectronBuildId: 27744544 Chromium: 120.0.6099.291 Node.js: 18.18.2 V8: 12.0.267.19-electron.0 OS: Windows_NT x64 10.0.22631  Steps to Reproduce:  1. Hover or click on the language status icon for a language extension like C/C++. 2. Click a command in the language status that causes a status change like a Rescan.  Bug1: See the screenshot -- the main status bar updates its busy state correctly but the popup status UI doesn't refresh until it's made hidden/visible again, i.e. the top screenshot shows a stale "complete" state and the bottom screenshot shows a stale "updating" state. This could confuse users who expect the popup to have updated info. This is a regression from an earlier version, not sure which.  <img width="180" alt="image" src="https://github.com/microsoft/vscode/assets/19859882/f7b394dc-acbf-4031-b210-6342ef39de2b">  Bug2 (more severe issue): Also, after an update for the language status is received, the commands/links in the UI stop working when clicked -- this appears to have the same root cause as bug 1, because it looks like the popup UI becomes readonly after the update. From the user's perspective (who may not visibly see any update change due to the tooltips being updated), it appears that the commands/links don't work when clicked, e.g. if the status tooltip showing parsing percentage progress updates from 1% to 100% every second then the "Pause" command/link may never work for the user due to all the updates making the command readonly.
---
Título: Experience issue: when git actions require a password, the experience is not discoverable
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:   Steps to Reproduce: 1. Clone a repository housed in ADO, not GitHub. This gives you the option to Generate credentials: e.g.  ![image](https://github.com/microsoft/vscode/assets/99359352/b61e0f97-efe0-441b-804c-99aa993e2cb7)  2. Try to take a git action that requires auth. Observe that a small little window to enter password shows at the top. It is super not-discoverable and easy to miss, and I end up waiting for a while for something like _git pull_ to happen when its actually waiting for input from me. ![image](https://github.com/microsoft/vscode/assets/99359352/3ba045b5-57df-4f63-b679-eb1744598be2)
---
Título: Reconsider UX for loading for AI Results
Descripcion: <img width="1235" alt="image" src="https://github.com/microsoft/vscode/assets/31675041/5a191f37-c630-4b03-8497-4e63d21e6b87">  We currently have a pop-up that shows that AI results are loading. I wanted to put a special loading notification, since AI results usually take a bit longer to generate, but I would rather have something in-view.
---
Título: Could you please include an option in the settings to adjust the size of the file icons in the left-hand file navigation bar
Descripcion: Type: <b>Feature Request</b>  Could you please include an option in the settings to adjust the size of the file icons in the left-hand file navigation bar? Currently, they appear quite small and tightly spaced. While I understand that zooming the entire window could enlarge the icons, it also increases the size of the text in the editing view, which isn't ideal for me. Thank you for your consideration.  VS Code version: Code 1.87.1 (Universal) (1e790d77f81672c49be070e04474901747115651, 2024-03-06T00:23:16.418Z) OS version: Darwin arm64 23.0.0 Modes:   <!-- generated by issue reporter -->
---
Título: Weird looking Output selector menu
Descripcion: - [ ] 1. The font size of the the menu log selector in the Output view is too small. This makes the text look uncentered vertically. - [ ] 2. The separator is just a bunch of dashes "---" instead of a native separator. This is not good for accessibility.    It's possible that a smaller font size was chosen to be able to see more items in this relatively long menu. But that doesn't work in this case on macOS as the menu item height is still the same, so there aren't more items displayed than before.   If a more compact menu is desired, it's better to set the [NSControlSize](https://developer.apple.com/documentation/appkit/nscontrolsize) on macOS, instead of changing the font size. This will actually allow more menu items to be shown at the same time.  Here's a screenshot showing the text misalignment compared to a regular menu (right).  <img width="943" alt="image" src="https://github.com/microsoft/vscode/assets/103326/f23d81d3-e6d9-4932-b2ad-ad3da29a9953">   https://developer.apple.com/documentation/appkit/nscontrolsize   <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.88.0-insider  - OS Version: macOS  Steps to Reproduce:  1. On macOS, open the Panel and click the Output tab. 2. Notice misaligned text and non-native separator.
---
Título: Alt - Tab / Cmd Tab Color Tag
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> When working with multiple projects and multiple windows are open in different screens, it is hard to find the target window when making alt - tab.  As of now one possible solution is using an extension like peacock but this time, when the window is active the color is becoming distractive.  A possible solution can be to have a small color tag, which is to be seen only when the window is being seen in alt - tab thumbnails. An alternative method can be the color tag to be active when the window does not have a focus.  The color tag can be placed anywhere on the window as long as it is visible when the alt - tab is showing a thumbnail.
---
Título: SCM - Hidden local changes indicator "*" in "source control repositories" view
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  Version: 1.87.1 (system setup) Commit: 1e790d77f81672c49be070e04474901747115651 Date: 2024-03-06T00:21:36.258Z Electron: 27.3.2 ElectronBuildId: 26836302 Chromium: 118.0.5993.159 Node.js: 18.17.1 V8: 11.8.172.18-electron.0 OS: Windows_NT x64 10.0.19045 - OS Version: Versión 22H2 (compilación de SO 19045.3086)  Steps to Reproduce:  1. Have a repo with local changes -> an "*" is added at the right of the branch name 2. Reduce the panel size (positioned at the right side) so that the branch name is clipped at the right (worsened with long names) 3. The "*" is no longer visible, losing the indication of existing local changes. This happens whenever the repo is not selected and its changes not shown in the source control view.  ![2024-03-15_(095048)_Code](https://github.com/microsoft/vscode/assets/26868611/e35b1c26-0104-44e3-9019-ba53ced4b48b)  Potential solutions: * Move the "*" to the left * Make it not clippable * Itegrate it with the sync button instead of appending it to the name, new icon? or could just be it * Repos with changes could also be colored differently  Best regards!
---
Título: Support controlling whether edits are pre-ticked in WorkspaceEdits with needsConfirmation=true
Descripcion: It's sometimes useful to force the user to review a preview of refactor changes before applying. This can be done with `needsConfirmation`:  ```ts const edit = new vscode.WorkspaceEdit(), const doc = await vscode.workspace.openTextDocument({ language: "text", content: "" }), edit.insert(doc.uri, new vscode.Position(0, 0), "This is inserted text", { 	label: "Insert imports", 	needsConfirmation: true, // Show preview, but also requires ticking }), edit.insert(doc.uri, new vscode.Position(0, 0), "This is inserted text", { 	label: "Update code", 	needsConfirmation: true, // Show preview, but also requires ticking }), vscode.workspace.applyEdit(edit), ```  ![image](https://github.com/microsoft/vscode/assets/1078012/b71cc538-2c66-4de2-ab26-98f43bd051b5)  However, the user needs to tick each change (at least the unique labels, which have a "Toggle Change" option on the context menu) which can be a pain if the edit is making a lot of changes that are grouped (for example fixing lint failures across a workspace, with each lint being a group).  It would be a much nicer experience if we could trigger the preview, but with everything _ticked_ by default. In many cases we know the user is _likely_ to apply all of the changes, but we still want to trigger a preview to be shown.
---
Título: SCM - Shorten branch name in Source Control view to always have the changes indicator visible when using multi root workspace
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hi,  i could not find any request like this. We are using multi root workspaces and quite long branch names. The issue is, that the changes indicator next to the branch name in source control view is not visible for long branch names until you resize the source control view and make it wide enough. This is pretty enoying. As a feature, I would like to have the branch names shortened using an ellipsis just like the projekt names. The full branch name remains visible in the tooltip. The goal is to always be able to see the changes indicator no matter how many chars the branch or project name is.
---
Título: Update listActiveSelectionBackground color
Descripcion: This change makes the hover background colour on menus brighter, so that the contrast ratio on the base menu is > 3:1.  Before: <img width="606" alt="image" src="https://github.com/microsoft/vscode/assets/103326/11af1d22-9f63-4983-8dae-a5dc92eab6a9">  After: <img width="494" alt="image" src="https://github.com/microsoft/vscode/assets/103326/8691703c-fce4-49fe-984a-5b419b861366">  I've picked `Blue 04` from our palette, but there seems to be a subtle cast applied to the menu/item that makes the new colour look slightly dimmed. I'm not sure where this comes from.  Fixes #203400.
---
Título: Chat view scroll can create visual confusion
Descripcion: Not a major issue and not unique to us, but the scrollbar ending at the input box with now clear border between the chat response and the input box had me scrolling when there was no more content.  ![Image](https://github.com/microsoft/vscode/assets/6561887/fd4fc082-463a-4daa-87b7-3c8aee765446)    2 ideas: - have a border - have "dead space" under the input to allow scrolling all the way
---
Título: Inline chat should make it more obvious when multiple code regions changed
Descripcion: When inline chat changes more than one hunk it just shows "N changes". We should make that more explicit, e.g that it is todo-list-like and something that we need to accept explicit per change
---
Título: Improve rendering of inline chat
Descripcion: This issue about improving the rendering of non edit outputs and follow up actions. We should try to align more with panel chat but keep (or improve on) the lightness of inline chat. Things that we should do/explore  * [ ] render other files that are pulled in as context * [ ] improve the looks of follow up actions * [x] make the initial inline chat widget more lightweight * [x] make the inline chat widget scrollable (today there is a single expand/collapse action) * [x] re-use (and adjust) more rendering of panel chat * [x] explore alternative places for the feedback buttons
---
Título: Collapsed markdown cell icons misalignment
Descripcion: What it looks today ![image](https://github.com/microsoft/vscode/assets/876920/0017fd4e-72ea-49b0-8efb-c4146bc2b6a9)  maybe we can adjust the gutter border, position of the collapse info text to make it look better  <img width="450" alt="image" src="https://github.com/microsoft/vscode/assets/876920/ac596265-4610-4a1c-a0a2-6863c5916798">
---
Título: voice chat: Fix mic icon centering in all contexts
Descripcion: This fixes the mic icon misalignment at the icon level so that it looks good in every context (panel/inline/other).  Closes https://github.com/microsoft/vscode/issues/205541. Related https://github.com/microsoft/vscode-codicons/pull/228 Tweaks for https://github.com/microsoft/vscode/pull/205891.
---
Título: Prompt input field extends beyond common padding
Descripcion: <img width="673" alt="image" src="https://github.com/microsoft/vscode/assets/103326/4edf25ed-83cf-4bd3-802c-f79106177010">
---
Título: Chat action items should vertically align to top
Descripcion: In VS Code action items inside inputs are vertically aligned to top, in the Chat features they are centered in the middle. This happens when putting in a lot of text or pressing Shift+Enter.  Panel: <img width="425" alt="image" src="https://github.com/microsoft/vscode/assets/103326/6a32ad8b-1522-4573-ae44-4b171f90b7bb">  Inline: <img width="608" alt="image" src="https://github.com/microsoft/vscode/assets/103326/3f122090-951a-4a08-8b91-c9ff709b5905">  Quick: <img width="621" alt="image" src="https://github.com/microsoft/vscode/assets/103326/de3732d0-d342-4f66-8be0-a5dc248784b6">  For Inline and Quick the action items to the right of the input box should also stick to the top.
---
Título: Voice animation is no longer centered
Descripcion: ![image](https://github.com/microsoft/vscode/assets/900690/a4fb3d6b-dcb5-4f80-aa42-7b4a6617ae87)
---
Título: Suggest Widget: Show Details For Selection Under Cursor
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> ![Views](https://komarev.com/ghpvc/?username=r-microsoft-vscode-issues-205467&label=Views:)  In the suggest widget, show the details (documentation) for the suggestion **underneath** the **cursor**.  Currently, you have to use the **arrow keys** (<samp><kbd>↑ Up Arrow</kbd></samp> and <samp><kbd>↓ Down Arrow</kbd></samp>) to navigate the suggestions, which can be quite limiting especially when there are lots of suggestions, and you want to quickly browse through them.  ![GIF of scrolling using keyboard, then attempting to use cursor to navigate](https://github.com/microsoft/vscode/assets/115815794/0400e378-6e09-4426-8688-bbcbb11a051e)
---
Título: Hover: make it more compact
Descripcion: With the custom hover now making appearance everywhere in the workbench UI, I think we should try to make it a bit more compact. Previously I had reported as https://github.com/microsoft/vscode/issues/107278 but I think `13px` is still too large and there is a lot of empty space as well.  I suggest to find the sweet spot between native hover size and custom hover size.  <img width="213" alt="image" src="https://github.com/microsoft/vscode/assets/900690/2f85ea6d-7320-4418-9553-f6fc5c431a0d">
---
Título: Multi diff editor: remove left/right margins
Descripcion: The new "card" layout for the multi diff editor seems foreign to the typical UI we have in VS Code that tries to avoid borders and tries to maximise screen real estate.  <img width="534" alt="image" src="https://github.com/microsoft/vscode/assets/900690/887f9c5f-4596-43da-88fc-12ecc420fe6a">  I suggest to experiment with removing the margins/paddings on the left hand side and remove the vertical border as well. You will get a natural border from the side bar or the activity bar.
---
Título: Git's Fetch and Pull buttons on SCM Incoming section are hard to differentiate
Descripcion: On the left is Fetch and on the right is Pull. The broken line on the arrow shaft is all I'm seeing different on the first compared to the second.  ![image](https://github.com/microsoft/vscode/assets/6726799/511da214-4005-4901-85eb-937e3b60eebb)   VS Code version: Code - Insiders 1.87.0-insider (442c133fe92b5e2606c8242caae4e68938faccc7, 2024-02-01T09:49:33.086Z) OS version: Windows_NT x64 10.0.22621 Modes:   <!-- generated by issue reporter -->
---
Título: Update panel and auxiliary bar action titles
Descripcion: Rename "Close" verb to "Hide" to prevent confusion that the panel contents could be lost. Same for the secondary side bar. Closes #203184.  <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->
---
Título: Git - Display blame information in the editor gutter
Descripcion: This was first requested in https://github.com/microsoft/vscode/issues/2248, way back in 2016.  It was closed with a "fix it yourself with an extension" (ie. "we think the functionality you're asking for is great for a VS Code extension") ... however, in the eight years since it was filed, no one has created such an extension.  It's not for lack of desire: multiple authors have tried to do it, and they all opted for a crappier version.  For instance, the "Git Blame" extension let's you see only a single line's blame (and it's not in the gutter, it's in the status bar).   But look, the basic `git blame` UI is perfect already!  It's basically exactly like VS Code's UI, but with the `git blame` meta info shown on the leftside.  Back in 2016 42 people desired this simple functionality: by now that number has to be in the hundreds, if not thousands.  This feature:  * would benefit all git-using devs (ie. virtually all VS Code users) * it requires functionality that (evidently) no one has been able to replicate in an extension * it belongs as a core part of VS Code
---
Título: Default background color for multi-file diff editor is out of place
Descripcion: Testing #203075  It's too dark in both Light and Dark theme.  <img width="2029" alt="image" src="https://github.com/microsoft/vscode/assets/22350/80331899-2916-415a-b639-5d4eb9c4adbf">  <img width="2029" alt="Screenshot 2024-01-24 at 11 13 04" src="https://github.com/microsoft/vscode/assets/22350/8446bce9-dfdb-4933-83b0-6dc07f59a622">  ---  💡 Why not simply reusing the sidebar background color?  <img width="2029" alt="image" src="https://github.com/microsoft/vscode/assets/22350/b3b8899f-1b39-4480-b22e-233ca248d583">  <img width="2029" alt="image" src="https://github.com/microsoft/vscode/assets/22350/0085b434-60df-45ff-ae49-fc1f68fec44f">
---
Título: Allow resize for "outgoing/incoming" section
Descripcion: Testing #203075  Not sure if it's just me, I often find the "outgoing"/"incoming" section positioned pretty low in the sidebar (when there are quite some pending changes), I always attempt to click on the sash above the "outgoing/incoming" section to resize it. But then later on realize that it's not a traditional tree view we have so I can't resize, or drag it to move to other places.
---
Título: Inline chat UI cropped
Descripcion: * open inline chat for non-indented lie * its cropped on the lhs  <img width="108" alt="Screenshot 2024-01-23 at 11 09 08" src="https://github.com/microsoft/vscode/assets/1794099/0c7f72e7-50a7-4913-82fb-31960a01997d">
---
Título: Allow file locations to be ordered in peek menu
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Hi,  I have made an extension ([source code](https://github.com/SnowSzn/rgss-script-editor)) allows you to use VSCode as an editor for game projects made in RPG Maker engine.  Currently, this extension allows to launch, from VSCode, the game executable and in case an exception kills the game, it shows information about the error with its corresponding backtrace.  When the game exits, the extension processes the exception information and creates an object with the name, the message and a backtrace array with the paths and lines of the files.  I am currently using the ``editor.action.peekLocations`` command to display the locations of the error backtrace.  ```txt editor.action.peekLocations - Peek locations from a position in a file      uri - The text document in which to start     position - The position at which to start     locations - An array of locations.     multiple - Define what to do when having multiple results, either peek, gotoAndPeek, or goto ```  The problem I have is that, all the locations in the peekLocations menu are sorted alphabetically, with no possibility to change it (I think), here's an example of what I mean.  ![imagen](https://github.com/microsoft/vscode/assets/134753051/fcd6ead6-8aed-43ce-8873-b4f7c759ad40)  As you can see in the image, the locations inside the peek menu on the left are all ordered by the file URI, and they do not match the order of the backtrace array (on the right).  The ``editor.action.peekLocations`` command is called as follows with the ``exception`` instance shown above:  ![imagen](https://github.com/microsoft/vscode/assets/134753051/b0edadad-aa9a-42b3-86f5-8cdc0c36155c)  I'm currently running VSCode version 1.85.1.  Is it possible to allow passing an optional argument that is a sort function to the command, to order the locations?  In case it is not provided, the current alphabetical ordering method could be used.
---
Título: [PROPOSAL] Suggest Widget: Have a Custom Text Colour Per Type (Flavour III)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  ## Describe the feature  Since you can customise the colours for the suggest widget icons in `"workbench.colorCustomizations"` using the `"symbolIcon"` settings (e.g. `"symbolIcon.classForeground"`,  `"symbolIcon.fieldForeground"`, etc.), for consistency, you should also be able to customise the **foreground colour** of the text.  ---  ## Remarks  ### Settings  Suggested Name | Type --- | --- <samp>symbolIcon.fieldTextForeground</samp>, <samp>symbolIcon.classTextForeground</samp> etc. | <kbd>color</kbd>  ### Other  This is part of a **set**. See also: - #202413 - #202569
---
Título: [PROPOSAL] Suggest Widget: Make Text Inherit Icon Colour (Flavour II)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  ## Describe the feature  Option to make the text in the suggest widget inherit the icon colour, instead of a single colour.  This would make more sense since the names for the colour customisations are names like `symbolIcon.nameForeground` and `symbolIcon.classForeground`, which suggest that all of it should be coloured.  ---  ## Remarks  ### Settings  Suggested name | Type  --- | ---  <samp>editor.suggest.inheritIconColor</samp> | <kbd>bool</kbd>  ### Other  This issue is part of a **set**. See also: - #202413 - #202571
---
Título: Horizontal scroll does not work in suggestion details
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.85.1 - OS Version: windows 10 22H2 19045.3930  Steps to Reproduce:  1. add keybinding to `scrollRight` command:  - `keybindings.json`: ```json [   {     "key": "ctrl+alt+right",     "command": "scrollRight"   },   {     "key": "ctrl+alt+right",     "command": "-workbench.action.moveEditorToNextGroup"   } ] ```  2. insert some code in a file 3. select a suggestion that has suggestion detail (the [quick info](https://code.visualstudio.com/docs/editor/intellisense#_intellisense-features)) with a horizontal scrollbar 4.   - a) type `ctrl+alt+right` keybinding that we have defined in the `keybindings.json`   - b) type `ctrl+alt+space` to trigger `toggleSuggestionFocus` command and move focus to the suggestion detail, and then type `ctrl+alt+right`   Results: Both 4. a) and 4. b) do not scroll right in the suggestion detail
---
Título: [PROPOSAL] Suggest Widget: Make Text Inherit Syntax Colouring (Flavour I)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  ## Describe the feature you'd like.  In the suggest widget, colour the suggestions the same colour as what they represent.  For example, suggested fields should be coloured like actual fields, suggested methods should be coloured like actual methods, etc.  ---  ## Remarks  ### Settings  Suggested Name | Type --- | --- <samp>editor.suggest.inheritSyntaxColoring</samp>  | <kbd>bool</kbd>  ### Other  This is part of a **set**. See also: - #202569 - #202571
---
Título: Python code suggests list information, horizontal separator foreground color can not be custom modified
Descripcion: Python code suggests list information, horizontal separator foreground color can not be custom modified ![2024-01-03_python_code](https://github.com/microsoft/vscode/assets/54253524/b0aaf99e-10e9-4854-945e-db04710388fd)  Hopefully the next release will fix it! Thank you very much!👍  Windows 10 VSCode 1.85.1 Python v2023.22.1
---
Título: Suggest details should be top aligned when showing above
Descripcion: * on a line towards the bottom of the view port * trigger suggest * notice how the details view is always bottom aligned * it should be top aligned as long as it isn't taller than the list  <img width="1057" alt="image" src="https://github.com/microsoft/vscode/assets/1794099/ab9a4e79-35f5-4afe-b1f9-e70946872a28">
---
Título: Workspace edit metadata `needsConfirmation` results in all checkboxes unchecked
Descripcion: The `WorkspaceEdit` that has metadata with `needsConfirmation` set to `true` shows the **Refactor Preview** which is great but all checkboxes are unchecked. I'd rather have all checkboxes checked.  I went through various git issues where showing **Refactor View** was first implemented. All screenshots show all changes check-marked. I also saw this one #144893 which also shows all changes check-marked and the request to check/uncheck a group of changes which would be useful.  However, I always have all changes unchecked and wonder how they could be all checked by default? I'd appreciate a code snippet  For example i have this: ```typescript             const edit: VSCode.WorkspaceEdit = new VSCode.WorkspaceEdit(),                  const folders = VSCode.workspace.workspaceFolders,             if (!folders || folders.length === 0) {                 VSCode.window.showInformationMessage('Open a folder first'),                 return,             }             const newFile = VSCode.Uri.joinPath(folders[0].uri, 'foo.txt'),             edit.createFile(newFile,                  { overwrite: true },                  { label: 'New text', needsConfirmation: true }             ),                  const initialContent = new TextEdit(new Range(new Position(0,0), new Position(0, 0)), "Hello World\nOne more line"),             edit.set(newFile, [initialContent]),                  VSCode.workspace.applyEdit(edit, { isRefactoring: true }),  ``` How can i make checkboxes checked for the above?
---
Título: More spacing for view icons when activity bar positioned at top
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  I personally found the icons on the activity bar hard to use/click when it's rendered at the top of the side bar, especially when comparing to xcode.  ![image](https://github.com/microsoft/vscode/assets/876920/62e21d20-6d1b-40cf-a4b4-7abf79fa3472)
---
Título: Align styling of toggled actions and toggled buttons
Descripcion: We show a maximized editor group with a toggled icon:  <img width="275" alt="image" src="https://github.com/microsoft/vscode/assets/900690/780c305a-efd4-459a-b3be-7d6808cc53ab">  Meanwhile we have an existing style for when something is toggled:  <img width="223" alt="image" src="https://github.com/microsoft/vscode/assets/900690/acf5b98f-2b1b-4a9a-906e-785e4ba1dc8e">  I think the latter is much more explicit and inviting to click, so I think we should align the former to it.  //cc @joaomoreno
---
Título: SCM Incoming/Outgoing: stick to bottom
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Heya! I'd like to have the ability to set the new `Incoming/Outgoing` section in the SCM, to be sticky near the bottom. I find it very useful but somewhat cluttered right now, as changes that aren't related to the current change are visually close to the actual current changes.  Most of the time there's more than enough vertical real estate, so it could be a nice addition that helps with visual separation of the two sections.
---
Título: Let tab content provide custom icon name
Descripcion: Right now tabs with non-file content like Settings/Extensions/PRs use the generic text file icon in the tab bar. It would improve ease of navigation if content that's not a file could provide their own icon name.  In this mockup the `extensions`, `settings` and `git-pull-request` are used:  <img width="813" alt="image" src="https://github.com/microsoft/vscode/assets/103326/9680fcb3-55dc-46b0-b62c-d1b4b49ebb0a">   <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->
---
Título: Font variation settings are not applied to code suggestion lists
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.84.2 - OS Version: macOS Sonoma 14.1.1  Steps to Reproduce:  1. Install [Geist Mono](https://github.com/vercel/geist-font/) 2. Add the following to settings.    ```json   {     "editor.fontFamily": "'Geist Mono Variable', monospace",     "editor.fontWeight": 475,     "editor.fontVariations": true,   }   ``` 3. Enter something so that the code completion list appears. 4. Observe the font weight of suggestions.       <img width="500" alt="image" src="https://github.com/microsoft/vscode/assets/2239547/5b9f7d40-4b2f-41e7-804b-78b3c615f20f">  6. In the inspector, you can see that the font-variation-settings have not been applied to the list.       <img width="500" alt="image" src="https://github.com/microsoft/vscode/assets/2239547/c913fceb-fb4f-4462-a262-54266102445e">
---
Título: Hover block highlight design consistency
Descripcion: We currently have a few places where hovering shows a line to the left, it would be good if these were all consistent:  Markdown preview (hover):  ![image](https://github.com/microsoft/vscode/assets/2193314/42d34728-7dea-484c-9bac-10499a98cbff)  Terminal command (hover):  ![image](https://github.com/microsoft/vscode/assets/2193314/785d4414-e470-45f5-b3d5-d6ae977f6b7a)  Terminal command navigation (focus)  ![image](https://github.com/microsoft/vscode/assets/2193314/79cec703-9a9c-4d67-b493-1ef801313ec7)  Notebook block (hover)  ![image](https://github.com/microsoft/vscode/assets/2193314/e73cfbd2-5d6a-4e52-8867-cbfe39ef10e5)  Notebook block (focus)  ![image](https://github.com/microsoft/vscode/assets/2193314/c039d436-076c-4d3b-ba26-20273a9bdacf)  Settings editor (hover)  ![image](https://github.com/microsoft/vscode/assets/2193314/2b173948-6398-4a39-8e44-2ddd70c46ee9)  Settings editor (modified)  ![image](https://github.com/microsoft/vscode/assets/2193314/21d60bde-211c-4923-8919-0984a9c92b66)  Settings editor (focus)  ![image](https://github.com/microsoft/vscode/assets/2193314/64713851-b175-4617-bf43-c7f82bdbdaa5)  ---  Similar highlights but probably shouldn't change:  Tree indent guide (hover):  ![image](https://github.com/microsoft/vscode/assets/2193314/a31d20a2-a624-473e-9329-3bda6b8d5400)  Tree indent guide (focus):  ![image](https://github.com/microsoft/vscode/assets/2193314/46fc0038-e460-4f1f-ad5e-2f8778a7546a)  Editor current indent guide (focus):  ![image](https://github.com/microsoft/vscode/assets/2193314/e262759b-cc98-489b-882b-d33d70089ef2)
---
Título: Intellisense with overlapping completion option list and current completion option details
Descripcion: Type: <b>Bug</b>  The intellisense window is overlapping the selected option details with the list of options itself when the cursor is positioned in code that is at the bottom of the screen. This behaviour was tested with C and C# and thus doesn't seem to be related to the extensions themselves. Below, some example images and suggested steps in order to reproduce the behaviour.  Thanks in advance!  ## Sample 1 - Current line at the top  ### Steps  1. Type something to trigger the intellisense completion (with the current source code line positioned at the top). 2. Press the up arrow key to go to the last completion option. 3. Both the completion option and its details are visible.  ### Results (C#)  ![20231130084901](https://github.com/microsoft/vscode/assets/29714040/d78c69dd-d861-4378-813b-6ad603d7ab1f)  ### Results (C)  ![20231130085227](https://github.com/microsoft/vscode/assets/29714040/233a6c4f-c633-4342-92ce-f87ca795e745)  ## Sample 2 - Current line at the bottom  1. Type something to trigger the intellisense completion (with the current source code line positioned at the bottom). 2. Press the up arrow key to go to the last completion option. 3. The completion option overlaps with its details.  ### Results (C#)  ![20231130084926](https://github.com/microsoft/vscode/assets/29714040/ba730a2f-5433-40d6-ac51-7ab0007aca02)  ### Results (C)  ![20231130085240](https://github.com/microsoft/vscode/assets/29714040/6fa4c79f-3480-4a55-ab86-bee69a35f57a)  VS Code version: Code 1.84.2 (1a5daa3a0231a0fbba4f14db7ec463cf99d7768e, 2023-11-09T10:50:47.800Z) OS version: Linux x64 6.1.0-13-amd64 Modes:  <details><summary>Extensions (3)</summary>  Extension|Author (truncated)|Version ---|---|--- csharp|ms-|2.12.19 vscode-dotnet-runtime|ms-|2.0.0 cpptools|ms-|1.18.5  (2 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Suggest details sash can be hovered even when there are no suggest details
Descripcion: Just typing in a plaintext file and moving the mouse over the empty area makes the sash react to the mouse over / become active:   <img width="846" alt="image" src="https://github.com/microsoft/vscode/assets/5047891/96814a18-077d-4a31-995a-1405b143c8e8">
---
Título: Align inline chat widget with gutter
Descripcion: We should tweak the position of inline chat, decide on whether is moves (intent, outent) after receiving a response where to align it, e.g aligning it with changed lines as @hbons suggests  ![image](https://github.com/microsoft/vscode/assets/1794099/b0f8e325-93df-49f8-b3e3-a820fcf542fc)
---
Título: Git - Docs for commiting via multi-line git are unclear on how to finish the commit
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:   Steps to Reproduce:  1. Open the git view in vscode (ctrl-shift-G) (assuming you are working within a Git repo) 2. Click on the commit button to reveal the multiline commit message editor. 3. Fill in your multi-line message for the commit. 4. Save the editor (nothing seems to happen except the usual save action) 5. There is no UI clue that tells you that you can/must close the editor to submit the commit message to finish the commit.  The docs don't seem to call this out either.  Took me a long time before I realized I could finish the commit this way.
---
Título: Don't hide useful information from the suggestions list
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> When the suggest list contains several similar entries, not all information fits unless you increase the width of the list a lot: <img width="343" alt="image" src="https://github.com/microsoft/vscode/assets/2737650/94023e0a-9489-45a2-936f-ebd7672df089"> In this case, the most useful information I'm looking for is exactly what's missing. I think with the path the most useful info is always at the end, so it would make sense if hide the start, not the end of the path.  With the class name this is a bit more difficult, because the most useful information is not always at the end. But an alternative fix could be to place the name and path on two separate lines, which would look something like this: <img width="343" alt="image" src="https://github.com/microsoft/vscode/assets/2737650/e71fd039-9de9-48c2-a654-110fcfe4960c">  Ideally this would be a user preference of course, or maybe only entries that don't fit should be rendered like this.
---
Título: Aux window: provide more ways of entering into aux windows
Descripcion: As the aux window support has reached a good point, Thanks to @ bpasero for his amazing work, I think the public release is getting closer and closer. Although users can open a new aux window with a command or from the tab context menu, more user flows can be considered. I'll list some possible places where users might want to open a new window.  ### Open a new window: ![image](https://github.com/microsoft/vscode/assets/75252297/b6114898-d6a7-417b-8f43-365ea7216592) ### Open a file in a new window from quick open: ![image](https://github.com/microsoft/vscode/assets/75252297/81f703a7-1837-4a51-97de-fe0559878dc2) ### Open a file in a new window from the explorer: ![image](https://github.com/microsoft/vscode/assets/75252297/928022d4-e7a4-4b76-ad1c-42b2c4c7dd7f) ### Open a file in a new window from a link: ![image](https://github.com/microsoft/vscode/assets/75252297/49bbcb8a-05cc-4d92-b3cc-20084c706407) #### Move into a new window from the tab context menu This is already implanted but maybe considering changing the position?! For example, putting in keep open, pin section
---
Título: SCM incoming/outgoing changes UX feedback
Descripcion: Having now selfhosted a bit on incoming/outgoing changes I felt that the view "With changes" feels a bit off: `Incoming/Outgoing` shows in smaller font making it look inbalanced  I wonder if we should simply try to have a node like `Changes` so that the tree is balanced again.  With changes:  ![image](https://github.com/microsoft/vscode/assets/900690/42ffd886-89de-4329-9a16-34957624b375)  Without changes:  ![image](https://github.com/microsoft/vscode/assets/900690/e1bd1726-88f1-49f0-b598-66fab199a129)
---
Título: Incoming/outgoing looks too heavy
Descripcion: There is a lot of blue on the screen, also some low contrast items inside the blue bar  <img width="418" alt="Screenshot 2023-11-13 at 17 43 08" src="https://github.com/microsoft/vscode/assets/1794099/ab38f4ec-249d-4e75-9d04-4c43c70b43b5">
---
Título: SCM - gutter click area is smaller than its visual appearance
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.84.2 (user setup) Commit: 1a5daa3a0231a0fbba4f14db7ec463cf99d7768e Date: 2023-11-09T10:51:52.184Z Electron: 25.9.2 ElectronBuildId: 24603566 Chromium: 114.0.5735.289 Node.js: 18.15.0 V8: 11.4.183.29-electron.0 OS: Windows_NT x64 10.0.19045  Steps to Reproduce:  1. Increase `scm.diffDecorationsGutterWidth` to max (5 at this time) 2. Try to click on the rightmost or topmost edge of a gutter decoration  Expected: Gutter popup opens Actual: Noop  ![gif](https://github.com/microsoft/vscode/assets/373675/38abda70-9403-499f-af45-557b539c8e7b)  I don't know if step 1 is required.   To be honest, I think it would be even better to expand the gutter click area beyond the visual border.
---
Título: debug console stylings and features, better log-row separation
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> As I'm kinda forced to using VSCode on MacOS for .NET development as Visual Studio for Mac is being cancelled in a year. It would be nice to see the debug console to have some more stylings in it. now it is just a bunch of nonsense in a constant flow. I would like to see some separation between the rows of logs. Features I would like to see in it would be:  - indentation of the single log text when it goes over to next line. This would make it easier to see where one log starts and where one log ends. - timestamps at the start of the log row. - log type as text: information, error, warning, etc. at the start of the log row. - every other log with different color background to make them even more easier to separate from each other. - toggling row-wrap on and off  these could be toggle-able settings, so if you don't want to use them, hide them.  I know there is this hover over bg color or is it just a highlight, but that only works when you put mouse over the content. It is not really that useful in a long log content, but at least it helps a little.  Some logs do output timestamp and log type. these could be highlighted with different color if possible. Or just kept as is and not even parsed out and just add the extra timestamp and log type there doesn't really matter. <img width="1439" alt="Screenshot 2023-11-09 at 9 51 47" src="https://github.com/microsoft/vscode/assets/10487241/643b0917-08d5-44ab-9d1f-0a24b5462508">
---
Título: Global list styles prevent disabling colors
Descripcion: We set up this stylesheet of global css rules that apply to all lists: https://github.com/microsoft/vscode/blob/7d2c73944dba9e957ccc52557be681f5a7ae0cb0/src/vs/platform/list/browser/listService.ts#L82-L83  We also set up rules per-list, which usually override the global rules  <img width="429" alt="image" src="https://github.com/microsoft/vscode/assets/323878/ce20f51e-2c01-468e-bbbc-88b0aae83570">  and so I have never understood what the purpose of the global rules are. If I try to disable a style rule by setting a style to `undefined` in `overrideStyles` when I create my tree, then the per-list rule is gone but the global list rule still applies, so I can really only override it with my own `!important` rule. This has caused issues in notebooks and chat, and after talking to @aeschli about it I noticed that it shows up in the problems view with this black lightbulb as well  <img width="142" alt="image" src="https://github.com/microsoft/vscode/assets/323878/d6953aab-0683-4e7a-bb4c-fbc1f3b69004">  and in chat we have to work around it for the avatar codicon and our toolbars  <img width="395" alt="image" src="https://github.com/microsoft/vscode/assets/323878/139d4400-9051-4f62-bf07-103db6916bcd">  so I want to find out what the purpose of the global list rules is and whether we can get rid of it. Do you know @joaomoreno?
---
Título: Windows 11 mica blur theme
Descripcion: I tried extensions for blur effect on vs-code but it transitions problem when switching to the next virtual desktop. It would be better if  vs-code had a built-in blur theme resembling the windows 11's mica effect.
---
Título: Consolidate and update built-in walkthrough content
Descripcion: I observe a few bits of low-hanging fruit that we could go after to improve the built-in walkthroughs. As they stand today, I noted that: - 3 distinct walkthroughs feels like a lot—and is probably asking for a big drop off after the first one - New user pain points (getting started content, pointer to settings) are buried  What if we consolidated the 3 walkthroughs into 1 or 2, and had a pointer to docs/YouTube/etc. for some of the additional content? We could also pull up steps related to intro videos and settings as part of the changes.  cc @bhavyaus
---
Título: Stop button makes the generate commit message feel heavy
Descripcion: When I click on the sparkles ✨ to generate the commit message, it turns to the Stop icon. This makes me think this whole operation is heavy. Why would I need to stop it?  I suggest that we do not change the icon. But instead users can press Esc to cancel it.  I think we have the same pattern in the PR extension. Thus adding @alexr00 to hear her thoughts as well  @bpasero also removed the transition to Stop for the mic.  fyi @joaomoreno
---
Título: Intellisense suggestion description formatting requests
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Currently in VSCode, at least with snippets, if the description of a snippet exceeds the width of the panel, it will cause a line break after the last character it can fit, which can make reading descriptions a bit hard. I think at the very least there should be an option to cause these descriptions to do a line break only in whitespace where possible  example: "float" in description cut in half and placed on 2 different lines ![image](https://github.com/microsoft/vscode/assets/46549454/47565516-33c4-4a3d-afb2-ef57f1f201f6)  mockup of what I would like: ![image](https://github.com/microsoft/vscode/assets/46549454/92fd8b91-8ef4-4a1c-8d9f-011298eab34f)  Alternatively, a way for snippet descriptions to have newlines would be allow me to workaround this issue, at least on my personal end.
---
Título: Comments sync/resume is flaky and has unexpected UX
Descripcion: Testing #193104  This is probably unrelated to the comments component and maybe more an issue for cloud changes in general.  I was testing with 2 windows machines opening a PR and seeing if comments synced. I only got this to work once, and its hard for me to know why it failed in some other cases.  **Things to consider:** * this should not require me to do a change to a file for the sync of comments to work (sounds like a bug) * I want to enable sync once and then it should work, I would not want to store/resume changes as a user action each time I switch machines  All in all I would expect this to work like settings sync: in the background ✅
---
Título: branch name conceals folder name
Descripcion: Type: <b>Feature Request</b>  in source control the branch name hides folder name. Solution would be to put it in second row, please fix it soon  VS Code version: Code 1.83.1 (f1b07bd25dfad64b0167beb15359ae573aecd2cc, 2023-10-10T23:45:31.402Z) OS version: Linux x64 5.15.0-87-generic Modes:   <!-- generated by issue reporter -->
---
Título: Consider to have Tab bar related options in the view menu
Descripcion: I suggest to have the sub-menu with the 3 options also in the view menu "Appearance"  <img width="532" alt="image" src="https://github.com/microsoft/vscode/assets/900690/d39bfea3-5bfa-4a32-a89e-5a8a2bbc4f16">
---
Título: Show Restore Panel Size Icon as toggled, aligning with toggle Maximize Editor Group
Descripcion: We now draw a toggled icon when an editor group is maximized:  <img width="455" alt="image" src="https://github.com/microsoft/vscode/assets/900690/6feed9af-988b-43b6-94b0-58a4c8048e42">  I wonder if we should simply adopt the same style for a maximized panel. Which currently shows an arrow down icon:  <img width="180" alt="image" src="https://github.com/microsoft/vscode/assets/900690/2611e405-75bc-4f86-883e-fe22d03a7e67">   //cc @Tyriar @sandy081
---
Título: Panel badge should adopt style of activity bar
Descripcion: They now look quite different:    ![Image](https://github.com/microsoft/vscode/assets/900690/24b8ef96-f0c2-4445-951f-e3ed26a40d73)   I would suggest a consistent style and color for all.
---
Título: Provide an option to make scrollbar on suggestion list always visible
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Although I have set `"editor.scrollbar.horizontal": "visible"` and `"editor.scrollbar.vertical": "visible"`, the scrollbar on suggestion list is still fading unless mouse over.  **Scenario**  This is how suggestion list looks like when I start typing `"`, which makes me think `selectionHighlight` is the first available config option:  ![image](https://github.com/microsoft/vscode/assets/43232804/23a79444-4d23-4424-987e-36de63f44552)  But it's actually in the middle of suggestion list:  ![image](https://github.com/microsoft/vscode/assets/43232804/8ccf5c60-01dc-4d15-8a47-dbb8452aa0b1)
---
Título: Top Activity Bar: View header in separate row
Descripcion: For secondary side bar OR top activity bar, this will prevent multiple clicks on overflow button. I don't have problem to enable this at least behind a flag.  ### Before (now): ![image](https://github.com/microsoft/vscode/assets/132141463/2b4ae1b0-b567-4055-b7b1-09dcaaeb924e) ### After: ![image](https://github.com/microsoft/vscode/assets/132141463/4feeb155-1cce-4ebf-8d0d-742bd7c12cd8)
---
Título: Button and placeholder text overlap
Descripcion: * have a long branch name * hover to see the toolbar * 🧀 there is some overlap  <img width="437" alt="Screenshot 2023-10-17 at 10 57 15" src="https://github.com/microsoft/vscode/assets/1794099/506b41c6-1ac9-4f2e-9eac-6933addeda3c">
---
Título: [Bug] Sparkle icon appearing very close to commit text
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  ``` Version: 1.84.0-insider (Universal) Commit: f1c3b1dcf85e3b6ddb24b7dce0e4b122e8ce6233 Date: 2023-10-17T05:38:23.658Z (3 hrs ago) Electron: 25.8.4 ElectronBuildId: 24154031 Chromium: 114.0.5735.289 Node.js: 18.15.0 V8: 11.4.183.29-electron.0 OS: Darwin arm64 23.0.0 ```  Steps to Reproduce:  1. Open a PR and make a change, go to the Source Control view 2. Type a message and notice that the text appears very close to the sparkle icon :bug:  Here is a gif showing the bug  https://github.com/microsoft/vscode/assets/61460952/015f97c0-b0d8-4c49-9849-3c43f47e9e9b
---
Título: Completion widget assigns too much space to details and not enough to the completion item label
Descripcion: I have my completion list fairly wide, but here I can't see the item I'm completing because of the detail on the right:  ![image](https://github.com/microsoft/vscode/assets/1078012/b8971fbd-69a7-4e1b-8817-dabdc5cab7c4)  I appreciate something needs to be truncated, but I feel like the proportions here might not be the best.
---
Título: Keep custom title toolbar to one menu
Descripcion: Looks like we now have a second menu in the custom title for gear and profile icon when activity bar is compact. I think we should rather try to have 1 menu and then use separators within to group actions. This would also avoid potentially having multiple overflow menus.  //cc @jrieken @joaomoreno
---
Título: Top activity bar can sometimes intermix with view title actions
Descripcion: In certain sizes the activity bar can intermix with the title actions. Two things: * Can we have some minimal width between them, just so they do not look like one giant toolbar? * Are they vertically aligned? Looks to me like the explorer actions are a bit higher. Might be just optical illusion due to the icon design  ![Screenshot 2023-10-10 at 17 03 27](https://github.com/microsoft/vscode/assets/1926584/f798b314-1526-41b2-8d75-a85974055737)
---
Título: Support activity bar on top when title bar is not shown
Descripcion: I like that when activity bar top is set that we move the Settings and Accounts to the title area. However, if I do not have title area enabled, we do not show these actions anywhere?  My concern is that a lot of users do not have title area enabled, and now they might start missing on VS Code updates. I think we need a solution for those users as well.  ![Screenshot 2023-10-09 at 11 35 05](https://github.com/microsoft/vscode/assets/1926584/ae261126-a6cf-4398-97e5-5b214d1e7134)
---
Título: Activity bar top: double '...' can cause confusion
Descripcion: Move activity bar to top If I do not have enough horizontal space we will render double '...' This can cause confusion. I know this problem already exists in the panel, but here we have much less horizontal space and I expect it to happen more often.  Can we have a better ux solution here? Should we somehow merge these two menus?  ![Screenshot 2023-10-09 at 11 18 47](https://github.com/microsoft/vscode/assets/1926584/bc1298ff-e0e7-4cce-ab39-37c94b310aaf)
---
Título: Badge decoration in Activity Bar top needs UX love
Descripcion: Move activity bar to the top. Notice how the badge decoration is the same size as any activity bar icon, and looks like a separate entry.  I think we need to make it look more aligned with the viewlet it belongs to (in this case SCM), and potentially make it smaller so users know it is a badge.  ![Screenshot 2023-10-09 at 11 11 39](https://github.com/microsoft/vscode/assets/1926584/278aaa69-65a6-4c9b-8b95-5aaf99b15371)
---
Título: Theme colour applied to SVG icons
Descripcion: Type: <b>Bug</b>  The Flutter extension (as well as many other extensions) put extra icons in the debug controls:  <img width="543" src="https://github.com/microsoft/vscode/assets/2157285/24732cea-03c9-4fdd-a0ce-a066ea58dac0">  Now that the controls can be placed on the command center (#192592) it seems that some of them break:  <img width="750" src="https://github.com/microsoft/vscode/assets/2157285/3ae0d013-bc83-4954-9f98-bd8145b73f24">  I don't know if this is something that the author should fix or it is due to the changes in the vscode (Perhaps @DanTup should have a look as well) but I think its a breaking change that effects many other extensions as well.   VS Code version: Code - Insiders 1.83.0-insider (4268e464763087044d0c1b5bdd37ebbe683cadfa, 2023-09-29T20:44:05.310Z) OS version: Darwin arm64 23.0.0 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Apple M1 (8 x 24)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled| |Load (avg)|3, 3, 3| |Memory (System)|8.00GB (0.09GB free)| |Process Argv|| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (13)</summary>  Extension|Author (truncated)|Version ---|---|--- Bookmarks|ale|13.4.1 dart-code|Dar|3.75.20231002 flutter|Dar|3.74.0 copilot|Git|1.121.461 copilot-chat|Git|0.8.2023092902 todo-tree|Gru|0.0.226 comment|kar|23.3.0 justifier|kar|0.0.5 moves|kar|1.0.1 theme-karyfoundation-themes|kar|34.3.0 virtuous-vscode|kar|0.0.7 code-spell-checker|str|3.0.1 tldraw-vscode|tld|2.0.11   </details> <!-- generated by issue reporter -->
---
Título: Gear overlay over profile icon is a bit strange
Descripcion: I wonder if we should not overlay here:  ![Image](https://github.com/microsoft/vscode/assets/900690/1d0cbc12-d034-4d94-a2c8-9ea0c2d32a31)  My understanding is that this is the only place where we show the profile icon but then its always overlayed with the gear which is quite large. I think people can make the connection that the location of the button is for settings.
---
Título: SCM Sync: Consider showing short diff, per commit and file
Descripcion: Testing #194016  We currently show `2 files changed, 8 insertions(+), 11 deletions(-)` only in the `All Changes` group, and nothing for commits and files:  ![Image](https://github.com/microsoft/vscode/assets/22350/99aec3dd-601d-4651-b904-9e407c77609b)  I would suggest simplifying and unifying this information, showing it on all 3 levels. A short label like `+8 -11 (2)`. The user should be able to hover this label and see the full description of it.
---
Título: It's a little too easy to dimsiss the icon picker
Descripcion: Testing #194038  ![Recording 2023-09-26 at 08 58 22](https://github.com/microsoft/vscode/assets/38270282/a038da52-a61e-4995-b570-acb998b1d923)
---
Título: SCM - Visually distinguishing Staged Changes from Changes in Tree View
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.82.2 - OS Version: macOS 13.5.2  It's difficult to distinguish Staged Changes from Changes in Source Control sidebar in Tree view. This has been raised several times before, most relevant was https://github.com/microsoft/vscode/issues/102473 but that was swept into an existing discussion about a larger change that was only partially relevant.  Simplest proposal:  ```css [role="treeitem"][aria-level="1"] {     font-weight: bold, } ```  The difference is subtle, other tweaks could improve it. e.g., add a line (or even half-line) of vertical space before it. Or, removing the 8px padding-left on the .monaco-tl-twistie also pulls it visually farther from the tree. The old all-caps CHANGES feels a bit too strong to me, but it would fix the issue.  Other approaches include https://github.com/microsoft/vscode/issues/140343 suggested adding themeable elements.
---
Título: Improve chat view's horizontal code scrolling visual feedback
Descripcion: It's not that clear that these code blocks can be scrolled horizontally:    ![Image](https://github.com/microsoft/vscode/assets/2193314/7fbc5287-1105-4269-a339-861430419bab)   Depending on the font/zoom/etc. there may also be no partial characters on the right side.  The editor has the shadow on the left of the minimap for long lines:    ![Image](https://github.com/microsoft/vscode/assets/2193314/0dfb8dd7-9e7a-41c0-9821-d7e5c2107c77)
---
Título: Support two variants of `LanguageStatusItem#text`
Descripcion: The [LanguageStatusItem#text](https://github.com/microsoft/vscode/blob/07fcfc80c37e56fd35fc125e225c7dde7029f858/src/vscode-dts/vscode.d.ts#L6854) properties is the text that shows when an item is pinned _and_ when an item is rendered in the hover (as [<text> <detail>]). There are cases in which it is hard to find a short text that works well for the pinned and unpinned case. We should explore to extend the API to `text: string | { value:string, shortValue: string}` so that both cases can be caters for
---
Título: Allow the debug toolbar to show in the command center
Descripcion: Today the debug toolbar can be hidden, floating around, or be docked inside the viewlet. This is about adding it to the command center.   Implemented by https://github.com/microsoft/vscode/pull/192571, via `"debug.toolBarLocation": "commandCenter"`  https://github.com/microsoft/vscode/assets/1794099/3dff87e9-7230-4a15-a906-bb8c1134dbce
---
Título: Profiles Editor
Descripcion: Creation of a profile can be as simple as just providing name. One can also customise various options like  - icon,  - copy from existing profile or template,  - copy each resource (settings, keybindings,...)    - from selected profile or    - start from scratch or    - use from default profile.   <img width="619" alt="image" src="https://github.com/microsoft/vscode/assets/10746682/9b3a3ad8-d3d1-4f97-9be2-c294a2217922">  At present all these customisations are represented in quick pick. We would also want to prevent multiple steps here because it can make creating a profile complicated even for simple case. To achieve this, we went beyond what a quick pick can support and introduced a dropdown to select copy profile option  <img width="611" alt="image" src="https://github.com/microsoft/vscode/assets/10746682/70d81481-4d70-467a-808e-a869b55e5c7f">  Also representing configuring of each resource is very confusing. It is not explaining enough unchecking this will use default profile. It is more confusing if user is trying to create a profile using another profile and unchecking these options.   <img width="383" alt="image" src="https://github.com/microsoft/vscode/assets/10746682/6bbb8507-ac49-464d-8a72-d9ce0bbfede9">  We would like to have a dropdown for each resource with following entries  - Empty <start from scratch> - Copy from selected profile (This should be disabled or removed when a profile is getting created from none) - Use Default Profile  Current UI also is not scaling as we add more features like Icons and Colours. Other miscellaneous problems are  1. Too many places to manage profiles: Gear Menu + QuickPick + Side panel 2. Profiles not distinguished enough -> icon/color 3. Switching profiles is not easy enough
---
Título: How should dropdown buttons work?
Descripcion: In SCM, we have a dropdown button that executes the action when you choose an action from a dropdown:  ![image](https://github.com/microsoft/vscode/assets/38270282/e9a245ab-5bd6-445c-8700-88cc1ebcc79c)  In the GitHub Pull Request and Issues extension, we have a similar button, which until recently behaved differently: when you choose an action from the dropdown, the action associated with the button changes and then you must click the button to execute the action (https://github.com/microsoft/vscode-pull-request-github/issues/3785). I recently changed this to match the behavior in SCM.  There has been discussion around which approach is better. @joaomoreno, @bpasero, and @hediet I know you all had feedback on this.
---
Título: Better distinguish overlapping arrows
Descripcion: Here in this case at first I was thinking there is an arrow going from one to the other side on the same editor:    ![Image](https://github.com/microsoft/vscode/assets/900690/c40a4edb-8c31-485a-8288-9a704e24237a)
---
Título: Improve setting description
Descripcion: Testing #191446  Just a nit, but `"Enable scrolling of the sticky scroll widget with the editor's horizontal scrollbar"`?  ![Image](https://github.com/microsoft/vscode/assets/29464607/5599ca53-1729-44df-933b-d8e757977a7c)
---
Título: Show squigglies on collapsed regions containing errors or warnings (#120989)
Descripcion: This PR closes #120989  ![junk](https://github.com/microsoft/vscode/assets/6726799/67941f65-5adf-4105-a141-f5bc5ce1cae6)
---
Título: Theme color `icon.foreground` is inconsistent and does not work with `.svg` icons everywhere
Descripcion: To reproduce: - install GitLens - set  ``` 	"workbench.colorCustomizations": { 		"icon.foreground": "#ff0000" 	}, ``` - open an editor ![image](https://github.com/microsoft/vscode/assets/6461412/bf02656c-2af1-466a-848c-2cd32e1d3a30)  _Originally posted by @aeschli in https://github.com/microsoft/vscode/issues/189201#issuecomment-1682438191_
---
Título: Scale extension editor header contents
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.81.1 - OS Version: Linux x64  Steps to Reproduce:  1. Open extensions: marketplace  2. Find an extension with long description 3. The description is cut off (overflow is hidden. No tooltip as well)  ![image](https://github.com/microsoft/vscode/assets/61087915/a15bf0b1-cabb-41f0-8dd6-363e4370b5bc)
---
Título: Style fixes for toggled state action bar buttons
Descripcion: Issues related to #186403.  - [x] Find (new) named colour for toggled state - [ ] Hover/toggled states should be more distinct or the same  - [ ] Buttons and icons are not vertically centered / not rendered on the whole pixel: <img width="478" alt="image" src="https://github.com/microsoft/vscode/assets/103326/7e4a6343-c0ed-48ac-b36e-b42e76cd96e0">  - [ ] Find View (Cmd+F) in editor has different toggled state: <img width="478" alt="image" src="https://github.com/microsoft/vscode/assets/103326/12388b64-edaa-4593-a8d4-63c1e19fc38d">      <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->
---
Título: Extension Pack contents area could do a better job with packs containing 3 or 5 extensions
Descripcion: Type: <b>Feature Request</b>  1. Go to Extensions view and search for `@category:"extension packs"` 2. Find a pack whose badge shows it has 3 or 5 members. 3. Notice that the "editor" tab showing its details displays 2 or 4 members and you need to scroll down (usual invisible-until-hovered scrollbar) to find the last member.   I think the 3-member and 5-member cases should show one more row than they currently do.  Packs containing more than 6 members only show the first 6, which is reasonable otherwise the pack description could get pushed offscreen. But even then I would like to see a visual clue below the 6 items to tell me there are more to scroll down to. Or maybe make the boundary between member list and pack description resizable by dragging.  Another idea would be for packs with short descriptions to automatically show more members before the member area resorts to scrolling.  VS Code version: Code 1.81.1 (6c3e3dba23e8fadc360aed75ce363ba185c49794, 2023-08-09T22:22:42.175Z) OS version: Windows_NT x64 10.0.22621 Modes:   <!-- generated by issue reporter -->
---
Título: Ghost resize borders in code completion
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  1.81.0 (user setup) - OS Version:  Windows_NT x64 10.0.19045  1. Make VSCode show code completion with a message ![image](https://github.com/microsoft/vscode/assets/42890752/99af7b79-f92d-4729-8088-512e09a4aef2) 2. Go to a suggestion without extra info 3. See ghost resize borders ![image](https://github.com/microsoft/vscode/assets/42890752/c2820419-9818-4ec5-bb7e-6710aa4acaba)  The ghost borders are there where the previously selected code completion option was, so it changes with each suggestion, and if you resize them with the ghost borders, it will apply to the suggestions.
---
Título: Explore local QuickPick control
Descripcion: Something that comes up a lot is that the quick pick is non-local, and it's easy to miss when triggered through a UI control (as opposed to by the user through a shortcut). The problem gets worse on large/multiple screens. In addition to that, the cross-platform (webview) menu possibilities are very limited. It's not possible to use icons, groups, description etc. And in a webview menus are static and must be predefined.  QuickPick guidelines: https://code.visualstudio.com/api/ux-guidelines/quick-picks  Considerations:  - Benefits?   - Filter functionality   - Filter placeholder text serves as menu title   - Group labels - When?   - Do use for variable lists (like branches, repositories, files, folders, etc.)   - Do use for recents/favorites/suggested   - Don't use it as a replacement for a menu - Limitations/problems/misuse?   - Don't add more than 3 other actions (e.g. "Create Branch" at the top of a list of branches)   - Don't use submenus or multiple steps   - No shortcuts   - Should not be combined in any way with native menus   - Should only be able to triggered through a main UI element.   - Should not be used to list a set that's always the same   - Multistep allowed? - Specs?   - New guidelines: filter field MUST have a descriptive placeholder text, mentioning _what_ is being picked and _what for_: For example: `Select a color for profile 'Ruby'` or `Select a milestone for this pull request`  - Simplified placeholder label? e.g. just "Milestone" - Properties? width/height/euro - Setting: `Allow Local QuickPick`  Mockup: <img width="864" alt="image" src="https://github.com/microsoft/vscode/assets/103326/71102835-7487-4433-bd2c-a9670ecbd5a1">  This would essentially be a very powerful menu, but using existing QuickPick APIs.  cc @daviddossett     <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->
---
Título: Create a set of icons+colors for custom profiles
Descripcion: This will help to distinguish between profiles.   <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->
---
Título: Explore inline word highlighting in info texts
Descripcion: From @isidorn:  <img width="258" alt="image" src="https://github.com/microsoft/vscode/assets/103326/e4542bfe-a23c-41b7-a83f-8632be47f66d">  Highlighting (variable) words improves readability by making the text easier to scan. It would be useful to implement this as a more global feature.  cc @daviddossett   <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->
---
Título: Should drop down button toggle primary action?
Descripcion: I was slightly confused that picking an alternative value from the dropdown was executing that value:  ![image](https://github.com/microsoft/vscode/assets/900690/7f8fcaf4-9340-440f-a0fd-ea8dbda8fd5b)  I think from my memory a dropdown button would change its primary action when you pick a different thing from the dropdown but not just execute it. Rather, you would still need to click the button, but the button has now changed and remembers your choice.  Would be good to check with HIG across OS, maybe I am wrong.
---
Título: Watermark hint text for command palette wraps
Descripcion: <img width="341" alt="image" src="https://github.com/microsoft/vscode/assets/25163139/523c6a40-72d3-44a5-940f-783be35b5e49">
---
Título: Allow webview context menus triggered by primary click
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  I'd like to be able to use platform native menus in extensions that use a web view. This would allow for more complex controls, such as split buttons and gear menus.  Currently it's possible for extensions to [provide a context menu](https://code.visualstudio.com/api/extension-guides/webview#context-menus), but the menu can only be triggered using a secondary click (and there's no way to hack around this).  The only way to pop up a native menu is through misusing a `<select>` element. However this causes different cross-platform interaction and styling inconsistencies. It would be much better to be able to use a real menu.  Perhaps an option to the `data-vscode-context` attribute could be added. Something like `deviceButton: primary|secondary`.  ```html <textarea data-vscode-context='{     "webviewSection": "editor",     "deviceButton": "primary",     "preventDefaultContextMenuItems": true }'> </textarea> ```  It would also be useful to define multiple context menus using names.  Advantages: - No need to implement own menus that look out of place (that can't extend outside the web view area) - Good looking and accessible native menus on every platform - More consistency across the IDE - More flexibility for extension authors  cc @alexr00 @daviddossett
---
Título: Support input validation in quick pick
Descripcion: Support input validation in quick pick  <img width="629" alt="image" src="https://github.com/microsoft/vscode/assets/10746682/d700f931-b8cf-4903-ab31-1685d02c48f8">  or  <img width="627" alt="image" src="https://github.com/microsoft/vscode/assets/10746682/55a3c07d-d3fd-424e-9ea0-d63425ffe52c">  CC @daviddossett
---
Título: Rounded corner interface request
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I'm using Windows 10, but the pages of VS Code are more suitable for Windows 11, is it possible to add a theme suitable for Windows 10 at the theme color? Thanks!
---
Título: Infinite modal from vscode.dev
Descripcion: 1. open incognito mode and go to https://insiders.vscode.dev/github/microsoft/vscode 2. Try to close out of the modals. 3. They appear infinitely :bug:  ![Recording 2023-06-27 at 15 09 02](https://github.com/microsoft/vscode/assets/31675041/6642e8a0-9e63-4b51-9352-8ca10e42e607)
---
Título: Improve default Markdown header style
Descripcion: Here are our headers (left) compared with GitHub's (right):  <img width="649" alt="image" src="https://github.com/microsoft/vscode/assets/22350/1bff2074-0024-446a-9b3c-95b3077c9025">  Things to note:  - H2 still has a bottom border in GitHub, looks great - Our H4 feels very much like plain text, GitHub is definitely larger than plain - Our H5 is even smaller than plain text, GitHub is at least in bold  cc @daviddossett @hbons
---
Título: Long commit message warning covers commit button for Source Control UI
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.79.2 (Universal) - OS Version: Mac OS 13.2.1 (22D68)  Steps to Reproduce:  1. Write a long commit message in the Source Control UI 2. Don't Profit  <img width="329" alt="image" src="https://github.com/microsoft/vscode/assets/416814/0edc7824-1710-4021-99ad-a1539dc09251">  I saw on another ticket that there's a setting turn off the warning message via `enableLongCommitWarning`, but the current UX for the warning message is not so great. It would be nicer if it could sit below the commit button rather than overlapping above it.  Edit: I couldn't find that setting any more that was mentioned in: #12089  it seems the closest setting is: `git.inputValidationLength` but it doesn't seem you can disable it anymore unfortunately. I thought maybe putting 0 or -1 would work, but it does not, so I guess for now I just need to set it to a large number.
---
Título: files.Readonly has weak graphical support
Descripcion: - VS Code Version: 1.79.2  Steps to Reproduce:  1. Install any extension that themes folders 2. Expect readonly directories to be less visible just to find out it's as visible.  A lot of people use themes. Extension creators claim there is not available API for this.  Related: https://github.com/PKief/vscode-material-icon-theme/issues/2003   ![изображение](https://github.com/microsoft/vscode/assets/50447661/4db8c0cd-d2fa-4bc5-8544-d22bccad319e)
---
Título: Settings Sync is On should show what account it is using
Descripcion: Was just discussing with @timheuer how to figure out what account is being used for setting sync. And currently it is not trivial. We render it only after user clicks on the Settings Sync is On button inside the quick pick.  Tim had a good suggestion to render the account in brackets in the menu. So something like `Settings Sync is On (isidorn GitHub)` @sandy081 what do you think?  Alternatively, if we redesign the account menu we should keep this in mind to make it more obvious to the users what is under what account.  ![Screenshot 2023-06-16 at 17 54 32](https://github.com/microsoft/vscode/assets/1926584/5204727a-3ed3-431b-911e-97bb073e7713)
---
Título: Missing View Zone
Descripcion: After line 6 in modified the diagonal view zone is missing:  ![image_720](https://github.com/microsoft/vscode/assets/2931520/1211529a-b6a6-411a-afec-0d3c3c23efeb)  [how it should look like]( https://microsoft.github.io/monaco-editor/playground.html?source=v0.39.0#XQAAAAJDAgAAAAAAAABBqQkHQ5NjdMjwa-jY7SIQ9S7DNlzs5W-mwj0fe1ZCDRFc9ws9XQE0SJE1jc2VKxhaLFIw9vEWSxW3yscw1nWJRgmSatbNyrNa50VLHWwDOn0YI7IfU0xJ0CGYU1vRtgnKPmZzQcQ1L9J7fCG48SpY2EIkpDE0S8hEos9zEgFBPU2yKIpn7gx9cAFbAUOX2kYiAg4ugyFvA_mi6X6IL9PSXf_Dw4gpP8ItLTXhGZhoeBAENFSZrgHyWjH9ndXkvm_-VfbeRnufuF_7QWDBerNYaUXLO7Zk6juijlJg9oBeqapXzDH9h1WRDD6sjk11MVmWRzzv3V-BIa_ZkfaxbNmQqH4PH9Er-myioiogS-tOjR4cjTuq230ncrIF3fpOzbmgpXG2jy4051_rY0Sw9sQeWULo3uk2N_UqVaRAn3frG5G__tIhGwn_rPHAoA)  Also, the new line should not be used as aligner, but I think this applies to all diffing.
---
Título: Make welcome editors open instantly
Descripcion: This is not 100% a startup perf issue but I like to see this as a perceived UX perf issue:  ![Recording 2023-06-09 at 06 32 08](https://github.com/microsoft/vscode/assets/900690/1dd100d3-458e-4f74-b9f2-e13329f65957)  It is also not a regression but something that has always been there: the `workbench.startupEditor` setting is configured by default to be `welcomePage`. However you notice that VS Code first shows the empty editor area with out watermark only then to switch to the welcome page. This is because initially the code to open the welcome page is not loaded and only kicks in a bit later.  I think we should show the welcome page right from the beginning. This would require us to return a resolvable untyped editor input (those just have a `resource: URI`) here:  https://github.com/microsoft/vscode/blob/db6bcdf309cc1565c502a54b73c33a63bdabfbd8/src/vs/workbench/browser/layout.ts#L619  For example here we do it when `startupEditor` is configured to be untitled file:  https://github.com/microsoft/vscode/blob/db6bcdf309cc1565c502a54b73c33a63bdabfbd8/src/vs/workbench/browser/layout.ts#L675-L677  @lramos15 knows all about editor resolvers so he could probably assist how to make the welcome editor a untyped editor input that can be resolved.  Arguably such a dependency of `layout.ts` to the welcome page is a bit of a layer break because the welcome page comes from the `contrib` folder, but I would make an exception here since this is the default experience for all new users.
---
Título: Welcome editor shows up with a delay and progress bars
Descripcion: See below video for a first time user startup:  ![Recording 2023-06-02 at 12 13 39](https://github.com/microsoft/vscode/assets/900690/5dfc42f9-45db-4eac-a732-335778286435)  I immediately get the impression that VS Code is slow because even the welcome page cannot show instantly.   A similar case reported from @rebornix : ![Kapture 2023-06-08 at 06 12 18](https://github.com/microsoft/vscode/assets/900690/995d3cb5-60f7-46a5-a5bd-030acbff9f8c)  I think we should really try to find a solution where the welcome editor can start instantly to tell our users we are providing a fast editor and not a slow one.
---
Título: How to change secondary suggest widget font size OC
Descripcion: What I mean is how to change font size of `Controls whether suggestions.....accepting suggestions` ? I didnt found a way to change that in settings.  ![image](https://github.com/microsoft/vscode/assets/54276661/675399cd-8e42-4284-adc8-f8ac28c996c2)    - VS Code Version: Insiders - OS Version: Windows 10
---
Título: Notebook toolbar execution section improvements
Descripcion: On the notebook toolbar we have multiple sections of actions, and the first two are core sections: insert and execution. The Insert section is very stable and it always contains two actions: insert code and insert markdown. However the execution section has actions from both VS Code core and Jupyter extension, and with a mix use of visibility and enablement, it is not user friendly and often leads to mis-clicks.  ## Jupyter kernels  **Initial state**  <img width="811" alt="image" src="https://github.com/microsoft/vscode/assets/876920/a5bafa5a-7b7c-422c-ae85-d95727c7689b">  **Start execution**  <img width="884" alt="image" src="https://github.com/microsoft/vscode/assets/876920/f2f81e01-d434-4768-bfbb-2638b28a99d5">  **Execution fails**  <img width="903" alt="image" src="https://github.com/microsoft/vscode/assets/876920/6a884578-6beb-4c9d-9f2d-2723aada4884">  **Execution succeeds**  <img width="810" alt="image" src="https://github.com/microsoft/vscode/assets/876920/126a2b18-4812-4596-ad2f-5dc665eb7b9b">   ## Non Jupyter Kernels (e.g. Pyodide)  **Initial state**  <img width="657" alt="image" src="https://github.com/microsoft/vscode/assets/876920/f07d4b5f-a7fe-4c61-984a-08444e5bfcee">  **Start execution**  <img width="867" alt="image" src="https://github.com/microsoft/vscode/assets/876920/897256e3-9dab-49a9-9fa9-70f8e0278254">  **Execution fails**  <img width="728" alt="image" src="https://github.com/microsoft/vscode/assets/876920/2958aa33-ae5e-43ab-99d9-61e28052d30f">  **Execution succeeds**  <img width="625" alt="image" src="https://github.com/microsoft/vscode/assets/876920/b33434d7-53a3-49df-b59c-059cbacb4a92">  ---  As shown above, currently only `Clear all outputs` is using enablement while all others are using visibility, which can lead to change of positions for the actions and often when users want to interrupt or restart the kernel, their position changes and users click on wrong actions. cc @roblourens
---
Título: Resolve save conflict bar: add more informative tooltips and reposition buttons
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> The "Resolve save conflict" bar is confusing.  I believe the current design, clicking the curled back arrow which is displayed _on the right_ (tooltip: "revert changes") accepts the file _on the left_ ("on disk"), whereas the checkmark button displayed _on the left (tooltip: "accept changes") accepts the file _on the right_ ("in Code"). This seems needlessly confusing and I have to google the Resolve Save Conflict view in order to make sure I'm not about to butcher my file.  I would propose that the button that corresponds to accepting the file view displayed on the left be displayed on the left, and the button corresponds to accepting the file view displayed on the right be displayed on the right. And they should have tooltips saying "accept left" and "accept right" respectively. The behavior in PyCharm is much more intuitive on this. https://code.visualstudio.com/docs/getstarted/tips-and-tricks#:~:text=VS%20Code%20blocks%20saving%20the,made%20outside%20of%20the%20editor.&text=Use%20the%20actions%20in%20the,to%20the%20version%20on%20disk. VS Code: ![resolve save conflict](https://github.com/microsoft/vscode/assets/6945508/e8199bcb-6175-46f9-bcf9-af28681fb52c)  PyCharm: ![image](https://github.com/microsoft/vscode/assets/6945508/79235fee-c059-47f6-8bf3-c504d830ecf7)
---
Título: Padding and breathing room for suggestions popup
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  There should be some margin and padding given to autocompletion popups/ suggestion box.  Currently if we see the autocompletion popup is like this:  ![image](https://github.com/microsoft/vscode/assets/54276661/8af87d76-067a-4506-b130-41adf18cf9a1)   I suggest that it should look like this:  ![image](https://github.com/microsoft/vscode/assets/54276661/1f529679-2024-4363-85c8-642a964180c4)  It looks more classy and nice to eyes
---
Título: Pin actions in shortcut toolbar
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Spawned from [How to display the "Open Changes With Next Revision" button in the top right tab bar? #2264](https://github.com/gitkraken/vscode-gitlens/discussions/2264)  The actions toolbar provides many useful often-used shortcuts as well as several that are rarely used. As extensions add their own action shortcuts, this toolbar becomes filled and causes the overflowed actions to appear in a drop-down.  We need a way to pin or otherwise control which actions remain visible. My most-often used actions end up in the dropdown bar and those I rarely use remain prominent in the toolbar. Naturally, this is counter to the intent of that action toolbar, so hope we can see an enhancment where the user gets to choose which actions are pinned.  The order of the pinned actions would also play a role in determining which actions to move into the dropdown as the window-width shrinks. E.g. the actions on the left-most side would take priority over others to the right.  Open a 'C' file and the menu looks like this:  ![image](https://github.com/gitkraken/vscode-gitlens/assets/8231064/66f403f7-9ee3-4b1c-aa24-57f80a89e214)   Click the "Previous Revision" icon and the toolbar changes to:  ![image](https://github.com/gitkraken/vscode-gitlens/assets/8231064/68ed7115-e03f-4647-816f-9a414c06843c)  Where the icons I wanted to remain visible, have been moved into the drop-down menu:  ![image](https://github.com/gitkraken/vscode-gitlens/assets/8231064/0573f2e0-5649-4730-a7da-aa561deeaaff)  ```[tasklist] ### Tasks ```
---
Título: Offer to disable inline suggest
Descripcion: Type: <b>Feature Request</b>  A common complaint from users is noise from Copilot's inline suggestions. One existing way to fix this is disabling inline suggestions `"editor.inlineSuggest.enabled": false` and using *Trigger Inline Suggestion*.  As a first step, the inline suggestion toolbar should offer that as obvious escape hatch for when inline suggestions becoming a nuisance.  ![image](https://github.com/microsoft/vscode/assets/8599/c591d4e6-7d31-4bd7-a672-bf13ed8cc6e4)
---
Título: Explore improvements to settings UI
Descripcion: Based on numerous bits of feedback from NPS responses, I think it's worth exploring some improvements to the Settings UI. Off the top of my head, a couple things stand out to me when using it today:  - There's a lot here at first glance. It's somewhat overwhelming and hard to find some of the "basics" - Organization of items within each section feels somewhat random - Search requires precise input to reveal relevant results - The UI feels brittle. Everything has a hover or focus effect. I feel scared to touch the UI for fear of changing something I didn't mean to. It's also quite cramped.  Current UI:  ![CleanShot 2023-05-09 at 14 02 03@2x](https://github.com/microsoft/vscode/assets/25163139/8cccf60a-918a-4f5c-85a2-c669e6ceb7db)  Some selected verbatims: > more user-friendly setting page.  it's too overwhelming  > Settings is a complete dumpster fire-level mess. Just trying to adjust font size is hilariously bad.   "Is it this one?  ...  "Oh that did that bit... But what about...   ...  "nope."  > Settings should be a little more easy to go through  > Easier settings controls. for beginners its a little overwhelming
---
Título: Keybinding search matching on when clauses is not very helpful
Descripcion: Maybe these matches should get sorted below command matches:  ![image](https://user-images.githubusercontent.com/900690/235603791-6fc6b928-dd6d-41db-9cc3-f8c9076b6284.png)
---
Título: Git - The sync-branch button icon does not rotate about its centerpoint
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  1.77.3  - OS Version:  Windows 10 Pro 22H2   Steps to Reproduce: 1. https://gyazo.com/ac646ddd1ef234a760b3e5bb34a9301a  It more noticeable when on a slow connection.
---
Título: An even clearer indication that Git isn't working
Descripcion: So I created a codespace based on https://github.com/microsoft/vscode-extension-samples and then did a `File->open folder` to open to a specific sample.  I kind of assumed that git was working just fine... so I right clicked on a line number in a file and was shocked to not see the share options... turns out, it's because the git repo wasn't active.  And the Git extension was telling me this: ![image](https://user-images.githubusercontent.com/2644648/235010762-006cecec-45cc-4401-8f65-df3ea96dc2ce.png) ![image](https://user-images.githubusercontent.com/2644648/235010782-3b8d76b2-d02d-435f-bc3e-02407f8c237b.png)  but I had tunnel vision and ignored it.  Could we maybe have something in the status bar in place of the branch picker, that informs me that things aren't working intentionally?  cc @joyceerhl
---
Título: Description is not changing for terminals which are not interacted with
Descripcion: Testing microsoft/vscode-python#21102 https://github.com/microsoft/vscode/issues/171108  _Originally posted by @aiday-mar in https://github.com/microsoft/vscode-python/issues/21102#issuecomment-1521488421_  ⚠️ signs only appears next to terminals which are dirty, as they require a relaunch to update the envs. The second has not been interacted with yet, so envs are updated without the need for relaunching it, but it seems that the description is not updated.  https://user-images.githubusercontent.com/61460952/234238206-9842cf35-9a58-40f8-9227-b3a580d289c2.mov
---
Título: SCM - highlight repositories with uncommitted changes
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I work on many repositories at the same time. In the source control view, apart from the little star, it's  not clear if there are changes in any of the repositories.  I see there are 8 changes somewhere but need to find the repo with the *. Maybe a different font color would help?  ![image](https://user-images.githubusercontent.com/5886651/234282951-ae44ec77-7b3a-4e51-bd11-030727a0f8a2.png)
---
Título: Revisit always showing "Add to Watch" and "Run to Cursor" to editor context menu
Descripcion: The change for https://github.com/microsoft/vscode/issues/162727 went in without a UX discussion. IMHO we should reconsider adding these two actions to all editor context menus. IMHO we need to be more critical with adding things there and have good reasons to do so.  <img width="284" alt="image" src="https://user-images.githubusercontent.com/5047891/234118418-11c8c80d-fc80-4f7c-bff1-dd36b7e43608.png">
---
Título: Improve terminal action hover UI
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> 1. Improve description when only one terminal is opened:      ![image](https://user-images.githubusercontent.com/13199757/234088171-ec56fe18-d36d-46f6-b5b1-25f37b4f087e.png)      Ideally it should be the same as:  ![image](https://user-images.githubusercontent.com/13199757/234088292-2bb89294-e0fd-4453-84d5-4c17bce90e80.png)
---
Título: editor.hover.delay doesn't affect debugger hovering, only language server hovering
Descripcion: Type: <b>Bug</b>  Set editor.hover.delay to 3000 (3 seconds). While debugging, hold Alt and hover over a keyword. It will correctly take 3 seconds to display the hover information from the language server. Then, release Alt and hover over a variable. It always takes about 3/4 of a second to evaluate the value regardless of the setting.  (This is frustratingly slow for me.)  VS Code version: Code 1.77.3 (704ed70d4fd1c6bd6342c436f1ede30d1cff4710, 2023-04-12T09:16:02.548Z) OS version: Windows_NT x64 10.0.19042 Modes: Sandboxed: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 9 5950X 16-Core Processor             (32 x 3394)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off| |Load (avg)|undefined| |Memory (System)|63.94GB (27.65GB free)| |Process Argv|--crash-reporter-id bbc83cb3-8859-43b9-93a1-5337a381d19f| |Screen Reader|no| |VM|0%| </details>Extensions: none<details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492cf:30256860 vslsvsres303:30308271 vserr242cf:30382550 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vshan820:30294714 vstes263cf:30335440 vscorecescf:30445987 pythondataviewer:30285071 vscod805cf:30301675 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 cmake_vspar411:30581797 vsaa593:30376534 pythonvs932:30410667 cppdebug:30492333 vsclangdc:30486549 c4g48928:30535728 dsvsc012:30540252 pynewext54:30695312 azure-dev_surveyone:30548225 nodejswelcome1:30587005 282f8724:30602487 pyind779:30671433 89544117:30613380 pythonsymbol12:30671437 vsccsb:30705552 azdwalk:30721579 pythonms35:30701012 pythonfmttext:30716742  ```  </details>  <!-- generated by issue reporter -->
---
Título: Explore alternative wording for "Continue On" explanations
Descripcion: 
---
Título: allow customization of suggest widget height
Descripcion: Currently, the (maximal) number of items shown in the completion (quick-suggest) widget is 12:  https://github.com/microsoft/vscode/blob/7ba867b19ad4efa6012df64a914f237021d33bcb/src/vs/editor/contrib/suggest/browser/suggestWidget.ts#L900  Could that number be made configurable, for users who would prefer to show fewer (or more) items in the completion list by default? Perhaps as an editor option, e.g. `EditorOption.suggestWidgetMaximumItemsToDisplay` or something slightly less verbose?
---
Título: Explore better call to action for Continue On in web terminal
Descripcion: 
---
Título: Improve Continue On sign in flow
Descripcion: 
---
Título: Always show arrow in suggest item
Descripcion: # Problem   It's quite hard to discover that one can enable "show hover for suggest items" by clicking on an arrow that only appears when you hover over the item. (I personally even created a stackoverflow [question](https://stackoverflow.com/questions/64184920/vs-code-documentation-on-completion-not-shown) about this some time ago)  <img width="722" alt="image" src="https://user-images.githubusercontent.com/16353531/226919226-e1594eca-4229-407a-b06f-79632a573aa3.png">  <img width="716" alt="image" src="https://user-images.githubusercontent.com/16353531/226919178-bcc75aa5-9c94-4dd5-b98b-00b67a0e5d82.png">  <img width="1048" alt="image" src="https://user-images.githubusercontent.com/16353531/226919191-d44894e5-c630-4252-b800-4e26be706d85.png">  # Suggestions  1. I propose that we have that arrow always shown at the end of the suggest item.  2. Or have the hover on-by-default, and then collapsable.   It could also change direction if the "show hover" is enabled.
---
Título: extensions: Make ScrollToTop button less prominent
Descripcion: This styles the ScrollToTop button to be less prominent.  This button visually stands out more than the Install button, even when we're already at the top of the page. So I've reduced the size slightly and changed it to use the the secondary button colour instead of primary.  Left: before, right: after  <img width="1616" alt="image" src="https://user-images.githubusercontent.com/103326/226912983-9af4ac0e-b6c7-46a3-88be-2ea250530531.png">  Even better would be to hide this button when already at the top of the page, but I haven't figured that out yet.
---
Título: Keyboard shortcuts sync conflict - `undefined`
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  # Problem description   See how I have badge (1) with `Show Conflicts (undefined)` inconspicuously indicated the problem   <img width="338" alt="image" src="https://user-images.githubusercontent.com/16353531/226427296-70f7cc4c-fe1a-4fbe-b985-4fd0e5c006b8.png">  When I reloaded, I got a notification message which told me about the sync conflict but, otherwise, I couldn't understand the problem.  I think there're 2 problems:   1. The `undefined` in the context menu  2. "Show Conflicts" not standing out enough  # Reproduction  I think I opened vscode.dev, which resulted in conflicting shortcuts.  # Version info  (insiders from march 20, 2023)  Version: 1.77.0-insider (Universal) Commit: fa13bf16fd237afef07f4df0648da026f43e3963 Date: 2023-03-20T05:27:33.182Z Electron: 19.1.11 Chromium: 102.0.5005.196 Node.js: 16.14.2 V8: 10.2.154.26-electron.0 OS: Darwin arm64 22.3.0 Sandboxed: Yes
---
Título: Differentiate breakpoint types more clearly
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  My vision isn't perfect and I find the icon used to display a conditional breakpoints too similar to the regular breakpoint (even with the increased font size). **Would it be possible to change it to a different shape without breaking the visual language?**  I know this is very tricky because the visual design for breakpoints already covers many fundamental shapes (all icons can be found [here](https://microsoft.github.io/vscode-codicons/dist/codicon.html)): - Circles are used for regular breakpoints - Triangles are used for [function breakpoints](https://code.visualstudio.com/docs/editor/debugging#_function-breakpoints) - Hexagons are used for [data breakpoints](https://code.visualstudio.com/docs/editor/debugging#_data-breakpoints) - Rhombus are used for [logpoints](https://code.visualstudio.com/docs/editor/debugging#_logpoints)  <img src="https://user-images.githubusercontent.com/8045792/225315472-408e80a2-eb30-4b6d-acf3-6177e1dbed11.png" width=30%>  I wonder if a semi-circle could be a reasonable alternative...
---
Título: Switching terminal tabs does not set the focus on the terminal line
Descripcion: https://user-images.githubusercontent.com/113370447/224167230-e8ded457-0771-4aa8-bb48-a3bf4a102b41.mp4  When switching terminal tabs, I would expect the focus to go to the terminal line so I can type right away. Now the focus is nowhere :)  @Tyriar  @daviddossett
---
Título: Extensions details have "scroll to top" always visible
Descripcion: ![image](https://user-images.githubusercontent.com/113370447/224158267-d9e56a5a-b1ba-4ea6-9682-5a2b604c0abe.png) ![image](https://user-images.githubusercontent.com/113370447/224158487-84420e2a-bede-42f6-99d6-2506ac888256.png)  When reading through the details of an extensions, there's a button on the bottom right corner to scroll to top. That Button should only be visible when the scroll viewer is scrolled down
---
Título: remove newly rounded corners.
Descripcion: It would be great to have a feature to remove all the rounded corners vscode. I noticed that the highlighted text was also rounded, but I found the setting to turn it off. But there is no settings to remove the rounded corners in other gui options. I know they added this new design back in September 2022. But I, and many other people hate it. It would be super great if there was an option to revert back to the old ui, for people that are long time users of vscode. I was on the verge of just completely switching text editors because of this. Hopefully vscode can add the feature.
---
Título: Suggestion navigation is broken when selectionMode = never and there is only one suggestion in the list
Descripcion: Type: <b>Bug</b>  Open new document. Set **`editor.suggest.selectionMode = never`**. Type `test ` now start typing `tes` the editor will show suggestion (with only one `test` in the list). Now pressing _`down arrow`_ should select the available suggestion, but it can not be done.  On the other hand if you type `test test1` and then start typing `tes` the list will contain two items and selection works as expected - when you press _`down arrow`_ the first item is selected and you can navigate the list with _`down arrow`_ and _`up arrow`_  VS Code version: Code 1.75.1 (441438abd1ac652551dbe4d408dfcec8a499b8bf, 2023-02-08T21:32:34.589Z) OS version: Windows_NT x64 10.0.19044 Modes: Sandboxed: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (8 x 2803)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off| |Load (avg)|undefined| |Memory (System)|31.70GB (20.47GB free)| |Process Argv|--disable-extensions .| |Screen Reader|no| |VM|0%| </details>Extensions disabled <!-- generated by issue reporter -->
---
Título: Enable Users to Group Tabs using Layers
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  I would like to group tabs using Layers. A layer defines a set of tabs that must be visible at a given time. Layers can be switched with keyboard shortcuts (configurable). It must work with Webviews as well, and not just editor panels.  <img width="954" alt="image" src="https://user-images.githubusercontent.com/55927613/232730050-f609fe53-1c5c-406b-a3f9-cd436058d63b.png">    The current selected layer name must be visible somewhere near the tabs. My suggestion is to place this information above the tabs, and to the left, because there is a bunch of empty space in that region.  ![image](https://user-images.githubusercontent.com/55927613/220342806-8d847f03-9503-4ba8-978d-b6cb97f38d2f.png) When clicking on the name of the layer, a picklist input appears so that users can switch between layers.   ## Some benefits   - users could group tabs per workspace when using the [multi-root workspaces feature](https://code.visualstudio.com/docs/editor/multi-root-workspaces). - users could place files that aren't in the current working directory in a separate layer. - users would no longer need to ["Lock"](https://github.com/microsoft/vscode/issues/125791) a webview panel because webviews can just be placed into a separate layer. - it could also remove the need for scrolling horizontally while fetching a tab. - webviews would have more space to display its content. Users would no longer need to keep resizing or closing/opening webviews. Each layer would store the state of the panels, like the order each panel appears and their sizes - It allows placing `webview_a` and `webview_b` same layer because they provide features that are often used together.
---
Título: Workspace Trust - should be made accessible more easily.
Descripcion: Type: <b>Feature Request</b>  In a recent update, I saw a shortcut was added to easily switch Trust level.  But accessing this Page requires too many steps and maybe hitting on keyboard on the way. In case of an accidental selection of trusting, finding this page back again is not easy.   Currently there are 2 occurences this page can be opened easily, and both requires a zero/no trust level. One occasion is when a untrusted folder is opened where the page is auto-popped. and the other is to use the shield icon that sits on the left-bottom corner.  But once you select to trust the folder, game is over. you have to first remember what is the name of this setting so to make a search. then search all the menus where you find almost no traces. then maybe make an internet search. only then open the command palette and start typing Workspace Trust.  This page also supplies a list of other trusted folder, so one can easily check them and remove some or all folders to clean the list. For such an important (and useful) setting, accessing it is too much stressful.  So, in short, please make accessing to Workspace Trust page is easier. Two of the best places I can think of are the status bar (a shield just like an untrusted workspace has) and/or a menu item under the settings menu.  VS Code version: Code 1.75.1 (441438abd1ac652551dbe4d408dfcec8a499b8bf, 2023-02-08T21:32:34.589Z) OS version: Windows_NT x64 10.0.19044 Modes: Sandboxed: No   <!-- generated by issue reporter -->
---
Título: Completion item color is not extracted from `documentation` property when it is a `MarkdownString`
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  `1.76.0-insider` - OS Version: `macOS 12.5.1`  **Steps to Reproduce:**  1. Clone https://github.com/bradlc/vscode-completion-issue 2. Open the extension in VS Code and run the "Run Extension" task from the "Run and Debug" panel 3. Create a new untitled file and change the language to "HTML" 4. Run the `Trigger Suggest` command or start typing "example" to reveal the "example" completion items 5. Notice that one of the completion items has a red block and one does not  **Expected Behaviour:**  Both completion items should display a red block.  **Suggested Fix:**  When the color extractor checks the `documentation` property it should account for `MarkdownString` values:  https://github.com/microsoft/vscode/blob/eb940a296f0f32f859907def1fa87f62418a4347/src/vs/editor/contrib/suggest/browser/suggestWidgetRenderer.ts#L48-L54  For example the piece of code above could be changed to the following:  ```ts if (item.completion.documentation) {   const documentation = typeof item.completion.documentation === 'string'     ? item.completion.documentation     : item.completion.documentation.value,   const match = ColorExtractor._regexRelaxed.exec(documentation),   if (match && (match.index === 0 || match.index + match[0].length === documentation.length)) {     out[0] = match[0],     return true,   } } ```
---
Título: Refactor Preview checklist shall be the difference symbol between the total and some checked items
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> When required to rename <kbd>F2</kbd> with Refactor Preview, I request a future option to show different symbols for checking all items and some items to understand clearly before applying the change.
---
Título: Provide icon buttons for common source control actions
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> (File) Explorer provides some icon buttons for common actions:   ![Screenshot 2023-02-10 205743](https://user-images.githubusercontent.com/10571178/218175705-88464aad-baae-4531-bd8f-df0a6e3549aa.jpg)  Likewise, in Visual Studio's Git Changes, some icon buttons are provided to quickly perform very common operations:  ![Screenshot 2023-02-10 210315](https://user-images.githubusercontent.com/10571178/218176030-2c8fe041-6f22-43ea-b709-d65d43a59325.jpg)  Indeed, they are extremely handy IMHO.  Would it be too much to expect the same UX for the source control panel in Visual Studio Code?
---
Título: Very poor red alert UX when naming files with periods (practically all files)
Descripcion: Type: <b>Bug</b>  It is quite annoying to get a red alert message when typing a file into the directory window.  It pops up as you are typing a file with a period in it - which is almost all files.  It says the name is not valid as a file or folder name.  Please choose a different name.  Well, we have not finished typing the file yet.  I would just drop that check until the field loses focus.  Thanks!  Great program otherwise!  VS Code version: Code 1.75.0 (e2816fe719a4026ffa1ee0189dc89bdfdbafb164, 2023-02-01T15:23:45.584Z) OS version: Windows_NT x64 10.0.22621 Modes: Sandboxed: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 5 5600X 6-Core Processor              (12 x 3700)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off| |Load (avg)|undefined| |Memory (System)|15.91GB (6.96GB free)| |Process Argv|--crash-reporter-id 256c9743-cbab-40e1-ae47-68e562a5c281| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (6)</summary>  Extension|Author (truncated)|Version ---|---|--- Bookmarks|ale|13.3.1 swap|fau|0.0.5 pro-deployer|hem|1.2.1 LiveServer|rit|5.7.9 vscode-fileutils|sle|3.10.0 open-in-browser|tec|2.0.0   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492:30256859 vslsvsres303:30308271 pythonvspyl392:30443607 vserr242cf:30382550 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 pythondataviewer:30285071 vscod805cf:30301675 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 cmake_vspar411:30581797 vsaa593:30376534 pythonvs932:30410667 cppdebug:30492333 vsclangdf:30486550 c4g48928:30535728 dsvsc012cf:30540253 azure-dev_surveyone:30548225 vsccc:30610678 pyindex848cf:30577861 nodejswelcome1cf:30587006 282f8724:30602487 89544117:30613380 pythonsymbol12cf:30657549  ```  </details>  <!-- generated by issue reporter -->
---
Título: Consider removing `New Text File` in favor of `New File...` in file menu bar
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  <img src="https://user-images.githubusercontent.com/13199757/216828079-674d48b0-063c-4681-890a-37313812d19e.png" width=300 />  Just clicking `New File...` opens a picker to open text file:  <img src="https://user-images.githubusercontent.com/13199757/216828139-b7dd30fc-4f7e-413b-9c1d-81ecacf85d1d.png" width=500 /> so the former seems very redundant.
---
Título: Report issue button hidden in "Running Extensions"
Descripcion: 1. Open "Running Extensions" tab 2. Have extensions with uncaught errors 3. There's a barely visible piece of a "report issue" button  ![button_hidden](https://user-images.githubusercontent.com/9638156/216457855-bb1dc526-82e6-4848-b075-b42a692cb93a.png)  ![button](https://user-images.githubusercontent.com/9638156/216458173-0a32b72c-c5fb-4752-bc10-037126510bd2.png)
---
Título: Minor UI inconsistency at Commit & Push combo box border
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.75.0 (Universal) Commit: e2816fe719a4026ffa1ee0189dc89bdfdbafb164 Date: 2023-02-01T15:24:42.903Z Electron: 19.1.9 Chromium: 102.0.5005.194 Node.js: 16.14.2 V8: 10.2.154.23-electron.0 OS: Darwin arm64 22.3.0 Sandboxed: No  Steps to Reproduce:  1. Open SCM tab at the left side 2. look at the border of the Commit & Push combo box  The inconsistency is more visible in non-default themes like "Bearded Theme Monokai Reversed" <img width="717" alt="vscode_scm_cp_1" src="https://user-images.githubusercontent.com/20640295/216456405-2964e737-2b75-4553-8cbd-4fe42ec40d70.png">  but also slightly in the "Default Dark+ Experimental" for example <img width="656" alt="vscode_scm_cp_2" src="https://user-images.githubusercontent.com/20640295/216456414-854f401e-1909-47b5-9fee-e434ece2c78a.png">
---
Título: Guide users when signature verification fails due to unmet dependencies
Descripcion: Owner: @dtivel and @isidorn   Currently when a user has unmet dependencies for `vsce-sign` we silently fail and allow the extension to be installed. Instead of this we should guide the users to install these unmet dependencies. So I propose we: 1. Keep these errors as non blocking 2. On error show a warning notification 3. The warning notification would have a text about "unmet dependencies" and will have a "Learn More" button 4. The "Learn More" button would be an `aka.ms` link that points to VS Code docs 5. In the VS Code docs we would add a new section around https://code.visualstudio.com/docs/supporting/FAQ#_vs-code-gets-unresponsive-right-after-opening-a-folder  fyi @joaomoreno @sandy081
---
Título: SCM - add support for horizontal scrolling
Descripcion: setting:  ```json "workbench.list.horizontalScrolling": true ```  ``` Version: 1.74.3 (Universal) Commit: 97dec172d3256f8ca4bfb2143f3f76b503ca0534 Date: 2023-01-09T17:07:18.579Z Electron: 19.1.8 Chromium: 102.0.5005.167 Node.js: 16.14.2 V8: 10.2.154.15-electron.0 OS: Darwin x64 22.3.0 Sandboxed: No ```  @lszomoru
---
Título: css synchronize changes(git)
Descripcion: Type: <b>Bug</b>  When you click in synchronize changes from gitHub, loading animation goes off axis  VS Code version: Code 1.74.3 (97dec172d3256f8ca4bfb2143f3f76b503ca0534, 2023-01-09T16:59:02.252Z) OS version: Windows_NT x64 10.0.19044 Modes: Sandboxed: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8565U CPU @ 1.80GHz (8 x 1992)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off| |Load (avg)|undefined| |Memory (System)|7.88GB (1.00GB free)| |Process Argv|--crash-reporter-id cbab1e19-cc0f-4b58-b812-2acfbca56f0b| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (30)</summary>  Extension|Author (truncated)|Version ---|---|--- GetterAndSetterGenerator|afm|1.0.3 simple-react-snippets|bur|1.2.7 vscode-postgres|cko|1.4.0 bracket-pair-colorizer-2|Coe|0.2.4 vscode-eslint|dba|2.2.6 gitlens|eam|13.2.0 vscode-html-css|ecm|1.13.1 prettier-vscode|esb|9.10.4 auto-close-tag|for|0.5.14 auto-complete-tag|for|0.1.0 auto-rename-tag|for|0.1.10 todo-tree|Gru|0.0.222 error-gutters|Igo|1.0.1 vscode-language-pack-pt-BR|MS-|1.74.12140933 vscode-react-native|msj|1.10.0 color-highlight|nau|2.5.0 material-icon-theme|PKi|4.23.1 java|red|1.14.0 LiveServer|rit|5.7.9 code-spell-checker|str|2.15.0 code-spell-checker-portuguese-brazilian|str|2.0.10 in-your-face-incredible|TTO|1.1.0 intellicode-api-usage-examples|Vis|0.2.7 vscodeintellicode|Vis|1.2.30 vscode-java-debug|vsc|0.47.0 vscode-java-dependency|vsc|0.21.1 vscode-java-pack|vsc|0.25.7 vscode-java-test|vsc|0.37.1 vscode-maven|vsc|0.40.4 vscode-icons|vsc|12.2.0  (1 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492cf:30256860 vstes627:30244334 vslsvsres303:30308271 pythonvspyl392:30443607 vserr242:30382549 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vsdfh931cf:30280410 vshan820:30294714 vstes263cf:30335440 pythondataviewer:30285071 vscod805:30301674 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 cmake_vspar411:30581797 vsaa593cf:30376535 pythonvs932:30410667 cppdebug:30492333 vsclangdf:30486550 c4g48928:30535728 dsvsc012cf:30540253 azure-dev_surveyone:30548225 pyindex848:30577860 nodejswelcome1cf:30587006 282f8724:30602487 pyind779cf:30647092 89544117:30613380 pythonsymbol12:30652348  ```  </details>  <!-- generated by issue reporter -->
---
Título: ESLint causes constant language status wiggle
Descripcion: The language status wiggles whenever an entry has changed. This is to draw attention to changes that the user should be aware of. With ESLint installed and configured to participate in save there is a constant wiggle because it updates a record of how long the last operation took.   We should either change ESLint or the wiggle
---
Título: White outline on all selected list rows
Descripcion: This seems really aggressive and probably not intentional  <img width="406" alt="image" src="https://user-images.githubusercontent.com/323878/214683628-25d9b536-697a-4c53-8c69-b0a0d569db38.png">
---
Título: Missing Space Between Loading Animation And Text
Descripcion: ![Code_-_Insiders_yJBEdkEOFc](https://user-images.githubusercontent.com/2931520/214587955-3f8d19b7-4df0-4b2a-b32e-884488173c53.gif)
---
Título: Extension pinning: UI should make it clear that an extension is pinned
Descripcion: Testing #172034  - Install a specific version of an extension: `code-insiders --install-extension ms-vscode-remote.remote-wsl@0.75.0`  - Open the extensions viewlet and look at the WSL extension. - I can't easily tell that this extension is pinned unless there's an update button. - If there's an update button I have to open the button drop down to see that update is disabled  E.g. playing around with multiple VS Code instances. The second one has not yet discovered that there's an update ![image](https://user-images.githubusercontent.com/6461412/214296250-7da495c6-6a34-41f8-9152-d77ec92bc23a.png)  ![image](https://user-images.githubusercontent.com/6461412/214297143-cf2e571f-bad1-4442-92dd-387b9138a190.png)   Some ideas: - In both in the extensions viewlet / view, have a blue button `Enable update` if an extension is installed and pinned. Even if there's currently no update - in the extensions viewlet context menu on the gear, have a check box 'Ignore Updates` - in the extensions view add a label after `This extension is enabled globally.`,: `Pinned to version 0.75.1, update is disabled`
---
Título: Source control buttons should not shift after calculating errors/problems
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.74.3 - OS Version: Windows 10 and macOS Ventura  **Problem:** When clicking a file in the source control, the buttons to stage, revert, etc., will shift after vscode calculates problems in the file. This has lead to misclicking buttons that were not intended to be clicked.  **Steps to Reproduce:** 1. The best way I can explain this is to see the following clip:  ![CleanShot 2023-01-23 at 15 59 58](https://user-images.githubusercontent.com/2053960/214149168-feeffbbb-24c0-4527-8146-2d507bc44dfd.gif)
---
Título: Allow to provide description to environment collection API
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Particularly for the Python environments, the list of environment vars can be long, hence the prompt which shows up can be too verbose:  ![image](https://user-images.githubusercontent.com/13199757/211768285-b4ceeae4-e99e-445a-85fe-cdafd65c3e08.png)  It would be perhaps more helpful if we can provide a simple description instead of the exact changes.  cc/ @Tyriar
---
Título: Provide a list of deduped and nicely named codicons for use in product
Descripcion: The terminal has a feature to change the tab/profile icon which opens this:  <img width="339" alt="image" src="https://user-images.githubusercontent.com/2193314/211871176-d86594d3-f44a-482f-a3ce-8b4b7979a89c.png">  It's very convenient to use but it would be nicer if it was instead:  ``` ➕ Add - add 💡 Lightbulb - lightbulb etc. ```  The `- text` above would be the greyed out backing id.  _User_ profiles could also use this as @sandy081 has explored.
---
Título: Extension recommendation polish
Descripcion: There are some things we can polish to make the extension recommendation story better: * Popular extensions view is too prominent. Do we need to show this view? Could it be collapsed by default (so Recommended view gets more space)? * If the user gets an extension recommendation and they say NO -> we should treat it as "no, do not show again". The current UI pattern to hide forever (behind the settings wheel) is too complex. * Can we explore more UI areas to show recommendations. For example suggest widget status bar.  * Can we productionise the recommendation model? What is the latest here @digitarald Once we have that how do we show these recommendations with the "hard coded" ones. Do we inter-mix them with some UI affordance? Do we still need the hard coded passive ones then?  Created from discussion with @jrieken and @sandy081  We can use this issue to compile ideas and if we get enough actionable things we can then try to put it on the plan.
---
Título: Dialogs: provide a simpler internal API that avoids having to use button index magic
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  When providing a `cancelId`, VSCode on Linux/Mac reverses the button order and moves the cancel button in the second right most position: https://github.com/microsoft/vscode/blob/f078e6db483250957314c56c3b12e23dae03d351/src/vs/base/browser/ui/dialog/dialog.ts#L489 This means that when you have e.g. three buttons, Cancel will be between the other two.  I could not find more documentation on it, so I am not sure what exactly the intent is. According [this website](https://uxplanet.org/primary-secondary-action-buttons-c16df9b36150#11bf) Windows prefers Cancel to be the right most button, and MacOS prefers an action button to be right most, and Cancel to the left of that. What is not completely clear from this guideline is what should happen if there are three buttons (say primary action, secondary action, cancel). I would have expected cancel to be either on the far left or far right, but not between the primary and secondary action. The first example for VSCode's [webview button guidelines](https://github.com/microsoft/vscode-webview-ui-toolkit/blob/main/src/button/README.md) also seems to suggest that Cancel is not between "Publish" and "Create" but, in this case, to the left.  More generally, reordering (only) when `cancelId` is provided is a surprising side effect, and it should probably be documented that input order is expected to be Windows-style (Cancel last).  I would be happy to send a PR with some documentation around this, and would also love to send a change to avoid having the cancel button in the middle between multiple action buttons, but I first wanted to better understand what the intention in change https://github.com/microsoft/vscode/commit/3074fd588d1a01ae552243a1c4359b4cf0d5227d by @lramos15 was.  Thanks for your time!
---
Título: VSCode does not remember the size of the suggest widget when the size is reset with double click
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->   https://user-images.githubusercontent.com/106014361/210384114-42a2f891-b814-4b87-a865-37a6ce80b05e.mp4    Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.74.2 - OS Version: Windows 11
---
Título: Group Linked Files in One Tab with Dropdown
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> ![image](https://user-images.githubusercontent.com/21246924/210234395-5d22f708-4960-4f6b-8f4c-3c9fb3f0f3f4.png) I would like the ability to group 'dependent' files. In the image above, I have 4 files all directly tied to a specific component. This project will constantly have these 4 files for 1 component. Instead of having 4 separate tabs, I feel that it would be amazing to have a single tab with a dropdown containing all related files. This cleans up the top portion of the editor a good bit.
---
Título: UI Setting to color text in intellisense suggest widget according to their type
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Sometimes, when working in a larger project or a file with a lot of available declarations / things to call, I find it frustrating to try and find the suggestion I am looking for when triggering Intellisense to complete something for me due to the amount of possible completions provided by intellisense.  This could be addressed to some extent by changing the text color of each element in the suggestion widget to the color it would be assigned based off it's type.  Intellisense can already categorize the suggestions presented and assign a suggestion icon to them. That same bit of functionality could be extended upon to assign the color of each suggestion, to help different suggestions stand out from one another. The current UI displays all suggestions as white text (or whatever the user has specified for the foreground color in their color theme), which makes all the suggestions blend into one another and is a bit of a hassle to sift through.  ![Code_yt5a2UmBK0](https://user-images.githubusercontent.com/38028563/210205998-8baa28ea-1ba5-47b6-bad0-ab5373471f30.png)
---
Título: Source Control - warning label alignment issue
Descripcion: Source control warning not aligned on the right hand side with the input field:  <img width="473" alt="image" src="https://user-images.githubusercontent.com/3372902/208443415-ae750d96-c559-4652-a0ab-604740d02651.png">
---
Título: SCM input does not correctly apply input border
Descripcion: - Use Dark+ V2 or another theme that feature `input.border` - See that the SCM input in it's default state renders a border, but it doesn't look  <img width="296" alt="CleanShot 2022-12-15 at 11 20 41@2x" src="https://user-images.githubusercontent.com/25163139/207948549-4e7c93d3-d2a5-41d9-887a-2fe4b9aff263.png">  <img width="290" alt="CleanShot 2022-12-15 at 11 21 19@2x" src="https://user-images.githubusercontent.com/25163139/207948539-ded18572-e2e2-40e2-9e0c-c2bf4a8e2369.png">  Removing the 1px padding yields this, which is mostly correct but produces an artifact on the right side:  <img width="292" alt="CleanShot 2022-12-15 at 11 23 17@2x" src="https://user-images.githubusercontent.com/25163139/207948972-4f1f06fe-0e83-4d93-9be2-fd4d0091e8fc.png">
---
Título: Improve commit information with PR details
Descripcion: GitHub shows the related PR for most commit reference, making it easy to get more context on otherwise brief commit messages.  <img width="400" alt="image" src="https://user-images.githubusercontent.com/8599/207791817-55578af0-7e4d-407a-9129-491d0c51c6f0.png">  <img width="400" alt="image" src="https://user-images.githubusercontent.com/8599/207791945-37a10cb0-ddef-4ba0-b65d-b26967a8f760.png">  Whenever VS Code shows GitHub-based commits, showing this as additional information could provide a lot more context. Sapling, as [one reference](https://sapling-scm.com/docs/overview/smartlog), gets most of its context out of PRs connected to commits.  As comparison, the current VS Code's tooltip for commits:  <img width="400" alt="image" src="https://user-images.githubusercontent.com/8599/207792433-62e2999c-2929-4824-8b3f-e6904f748f54.png">  cc @alexr00
---
Título: "Commonly Used" list in the first-time-opened Command Palette
Descripcion: In user research Command Center (#149445) we found that the Command Palette on first opening is overwhelming, which might keep users from finding its value.  One core problem is that it is sorted A-Z, the top-most commands mostly not making sense in an environment that might not even have a file open:  <img width="300" alt="image" src="https://user-images.githubusercontent.com/8599/207519476-d060650a-fc65-4aee-940f-c11df2e88f9e.png">  One idea would be to curate ~5 _commonly used_ commands that have high usage (format) and make make sense in a workspace-less state (split editor, toggle sidebars). It would be only shown when the user doesn't have past command history (which will then show the _recently used_).  cc @daviddossett @jrieken
---
Título: Explore UI density modes
Descripcion: We hear quite a lot of feedback from the community on how they would like VS Code to look and feel. One theme that often comes up is related to UI density.   This feedback spans specific usability concerns like the [activity bar being hard to understand without labels](https://github.com/microsoft/vscode/issues/130051) as well as broad feedback like the UI feeling overall cramped and harder to interact with given the close proximity of buttons and other elements.  On the other side, many seek a more compact and space-efficient UI. Using the activity bar example, some users would prefer a [hyper-compact version](https://github.com/microsoft/vscode/issues/118692) that doesn't take up any horizontal space. Or perhaps they'd like the [titlebar to use as little space as possible](https://github.com/microsoft/vscode/issues/12377).  Density modes could apply to everything from low-level font/icon sizes to widgets like toolbars and lists. At a high level, they could impact larger UI parts like the status bar, title bar, and more.  This issue will explore what it could look like to feature UI density modes in VS Code.  ## Rough Sketch  Here's an idea of what this could look like to get the ball rolling. Not intended to capture every detail:  https://user-images.githubusercontent.com/25163139/206812861-0312f871-84b4-477b-bed1-b49e336d43c5.mp4
---
Título: Improve workflow for modifying user and workspace settings.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Settings management between user and workspace tabs is cumbersome. There's no way to apply a value between the two (if you are mistakenly on the wrong tab, for example). This has also led to issues with state management (https://github.com/microsoft/vscode/issues/148709 & https://github.com/microsoft/vscode/issues/165175).  It would be great to see settings displayed in a non-tabbed fashion. I don't know the correct answer, but perhaps like app configurations in Azure?  ![image](https://user-images.githubusercontent.com/15803541/206759682-841306aa-96c6-4c91-b68d-020bde137e8e.png)
---
Título: Rollback request: new styling on context menus
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ -->  Hi, I'd just like to voice my dislike of the change in 1.74 to the right click menu (specifically 1px outline and changed shape of the button highlighting). To me, the new UI doesn't fit with the rest of VSCode's strongly line-based visual language.  This 'issue' is more to facilitate discussion on the topic as I couldn't find any mention of this in the changelogs or elsewhere. Pedantic I know, but it was so noticable to me on updating. Thanks for listening.  <table><tr><td>  _Old 1.73_ ![OLD](https://user-images.githubusercontent.com/34080011/206613275-cf4f27b6-1fb6-47dd-981c-4a4e235dbbb0.png) </td><td>  _New 1.74_ ![NEW](https://user-images.githubusercontent.com/34080011/206613283-adfebe6f-a42e-433a-b3b1-f5498395d840.png) </td></tr></table> Theme is "Dark+ (default dark)" on Windows 10.
---
Título: Align primary buttons alignment
Descripcion: VS Code has primary buttons.  Most often the primary button is left aligned, but sometimes it is right-aligned.  Left Aligned: * Windows dialogs * Notifications * Export profile dialog  Right aligned: * Create PR * Comments
---
Título: Improve Find-Replace dialog to not violate user interface design principles when doing replace-in-selection
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> The Find-Replace dialog which is opened with Ctrl+F or Ctrl+H (Windows/Linux) requires the user to provide order-independent information in a specific order for replace-in-selection to work. The order is as follows:  1. Open the dialog (Ctrl+H). 2. Disable "Find in selection" in case it is enabled. 3. Enter find and replacement strings. 4. Select the text within which to find and replace. 5. Enable "Find in selection". 6. Begin replacing result by result, or replace all.  Step 2 should not be necessary. Steps 3 through 5 should be possible to be performed in any order without changing the end result. However, any deviation from the above order changes the result of performing step 6.
---
Título: Search view: auto reveal of results does not work when removing file
Descripcion: I like the idea that search results auto reveal when I remove an item via X. This however does not seem to work when removing an entire file.  Here is how it looks like where it works nicely:  ![Recording 2022-12-06 at 11 35 08](https://user-images.githubusercontent.com/900690/205888216-2a2bc53d-f1c9-4748-8112-27887b2d6b26.gif)  But when I remove a file, I do not get this auto select behaviour and the editor stays the same: ![Recording 2022-12-06 at 11 36 08](https://user-images.githubusercontent.com/900690/205888397-1d42f01f-133f-4659-b4f8-db5a015240a9.gif)  //cc @daviddossett @roblourens
---
Título: Be able to track when LanguageStatusItem is pinned
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hi,  I'm working on integrating the LanguageStatusItem into my teams language extension and we'd like to be able to tell when an item has been pinned to the status bar (preferably with an Event).    Our immediate goals are to:   - get notification when an item is pinned or unpinned - be able to alter the text of the item when (un)pinned (similar to #165940 ) - programmatically indicate whether an item should be pinned by default  It would be great if there was an accessible Event field to use or some other kind of callback setup.  FYI: @alexandrakemperms @Colengms @bobbrow
---
Título: Toggling annotated changes by group doesn't work
Descripcion: I was testing out the annotated changes / change metadata, but it seems like the option to toggle a whole group at once doesn't work. There's a menu entry for "Toggle Change" but it doesn't seem to do anything on the group node.  https://user-images.githubusercontent.com/1078012/204840518-502ba3e4-df79-4e66-8b57-845a8bf92eb4.mp4
---
Título: Missing placeholder text
Descripcion: Testing microsoft/vscode-jupyter#11963  * select "Select Another Kernel"  * the next page has no placeholder text  <img width="677" alt="Screenshot 2022-11-30 at 11 32 36" src="https://user-images.githubusercontent.com/1794099/204773336-87e44e3a-564e-4e3c-b253-8b7bf07c37df.png">
---
Título: quick import path is too long, display information can not compare the difference
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <img width="930" alt="Screenshot 2022-11-30 at 15 31 14" src="https://user-images.githubusercontent.com/45023042/204734289-19cacb52-b488-44de-b662-395f2695e725.png"> <!-- Describe the feature you'd like. --> show path ends info, `/ab/cd/..../df/foo.ts`
---
Título: Introduce setting for font size
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  This feature request is related to #519, but I would prefer to discuss this new proposal separately (the other issue has hundreds of comments, with many different ideas). We use VS Code at Google and we have an internal issue for this with 314 upvotes. So we decided to take a closer look at the problem and found that it is a request mainly for accessibility, not for more customization.  The default guidance is to use the browser zoom to increase the font size. This can work well in some cases, but it leads to less information density (because it makes everything bigger, including margins, etc.).   We don't want to let users set their own font size, as it would be hard to test and lead to many UX challenges. Instead, we propose a setting with two or three values. In the mocks below, the default setting is the current font size, "comfortable" increases everything by +1px and "large" makes all UI font-sizes +2px. The sketch is very basic and would need some re-thinking of spacing too.  @albertelo made these mocks, with 3 options for a "Font Density" setting  Default: ![image](https://user-images.githubusercontent.com/485572/204522703-28a87686-48fa-43dd-9cdb-e99c03fdb6af.png)  Comfortable: ![image](https://user-images.githubusercontent.com/485572/204522721-9ebec72a-8057-4e1e-8e37-efa993f01d4c.png)  Large: ![image](https://user-images.githubusercontent.com/485572/204522747-c2748367-d17e-46e9-b02e-d357ca83de5d.png)  If we used the browser zoom instead (as currently recommended), we would have much less information on the last screenshot.  Being able to change the size of everything (browser zoom) or just the text (this proposal) is not new. For example, Android accessibility settings have the same options: ![image](https://user-images.githubusercontent.com/485572/204525073-9ec0c92a-8857-4ffd-b868-a7d5a8022329.png)  fyi, we have also used similar settings in our other internal developer tools. This was useful for accessibility.   **Next steps**  If there's agreement on the goal, we can try to revive #144365 (after splitting it). A large part of that PR makes IConfigurationService accessible to many locations. While it touches a lot of files, I believe this could be relatively safe to submit.  The actual user-facing change will need careful review and testing. We'll be happy to help test the change, roll it out to our internal users, and collect feedback on the change.
---
Título: Quick pick progress bar is not below input box
Descripcion: I just now noticed how the progress bar was a the very end of the quick pick but not below input box, I think it should be below input box because the progress is for what I typed.  Steps: * have some history entries in Cmd+P picker * be on a slow OS (Windows) * start to type and notice progress bar is below the history entries  //cc @daviddossett
---
Título: Git: Source Control annoying unexpected Content Shift
Descripcion: Type: <b>Bug</b>  1. Have a slow PC or a remote Codespace which has a "higher" latency.  2. Open the Source Control Tab => If it is opened the first time a content shift can be seen (the modified indicators are loaded later) 3. To consistently reproduce stage a file and unstage it. => Each time you one can see that the modified indicator (![image](https://user-images.githubusercontent.com/13590797/204150455-d9d1e222-e6d6-4a66-92f6-9e0c3a9e1d77.png)) is reset (![image](https://user-images.githubusercontent.com/13590797/204150495-151d7306-4733-4c13-bfe2-65bb46241660.png)) and updates after a few seconds (which shifts the content)   Here an all on view. Look at the indicators on the right side: ![Animation](https://user-images.githubusercontent.com/13590797/204150647-9b39acce-5610-4859-b9d9-f3ddeffb4cd9.gif)  Why am I annoyed? It happend multiple times now that I hovered over the revert button, but the content shifted unexpectedly and it added the file to the staging view instead.    VS Code version: Code 1.73.1 (6261075646f055b99068d3688932416f2346dd3b, 2022-11-09T04:27:29.066Z) OS version: Windows_NT x64 10.0.22621 Modes: Sandboxed: No Remote OS version: Linux x64 5.15.0-1022-azure  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8650U CPU @ 1.90GHz (8 x 2112)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off| |Load (avg)|undefined| |Memory (System)|15.92GB (5.11GB free)| |Process Argv|--folder-uri vscode-remote://ssh-remote%2Bmasterthesis/home/masteruser/study.master-thesis --crash-reporter-id c0b728c1-554c-4067-b8ee-a399c07e544b| |Screen Reader|no| |VM|0%|  |Item|Value| |---|---| |Remote|SSH: masterthesis| |OS|Linux x64 5.15.0-1022-azure| |CPUs|Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz (8 x 2593)| |Memory (System)|31.35GB (26.08GB free)| |VM|0%| </details><details><summary>Extensions (72)</summary>  Extension|Author (truncated)|Version ---|---|--- packer|4op|0.3.0 auto-rename-tag|for|0.1.10 codespaces|Git|1.13.1 gitpod-desktop|git|0.0.65 jupyter-keymap|ms-|1.0.0 remote-containers|ms-|0.262.3 remote-ssh|ms-|0.92.0 remote-ssh-edit|ms-|0.84.0 remote-wsl|ms-|0.72.0 vscode-remote-extensionpack|ms-|0.23.0 remote-explorer|ms-|0.0.2 riscv-plus|ste|0.1.0 vscode-icons|vsc|12.0.1 riscv|zhw|0.0.8 vscode-openapi|42C|4.15.9 packer|4op|0.3.0 vscode-base64|ada|0.1.0 ng-template|Ang|15.0.1 vscode-eslint|dba|2.2.6 xml|Dot|2.5.1 gitlens|eam|13.1.1 EditorConfig|Edi|0.16.4 prettier-vscode|esb|9.9.0 auto-rename-tag|for|0.1.10 codespaces|Git|1.13.1 copilot|Git|1.61.7372 vscode-pull-request-github|Git|0.54.1 gitpod-remote-ssh|git|0.0.38 go|gol|0.36.0 todo-tree|Gru|0.0.220 terraform|has|2.25.0 rest-client|hum|0.25.1 latex-workshop|Jam|9.0.1 mongo-runner|Joe|0.6.4 run-it-on-v2|jon|1.0.2 docomment|k--|0.1.31 rainbow-csv|mec|3.3.0 file-downloader|min|1.0.12 vscode-docker|ms-|1.22.2 csharp|ms-|1.25.2 isort|ms-|2022.8.0 python|ms-|2022.18.2 vscode-pylance|ms-|2022.11.30 jupyter|ms-|2022.9.1303220346 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.12 vscode-jupyter-cell-tags|ms-|0.1.6 vscode-jupyter-powertoys|ms-|0.0.6 vscode-jupyter-slideshow|ms-|0.1.5 azure-account|ms-|0.11.2 cpptools|ms-|1.12.4 hexeditor|ms-|1.9.9 live-server|ms-|0.4.4 vscode-typescript-tslint-plugin|ms-|1.3.4 vsliveshare|ms-|1.0.5776 quicktype|qui|12.0.46 java|red|1.12.0 vscode-commons|red|0.0.6 vscode-yaml|red|1.10.1 partial-diff|ryu|1.4.3 riscv-plus|ste|0.1.0 wolf|tra|0.4.3 intellicode-api-usage-examples|Vis|0.2.6 vscodeintellicode|Vis|1.2.29 vscode-java-debug|vsc|0.46.0 vscode-java-dependency|vsc|0.21.1 vscode-java-pack|vsc|0.25.6 vscode-java-test|vsc|0.37.1 vscode-maven|vsc|0.39.2 vscode-icons|vsc|12.0.1 quokka-vscode|Wal|1.0.514 riscv|zhw|0.0.8  (2 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vslsvsres303:30308271 pythonvspyl392:30443607 vserr242:30382549 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vshan820:30294714 vstes263cf:30335440 vscoreces:30445986 pythondataviewer:30285071 vscod805:30301674 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 cmake_vspar411:30581797 vsaa593:30376534 pythonvs932:30410667 cppdebug:30492333 vsclangdf:30486550 c4g48928:30535728 dsvsc012cf:30540253 azure-dev_surveyone:30548225 pyindex848:30577860 nodejswelcome1:30587005 282f8724:30602487 gswce1:30612156 iaj6b796:30613358 dbltrim-noruby:30604474 f6dab269:30613381  ```  </details>  <!-- generated by issue reporter -->
---
Título: Remote loading state for Explorer view
Descripcion: Remote loading can take some time to show files. Meanwhile explorer is usually visible, but a empty while loading, with the usual minimal loading indicator. It would be nice if this space could be used for showing remote loading state with more details.  <img width="300" alt="image" src="https://user-images.githubusercontent.com/8599/204070540-6d58d84d-561d-4b4c-92c2-2e2306133820.png">  <img width="300" alt="image" src="https://user-images.githubusercontent.com/8599/204071181-44c13b12-9224-4909-a1ad-a7efefa99839.png">
---
Título: Explore UX to explain vscode.dev differences compared to desktop app
Descripcion: When on vscode.dev, users are often deeplinked into specific content (PR diffs, editor deeplinks), which means that a first-time user of vscode.dev may not see our getting started walkthroughs and are not set up for success when using the product. We'd like to create a way for first-time users to learn about how to use the product, e.g. by showing info about how uncommitted changes are persisted in a lightweight overlay that is dismissed as soon as the user interacts with the UI. (Possible alternatives: surface this info in banner, integrate this info into the GitHub auth dialog since all users must already sign in, always open Getting Started editor for new users)  There are similar use cases e.g. wanting to spotlight new features in the product. We've done prior exploration on integrated walkthroughs: https://github.com/microsoft/vscode/issues/106717#issuecomment-698627820
---
Título: Explore a lightweight notification UI to display confirmation feedback for actions to users
Descripcion: Motivating scenarios: - Remote Repositories has a use case for displaying a one-off message on save to let the user know that their uncommitted changes will be saved in browser storage (similar to the Figma save toast).  - Another use case is to provide confirmation that actions like copying a GitHub permalink to clipboard succeeded.   Since this could get visually noisy IMO there should be a global toggle for this so that users can opt out.
---
Título: Consider a Carousel for showcasing Walkthroughs instead of the current list of tiles
Descripcion: 
---
Título: Improve introduction to Command Palette in get started walkthrough
Descripcion: Ref #165846  Talking w/ @esonnino, we noticed a few potential problems/opportunities with how the command palette is presented in the first walkthrough: - Should we be using a button for a keyboard-driven action? Does this discourage users from learning the shortcut? - Is there a better command to try than `View toggle`?  <img width="598" alt="CleanShot 2022-11-18 at 11 27 02@2x" src="https://user-images.githubusercontent.com/25163139/202786534-3fbdfcfb-83b4-436a-bcab-018a28a46d02.png">
---
Título: Extension pack view makes actual readme content very small when the editor group is small
Descripcion: ![Recording 2022-11-17 at 11 22 42](https://user-images.githubusercontent.com/2193314/202539281-7fa6cda6-6297-429f-8241-4b3944861ed2.gif)
---
Título: Don't suppress the terminal from the menu bar in web
Descripcion: In the recent Edit Sessions UX study we ran, we saw several participants searching in vain for the terminal item in the compact menu on vscode.dev, sometimes for minutes:  ![image](https://user-images.githubusercontent.com/30305945/202282621-ec542c56-a888-41b3-8a9d-9215173712eb.png)  Could we consider bringing it back? I'm guessing we intentionally suppressed it because terminals can't run in the web, but participants were simply confused that it wasn't there without connecting its absence to the fact that vscode.dev was a browser application.   Additionally, RemoteHub contributes a welcome view for the terminal which is one of the primary ways we explain that users must continue working elsewhere to run or debug code, and the fact that the terminal is completely suppressed means one less opportunity for users to organically learn the limitations of vscode.dev through our welcome views. ![image](https://user-images.githubusercontent.com/30305945/202292244-2a16ca2f-5e09-43f6-9aee-2549eb42c129.png)   cc @bamurtaugh @stevencl
---
Título: Extension tabs widget focus outline is cut off at the top
Descripcion: On Insiders  1. Navigate to an extension detail page 2. Tab to the actionbar that has entries like Details, Feature Contributions, etc. 3. :bug: The focus outline is cut off at the top  ![Focused details view in the extension tabs widget showing the focus outline is cut off](https://user-images.githubusercontent.com/7199958/202238567-c0e438e8-96c6-45a2-8508-cb8ca06fc761.png)
---
Título: Kernel Picker MRU
Descripcion: In https://github.com/microsoft/vscode-jupyter/issues/11904 we are exploring improvements to the kernel picker. Current kernel picker presents all kernels in a flat list, it works well for scenarios where kernels are fixed (e.g., .NET) but it's not great when the kernel list is dynamic and involves user interaction. The Jupyter extension supports to use local Jupyter kernel specs, existing Python environments on user's system, or any remote Jupyter server(user provided or offered by 3rd party) as execution engine (i.e., kernels), but users find them often lost in either long list of all available kernels.  Here we want to explore a MRU list for kernels when users switch between various kernels for different purposes, hiding kernels that are not frequently used, or only create kernels/controllers when they are manually picked. It will cover following basic scenarios:  **New user**  Users would see suggested kernels from notebook extensions they installed   <img width="257" alt="image" src="https://user-images.githubusercontent.com/876920/201830594-4519f01d-db39-4551-8652-b3c43d6913f2.png">  Kernels whose relevance to the active notebook/environment are folded into action `More Kernels (${count} ...)` and users can browse them by picking this action  <img width="671" alt="image" src="https://user-images.githubusercontent.com/876920/201830771-d4616a0a-e121-42ed-8834-7550d8941e4a.png">  If users are not happy with either, they can still choose to create new Jupyter kernels through the action `Select another Jupyter kernel` contributed by Jupyter extension, through which they can use a Python environment as a kernel, connect a remote jupyter server, or start a new Jupyter server from GitHub/AZML.  <img width="684" alt="image" src="https://user-images.githubusercontent.com/876920/201830907-57b7073e-8f4c-4936-a50d-b8143f2ea94f.png">  **Second time +**  Once users pick a kernel and use it, VS Code will cache the user selection and generate a MRU list based on the kernel selection history. Next time when users open a new notebook, VS Code will present the top N items in the MRU list to users  <img width="295" alt="image" src="https://user-images.githubusercontent.com/876920/201831175-29f8af40-efe5-4262-b947-31997391652f.png">  ---  In addition to above basic scenarios, we also need to ensure that  * This new experience will be behind a setting/experiment and we would also migrate users existing kernel selection history to the new MRU list, users should take no extra step to use the previously selected kernel to run code, until they decide to switch to another kernel. * Extension which contribute `NotebookController`s to their own custom notebook shouldn't have a degraded experience with the new MRU experience.
---
Título: Walkthrough Button Toggle State does not reflect walkthrough completion
Descripcion: Walkthrough check button stays unticked despite moving on to the next step. The ability to toggle it is also a confusing user experience.  ![image](https://user-images.githubusercontent.com/25044782/201189493-c2ebcfce-2758-439d-84a7-66147d595ab9.png)
---
Título: Timeline filename doesn't show when Timeline is moved to the bottom Panel
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  - OS Version:  - Version: 1.74.0-insider (user setup) Commit: 9d5741f01a67beea273121615b2d015fc298d9ea Date: 2022-11-10T05:21:13.252Z Electron: 19.1.3 Chromium: 102.0.5005.167 Node.js: 16.14.2 V8: 10.2.154.15-electron.0 OS: Windows_NT x64 10.0.19044 Sandboxed: Yes  Steps to Reproduce:  1. Correct behaviour (default layout, Timeline in Side Bar) <img width="329" alt="image" src="https://user-images.githubusercontent.com/1485998/201077447-e3c06e5e-cbb1-41f8-8377-8a9afac722da.png">  3. Incorrect (not default layout, Timeline was dragged to Panel) - the filename is not shown , which is confusing when a timeline is pinned  <img width="1598" alt="image" src="https://user-images.githubusercontent.com/1485998/201077695-7fc48339-2d3c-41b2-a99e-91b638f77ecd.png">
---
Título: Refactor Preview: Add a Collapse All/Expand All Button
Descripcion: Please add a Collapse All/Expand All button in the top right of the Refactor Preview panel. That would make things easier if for example one wants to select only the references found in one file and unselect all others.  For example like that:  ![image](https://user-images.githubusercontent.com/58564478/201041241-8ff69a24-1aef-4982-afd8-9e2e5a212a8a.png)
---
Título: Allow more control of the status bar text for a LanguageStatusItem
Descripcion: I'm trying to adopt the LanguageStatusItem API for some things that were previously just standard status bar entries, however the way the text is rendering makes it a much worse experience than before even if when items are pinned.  For example, in Flutter we currently show the selected device on the status bar:  <img width="251" alt="Screenshot 2022-11-09 at 18 07 26" src="https://user-images.githubusercontent.com/1078012/200906940-4fd66eac-1689-4e76-bb8c-980f54c6d5c5.png">  There's a tooltip that tells you how many devices are connected. It isn't prefixed with "Flutter" because that consumers more space.  Using the new API, it's natural to set `text` to something like "Flutter Device" and `detail` to the device name:  ![image](https://user-images.githubusercontent.com/1078012/200907278-0ea4a64b-5408-4083-82ae-dfa1ef1a22e0.png)  However if you want the original behaviour and you _pin_ the item, you just get "Flutter Device" and not what you really wanted:  ![Screenshot 2022-11-09 at 18 10 03](https://user-images.githubusercontent.com/1078012/200907408-95352feb-af93-4a17-aae3-3fcfc16612cf.png)  And if we just set `text` to the device name, then the main flyout doesn't look so good because it doesn't have a description of what it is.  It would be nice if we could control the status bar text separately, otherwise we have to decide between a better experience, or users being able to collapse the item into the flyout. Right now for Flutter devices it feels like status bars are better (even though I'd like for users to be able to move it into the flyout).  Slightly related (and I can raise separate issues if worthy), things I'd also love:  - Add tooltips - The ability for text/detail to be display like columns rather than just joined with a hyphen. The current layout in my screenshot above looks a bit messy and I think would look better if the `detail` fields were all lined up.
---
Título: updatePathsOnRename dialog labels too long, Touch Bar overflows
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.73.0 - OS Version: macOS latest  ### Steps to Reproduce  1. have Touch Bar or equivalent emulation somehow. 2. configure your Control Strip to show 4+ buttons somehow.  > this setting is at macOS Settings > Keyboard > Customize Control Strip. > or you already have 3, try play some music or video to Media Control be appear. 3. trigger updatePathsOnRename somehow.   What I got:  <img width="1004" alt="Touch Bar screenshot, updatePathsOnRename dialog buttons shown, buttons are [No, Always automatically update imports, Never automatically update imports] and no [Yes] button." src="https://user-images.githubusercontent.com/5380174/200808318-7566cc15-5f7d-4908-bf40-873766c962be.png">  Expected:   <img width="1004" alt="Touch Bar screenshot, updatePathsOnRename dialog buttons shown, buttons are  [No, Always automatically update imports, Never automatically update imports, Yes]" src="https://user-images.githubusercontent.com/5380174/200809096-0277e80b-ef1e-4acd-8ae7-1fdbadeb92b3.png">   this text is from here, this is unnecessarily repeating dialog body, and too long even without touch bar. (it can be reduced!)  https://github.com/microsoft/vscode/blob/0bd1531e0051f4d0c3d27ce052c253c581ce0570/extensions/typescript-language-features/src/languageFeatures/updatePathsOnRename.ts#L157-L163  It could be fixed by Touch Bar show some ellipsis, but in this case, what should be updated is button label imo.
---
Título: Walkthrough tile buttons have too much styling variation
Descripcion: Ref: #165846  There's a mix of codicons, PNG icons, single-line vs. multi-line, and so on.  <img width="486" alt="CleanShot 2022-11-08 at 10 04 57@2x" src="https://user-images.githubusercontent.com/25163139/200641747-bbc63510-0c9a-40ea-bf99-5593536646ea.png">
---
Título: Improve the Getting Started experience
Descripcion: Now that the dust has settled on the initial work to stand up walkthroughs and their contribution to the `Get Started` page, I think it's time to take a look at the experience overall with fresh eyes.  A few questions to kick off a discussion:  Do the walkthroughs... - Meaningfully increase retention for new users? - Increase productivity by showcasing features like command palette, side-by-side view, etc.? - Get dismissed immediately/contribute to a negative experience for experienced developers? - Need to pop up right after install? (vs. an opt-in model)   Some obvious quick wins in the meantime: - Raise overall UI quality/polish bar for walkthroughs - Move/add/remove walkthrough steps as needed - Give walkthrough and individual steps a content pass - Refresh theme picker thumbnails  ## Current state  ![CleanShot 2022-11-08 at 10 09 30@2x](https://user-images.githubusercontent.com/25163139/200642422-e77eb986-5a6e-4ae9-b837-e5ce5dc4cd69.png)  ![CleanShot 2022-11-08 at 10 09 13@2x](https://user-images.githubusercontent.com/25163139/200642371-7fe0f1d2-9597-4628-8896-fb354047179a.png)  cc @stevencl
---
Título: Refactor Preview panel: Button coloring
Descripcion: Hi Team,  At the moment the Refactor preview buttons are both colored as primary. ![image](https://user-images.githubusercontent.com/13024177/200420882-38a71b1d-9a86-4ba5-bbcb-710d79f73920.png)  Would it be possible to change the Discard button styling to secondary, to be aligned with the [UX guidelines](https://github.com/microsoft/vscode-webview-ui-toolkit/blob/main/src/button/README.md#best-practices)?  - VS Code Version: 1.73.0 - OS Version: CromeOS 104.0.5112.83
---
Título: Walkthrough tile buttons are missing background color
Descripcion: ## Before  <img width="449" alt="CleanShot 2022-11-04 at 10 42 17@2x" src="https://user-images.githubusercontent.com/25163139/200041092-5002242b-c98a-4901-8469-04272109fcf2.png">  ## Current  <img width="467" alt="CleanShot 2022-11-04 at 10 39 43@2x" src="https://user-images.githubusercontent.com/25163139/200040739-f585c363-4ec4-4921-a1c3-4fa94dd20175.png">
---
Título: Improve discoverability of Continue On
Descripcion: Experiment with options, UX sync and additional user studies         - SCM viewlet         - Explorer title menu?         - Have it be its own category in the remote indicator         - Run menu?
---
Título: Layout of row labels in "More Info" section of Extension's Details could be improved
Descripcion: Type: <b>Bug</b>  ![image](https://user-images.githubusercontent.com/6726799/199498371-02c274ff-ac20-42ca-a7f6-834d95e36ba0.png)  1. No padding (see "Last released" running directly onto the date. 2. No hanging indent (see "Last", "updated" and "Identifier" all with same left start position)  VS Code version: Code - Insiders 1.73.0-insider (8fa188b2b301d36553cbc9ce1b0a146ccb93351f, 2022-11-01T15:30:14.729Z) OS version: Windows_NT x64 10.0.22000 Modes: Sandboxed: Yes   <!-- generated by issue reporter -->
---
Título: Consistent on/off wording in menus
Descripcion: Type: <b>Bug</b>  The user menu in VS Code has at least 2 different ways to say if something is a toggle and what its state is. There is an opportunity to align those variations. Maybe "turn on" is meant as a hint to how the command is called?  <img width="407" alt="image" src="https://user-images.githubusercontent.com/8599/199368161-6e89d11d-5b9e-4f65-95a0-d61d13aa2070.png">  After enabling Remote Runnel … is it "On", or will it have a "Turn off"? <img width="414" alt="image" src="https://user-images.githubusercontent.com/8599/199368493-b11264e9-2f2e-4697-a4f8-b071d5b7ff4f.png">  Just showing enabled/disabled might be enough of a hint for users ("Settings Sync enabled"). All entries would have a "..." as they all open a quick pick.  VS Code version: Code - Insiders 1.73.0-insider (8fa188b2b301d36553cbc9ce1b0a146ccb93351f, 2022-11-01T16:00:04.165Z) OS version: Darwin x64 22.1.0 Modes: Sandboxed: No   <!-- generated by issue reporter -->
---
Título: Actions to add paths to include/exclude in search results unclear wording
Descripcion: <img width="245" alt="image" src="https://user-images.githubusercontent.com/31675041/196500906-4bbbecf8-de1c-4969-96fb-fe5a7a9ae9a6.png">  This is the context menu when you right-click on a folder in the search result (when a user wants to do a find+replace)  `Restrict Search to Folder` adds the path to the "files to include" text field. `Exclude Folder from Search` adds the path to the "files to exclude" text field.  Is this wording unclear? Should it explicitly say "Add to files to include/exclude" instead of the wording we have here?
---
Título: Add settings for the size of activity bar
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Add an option to set the size (width) of the activity bar. This stackoverflow question shows that people do want this feature: https://stackoverflow.com/questions/45048214/activity-bar-width-in-visual-studio-code
---
Título: Extension Disable button does not have border radius on the right side
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.72.2 - OS Version: Windows_NT x64 10.0.22000  Steps to Reproduce:  1. Open VS Code 2. Open any Installed Extension Page 3. See the `Disable Button` 4. You will notice `border-top-right-radius` and `border-bottom-right-radius` is set to `0` (problem was not present in the previous version)  <img width="1920" alt="P1" src="https://user-images.githubusercontent.com/77537933/196233685-5617c437-75bc-4bbc-a660-0f1c71029ae7.png">  Didn't happening with any other button  <img width="1920" alt="P2" src="https://user-images.githubusercontent.com/77537933/196234310-59221392-6d57-47e7-8080-4a9db20f4730.png">  if you open developer tools you will see  ```css .extension-editor> .header>.details> .actions-status-container> .monaco-action-bar> .actions-container> .action-item.action-dropdown-item> .extension-action.label {   border-radius: 2px 0 0 2px, } ``` I don't know why is it necessary!?  Also see the **Uninstall** Button looking weird after recent update.
---
Título: Some ui indicator to better show the current edit file
Descripcion: Type: <b>Feature Request</b>  provide some ui indicator to better show the current edit file  VS Code version: 1.72.2 (Commit: d045a5eda657f4d7b676dedbfa7aab8207f8a075 Date: 2022-10-12T22:15:55.763Z) OS version: Darwin arm64 21.6.0 Modes: Sandboxed: No   <!-- generated by issue reporter -->  The **Color Theme** sometimes can't show the current edit file clearly, <img width="1186" alt="vscode default color them" src="https://user-images.githubusercontent.com/516243/196110350-3a271b4b-dde6-44ba-a9a0-f665c90fa611.png">  As my example shows, it seems that the 2nd file is the current edit file, e.g. its filename is highlighted, but actually the 3rd file is the current edit file. <img width="1214" alt="the filename is highlighted" src="https://user-images.githubusercontent.com/516243/196110763-6c26b1f1-c76a-46ee-b1e1-724c5fa0bfaa.png">  I search color theme in the marketplace and find many themes share this problem.  Thanks.
---
Título: Create new branch from... ref picker flow on desktop should not prompt for branch name first
Descripcion: 1. Select create new branch from... from ref picker on desktop git repo 2. :bug: I'm asked to provide a branch name, I would expect to first be asked to pick a ref to create my branch from since the `from...` suggests additional prompts that are contextual to that action
---
Título: Source control svg icons stay dark when the repository row is selected.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: N/A  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> Version: 1.72.0 (Universal) Commit: 64bbfbf67ada9953918d72e1df2f4d8e537d340e Date: 2022-10-04T23:21:58.256Z Electron: 19.0.17 Chromium: 102.0.5005.167 Node.js: 16.14.2 V8: 10.2.154.15-electron.0 OS: Darwin x64 21.6.0 Sandboxed: No  Steps to Reproduce:  1. Install the [git-graph extension](https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph) 2. Open a repository 3. Open the source control view 4. Make sure you currently have a theme which can toggle icons when selected (such as 'Light' or 'Light+') 5. Click the repository row so it becomes blue  Expected result: The git graph icon changes along with the other icons.  Actual result: The git graph icon stays black  more info here: https://github.com/mhutchie/vscode-git-graph/issues/690  https://user-images.githubusercontent.com/2737650/196002067-29002c28-c71b-42a3-8806-85e5e143fe2f.mp4
---
Título: Please make the debug button bigger
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  The debug button is really small. Can it be big? The drop down menu as well as the other debug buttons could be on a toolbar under the debug title and this could be much bigger and easier.   ![](https://user-images.githubusercontent.com/2157285/194909958-ddbd39a6-c730-4f85-b4e0-b2d624e1de34.png)  Or the play button could be bigger button like the 'commit' button:  <img width="422" alt="Screen Shot 2022-10-10 at 8 00 21 PM" src="https://user-images.githubusercontent.com/2157285/194913105-16014005-edc2-43c3-a1fa-007b7b2393d0.png">
---
Título: Dropdowns are taller on web compared to desktop
Descripcion: ## vscode.dev <img width="499" alt="CleanShot 2022-10-09 at 20 16 01@2x" src="https://user-images.githubusercontent.com/25163139/194794695-7732282b-197c-4cfa-9878-0d04a9113140.png">  ## macOS <img width="483" alt="CleanShot 2022-10-09 at 20 15 45@2x" src="https://user-images.githubusercontent.com/25163139/194794699-a4950f93-7440-4854-88e2-af698e3d7673.png">
---
Título: Get Started: polish walkthrough star icon styles
Descripcion: <img width="626" alt="CleanShot 2022-10-07 at 10 18 27@2x" src="https://user-images.githubusercontent.com/25163139/194614354-87778b5f-6704-456f-884d-61f8ff197fc7.png">
---
Título: Merge Editor user study Part II
Descripcion: Planned for end of October. Same scenario as https://github.com/microsoft/vscode/issues/159561 To validate all the great improvements we have done to the merge editor
---
Título: Code action widget status bar border does not match editor hovers
Descripcion: ## Code Actions  <img width="403" alt="CleanShot 2022-10-04 at 10 46 10@2x" src="https://user-images.githubusercontent.com/25163139/193889852-f8b4e675-19cd-4a78-ae57-d66d7073dda2.png">  ## Editor Hover  <img width="531" alt="CleanShot 2022-10-04 at 10 46 14@2x" src="https://user-images.githubusercontent.com/25163139/193889874-a6fd564e-3864-43bf-befe-c34193b6c7aa.png">  It looks like the editor hover is doing this to achieve the softer border: ``` // hoverBorder === editorHoverBorder  collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}, }`), ```  I don't know of a way to pull this off in pure CSS when using our CSS vars. Might need to add the rule in the JS instead.
---
Título: Code action widget: focus border surrounds entire list on open if all items are disabled
Descripcion: Do we do this for other widgets? It seemed off to me at first sight.  <img width="405" alt="CleanShot 2022-10-04 at 09 58 26@2x" src="https://user-images.githubusercontent.com/25163139/193880969-13081900-6e65-4f28-b15e-3c10678fcd62.png">
---
Título: Define and apply guidance for icon toggle states
Descripcion: Refs https://github.com/microsoft/vscode/issues/162441  In some situations where a state is toggled (locking, pinning, hiding), we use a different approach for which icon is exposed. Sometimes we show the current state (e.g. locked) and sometimes we show the target state (currently unlocked, but the locked icon is displayed).   Ideally we can have reusable guidance to apply elsewhere.
---
Título: Support colored highlight for icons in completion
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> When the entry is selected/highlighted, the icon lost its color, making it harder to spot:  ![image](https://user-images.githubusercontent.com/3254987/193469601-958edb39-5105-44b9-bf47-400d85676e16.png) ![image](https://user-images.githubusercontent.com/3254987/193469613-329be7f8-2dc7-4afc-9327-371d1050f5c2.png)  If the completion is using CSS and not ANSI Color, it would be great if it can by highlighted while still making the original icon color visible (or maybe just skip highlighting the icon)
---
Título: add run task action to terminal dropdown
Descripcion: Could look like this, but have `pinned` and/or `recently used` tasks entries as well as a `Configure Tasks` one.  Hiding it by default is a good way to avoid cluttering the action bar - so people only see it if they want to  <img width="285" alt="Screen Shot 2022-09-30 at 12 56 57 PM" src="https://user-images.githubusercontent.com/29464607/193346960-48aa879a-dc2b-48f6-bb9a-e743fa4a1645.png">
---
Título: Preview interesting incoming changes before a user has to Sync
Descripcion: Few git tools out there highlight conflicts of local edits with remote changes before the user pulls. GitHub has some affordance this for Pull Requests, where it does of a branch is behind, will have merge conflicts, and/or can be auto-merged.  <img width="400" alt="image" src="https://user-images.githubusercontent.com/8599/193332529-394e5c91-3db2-45fd-a3cf-c8c0e87550ea.png">  **Why this matters?** For users this would make pulling in remote code more predictable and less surprising. It is also a more complex operation that git doesn't offer built-in and no easy workaround for (like `git pull --dry-run`). As an extension of this, getting a sense of how much remote code drifts it could help developers to commit and push more often, avoiding conflicts.  **Idea 1**: Show more than just the number of commits to/from the remote branch, but also file changes `+9 −8`. Commits from from a 1-line change to major refactoring, so the file edits would give more context.  `git diff main origin/main --shortstat` provides summary and seems fast to run.  The UI for this could be in the button.  **Idea 2**: Highlight remote file changes against local files in the staging area.  `git diff master origin/master --numstat` provides the list of `+/-` for all changed files.  cc @lszomoru   Other ideas: - When users don't have background fetch enabled yet, the UI for this feature could prompt them to do so. - Do the same for _branches_ against _main_, maybe GHPRI could provide that information from GitHub's API.
---
Título: Lock icon inconsistency between output and editor groups
Descripcion: We recently changed the output lock icon to show a lock when the output is not locked (@mjbvz @sandy081). However we have other locations in the UI that use the lock icon, for example when you open a second editor group, you can lock it from the "..." menu:  <img width="673" alt="image" src="https://user-images.githubusercontent.com/900690/193274118-957c754b-275a-4912-b054-8008406f6b65.png">  Here the icon indicates the current state, where as in output channel it indicates the state after clicking.  This is a UX inconsistency.
---
Título: Make tree view more stable
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  ## Make tree view UI more stable When I'm using the tree view, I often find myself losing the item I'm working with and needing some moment to re-discover it. I have found a reproducible scenario in which this happens and recorded a video of it.  ### Video https://user-images.githubusercontent.com/153391/193243131-34b66936-bde2-4969-a8da-161a2a4327ef.mov  ### Description Basically, when I create a new folder below an existing one, the tree view will add a new item below the folder and expand that folder to make it visible. I am assuming that there is some code there that makes sure that the new item will be in view (which makes sense), but that code is a bit heavy-handed and often the tree view will scroll even when there seems to be no real reason to do so, causing a disconcerting jump making me lose track of where the item I'm working with is and having to re-discover it. This takes me out of my focus and happens quitte often, because the tree view is such a central widget in the VSCode UI.   I found that whether this happens or not and how far the jump will be seems to be related to the length of the scroll bar and the position of the folder you create a new item under. Ironically it seems to be worse when the item is high up in the view, even though that actually means that there is no need to scroll at all. I expect this scrolling to occur only when really needed. In general I'd like to be in control of the scrolling as much as possible, so that the position of all items remains stable unless I change it myself.  ### Feature or bug, you decide I'm posting this as a feature request, but some might consider it a bug... I see you have 5K issues already, so probably this one would have low priority, but when it's time for you guys to see what you might improve in VSCode UI-wise, I hope you consider this one as it is a very central component and probably it will turn out to not be that hard to fix.
---
Título: Spinning icons are blurry on standard DPI screens
Descripcion: Related https://github.com/microsoft/vscode/issues/162292  I've always thought the sync icon in particular looks really bad:  ![image](https://user-images.githubusercontent.com/2193314/193094085-098a6e78-024c-437f-833d-f1a03667997a.png) ![image](https://user-images.githubusercontent.com/2193314/193094122-44b31e8c-d5ac-4a25-b896-705213d85258.png)  There are two problems I see:  1. The sub-pixel anti-aliasing (red/blue on the edges) goes away which is a jarring transition. Arguably icons like this should not have SPAA as it may make vertical and horizontal lines appear to have a different weight:    ![image](https://user-images.githubusercontent.com/2193314/193094829-b24a605a-d557-4b76-9e19-9e402becde79.png)    This is something that comes with icon fonts, regular SVGs do not get SPAA applied. We could force disable it if we wanted, but it's probably not worth trying as it looks fine and we're used to that icon rendering now. I doubt anyone has noticed this or cares tbh 😉  2. The non-rotating icon is a vector rasterized and then displayed directly, the rotating icon is a vector rasterized in the non-rotated position and then rotated. I believe using animations also puts it on a separate layer or something which forces SPAA to go away and may also degrade rendering quality in favor of performance in other ways. Consider the blurry image above compared to a regular `transform: rotate(45deg)`: ![image](https://user-images.githubusercontent.com/2193314/193096912-b9830a3a-a041-4e68-ba5e-8a9e84b681d9.png)  This is much less noticeable with the loading icon as it's more simple:  ![image](https://user-images.githubusercontent.com/2193314/193093901-42c3a5e4-d0ee-42d8-90ac-b07e03ecdc07.png) ![image](https://user-images.githubusercontent.com/2193314/193093912-7e3a5fe8-81d0-4321-859f-b491fadbeded.png)  However, it would still look much more crisp and at home with the rest of the icons if it did not blur:  ![image](https://user-images.githubusercontent.com/2193314/193097982-73975c2a-fb44-4234-bdc0-fd442cf6951b.png)  As for the recommendation, we could use gifs or a set of pngs, however we would then lose the vector support. After thinking about it a bit here are some options we could look into, we would need to make sure they perform sufficiently:  - Set up a `setInterval`\* and get the start time via `performance.now()` and the time on `setInterval`, with this a `translate: rotate(xdeg)` could then be applied - Rasterize the icon up front in a canvas to generate images at the ideal scale and the matching background color, swap those images out using the interval trick above - Rasterize the icon up front in a canvas, create image data object and draw them to a canvas (I'm not sure if browsers limit the number of 2d canvas contexts like they do with webgl contexts) - Create a DOM element for each rotation we want to present, and show only the one we want at any given time  \* `requestAnimationFrame` could also be used if we wanted higher FPS, we would then get a higher quality animation at the cost of CPU/battery
---
Título: Merge editor actions are all hidden in "..."
Descripcion: ![image](https://user-images.githubusercontent.com/900690/193035722-53e98052-39e0-4c51-80e2-67d0359e105e.png)  I personally find it a bit strange to have no primary action and only secondary actions hidden behind "...". What is the rationale?  //cc @daviddossett
---
Título: Terminal hover positioning is unfriendly
Descripcion: * have a long'ish link, like `echo https://github.com/microsoft/vscode/pull/162335` * mouse-hover over the number * :bug: the link hover appears left aligned, ignores my mouse x-coordinate, and forces me to move the cursor into it (which can be finicky)  https://user-images.githubusercontent.com/1794099/193029983-cc12425a-8d2f-4359-88a5-ee9e5ed74f8c.mov
---
Título: Killing a process on a port should not result in a notification
Descripcion: Testing #161846  1. Kill a process listening on a conflicting port 2. Notice you get a notification that persists until you choose to close it  Since terminal prompts often live right on the bottom of the window, this can be particularly annoying as it can get in the way of the prompt, which then _requires_ a click  I'm not sure the best fix for this, I think some indicator of success is useful but I don't think the loudness of a notification is appropriate
---
Título: When I run 'git fetch" command, I can't see whether it is complete or not.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.71.2 (system setup) - OS Version: Windows_NT x64 10.0.17763  Steps to Reproduce:  When i run `Git: Fetch` command, i don't know whether it is complete or not. There is no circle loading animation.  ![image](https://user-images.githubusercontent.com/8075421/192790324-ae4f1655-d3d4-48c9-8435-4c07faad3e6c.png)
---
Título: Code action widget accessibility strangeness
Descripcion: ![Recording 2022-09-28 at 09 13 49](https://user-images.githubusercontent.com/900690/192712837-0eee8b18-fe59-4cde-adf1-ed7b092598ad.gif)  I find it a bit strange that hovering over entries in the list puts the blue focus color and then pressing enter seems to take the element under the mouse. I think that is not very accessible or expected, I would have rather expected the blue element to stay stable and only change with keyboard up/down. Compare with quick open for example!     //cc @isidorn @daviddossett
---
Título: Code action widget UX inconsistencies
Descripcion: <img width="587" alt="image" src="https://user-images.githubusercontent.com/900690/192712068-e659a83b-b068-4849-b552-16c98ada4a2f.png">  **Differences:** * using background shadow or not * different background color for status area * different text colors  I feel the new widget should adopt the style from existing widgets such as hover and suggest widget.  //cc @daviddossett
---
Título: Edit session semantics are not easy to understand
Descripcion: Testing #161875  This is more of a meta issue then very specific.  **I like 👍  and understand this flow:** * I can create the workspace I am currently in in a different target by selecting "Continue working on" * This opens the target with the same contents of the workspace and restores my changes * 🆒   **But from here on, I am a bit lost:** * Are the changes now syncing back and forth between the 2 workspaces forever? * What does it mean to "Turn Off" or "Turn On" edit sessions? [1] * What does "Resuming edit sessions" do (I see progress in the status bar)  [1] specifically this point is unclear to me:  <img width="426" alt="image" src="https://user-images.githubusercontent.com/900690/192695969-0b041726-69c0-449f-b910-6c16131a414c.png">  It seems to be on by default on vscode.dev and I can turn it off, but what does it bring? Is it not true that edit sessions would automatically enable as soon as I picked "Continue working on"?  //cc @daviddossett
---
Título: Unclear that there are overloads
Descripcion: Testing #161809  When I type the following  ```ts  const edit = new vscode.WorkspaceEdit(), edit.set() ```  the hover that comes up for `set()` looks like this:  ![image](https://user-images.githubusercontent.com/30305945/192617122-982719f4-8fa5-40a6-a78d-f77cd7844d0d.png)  I was initially confused about why I was seeing a `NotebookEdit`, then later realized it was because there were overloads.  I'm wondering if we could communicate more clearly that there are multiple overloads--I think because I am looking at the top of the hover for the method signature, I easily miss the `1/4` indicator in the bottom left (I realize it's not that far apart, but I was confused for 2-3 seconds 😅). Maybe we could make it a hyperlink / blue in color to communicate that it is clickable, and also avoid using monospaced font to communicate it is part of the UI rather than the docstring?  Failing that I wonder if we could reorder the overloads so that the `TextEdit` overload comes first (I assume that is the common case).
---
Título: Hard to tell that Edit Sessions were turned on with two different auth providers
Descripcion: Testing #161875  1. open a repo in insiders.dev and make a change in a file 2. `Continue on` desktop :bug: no changes   ![continueOn](https://user-images.githubusercontent.com/2019016/192595803-abd1ad99-cd1b-4fae-b904-16dfea8e9ba6.gif)
---
Título: Continue On > Reopen on the Desktop flow when GitHub Repositories is not installed on desktop
Descripcion: Testing #161875  When I tried to reopen https://insiders.vscode.dev/github/bpasero/vscode-bisect on desktop I was asked to install the extension but then nothing opened. If it matters, I am running from a "testing" profile (i.e. not my default profile).  ![image](https://user-images.githubusercontent.com/900690/192538412-eea038f1-58d5-480d-b733-51e5a441e3b9.png)
---
Título: Confusing message about opening VS Code Desktop
Descripcion: Testing #161857  * on vscode.dev * run continue on * clone locally * I see a browser-native dialog to open desktop * I see a custom message that just reads "We tried opening Visual Studio Code - Insiders on your computer." which is confusing  Unsure if we have to show the message or not but its wording needs to be improved. I mean vscode.dev tried and _succeed_ in opening desktop so don't confusing me with this message. If we cannot prevent it I'd suggest to rephrase it and assume that it worked and give me a close option. Today, there this only covers the "didn't work cases" despite success  https://user-images.githubusercontent.com/1794099/192487773-954d4acb-6805-4e12-a801-2f909547b6e2.mov
---
Título: Use modal after cloning a repo
Descripcion: Testing #161857  * clone a repo from within VS Code * when done a notification is shown * IMO a modal is the better choice of UI because this something I am awaiting and wanting to take action on  <img width="1527" alt="Screenshot 2022-09-27 at 11 15 02" src="https://user-images.githubusercontent.com/1794099/192486380-283fecbc-28e3-4ddb-ba16-ac346d1d5f1c.png">
---
Título: Surface missing enablement of Edit Sessions to user in Continue On flow from web to desktop
Descripcion: # Problem  Follow up from https://github.com/microsoft/vscode/issues/160476#issuecomment-1243860813  1. Have uncommitted changes in insiders.vscode.dev/github/microsoft/vscode 2. Do not have edit sessions turned on locally 3. Continue On > Reopen on the Desktop or Clone Locally and Open on Desktop 4. :bug: edit session is not resumed locally, and there is no indication that the user was missing some configuration  This is a papercut since the user has to then manually enable edit sessions, and even after doing so requires a window reload or manually running `Resume Latest Edit Session` for the edits from web to apply to the desktop instance.   Note that settings sync must also be enabled manually across all clients, but I don't think we have any prior art to deal with this scenario where some service or feature needs to be enabled cross-client.  # Proposal  My proposal is to contextually ask the user to turn on edit sessions when going from web to desktop with a pending edit session. We can't always ask the user to turn on edit sessions, because a majority of users won't know what edit sessions are. Instead: 1. When using Continue On with an edit session that needs to be applied, the protocol url that is opened should have an additional query parameter. This communicates to the desktop app that it was invoked via a Continue On scenario with an edit session that needs to be applied 2. If the user has already turned on edit sessions, there is nothing further to do here--we go ahead and resume the edit session 3. If the user has not already turned on edit sessions,      - the first time the desktop application is launched via a Continue On flow, we will display the auth quick pick asking the user to turn on edit sessions with a particular auth session     ![image](https://user-images.githubusercontent.com/30305945/191090101-ade45706-c0c9-4e62-a077-61b848655eef.png)      - if the user ignored the prompt, in future windows, we will not prompt again, but will instead display a badge in the accounts menu which the user can dismiss by clicking on the item (note, we do not display it in the global activity menu)     ![image](https://user-images.githubusercontent.com/30305945/191089901-808b5573-9782-4aec-af19-26cc6fa77088.png)  # Implementation notes  - Continue On protocol URL invocations going from web to desktop, including URLs which are handled by extension URI handlers, will have an additional `continueOn` query parameter which indicates that the app launches as part of a Continue On scenario. This query param is appended by core and parsed by core in the 'main' protocol URL handler so that extensions don't have to deal with it (today, both affected scenarios are contributed from Remote Repositories) - I end up setting the fact that the app launches via Continue On using the environment main service and reading it from the edit sessions workbench contribution. I am still testing whether this works if for e.g. there is already a window open and the Continue On destination is opened in a new window - Workbench contribution tracks whether it has seen the continueOn state in the environment service using a machine specific application scoped memento key, we don't want to sync this across machines because the user may have multiple machines they need to set up edit sessions on  /cc @joaomoreno @TylerLeonhardt
---
Título: Conflict looks different in inline vs. merge editor view
Descripcion: ## Inline  Note all three lines highlighted with background color  <img width="262" alt="CleanShot 2022-09-08 at 16 01 57@2x" src="https://user-images.githubusercontent.com/25163139/189240750-001407b7-3b00-47f9-a3a0-e43364f9b25a.png">  ## Merge Editor  We only highlight the changed line and specific word.   <img width="184" alt="CleanShot 2022-09-08 at 16 02 04@2x" src="https://user-images.githubusercontent.com/25163139/189240805-eeca8c90-983b-49cb-9452-faf176a1894c.png">  If we followed the inline style and still rendered a word diff, wouldn't we be able to get away without using the borders to indicate the region?  cc @isidorn
---
Título: Explore Extensions Management notification center
Descripcion: Extracted from https://github.com/microsoft/vscode/issues/151599  We might need a way to show extension specific msgs in there. We do not want to use notifications. Example msgs: "you have 2 deprecated extensions", "you have been using this extension happily, consider sponsoring or rating it", "this extension has an update"
---
Título: add configuration to remove rounded corners
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> ## Existing Issues - #151968 is closed and locked  <!-- Describe the feature you'd like. --> ## Summary ![image](https://user-images.githubusercontent.com/54838975/188039267-8a6c48b3-369c-4d05-b409-613fe47d91ce.png) rounded corners are a very subjective topic. such a [drastic change](https://code.visualstudio.com/updates/v1_71#_rounded-buttons) should be provided a way to disable it.  ![image](https://user-images.githubusercontent.com/54838975/188039248-58ed08b9-6241-428e-b8d1-9417eff8597d.png) there was an option to disable rounded selection, but there weren't one to disable rounded buttons.
---
Título: Extension details page should be tuned towards runtime info when extension is installed
Descripcion: Clicking on an extension opens it's extension details page. This makes sense when an extension is not installed, but for installed extensions we can do better. I propose that when the user click on an installed extension we still show the extension details page with the same header, but the focused tab is different. Instead we focus the "Runtime Status" tab and this tab should be rich with runtime information. Currently it only shows activation time.  I suggest that this tab has the full functionality of the Running Extensions experience (report issue, disable extension, start EH profile). And has additional useful statistics about runtime. For example number of crashes / detected slowness.   @joaomoreno contributed to the idea fyi @alexdima @jrieken who I know are passionate about runtime extension info and might have ideas on cool info we could show here @TylerLeonhardt for ext report issues improvements  Let me know what you think about this  <img width="852" alt="Screenshot 2022-09-01 at 19 29 01" src="https://user-images.githubusercontent.com/1926584/187976281-9df9974b-a5a4-40d6-be9c-f7137cf080c6.png">
---
Título: Merge editor customer development
Descripcion: 
---
Título: Editor action items are not correctly centered
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.70.2 - OS Version: macOS Monterey 12.5.1  ![editor-actions](https://user-images.githubusercontent.com/19797697/187339418-c4d1e261-024e-44ec-b63f-42d598ee1e8a.png)  <img width="633" alt="image" src="https://user-images.githubusercontent.com/19797697/187339548-1d15bb82-49d7-4f2a-a1c8-89528f971963.png">  ### Asymmetry padding  <img width="205" alt="Screen Shot 2022-08-30 at 11 48 45 AM" src="https://user-images.githubusercontent.com/19797697/187339579-d5e1b7a7-4976-46d3-95e1-1c72ba8318b9.png">  ### Unnecessary last child margin  <img width="202" alt="Screen Shot 2022-08-30 at 11 49 00 AM" src="https://user-images.githubusercontent.com/19797697/187339591-7756857b-0f57-4011-bb48-e243f74122c1.png">
---
Título: Merge editor checkboxes are not self explanatory
Descripcion: Initially when I open a merge editor I see this on both sides (I believe):  ![image](https://user-images.githubusercontent.com/900690/187089854-b28c0d3e-f073-411f-9419-c67fa59c1f00.png)  The hover tells me:  ![image](https://user-images.githubusercontent.com/900690/187089862-d7b3c555-5275-4f09-a4fa-e0420f0ebaaf.png)  What does it mean "result is dirty"?  I somewhat get that you need to indicate 3 states: * I did not click yet * I clicked * I removed my check  I am not sure how to improve this, maybe clarify in the hover what exactly each state does? And why are both sides with a black dot from the beginning, it almost looks that the file is dirty there?  I think initially I would expect none of the checkboxes to be filled in anyway unless maybe you autopicked a change because it can be merged automatically?  //cc @daviddossett
---
Título: If source control pane is small, you might not realize you're pushing
Descripcion: When it's small:  ![image](https://user-images.githubusercontent.com/2644648/186786805-bd04e384-c7e7-4b3a-8de3-8d7f1d52475a.png)  When it's bigger:  ![image](https://user-images.githubusercontent.com/2644648/186786823-47e20b7e-74a6-4f19-ba90-17697f8daa5f.png)  I didn't realize this was also gonna sync since the `& Sync` part was hidden.
---
Título: Extensions - "Reload Required" button does not have rounded corners
Descripcion: <img width="603" alt="image" src="https://user-images.githubusercontent.com/3372902/186637113-74855798-fe2c-4667-a5dc-a4f2927875fd.png">
---
Título: Define and apply guidance about quick pick titles and placeholders
Descripcion: Testing #158798 but actually noticeable across our whole UI. It is sad to see a mix of quick pick with and without title and placeholder. Worst, sometimes the title part is used like a placeholder and vice versa. This seems to be based off developer preference and not rules. We should define  * what to use as placeholder text and if it ever should be empty * when and what for to use the title  Command picker  <img width="703" alt="Screenshot 2022-08-23 at 15 08 47" src="https://user-images.githubusercontent.com/1794099/186166095-af9481e4-cb96-48bf-b502-51e0423e0020.png">  ssh connection   <img width="663" alt="Screenshot 2022-08-23 at 15 08 31" src="https://user-images.githubusercontent.com/1794099/186166047-4ba8b342-572f-4596-8bba-bab56166e1b8.png">  Continue on...  <img width="917" alt="Screenshot 2022-08-23 at 15 06 28" src="https://user-images.githubusercontent.com/1794099/186165644-6c350f0a-8de1-422f-af75-e4c2564f80c1.png">
---
Título: Introduce a "home" command center view
Descripcion: Ref #155458  Opening the command center today opens the file search mode (cmd/ctrl + p). Users have to discover how to use prefixes to enter other modes.  Since we're looking at how to  improve the discoverability of modes (>, @, etc.) and also _possibly_ introducing an entry point for full text search in the CC, I think there's an opportunity to solve for both here. Some early ideas:  ## Demo  - Cmd/ctrl + K to open the command center - Shows short list of most-used modes + `?` to view all - All other keybindings still work as before—experienced users wouldn't need to use this - File search would need to start using a prefix - Bonus: users learn shortcuts via this list  ![CleanShot 2022-08-19 at 16 00 09](https://user-images.githubusercontent.com/25163139/185717502-24b15936-d18e-490f-bdbb-e4d0af2324dc.gif)
---
Título: Welcome views should use primary + secondary button styles
Descripcion: Today we have 2-3+ primary buttons used in our Explorer. Extensions can also contribute many more. As a general UI principle I think we should only feature one primary action with the rest being styled as secondary.   ## Before <img width="399" alt="CleanShot 2022-08-18 at 14 15 51@2x" src="https://user-images.githubusercontent.com/25163139/185496787-ffd26f7e-6a50-49ad-9765-c3f0c83e08b5.png">  ## After <img width="424" alt="after" src="https://user-images.githubusercontent.com/25163139/185496857-c167fafe-d891-4705-bfc3-25f1b2844b57.png">  We recently adopted this behavior in notifications where we ensure the first action renders as a primary button. There's no special API other than the order of the array afaik.   cc @misolori
---
Título: View menu consistency and length
Descripcion: We are filling the "View" menu more and more with text editor specific things:  ![image](https://user-images.githubusercontent.com/900690/185352190-ac81c871-f67f-4b8c-836d-a874a8524e98.png)  Bringing this up as a UX issue to think about if this is scaling going forward. Especially in the context of VSCode supporting custom editors and notebooks, I think this may not be the right solution, at the minimum maybe have a sub menu?  //cc @hediet
---
Título: Improve Transition Story From New Merge Editor To Single File With Conflict Markers
Descripcion: Some users prefer the conflict marker decorations, others the new merge editor.  There should be an easier mechanism to switch between both.
---
Título: Documentation: Add option to return to the previous Git resolver
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  It would be nice if you could document how to return to the previous source resolver.   **Context:** The new 3-way git resolver is not clear enough when you have multiple conflicts.  It was difficult for me to find out how to return to the old system one.  For the record, for others who wish to do the same: - Disable Git: Merge Editor - Enable Git > Decorations: Enabled  ![image](https://user-images.githubusercontent.com/643359/184172204-0f603bc5-9a79-4c82-a9cf-c5f5856719ad.png)
---
Título: File from Explorer doesn't highlight merge conflict when 3-way merge editor is enabled
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.70.0 (system setup), commit: da76f93349a72022ca4670c1b84860304616aaa2 - OS Version: Windows 11 21H2 (22000.832)  ## Steps to Reproduce  ![image](https://user-images.githubusercontent.com/28638469/183984102-f013a5dc-a2e9-4e1e-b4ba-6dfea3c4944b.png)  When you **enable** 3-way merge editor(i.e. set `"git.mergeEditor": true`), and open conflicted file from **Explorer**, merge conflict isn't highlighted and it looks like plain text.  ## Expected behaviour  ![image](https://user-images.githubusercontent.com/28638469/183984550-e76dde86-e97a-4011-9337-57a607e42384.png)  Merge conflict should be highlighted like the legacy merge conflict view.  Or, @gnowland suggested in https://github.com/microsoft/vscode/issues/156608#issuecomment-1209911456 that user should choose how to see conflicted file from explorer via settings.  > The legacy merge editor should at least be made available for use when viewing a conflicted file in the editor (file selected from Explorer), and the new 3-way merge editor be used when in "merge mode" (file selected from Source Control). >  > Instead neither is used when viewing a conflicted file (file selected from Explorer). >  > The following settings would go a long way to alleviate some of the pain: >  >     1. git.mergeEditor (boolean) ✅ >         >        * True: use 3-way merge editor for Source Control >        * False: use legacy merge view for Source Control >  >     2. editor.mergeEditor (boolean) >         >        * True: use 3-way merge editor for Explorer >        * False: use legacy merge view for Explorer >  >  > A nice-to-have would be an Editor Command (in Command Palette) to switch between the 3-way and legacy merge editors for the currently visible file, but I understand if this isn't a trivial request :)
---
Título: Merge conflict highlighting
Descripcion: Type: <b>Bug</b>  Hi  I am using VS Code 1.7. I opened a local git branch and rebased against the upstream master. There was a merge conflict on a file that I needed to manually edit. I opened the file, I only see the raw merge text, e.g. <<<<<<<<<<<<<<<< HEAD  some content  >>>>>>>>>>>>>>>> >> acd698fdhjf (<branch commit message>)  Usually I see highlighting with the open to ACCEPT INCOMING CHANGE or ACCEPT CURRENT CHANGE with highlighting to help visually understand the merge conflicts. Now there are no options in the UI to accepting and incoming change, and there is no highlight, just the raw text as described in above sample.   VS Code version: Code 1.70.0 (da76f93349a72022ca4670c1b84860304616aaa2, 2022-08-04T04:38:48.541Z) OS version: Linux x64 4.18.0-372.16.1.el8_6.x86_64 Modes:  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-10850H CPU @ 2.70GHz (12 x 3500)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: disabled_software<br>video_encode: disabled_software<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 1| |Memory (System)|30.86GB (17.51GB free)| |Process Argv|--crash-reporter-id f0703bbc-94a3-4094-a039-6798b619e8d2| |Screen Reader|no| |VM|0%| |DESKTOP_SESSION|gnome| |XDG_CURRENT_DESKTOP|GNOME| |XDG_SESSION_DESKTOP|gnome| |XDG_SESSION_TYPE|x11| </details><details><summary>Extensions (8)</summary>  Extension|Author (truncated)|Version ---|---|--- asciidoctor-vscode|asc|2.9.8 vale-server|err|0.15.1 vscode-docker|ms-|1.22.1 python|ms-|2022.12.0 vscode-pylance|ms-|2022.8.10 jupyter|ms-|2022.7.1002181843 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.9   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492:30256859 vslsvsres303:30308271 pythonvspyl392:30443607 vserr242cf:30382550 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vshan820:30294714 vstes263cf:30335440 vscoreces:30445986 pythondataviewer:30285071 vscod805cf:30301675 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593cf:30376535 pythonvs932:30410667 wslgetstarted:30449410 cppdebug:30492333 pylanb8912cf:30529770 vsclangdc:30486549 c4g48928:30535728 d7fjc500:30543455 dsvsc012cf:30540253  ```  </details>  <!-- generated by issue reporter -->
---
Título: UX - Remove !important for the opacity of the focused elements
Descripcion: Related #156443  This pull request removes the `!important` property for the opacity of the focused elements.  This enables widgets (ex: button) to have control over their opacity when for example the widget is disabled.
---
Título: Add UI for toggling sticky scroll
Descripcion: Type: <b>Feature Request</b>  There is a bit of space at the start of the breadcrumb which could accommodate a pin / pinned codicon with which to toggle the stickyScroll setting.  ![image](https://user-images.githubusercontent.com/6726799/183882466-b02c29d0-a208-4d25-9748-9d1d71d57827.png)   When no DocumentSymbolProvider is available the space could either be blank or could show the pin codicon if the setting is currently false and the pinned-dirty if true, with a hover tip explaining why sticky scrolling isn't happening for the current document.  /assign @aiday-mar   VS Code version: Code - Insiders 1.71.0-insider (dced70bbf36d3c53c08e791da1791ac7fc42519b, 2022-08-10T05:17:53.560Z) OS version: Windows_NT x64 10.0.22000 Modes: Sandboxed: Yes   <!-- generated by issue reporter -->
---
Título: New rebase conflicts resolution completely broken. Diff worse than before.
Descripcion: Version: 1.70.0 Commit: da76f93349a72022ca4670c1b84860304616aaa2 Date: 2022-08-04T04:38:48.541Z Electron: 18.3.5 Chromium: 100.0.4896.160 Node.js: 16.13.2 V8: 10.0.139.17-electron.0 OS: Linux x64 4.18.0-408.el8.x86_64  I rebase a branch with a single word different, I get everything as a conflict and can't see where is the difference is.  The diff engine is seriously damaged...  ### 3-way merge only `user_rst` vs `usr_rst` ![image](https://user-images.githubusercontent.com/6713988/183832647-ab4d20c0-6968-403f-b571-907f2300c2b5.png)  ### 2-way merge ![image](https://user-images.githubusercontent.com/6713988/183834308-2a577173-a223-401f-ab1e-b1f258de9fcf.png) vs ![image](https://user-images.githubusercontent.com/6713988/183834332-86633e24-c9f1-44b5-92ea-bcc138393ebd.png)  I should see only the line with the `user_rst` shown as a conflict, not the tens of lines I currently have.  VSCode should also try to be coherent on naming, `3-way` doesn't exist even though it's named like that `3-way merge` in the release note and everywhere else. ![image](https://user-images.githubusercontent.com/6713988/183833618-69409b0d-600e-4b17-86ea-4bfc680750fb.png)  Even disabling the `Merge Editor` still opens a window with the conflicts... ![image](https://user-images.githubusercontent.com/6713988/183834443-178b6a09-587b-464a-b19e-c4109720f559.png)
---
Título: Button: Improve outline focus affordance
Descripcion: I have been looking at experimenting with the outline so that it appears "inside" the button widget instead of "outside" of the button widget. Such an approach would enable us to have a consistent outline for the button and dropdown button widget.  <img width="237" alt="image" src="https://user-images.githubusercontent.com/3372902/183694554-b345a35a-9921-4004-a787-c7b9a3619463.png">   <img width="251" alt="image" src="https://user-images.githubusercontent.com/3372902/183694406-1628db21-fe4d-4892-a245-f979c48fa73f.png">  This matches the button outline in the Fluent UI design system:  <img width="136" alt="image" src="https://user-images.githubusercontent.com/3372902/183695804-d8d1fd50-70fc-4cae-98b4-62876f5e6d93.png">  If you would like to try out the code, it is pushed to the `lszomoru/button-widget-outline` branch.
---
Título: Cannot accept both sides for conflicts that cannot be merged semi-automatically
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  - VS Code Version:  Version: 1.70.0 Commit: da76f93349a72022ca4670c1b84860304616aaa2 Date: 2022-08-04T04:38:16.462Z Electron: 18.3.5 Chromium: 100.0.4896.160 Node.js: 16.13.2 V8: 10.0.139.17-electron.0 OS: Windows_NT x64 10.0.19044  - OS Version: win10  Steps to Reproduce:  1. git stash 2. git pull 3. git stash pop 4. unable to accept both changes come from remote and local changes when merge after git pull. New version vscode let me chose only theirs or mine BUT I NEED ACCEPT BOTH CHANGES!!!!!!!!!!!!!!!!!
---
Título: Clicking stick headers should provide some context above and highlight the resulting destination
Descripcion: Current behavior:  ![Recording 2022-08-07 at 11 26 34](https://user-images.githubusercontent.com/2193314/183305615-3df709d7-cae7-4fce-b179-b7430e838e5d.gif)  I expect it to work just like ctrl+clicking a symbol, where we highlight the result briefly and scroll it to ~25% down the viewport so there's some context.  ![Recording 2022-08-07 at 11 27 44](https://user-images.githubusercontent.com/2193314/183305663-a85174e3-ce05-4f28-8f2f-89d9b4efb675.gif)
---
Título: Let me ctrl/cmd+click symbols in the sticky header
Descripcion: One of the first things I tried to do was ctrl+click an interface in the sticky header, but it just takes you to the header line like a regular click
---
Título: Use Segoe UI Variable for Windows 11
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Please use [`Segoe UI Variable`](https://docs.microsoft.com/en-us/windows/apps/design/signature-experiences/typography "Windows 11 - Typography") (`Small` variant for tiny text, `Text` variant for normal text, `Display` variant for large text) and [`Segoe Fluent Icons`](https://docs.microsoft.com/en-us/windows/apps/design/signature-experiences/iconography "Windows 11 - Iconography"), as the default Sans-Serif font and the icon font - for icons used in Visual Studio Code - respectively, in Visual Studio Code (at least on Windows 11, and maybe Windows 10).      + [Fonts (Official)](https://docs.microsoft.com/en-us/windows/apps/design/downloads/#fonts "Download")   + [Fluent System Icons](https://github.com/microsoft/fluentui-system-icons "Libraries")    Thank you.
---
Título: Can the inputbox show a red outline for invalid filenames?
Descripcion: Testing #155731  Ref https://github.com/microsoft/vscode/issues/155731#issuecomment-1198594918  When the user types in an invalid file name,  - The inputbox can show a red outline with an error message - The save file dialog shouldn't open when the user presses enter while they're still focused on the inputbox and what they typed is invalid  I'm not sure what to do about the "New file (filename)" quickpick option when the file name is invalid, though.  CC @Yoyokrazy
---
Título: Ability to easily toggle the old merge view (3 Way Merge Editor)
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  (I searched through everything with merge editor and didn't find this feature. Hope I'm not duplicating.)  I really like this interface for new merge view, but there are scenarios in which the old view is beneficial. I would love the ability to be able to easily toggle between the 3 way merge editor and the old merge editor.  Use case:  A changelog file which is modified regularly, but has persistent differences between two branches. In this case, user needs to check all the checkboxes.
---
Título: Button - disabled button appears as enabled when focused
Descripcion: I have noticed that a disabled button widget appears as enabled when it receives focus. Is that expected?  Disabled button:  <img width="324" alt="image" src="https://user-images.githubusercontent.com/3372902/181277936-823b08d7-bcb4-4f76-8a4b-060b0c3537e5.png">  Disabled button with focus:  <img width="333" alt="image" src="https://user-images.githubusercontent.com/3372902/181278023-6076e14c-511f-4cb8-b1ca-43d6cbe4b995.png">  I have tracked this down to [this style](https://vscode.dev/github/microsoft/vscode/blob/079c49ed1277fc42d8a49823dc6fbab473223503/src/vs/workbench/browser/media/style.css#L188-L189). I think that the disabled button should display the outline but do not change the opacity.
---
Título: Progressive behavior of the title bar elements
Descripcion: Testing #156220  I like the progressive behavior of the menu bar. What I'm missing is that the command center and the layout controls adapt. They should hide when they run out of space to show themselves.  <img width="607" alt="image" src="https://user-images.githubusercontent.com/4674940/181122880-1546e1a8-0941-4e37-990e-98e85d95a487.png">
---
Título: Common input box with filters
Descripcion: With Find Widget introduced in File Explorer and Notebook Editor, we now have multiple implementations for input box with multiple filter/toggles. We reused `FindInput` which has 3 built-in filters (`caseSensitivity`, `wholeWord` and `regex`) and had to add additional filters in our own ways. File Explorer and Notebook handles this differently and there isn't a clear path of how they can be unified and how other input box users can adopt this in the future.  In addition, Problems panel and Terminal recent commands have their own input box with a single filter, which are not inherited from find input.  ## Variations   _Text Editor_  * 3 built-in filters * Additional filter (Find in Selection) as a separate button  <img width="340" alt="image" src="https://user-images.githubusercontent.com/876920/180824924-885a897e-71d5-4d5d-84bf-71f8a5961aea.png">  _Terminal_  * 3 built-in filters only  <img width="278" alt="image" src="https://user-images.githubusercontent.com/876920/180825068-83e1ede0-e9eb-4eac-93b0-5b0179c1f244.png">  _Webview_  * Built-in filters all disabled/hidden  <img width="192" alt="image" src="https://user-images.githubusercontent.com/876920/180825213-69aae59e-8b5d-40fd-8e08-577a53686c7f.png">  _File Explorer_  * Built-in filters disabled/hidden * Additional filter shown as a toggle inside the input box  <img width="164" alt="image" src="https://user-images.githubusercontent.com/876920/180824735-2b1d7adf-b3b5-4494-801c-1c4fa23f8938.png">  _Notebook_  * 3 built-in filters only * Additional filters shown in a dropdown/context menu  <img width="268" alt="image" src="https://user-images.githubusercontent.com/876920/180825386-acd9ab7a-8f06-41f8-9d74-65462aac1420.png">  _Problems_  * Multiple filters which are specific to Problems only  <img width="329" alt="image" src="https://user-images.githubusercontent.com/876920/180832881-6c5385fa-9bb2-4378-9773-40f28814b338.png">   ## Proposal   The input boxes from find widgets shown above all derive from the original `FindWidget` in Monaco, which only has 3 builtin filters and they are no longer universal as not all embedders have the capability of implementing all of them. Embedders also have the need to the extend the filters which is not well supported, leading to the fragmentation of the find widgets.  The proposal here is experimenting if we can introduce a generic `input` box with dynamic filters support at the `base/platform` level (not from `editor` or `workbench`). The common features are:  * Support filters as Toggle button * Support filters as Dropdown/Context menu * Broadcast events when filter state changes  The UI for it can be a mix of the input boxes from File Explorer and Notebook, and embedders can contribute dynamic filters and declare how they should be rendered (as Toggle or Dropdown) statically.  A draft for the interfaces of the new input box and its filters:  ```ts interface InputFilter {     value: boolean,     icon: Codicon,     isPrimary: boolean, }  interface InputFilters {     [key: string]: InputFilter, }  type FilterUpdateEvent<T> = { [K in keyof T]?: string },  interface InputWithFilters<T = InputFilters> {     filters: T,     onDidChangeFilter: Event<FilterUpdateEvent<T>>, } ```  The input box in the Notebook Find Widget can then be declared as   ```ts interface NotebookEditorFindInputFilters extends InputFilters {     caseSensitive: InputFilter,     wholeWord: InputFilter,     regex: InputFilter,     searchInMarkdown: InputFilter,     searchInOutput: InputFilter, }  type NotebookEditorFindInput = InputWithFilters<NotebookEditorFindInputFilters>,  // notebook editor find input filter object {     caseSensitive: { value: false, icon: Codicon.caseSensitive, isPrimary: true },     wholeWord: { value: false, icon: Codicon.wholeWord, isPrimary: true },     regex: { value: false, icon: Codicon.regex, isPrimary: true },     searchInMarkdown: { value: false, icon: Codicon.markdown, isPrimary: false },     searchInOutput: { value: false, icon: Codicon.output, isPrimary: false } } ```  ---  cc @joaomoreno @Tyriar @andreamah @mjbvz feedbacks welcome!
---
Título: Commit split button looks odd on my theme
Descripcion: You can see in the image that the split part doesn't look right.  FYI my theme is [Amethyst Dark](https://marketplace.visualstudio.com/items?itemName=amodio.amethyst-theme)  ![image](https://user-images.githubusercontent.com/641685/179894824-15423e82-7fad-47b8-92c0-ccf1e205d002.png)  /cc @lszomoru
---
Título: Disabled commit button still clickable
Descripcion: https://user-images.githubusercontent.com/35271042/179813745-c8edf122-6592-4a57-9c40-c61d04bf0729.mp4  I wonder if we just need to add `pointer-events: none` on the disabled class?
---
Título: Use modal dialog for open repo message
Descripcion: * start with an empty window * from the explorer select the clone from repo flow * select a repo and (local) folder * 😕 when clone is done a notification, not a modal is shown   <img width="1136" alt="Screenshot 2022-07-18 at 10 34 20" src="https://user-images.githubusercontent.com/1794099/179473899-a6aed957-7ce9-4da2-8530-386a7723c5e1.png">
---
Título: ActionWithDropdownActionViewItem - add separator
Descripcion: This pull requests adds a separate to the `ActionWithDropdownActionViewItem` which as far as I can tell is currently being used only in the extension edtior, and the extensions list. Adding the separate aligns the UX with the "Commit Action Button".   <img width="1373" alt="image" src="https://user-images.githubusercontent.com/3372902/178955126-83182dc6-5bc8-4885-8ec7-83affdec54cf.png">
---
Título: Finalize Profiles UX
Descripcion: I like the profile functionality, but don't like the profile selector at all. It's too prominent, confusing as it looks generic.  ![image](https://user-images.githubusercontent.com/6461412/178699021-a54d2bca-2f0e-4e1c-bd2a-1b128d7a08de.png)  - I don't associate this with profiles, nor with settings. 'Default' is not enough, nor is the icon meaningful to me. A better icon would be the settings gear icon  - The right side of the status bar is typically for workspace related information (git branch, warning.errors). Settings related information belong to the bottom of the activity bar. - Instead of using the status bar, I suggest to use the settings gear in the activity bar. It should look different if a profile is active. Maybe a letter icon as an overlay (the first letter of the profile name, `T` for testing) or a short text below it. The rich hover should then show more information and would even some links to configure the profile.  - Don't show any information when in the default profile. IMO profiles are an advanced feature.
---
Título: Put the "Discard Changes" button on the left
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hi    On the "Source Control" Window, Put the "Discard Changes" button on the left of the file name or folder name.    In the current situation, when you click to Open File or Stage Changes, it is easy to click on Discard Changes, resulting in misoperation                  Thanks
---
Título: Clicking in the scrollbar gutter in the side panel causes light show
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No  Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version:  ``` Version: 1.69.0 Commit: 92d25e35d9bf1a6b16f7d0758f25d48ace11e5b9 Date: 2022-07-07T05:28:46.408Z Electron: 18.3.5 Chromium: 100.0.4896.160 Node.js: 16.13.2 V8: 10.0.139.17-electron.0 OS: Darwin arm64 21.5.0 ```  - OS Version:  CPUs | Apple M1 (8 x 24) -- | -- GPU Status | 2d_canvas: enabled canvas_oop_rasterization: disabled_off direct_rendering_display_compositor: disabled_off_ok gpu_compositing: enabled metal: disabled_off multiple_raster_threads: enabled_on opengl: enabled_on rasterization: enabled raw_draw: disabled_off_ok skia_renderer: enabled_on video_decode: enabled video_encode: enabled webgl: enabled webgl2: enabled Load (avg) | 2, 2, 2 Memory (System) | 16.00GB (0.08GB free) Screen Reader | no VM | 0%  Steps to Reproduce:  1. Search in extensions 2. Click the scroll gutter   https://user-images.githubusercontent.com/11521496/178446201-c05f140d-ae50-4c07-924b-bd3a16be0039.mov
---
Título: Make the Spacing between Icons on the SCM Title Consistent
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Is it possible to make the spacing between icons on the SCM title consistent when working on a multi-root workspace? Currently the spacing is different as shown below.  ![image](https://user-images.githubusercontent.com/43232804/178397369-3ef49155-ff1c-41cf-a7f8-4c666783a148.png)
---
Título: Commit split button divider causes loss of selection
Descripcion: Some things I noticed today was that the commit split button divider is a lot stronger than the other split buttons in the product. I also noticed when I hovered over the split buttons divider that I would then not have either portions of the buttons selected and instead be selecting the parent container.  <img width="293" alt="image" src="https://user-images.githubusercontent.com/4544166/178293148-590ca9a5-237b-4748-bdaa-476ada7daf2d.png">
---
Título: Git: "Sync changes" Button is always shown when "Commit" is hidden
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Not tested.  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  In the previous version of vscode, the "Sync changes" button in the "Source Control" tab was displayed only when there were differences detected between the upstream and local branch. Now it is always displayed, when we disable the "Commit" button.  PS: I have hidden the "Commit" button because it takes a lot of vertical space if you have multiple git repos displayed under "Source Control".   ```jsonc // used this config "git.showActionButton": {         "commit": false     } ```   Version: 1.69.0 (user setup) Commit: 92d25e35d9bf1a6b16f7d0758f25d48ace11e5b9 Date: 2022-07-07T05:28:36.503Z Electron: 18.3.5 Chromium: 100.0.4896.160 Node.js: 16.13.2 V8: 10.0.139.17-electron.0 OS: Windows_NT x64 10.0.19044
---
Título: Margin between `Gutter indicators` and `Folding`
Descripcion: <!-- **PLEASE** look for preexisting feature requests before opening a new one as a 👍 on a preexisting issue is more important than opening a new issue or leaving a comment. --> ## please provide space between `Git: Gutter Indicator` and `Function Folding` ``` code-version : 1.69.0 92d25e35d9bf1a6b16f7d0758f25d48ace11e5b9 x64 ``` I Think `Github Pull Request` extension `Comments API` is responsible for it please look into this issue  ![2022-07-08 (1)](https://user-images.githubusercontent.com/52835045/177960443-016dc79d-97de-43f0-902b-774ea3bc3b81.png)
---
Título: Move all hovers to use the custom hover
Descripcion: We decided in the UX sync (https://github.com/microsoft/vscode/issues/151517#issuecomment-1156599391) that we want to eventually move towards all custom hovers. The reasons are:  - Consistency, currently we have 2 different types which look different - We can control exactly how they display - We keep getting users cannot hover the tooltip issues (like https://github.com/microsoft/vscode/issues/154359) which is a solved problem for the custom hovers by holding alt  For the last point I've said before that unless I'm missing something, I do not think this meets the bar for minimum accessibility but rather for exceeding expectations. The native tooltip is a Windows control and it's acting exactly as it's meant to, even the Windows documentation states this:  > Do users need to interact with the tip? If so, use another control. Users can't interact with tips because moving the mouse makes them disappear.  https://docs.microsoft.com/en-us/windows/apps/design/controls/tooltips  The problem should be solved in Windows if it's important instead of trying to rush us doing this migration.
---
Título: ButtonWithDropdown separator style update
Descripcion: Update the separator style of the dropdown button:  <img width="422" alt="image" src="https://user-images.githubusercontent.com/3372902/177211238-0f490d37-5cb9-4e93-9883-ab53435f4e38.png">
---
Título: Settings Profiles - discoverability of how to create them
Descripcion: Clicking on the Settings Profiles item in the status bar opens a quickpick, but gives no clue that to create a new profile I need to use a submenu from the Manage gearwheel.  Ideas: - Add a hint to the placeholder text - Add a set of management options at the end of the list - Add a single "Manage..." option which produces a secondary quickpick replicating options from the submenu already available from the gearwheel.
---
Título: Settings Profiles quickpick improvements
Descripcion: Issue Type: <b>Feature Request</b>  ![image](https://user-images.githubusercontent.com/6726799/177144434-8832f8cf-fdd9-4f0d-bf2f-ea7d4c31f79d.png)  Profiles seem to get listed in order of creation. Is that intentional?  Could "Current" suffix on currently selected one be replaced by a checkmark, similar to how the "Customize Layout..." quickpick indicates currently-selected items?  ![image](https://user-images.githubusercontent.com/6726799/177144589-c8b4f6f1-153c-4b85-b02d-e559aa7375ae.png)   VS Code version: Code - Insiders 1.69.0-insider (0b3574dcef8f35fec4ee4f83dc958c1f16ef6fce, 2022-07-01T05:17:04.343Z) OS version: Windows_NT x64 10.0.22000 Restricted Mode: No   <!-- generated by issue reporter -->
---
Título: "Reload Required" button is not always visible after downgrading to an older extension version
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes (but requires an extension for the repro)  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.68.1 or the latest Insiders. - OS Version: Windows (I assume others too)  Steps to Reproduce:  1. Install some extension. 2. Downgrade to an older version of the extension.  Bug: If the Extensions pane is not wide enough, the "Reload Required" UI is not visible, which makes it easy for users to mistakenly believe that no reload was required and that it's using the downgraded version already, when it is not.  ![image](https://user-images.githubusercontent.com/19859882/176951287-34a24c17-a9c2-4d7d-b4a4-9e6324f82565.png)  Suggested fix: Render the "Reload Required" button with higher precedence and/or on the left of the "Upgrade to" button and/or render it below, etc. -- or maybe don't render the "Upgrade to" button yet until the Reload is done.
---
Título: Improve inlay hints background color contrasts
Descripcion: We have received feedback that inlay hints blend in with the code too much. We aren't eager to tackle that with changing font sizes because that can "harm" readability. Instead we should tweak the colors, esp for our default themes
---
Título: Have a command to open either side of a diff editor
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> There's a growing number of ways you can get a diff view in VSCode. Some that I know of are: 1. Clicking a line on the timeline view  2. Selecting 2 files and choosing "Compare Selected" 3. Git built-in extension clicking on the Source Control view 4. Gitlens clicking on various UI elements to show a split view 5. Github Pull Requests and Issues extension which shows a split view when looking at PRs  After reviewing the changes in a diff view it's common to go back to the original (or changed) file. But this is where the workflow falls apart. Sometimes there isn't a way to get back to the original view, or the UI has a different approach to doing it depending on where you came from.  - Git has "Open File" which you can tie to anything (not bounded to anything by default) - GItlens also has "Open File" which isn't bounded to anything by default, often set to something else even though its used in the same context. - Github Pull Requests and Issues has [another](https://github.com/microsoft/vscode-pull-request-github/issues/3624#issuecomment-1157813588) way of doing it also (no shortcut but a new button). - Timeline, I don't know if it provides anything for this, so you have to manually navigate  The point is, it's cognitively difficult to remember 4 or 5 different ways of performing the same action. Can VSCode provide a shortcut/UI to do this which maps to the same keybinding for extensions to use? I understand some times a view cannot be opened so that would need to be accommodated (maybe nothing happens). The issue right now is every extension is implementing their own way of opening/closing diff views.   ## What is expected  Hopefully the below helps to put this into more context. I'll come up with a hypothetical "shortcut" just to illustrate what would be expected as being consistent behaviour across Code and it's extensions. Assuming `ctrl+cmd+o` along with `when: isInDiffEditor` is used as an "Open File" shortcut. I will refer to this as "Open File" below.  ### Timeline Split View - [Setup] Clicking a previous entry on the timeline opens diff view - Toggling "Open File" on the current version would be the same as opening that current file - Toggling "Open File" on the older version would be the same as calling "Show Contents" which shows the version being looked at in a single pane  ### Compare Selected - [Setup] Selecting 2 files and choosing "Compare Selected" - Toggling "Open File" on one split opens that file in a single pane - Toggling "Open File" on the other split opens that file in a single pane  ### Source Control (Split View) - [Setup] Making a change to a file, then going to Source Control and clicking the file in the staging area triggers a split view - Toggling "Open File" on the HEAD pane should should be the same action as `git.openHEADFile` (currently unbound) - Toggling "Open File" on the changed pane should should be the same action as `git.openFile` (currently unbound)  ### Other Extensions  Third-party extensions is where it becomes tricky, but I would expect them to follow the same standard. So using the same "Open File" command/shortcut should allow the user to open that split in a single pane. I know Gitlens already support this so it wouldn't be too difficult for it to use the same shortcut for consistency.
---
Título: Make accept and close Git commit editor more user friendly
Descripcion: Testing #153366  1. Open Git commit editor 2. Only way to accept everything is to close the editor  To make this more beginner friendly, consider: 1. Cmd + enter accepts and closes it 2. Having a floating blue widget button in the Commit Editor
---
Título: Commit operation was cancelled notification might not be needed
Descripcion: Testing #153366  When I close the editor with the empty commit message you show the notification. I think this is a bit out of context.  I would prefer if we do not show a notification at all. And potentially show the model dialog on editor close. "Are you sure you want to close since the commit will get canceled?"   ![Screenshot 2022-06-29 at 12 44 34](https://user-images.githubusercontent.com/1926584/176418484-4b7393b4-5ca8-4a34-804e-fece53023b0b.png)
---
Título: Task POI navigation UX is confusing
Descripcion: Testing #153365  When I use cmd+up/down to navigate between POIs in task output, the blue box renders for a second on the item I have selected, but then disappears. I didn't understand what was happening to the focus border.
---
Título: Improve hover feedback for insert toolbar
Descripcion: ![image](https://user-images.githubusercontent.com/876920/176248563-2a90e09a-bb7b-494d-b1fa-636afc613870.png)   While testing https://github.com/microsoft/vscode-jupyter/issues/10598, I was following a [blog post](https://coderzcolumn.com/tutorials/python/interactive-widgets-in-jupyter-notebook-using-ipywidgets) to test ipywidgets, my workflow is more or less  * have two browser pages side by side * copy code from the blog post * hover on the end of the notebook document in vscode.dev, move around to trigger the insert toolbar to show up, click the `+ code` button and then paste code into it * click the run button  Hover to show the insert toolbar is hard, I don't have confidence that I can have it to show up easily so at the end I started to use keyboard shortcut. I tried to do the same with Google Colab and found myself more successful in inserting cells through the insert toolbar.
---
Título: Git - should origin appear first in the list?
Descripcion: Testing #153317  <img width="1324" alt="Screen Shot 2022-06-28 at 1 05 21 PM" src="https://user-images.githubusercontent.com/29464607/176241583-ab4864d3-9fdc-4d23-9777-7013a063bd2c.png">
---
Título: Git - Show Banner To Close The File To Continue
Descripcion: Testing #153317  ![image](https://user-images.githubusercontent.com/2931520/176209760-c6f54902-288d-4d00-9f11-a31de556f6d6.png)  This Banner: ![image](https://user-images.githubusercontent.com/2931520/176209919-009bf4cc-7f54-4400-9891-b7134d32cfa5.png)  Could have a text "Close this file to commit"
---
Título: Git - SCM foldable regions like "Changes" should have their actions disabled when they do nothing
Descripcion: Testing #153366  ![Recording 2022-06-28 at 07 45 27](https://user-images.githubusercontent.com/2193314/176208901-0093faf9-41d8-4c4d-a35f-ab06a19da77d.gif)  Also I'm not sure the twisty should be there at all when there are 0 entries in the tree?
---
Título: Can the COMMIT_EDITMSG and related files use the SCM icon?
Descripcion: Testing #153366  Current:  ![image](https://user-images.githubusercontent.com/2193314/176204357-ddc28f1e-99b5-4b32-b344-187fbc2b890e.png)  Proposal:  ![image](https://user-images.githubusercontent.com/2193314/176204676-3245604a-58df-4b09-bc94-0e0caff249b4.png)
---
Título: Can't click on "Show Command actions..."
Descripcion: Testing #153365  ![Recording 2022-06-28 at 13 19 52](https://user-images.githubusercontent.com/38270282/176166505-20da65d2-9c2a-4358-91f3-09b5820da4eb.gif)
---
Título: Options for profile status bar item
Descripcion: <img width="192" alt="CleanShot 2022-06-24 at 07 50 02@2x" src="https://user-images.githubusercontent.com/35271042/175560823-b1c6ee08-9bfd-4acf-a645-235f5a450d60.png">  Personally, I'd love to see: - An option to hide the status bar item or text for default profiles (I only want to know when I am in another profile) - An option to use an icon instead of text for the profile   <img width="139" alt="CleanShot 2022-06-24 at 07 52 25@2x" src="https://user-images.githubusercontent.com/35271042/175561160-6e94eead-63c5-4b20-b0a6-f98bf0aaea20.png">
---
Título: Branch protection lock should appear consistently in quick pick
Descripcion: ## Status Bar <img width="128" alt="CleanShot 2022-06-24 at 07 47 19@2x" src="https://user-images.githubusercontent.com/35271042/175560165-e473e131-b737-4f40-beb0-bbef32924d8c.png">  ## Quick Pick <img width="230" alt="CleanShot 2022-06-24 at 07 47 05@2x" src="https://user-images.githubusercontent.com/35271042/175560123-b49ba0cf-462a-4658-b73d-cc517300948e.png">    ## Expected <img width="209" alt="CleanShot 2022-06-24 at 07 48 13@2x" src="https://user-images.githubusercontent.com/35271042/175560356-970b24f2-f470-4338-9340-f1aa6f2d4220.png">
---
Título: Reverse the visual logic of text link decorators
Descripcion: Hi!  At the moment, the default design for plaintext links in VS Code is that the links are only painted in different colour in regular states, and then on hover they get `text-decoration: underline`. This makes them rather inaccessible as W3C guidelines suggest we should [not only use colour to differentiate elements](https://www.w3.org/WAI/tips/designing/#dont-use-color-alone-to-convey-information). ← Even GitHub is doing this wrong as this link is just blue, and then underlines on hover.    ![link underline](https://user-images.githubusercontent.com/44162846/175490354-bbd0a707-c4bd-4844-9ad4-a0a226d72120.gif)  This causes issues when there is a lot of text, and users have to hunt where the links actually are. I am a professional designer and can spot a misaligned single pixel, yet I have some trouble visually focusing and finding where the links are in this screenshot:   <img width="747" alt="Screenshot 2022-06-24 at 08 56 45" src="https://user-images.githubusercontent.com/44162846/175490514-3d1a6155-2aa7-473e-8505-71cc24e7c1ed.png">  ## Proposed Solution  Could you please simply flip the logic - have links be underlined by default, and then on hover they lose the underline.    - - - -  Version: 1.68.1 (Universal) Commit: 30d9c6cd9483b2cc586687151bcbcd635f373630 Date: 2022-06-14T12:52:13.188Z (1 wk ago) Electron: 17.4.7 Chromium: 98.0.4758.141 Node.js: 16.13.0 V8: 9.8.177.13-electron.0 OS: Darwin arm64 21.5.0
---
Título: Inconsistent use of beaks in tooltip and hovers
Descripcion: ## Beaks Activity bar <img width="197" alt="CleanShot 2022-06-23 at 14 24 32@2x" src="https://user-images.githubusercontent.com/35271042/175404949-00b5c101-f7a2-4a0e-98e1-84f8adccd8a3.png">  Status bar <img width="299" alt="CleanShot 2022-06-23 at 14 25 07@2x" src="https://user-images.githubusercontent.com/35271042/175405034-13879e03-61d1-4555-8d59-68cf6861ff45.png">  Command center <img width="436" alt="CleanShot 2022-06-23 at 14 25 41@2x" src="https://user-images.githubusercontent.com/35271042/175405130-32a3b519-d188-485e-a77f-48ea3f35f7b0.png">  Extensions <img width="736" alt="CleanShot 2022-06-23 at 14 26 24@2x" src="https://user-images.githubusercontent.com/35271042/175405222-8b50cd6b-620b-4b01-b5e2-a6d67a038b33.png">  <img width="160" alt="CleanShot 2022-06-23 at 14 29 00@2x" src="https://user-images.githubusercontent.com/35271042/175405576-74b4e8f2-34aa-4daa-a5b1-2b7ce0fd340b.png">  Peek views <img width="946" alt="CleanShot 2022-06-23 at 14 35 20@2x" src="https://user-images.githubusercontent.com/35271042/175406428-4d7a842a-d22e-40ed-b832-597261ac3873.png">   ## No Beaks  Editor hovers <img width="535" alt="CleanShot 2022-06-23 at 14 30 57@2x" src="https://user-images.githubusercontent.com/35271042/175405838-71bf8768-1b66-4d46-8754-9ad0390a14ce.png">  Custom tree views <img width="606" alt="CleanShot 2022-06-23 at 14 30 33@2x" src="https://user-images.githubusercontent.com/35271042/175405790-f3e19972-8c87-4d6c-8e94-c410adb2ee25.png">
---
Título: "Go to Definition" with multiple definitions and "Peek Definition" change preview editor statuses differently
Descripcion: Issue Type: <b>Bug</b>  1. Enable `Workbench > Editor: Enable Preview` in settings. 1. Ensure that `Editor: Definition Link Opens In Peek` is disabled in settings. 1. Open a file with a symbol that has more than one definition. Ensure this file is in preview mode. 1. Right-click the symbol that has more than one definition and select "Go to Definition". 1. Double click any definition to open it in a new editor. 1. The original editor should still be in preview mode and the new editor showing the definition should be in non-preview mode. 1. Close the editor containing the definition. 1. Right-click the symbol that has more than one definition and select "Peek" > "Peek Definition". 1. Double click any definition to open it in a new editor. 1. The original editor should now be in non-preview mode and the new editor showing the definition should be in preview mode.  These two cases are inconsistent with each other, and the expected behavior would be that both cases will cause the source editor to become a non-preview editor and the definition editor opened will be a preview editor. This is the behavior that occurs if you select "Go to Definition" on a symbol that only has one valid definition.  VS Code version: Code 1.68.1 (Universal) (30d9c6cd9483b2cc586687151bcbcd635f373630, 2022-06-14T12:52:13.188Z) OS version: Darwin x64 21.5.0 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Xeon(R) W-3275M CPU @ 2.50GHz (56 x 2500)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|3, 3, 3| |Memory (System)|96.00GB (37.47GB free)| |Process Argv|--crash-reporter-id ecc45bb1-78f6-4429-9d0f-b8f8e733d439| |Screen Reader|no| |VM|0%| </details>Extensions: none <!-- generated by issue reporter -->
---
Título: A change in VScode makes it confusing for a user to switch the to a different PowerShell environment in the Integrated Terminal.
Descripcion: Issue Type: <b>Bug</b>  Steps to Reproduce:  1. Open vs code with PowerShell extension 2. Try to change to a different Integrated Terminal via the status tray.  I have been informed that this is due to a change in the way VS code works, which has had a knock-on effect on how the VScode PowerShell team have had to implement a new option to select PS versions within the Integrated . Personally, I simply could not figure this out without some guidance and lost a bunch of time trying to understand what was wrong and why I could no longer change PS versions in the Integrated Terminal.   **Old way** - very obvious: what PS version you were using: You simply clicked on `5.1`, and could swithch to another version  **New way** - completely unobvious on how to change PS versions: Now, you need to hover over the `{ }` icon next to the word PowerShell (and NOT on the word "PowerShell" itself) in order to see a link to the Session Menu, where you can then change the PS version.   Images to follow  VS Code version: Code 1.68.1 (30d9c6cd9483b2cc586687151bcbcd635f373630, 2022-06-14T12:48:58.283Z) OS version: Windows_NT x64 10.0.22000 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-9850H CPU @ 2.60GHz (12 x 2592)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|31.78GB (15.74GB free)| |Process Argv|--crash-reporter-id fdd18362-22ae-4526-bbb3-f5ff8550b378| |Screen Reader|yes| |VM|22%| </details><details><summary>Extensions (15)</summary>  Extension|Author (truncated)|Version ---|---|--- githistory|don|0.6.19 vscode-npm-script|eg2|0.3.25 beautify|Hoo|1.5.0 vscode-edit-csv|jan|0.7.1 rainbow-csv|mec|2.4.0 vscode-edge-devtools|ms-|2.0.0 python|ms-|2022.8.0 vscode-pylance|ms-|2022.6.20 jupyter|ms-|2022.5.1001601848 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.8 powershell-preview|ms-|2022.6.1 debugger-for-edge|msj|1.0.15 code-spell-checker|str|2.2.4 html-preview-vscode|tht|0.2.5   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 vslsvsres303:30308271 pythonvspyl392:30443607 vserr242cf:30382550 pythontb:30283811 vsjup518:30340749 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 vscoreces:30445986 pythondataviewer:30285071 vscod805:30301674 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593:30376534 vsc1dst:30438360 pythonvs932:30410667 wslgetstarted:30449410 vscscmwlcmt:30465135 cppdebug:30492333 vsclangdc:30486549 841h4636:30513380  ```  </details>  <!-- generated by issue reporter -->
---
Título: Merge editor and auto save
Descripcion: (wasn't sure if we already had an issue for this)  In my mind, the merge editor should not auto save but stay dirty even when auto save is enabled. Especially since it opens dirty right when you click it, auto save fires right after.  Question is: should auto save still be supported if all conflicts are resolved? Maybe that would be a nice model: * until there are conflicts, auto save ignores the editor * once all conflicts are resolved, auto save kicks in  I think there is missing working copy support for this because currently auto save is driven by a capability:  https://github.com/microsoft/vscode/blob/75362a62685799fee8c5f3760d006705ca31a5d5/src/vs/workbench/browser/parts/editor/editorAutoSave.ts#L94-L96  We could introduce a new capability `CanAutoSave`. But unsure how to wire this through because currently the merge editor uses the same text file model working copy as a normal editor.  Thoughts?
---
Título: Update split button styles
Descripcion: ## Current <img width="295" alt="CleanShot 2022-06-21 at 08 34 36@2x" src="https://user-images.githubusercontent.com/35271042/174840003-e49d0bb9-2e27-4948-9f8d-b5b1abc79edc.png">  We've used the split buttons in the past with little updates. When used in larger buttons, the separator can make it feel a bit more extreme. We'll use this issue to explore what it would look like if we adopted a smaller separator style.  ## Proposed <img width="269" src="https://user-images.githubusercontent.com/35271042/174842142-d1bf898f-1f62-4eb2-8700-e4b32402cc84.png">  Similar to other applications:  <img width="155" alt="CleanShot 2022-06-21 at 08 33 02@2x" src="https://user-images.githubusercontent.com/35271042/174839614-16d5e062-e3b0-4bb1-864c-01287af55b42.png">  ![image](https://user-images.githubusercontent.com/35271042/174839740-30b07706-ddb6-4911-ac55-97e8649c1ae6.png)  <img width="250" alt="CleanShot 2022-06-21 at 08 37 11@2x" src="https://user-images.githubusercontent.com/35271042/174840409-a1302d2c-fd52-4e31-b46d-596c9b7a49af.png">  cc @lszomoru @bpasero @sandy081
---
Título: Install in remote button is not consistent when settings sync is on / off
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.68.1 - OS Version: Windows 11  Steps to Reproduce:  1. Connect to a remote server with Remote-SSH 2. Search for an extension to install 3. Click on an extension to open the webview and get information 4. The default button to install is **Install** => It install the extension locally and in the remote instance.  - On Linux the default button is Install in SSH: xxxx - With the insider version 1.69.0-insiders  I tested also the command "workbench.extensions.installExtension" from an extension running on  the connected VSCode. The behavior is a bit more complex: * if the extension is not installed locally, then the command will install the extension in remote * If the extension is already installed locally, then nothing is done, The extension is not installed in remote   is it possible to harmonize the behavior of the button Install.    Is there any command to force the installation on a remote VSCode even if the extension is already installed locally?  Thanks
---
Título: Dark+ default theme: Cannot tell highlighted from selected token
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I'm not sure if this rather is a VS Code issue or a PowerShell Add-in For VS Code issue:  With the current default VS Code Dark+ color theme, it's very hard to tell highlighted tokens from selected tokens when editing a PowerShell file:  ![Cannot distinguish highlighted from selected token](https://user-images.githubusercontent.com/9283914/174493620-dfc156d0-8da7-435f-9b3b-1a230590b248.gif)  This leads to manifold maloperations when editing code using the keyboard for navigation.  Please improve contrast.
---
Título: Suggestion box has the wrong height in case of a small window size
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.67.1 - OS Version: macOS 12.3.1  Steps to Reproduce:  1. Open a code file 2. Vertically resize the VS Code window to make it about 200px high 3. Start typing a term that's valid for the language of the open file, to make suggestions appear. 4. Observe how the suggestions box has the wrong height.  Or see this [2-min video](https://www.loom.com/share/e152bce924c746d993d66ec29089f58b) where I demo the behavior.
---
Título: Go To Source Definition UX improvements
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Following up on TypeScript’s new Go To Source Definition command (d851ea5d49b0ec89b98765d9e0084c25f2ff5031), I want to track some editor-side UX improvements:  - Can we replace the error notification for “no source definitions found” with an inline message similar to Go To Definition?    <img width="330" alt="image" src="https://user-images.githubusercontent.com/3277153/173925638-1fcba3e2-5feb-40cd-9488-3159fc19999a.png">  - Can we somehow indicate when a result is a guess? This is already returned in the protocol response via an `unverified` property, but it is never surfaced to the user. When multiple locations are returned, maybe we could add something to the peek locations UI:    <img width="611" alt="image" src="https://user-images.githubusercontent.com/3277153/173927129-0943cadc-85c6-4090-b8d1-c1f7f7441b37.png">    (Note: the `unverified` flag is also sometimes set in normal Go To Definition responses, so this request is not specific to Go To Source Definition.)    When only one location is returned, maybe a notification would suffice, but I would love design input on this.
---
Título: Change label of "Keep Editors Open"
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> The label "Keep Editors Open" is not self explanatory.  ![Screen Shot 2022-06-15 at 11 50 23 AM](https://user-images.githubusercontent.com/83609192/173902799-6ffda5a6-9214-47fc-8b33-d69233a0ae99.png)  Some simple alternatives I can think of, - "Disable Preview Swapping" - "Keep Editor Preview Tabs" - "Keep Preview Tabs"  https://github.com/microsoft/vscode/issues/111417 @bpasero
---
Título: Provide tooltip for gutter actions
Descripcion: Originally from testing out https://github.com/microsoft/vscode/issues/25887  When hovering items in the gutter, we don't provide any tooltip for additional information about what each item is and does (with the exception of an added breakpoint). We should provide this additional information as we already for other actions and for added breakpoints to give new users and indication of the action will do as well as a name for the given action:  - [x] Adding breakpoints - [x] SCM decorators - [x] Diff arrow decorators - [x] Folding regions  https://user-images.githubusercontent.com/35271042/173626852-14bd4b48-bed5-49f7-b1fb-06ddc164c1d2.mp4
---
Título: No progress reporting when querying GH for repositories to clone
Descripcion: ![Recording 2022-06-13 at 12 19 39](https://user-images.githubusercontent.com/22350/173333098-0297c29a-ce9e-42ba-9722-54321939f9c3.gif)  Possibly since https://github.com/microsoft/vscode/pull/147613  @joyceerhl Should we open quick open and show an infinite progress bar, instead?
---
Título: Non-default cursor on tab bar mouseover on Windows.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.68.0 - OS Version: Windows 11  Steps to Reproduce:  1. Set custom cursor theme (such as a large version of Windows 11 colored vector cursor theme) 2. Mouse over tab bar (not tab)  Expected behavior:  Colored/custom mouse pointer  Observed behavior:  "Grabby hand" cursor icon. Clicking and dragging the tab bar does nothing, so it doesn't make sense.  Fix:  Since clicking and dragging the bar does nothing, change it to the default arrow cursor.  Screenshots:  ![Red cursor](https://user-images.githubusercontent.com/2027463/173326083-55cedbf5-a04a-4c8e-a3c3-b17edba32600.png) ![White cursor](https://user-images.githubusercontent.com/2027463/173326135-948856bd-baba-4810-ae4c-8d69418af260.png)
---
Título: "Fill <type>" yellow lightbulb icon hides code in editor
Descripcion: Issue Type: <b>Bug</b>  *(Originally reported at https://github.com/golang/vscode-go/issues/2271.)*  ### Describe the bug  When resting the cursor at the end of the line, after a composite literal expression, I noticed this yellow lightbulb icon appearing by the first column in the previous row, obscuring the text there. When I click it, it gives me an option to "Fill [type]", where [type] is the name for the type of the composite literal. See the screenshot.  I don't want my view of the text obscured. Can't this lightbulb be moved to the start or end of the line? Maybe in the gutter somewhere?  ### Steps to reproduce the behavior:  Start a new Go file and paste in this:  ```go package p  type Box struct { 	X int }  var x int var box = Box{} ```  Move the cursor to the end of the last line, following the right brace. The lightbulb should appear, as in the screenshot.  ### Screenshot  <img width="177" alt="Screen Shot 2022-05-31 at 9 32 23 PM" src="https://user-images.githubusercontent.com/63830/171328180-dbf220f0-7d68-4e7a-8258-3a26835b277e.png">  ---  VS Code version: Code 1.68.0 (4af164ea3a06f701fe3e89a2bcbb421d2026b68f, 2022-06-08T11:44:00.250Z) OS version: Darwin x64 21.4.0 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-7600K CPU @ 3.80GHz (4 x 3800)| |GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 1| |Memory (System)|16.00GB (5.34GB free)| |Process Argv|--crash-reporter-id eb1623a8-9d11-4cf3-a88f-63713e940c9e| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (11)</summary>  Extension|Author (truncated)|Version ---|---|--- gitignore|cod|0.7.0 githistory|don|0.6.19 go|gol|0.33.1 python|ms-|2022.8.0 vscode-pylance|ms-|2022.6.10 jupyter|ms-|2022.5.1001601848 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.8 fish-vscode|sky|0.2.1 rewrap|stk|1.16.3 gitblame|wad|8.2.2   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyl392:30443607 pythontb:30283811 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 vscoreces:30445986 pythondataviewer:30285071 vscod805:30301674 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593cf:30376535 vsc1dst:30438360 pythonvs932:30410667 wslgetstarted:30449410 vscscmwlcmt:30465135 cppdebug:30492333 vsclangdc:30486549  ```  </details>  <!-- generated by issue reporter -->
---
Título: Make watermark themeable
Descripcion: Refs to #151623  Currently, the watermark is [split up](https://github.com/microsoft/vscode/tree/main/src/vs/workbench/browser/parts/editor/media) for the various themes:   <img width="256" alt="CleanShot 2022-06-10 at 11 52 08@2x" src="https://user-images.githubusercontent.com/35271042/173131518-ec3ed55d-1506-45d3-aff8-b2b97b788c9f.png">  It would be easiest to have a single one and use color tokens to style this.
---
Título: Extensions view redesign
Descripcion: We have already quickly discussed this, but creating the issue so we can track this work for the future.  Extensions view UI deserves a UI face lift. Here's some thoughts: * We might need a way to show extension specific msgs in there. We do not want to use notifications. Example msgs: "you have 2 deprecated extensions", "you have been using this extension happily, consider sponsoring or rating it", "this extension has an update" - https://github.com/microsoft/vscode/issues/159889 * Extension item size is too small. We should not show that many search results https://github.com/microsoft/vscode/issues/150449 * How to show ML recommended extensions * Are all the details really needed? For example should we show activation time only if it is above a certain threshold? * Are all the menu entries really needed? Some menus got pretty complex (example filter menu) Should we surface some other action instead?  fyi @chrisdias @digitarald
---
Título: Add separation between the text and the scroll bar on the right
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  ## Environment data  -   VS Code version: 1.67.2 -   Jupyter Extension version (available under the Extensions sidebar): v2022.4.1021342353 -   Python Extension version (available under the Extensions sidebar): v2022.6.3 -   OS (Windows | Mac | Linux distro) and version: Ubuntu 22.04 -   Python and/or Anaconda version: 3.10 -   Type of virtual environment used (N/A | venv | virtualenv | conda | ...): N/A -   Jupyter server running: Local  ## Expected behaviour  Small separation between the text and the scroll bar on the right. For symmetry, it could be the same amount as on the left side.  ## Actual behaviour  Text and other elements touch/spill onto the scroll bar. See below:  ![overall](https://user-images.githubusercontent.com/2858291/172025683-3f379b8b-4d49-4258-8669-33c4b0c3cb32.png)  --- ![1](https://user-images.githubusercontent.com/2858291/172025799-17c84a49-99ce-441b-a486-7cbfc58c43f4.png)  --- ![2](https://user-images.githubusercontent.com/2858291/172025801-4388e1eb-9c9f-4339-8cff-e02ec1aef557.png)  --- ![3](https://user-images.githubusercontent.com/2858291/172025802-b0d21258-741e-4b43-adfd-f32eb6bfcbcc.png)  ## Steps to reproduce:  [**NOTE**: Self-contained, minimal reproducing code samples are **extremely** helpful and will expedite addressing your issue]  1. Open any notebook that has markdown cells with a lot of text.  <!-- Note: If you think a GIF of what is happening would be helpful, consider tools like https://www.cockos.com/licecap/, https://github.com/phw/peek or https://www.screentogif.com/ . -->  ## Logs  <details>  <summary>Output for <code>Jupyter</code> in the <code>Output</code> panel (<code>View</code>→<code>Output</code>, change the drop-down the upper-right of the <code>Output</code> panel to <code>Jupyter</code>) </summary>  <p>  ``` XXX ```  </p> </details>
---
Título: Indicate branch protection
Descripcion: Testing #150723  It would be great if the branch indicator in the status bar could show me that the current branch is protected.  <img width="107" alt="image" src="https://user-images.githubusercontent.com/4674940/171524021-d6b0a84d-e48b-4686-aa02-23240f806b12.png">  Same here in the SCM view. There are multiple opportunities: title, placeholder text  <img width="363" alt="image" src="https://user-images.githubusercontent.com/4674940/171524080-c5bd2647-a2b9-4a4e-a09c-87c1ab8baf1d.png">
---
Título: Polish VS Code messages in the terminal and make consistent
Descripcion: Looking at https://tabby.sh/about/features I really like how consistent all the terminal-specific messages are and how great they look compared to ours (@eugeny 🥇). I think we should do a pass over all the messages we write to the terminal and make them consistent. I think this is everything currently:  The inverting the whole row thing didn't end up working well, and does anyone care about the restore time?  ![image](https://user-images.githubusercontent.com/2193314/171194457-621b37f5-ed5b-44b3-836f-8b4b97ea5669.png)  Tasks:  ![image](https://user-images.githubusercontent.com/2193314/171194602-622d313f-eac0-439b-8ead-2762fbfbe2c4.png)  Local shell in remote workspace:  ![image](https://user-images.githubusercontent.com/2193314/171194910-e3163efc-7273-4dd0-a235-68f588fba218.png)  We removed the recent shell integration message.  Maybe inverting and using ℹ️ ⚠️? We could also write "VSC"/"VS Code" and/or have a hover with more info when hovering the icon?  Thoughts @misolori @daviddossett
---
Título: Sponsor deserves more visual real estate
Descripcion: Testing #150748  We already discussed this offline but creating an issue so we potentially revisit this in the future.  Currently we render a ❤️ Sponsor button in the Extension details and it is great. However I still think that we should add a simple ❤️  in the extension viewlet if an author has on-boarded to the sponsor. Here's my reasoning: * It feels to me the same as verified publisher - and we currently render that * If a user is super happy with an extension he will never open the extension details and discover that the extension is asking for a sponsorship. However everybody opens the extension viewlet from time to time (to install / uninstall extensions) and this should be discoverable there * We want to make this just discoverable enough so extension authors do not use notifications to spam users for donations * There is enough real estate in the extension viewlet. I suggest to not show this for search results, but only for installed extensions (when we do not show ratings / install count) * Adding an icon will not bring significant noise to the view  Design proposal: similar that we have the verified checkmark before the publisher. We could render the heart after the publisher area.  fyi @daviddossett @misolori for thoughts
---
Título: Deprecated extensions - consistent UI
Descripcion: Testing #150746  When I run a search for "deprecated" I see a large list of extensions that are being deprecated. I also see that each extension uses it's own ways to indicate that the extension is deprecated:  - `[DEPRECATED]` prefix - `[Deprecated]` prefix - `(Deprecated)` sufix - `(deprecated)` sufix  Given that we control the list of deprecated extensions, and we have several established UI elements I am wondering if we could create a more unified and consistent look for all the deprecated extensions: - In the extensions list, add a visual indicator in the upper left hand corner of the icon (similar to pre-release) - In the extension details page, have a "deprecated" pill/badge after the name (similar to the pre-release and preview)
---
Título: Mix of custom and native hover in title
Descripcion: With the introduction of command center that uses custom hover, we now have custom and native hovers. I wonder if we should just pick custom hovers to be consistent.  ![Recording 2022-05-31 at 10 46 22](https://user-images.githubusercontent.com/900690/171132605-94c96d92-8017-47fe-b333-0f9c986b69ee.gif)  //cc @daviddossett @misolori
---
Título: Extension coloring in Light Theme on selection is off
Descripcion: 1. Code insiders, new user data dir 2.  choose Light+ theme 3. Open extensions viewlet, click on an extension  Notice color contrast is off. The text can not be readable when an extension has selection and focus  fyi @sandy081   ![Screenshot 2022-05-20 at 10 29 50](https://user-images.githubusercontent.com/1926584/169487979-dbc2c215-30e4-406e-bf21-ab7cad9e6f1c.png)
---
Título: Allow to expand truncated source field in error notification
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No (Didn't check, but it doesn't seem extension related).  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.67.1 - OS Version: macOS 12.3.1  Steps to Reproduce:  1. Open up a Python file, with a missing formatter. 2. An error dialog appears offering alternate formatters. 3. The source of the error, "Source: Python (..." is truncated and cannot be expanded. In this instance, I'm assuming it's telling me which version of Python on my machine is throwing the error, but I can't tell.  Expected behaviour:  1. The dialog outside of the buttons/actons has hover states and a click state, and even changes cursor to the "hand" icon to suggest some sort of interaction - I found myself clicking on it hoping it would expand and show the complete source string.  <img width="496" alt="image" src="https://user-images.githubusercontent.com/1550587/169101772-57bd35af-e4da-4380-a6cb-2b654530b0de.png">  (Ping for @daviddossett and @misolori 😉 )
---
Título: Add "Do Not Disturb" Mode
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `main` branch. * Include a description of the proposed changes and how to test them. -->  This PR solves for #144324 by implementing a "Do Not Disturb" mode that hides non-error toast notifications. Any hidden notifications can still be viewed in the notification center. It toggled directly from the notification center’s toolbar or from the command palette.  ## Demo  https://user-images.githubusercontent.com/25163139/174388139-629bc34a-e401-4323-a686-3ed21c60452e.mp4  ``` vscode.window.showInformationMessage('Info Notification As Modal', { modal: true }), // Always shows	 vscode.window.showInformationMessage('Info Notification'), vscode.window.showWarningMessage('Warning Notification'), vscode.window.showErrorMessage('Error Notification'), // Always shows ```
---
Título: Polish walkthrough tiles on Get Started page
Descripcion: Ref #165846  Currently when you open VS Code as a new user you'll see these three walkthroughs, which can be quite intimidating. Additionally, there are two large cards, which tend to add to the overall "loudness" of the page:  <img width="436" alt="CleanShot 2022-05-13 at 07 56 53@2x" src="https://user-images.githubusercontent.com/35271042/168310877-ce554e41-f371-4409-959c-4df84bc191fd.png">    ## Proposal  We can clean up the cards we show by default to tone down the visual clutter and we can also allow for the new/updated walkthroughs to be placed near the top, but featured walkthroughs should always have the highest priority.  - [ ] Only show a single featured walkthrough - [ ] Reduce amount of walkthroughs to two - [ ] Merge parts of the productivity into others - [ ] Move updated/new walkthroughs to the top (except when there is a featured walkthrough)  <img width="1024" alt="CleanShot 2022-05-12 at 14 53 48@2x" src="https://user-images.githubusercontent.com/35271042/168174287-9b401f8c-7505-407f-8d67-34cdbf0dfb40.png">
---
Título: margin of context between right and left are different in notebook
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  版本: 1.68.0-insider (system setup) 提交: 8c882677f947ef7ec748e7f031c7b5470aaf9be1 日期: 2022-05-11T05:17:12.474Z Electron: 17.4.1 Chromium: 98.0.4758.141 Node.js: 16.13.0 V8: 9.8.177.13-electron.0 OS: Windows_NT x64 10.0.22616 Steps to Reproduce:  ![image](https://user-images.githubusercontent.com/1876302/167884528-7bcf5654-995d-4c35-83c2-c8781f3139b8.png)
---
Título: Better styling for tree items that are actions
Descripcion: We offer Tree API that encourages using Tree Items as actions. However these items are not well styled, and easily blend in to the rest of the tree. The azure extension is using the tree item actions to the extreme and I find the experience a bit confusing.  ![Screenshot 2022-05-11 at 15 07 50](https://user-images.githubusercontent.com/1926584/167857302-ae601c22-88ac-4b84-a8a4-42cc41a90df1.png)  Compared that to the debug tree item action styling  ![Screenshot 2022-05-11 at 15 09 22](https://user-images.githubusercontent.com/1926584/167857572-3431a005-56f6-4a83-b5b8-4cbdf834ba0b.png)   @alexr00 based on API we can always detect this items, right? @misolori do you have ideas on how to improve the styling.   I think we should be consistent between debug and what we do here. Maybe we even start with the debug syling?  fyi @fiveisprime @bwateratmsft ideally when we improve this, then your actions will not need the "Click to" part of the text
---
Título: Update Commenting gutter icon
Descripcion: When there are comments in a file, they show up as a diamond icon in the gutter.  ![image](https://user-images.githubusercontent.com/485572/167413175-b1c741d7-3c5a-4fa6-a5cc-cd2fe2ec39b4.png)  - This is not very intuitive. - It looks like the codicon debug-breakpoint-log, which is unrelated - For consistency, we could reuse the icons from the Comments panel (`comment` or `comment-discussion`)  cc @albertelo, @misolori
---
Título: Disabled toolbar icons are no longer dimmed in 1.67
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  ### Summary  In Visual Studio Code 1.65 and earlier, icons added by extensions to the debug toolbar were dimmed when disabled:  ![Screenshot from 2022-05-09 10-57-26](https://user-images.githubusercontent.com/922721/167389277-52f6b7ce-ce4d-4d86-a4ca-3c1d4654ca10.png)  But in Visual Studio Code 1.67.0, icons added by extensions to the debug toolbar are no longer dimmed when disabled:  ![Screenshot from 2022-05-06 15-11-10](https://user-images.githubusercontent.com/922721/167389505-763cc779-b7d2-4688-b838-360fb7b9336a.png)  ### Details  I am working on an extension which adds icons to the debug toolbar, using the [`"commands"` contribution point](https://code.visualstudio.com/api/references/contribution-points#contributes.commands). The icons are disabled while the program is running, and enabled when it is stopped. A typical icon definition looks like this: ``` "commands": [     {         "command": "udb.reverseStepOver",         "enablement": "debugState == 'stopped' && udbActive",         "title": "Reverse Step Over",         "icon": {             "dark": "media/stepover-reverse-tb-dark.svg",             "light": "media/stepover-reverse-tb-light.svg"         }     }, ], ``` with a corresponding definition in the [`"menus"` contribution point](https://code.visualstudio.com/api/references/contribution-points#contributes.menus): ``` "menus": {     "debug/toolBar": [         {             "command": "udb.reverseStepOver",             "when": "debugType == 'cppdbg' && udbActive",             "group": "navigation@6"         },     ] }, ```  ### Discussion  It seems that Visual Studio Code 1.67 no longer provides a way for extensions to vary the colour of toolbar icons when they are disabled.  Looking at the Visual Studio Code source, it seems that the built-in toolbar icons are created like this:  https://github.com/microsoft/vscode/blob/3d7135a49f5afbadc6849cce343666eaa446ea66/src/vs/workbench/contrib/debug/browser/debugIcons.ts#L65  and then styled like this:  https://github.com/microsoft/vscode/blob/3d7135a49f5afbadc6849cce343666eaa446ea66/src/vs/workbench/contrib/debug/browser/debugColors.ts#L104-L109  https://github.com/microsoft/vscode/blob/3d7135a49f5afbadc6849cce343666eaa446ea66/src/vs/workbench/contrib/debug/browser/debugColors.ts#L340-L343  but I cannot see any way for extensions to access this functionality.
---
Título: Explore more obvious section headers in quick pick
Descripcion: The right-aligned label text has always been slightly confusing to me as a pattern to separate sections in quick pick lists. I think it's worth exploring how we might make these more obvious while still using vertical space efficiently.  ## Current  <img width="631" alt="CleanShot 2022-05-08 at 21 29 37@2x" src="https://user-images.githubusercontent.com/25163139/167340909-4237b4a9-d6ed-4cb3-849e-4fe016625122.png">  ## Examples  ### GitHub  <img width="812" alt="CleanShot 2022-05-08 at 21 30 48@2x" src="https://user-images.githubusercontent.com/25163139/167341026-78dbab4a-8c82-4107-a6cf-147cc2bab906.png">  ### Raycast   <img width="770" alt="CleanShot 2022-05-08 at 21 31 09@2x" src="https://user-images.githubusercontent.com/25163139/167341043-34db2bd9-a15e-42dc-abcd-90ecf9d76ca0.png">  cc @lychung7 @misolori
---
Título: Use toggle state icons for layout control
Descripcion: The layout controls icons can be a bit of an eye sore when in the default state. One way to remedy this and to give a stronger indication of the state, we could swap icons based on their state. Would look something like this:  https://user-images.githubusercontent.com/35271042/167179989-facd3783-5089-4b4c-baee-6a08ee854661.mp4
---
Título: Dragging an editor tab always opens it
Descripcion: **Repo** 1. Have a few open editor tabs in a single group 2. Try dragging and dropping one of the non-active editor tabs into the currently open editor  **Bug** As soon as you click to start dragging the tab, the editor for it opens. This means you can no longer drop it into the file you previously had opened  I believe this is because we open the editor on `mousedown`
---
Título: Dragging files over editor tab for a few seconds should open the editor so I can drop into it
Descripcion: **Repo** 1. With a few open editor tabs in a single group 2. Start dragging a file from the VS Code explorer 3. Try to drag into one of the non-open editors  **Feature request** While dragging, I should be able to hover over an unopened editor tab for a few seconds to open the editor. After the editor is opened I should then be able to drop into it by holding `shift`
---
Título: Custom menu blends in with various background
Descripcion: <img width="353" alt="CleanShot 2022-05-02 at 13 52 20@2x" src="https://user-images.githubusercontent.com/35271042/166325845-2bacae03-4dd8-447d-b504-4ccf321c920d.png">  Would love it if we could polish the visual styles of our custom menus as sometimes they blend in with the background and don't look as nice. Also worth looking at a few different examples from other products that have nice menus:  <img width="348" alt="CleanShot 2022-05-02 at 13 53 15@2x" src="https://user-images.githubusercontent.com/35271042/166325964-c82fd7f0-ec53-4ae1-af90-90e263d99cb0.png">  <img width="266" alt="CleanShot 2022-05-02 at 13 54 22@2x" src="https://user-images.githubusercontent.com/35271042/166326050-70a88fcb-a172-4c93-a2e0-76bdc7f77392.png">  <img width="240" src="https://user-images.githubusercontent.com/35271042/166326484-ecf430f7-2fe6-46a9-96a8-2fe5cf7fc7f7.png">
---
Título: Extension pre-release vs stable-release is confusing to me
Descripcion: In my day to day use and esp. now that I am doing testing, I find how we distinguish pre-release from stable-release extensions confusing.  To clarify: we show a badge to the left when an extension can be installed as pre-release and a badge to the right when it is pre-release installed:  ![image](https://user-images.githubusercontent.com/900690/165257266-b7116351-4422-49d3-a524-c285b1afe5e5.png)  ![image](https://user-images.githubusercontent.com/900690/165257278-41c57a61-c74a-4adf-aaa0-3e4897df102e.png)  In my mental model - given VSCode and insiders - I map a blue logo to stable and a green logo to insiders. Maybe we can use something similar for extensions as well?  //cc @isidorn
---
Título: Add separator between view actions and global panel actions
Descripcion: I find this a bit problematic: * it is inconsistent with the primary side bar that does not have it * it shows after the "...", even though it is a primary action  ![image](https://user-images.githubusercontent.com/900690/164627860-8db5db09-a6c9-4eee-a6dd-5ee0f7cae8d0.png)  //cc @misolori @daviddossett
---
Título: Extension uninstall error should be a modal dialog
Descripcion: I clicked to "Uninstall" an extension with dependencies and got an error toast as a result:  ![image](https://user-images.githubusercontent.com/900690/163933326-a562b136-602b-4eae-804f-9d985342fe9c.png)  I think since I clicked a button explicitly, I would expect a modal dialog as a result.
---
Título: Explore using a subtle border radius on common inputs
Descripcion: Looking at ways to make VS Code feel ever so slightly more approachable. A subtle 2px border radius on our common input components could be one way to make the UI feel more inviting and less harsh:  ## Buttons  <img width="361" alt="CleanShot 2022-04-08 at 14 48 52@2x" src="https://user-images.githubusercontent.com/25163139/162537570-225a0784-6eea-4f5e-b194-eb72543fe049.png">  <img width="522" alt="CleanShot 2022-04-08 at 14 55 52@2x" src="https://user-images.githubusercontent.com/25163139/162537641-abc26646-229c-4b1b-a41d-ff8483bfcb96.png">  <img width="494" alt="CleanShot 2022-04-08 at 14 58 01@2x" src="https://user-images.githubusercontent.com/25163139/162537660-72a843e6-3a0f-45fc-b362-c81022724bdc.png">  ## Text inputs and Dropdowns  <img width="437" alt="CleanShot 2022-04-08 at 14 49 46@2x" src="https://user-images.githubusercontent.com/25163139/162537582-739cceb3-561f-489c-b398-e23d6a95cb92.png">  <img width="500" alt="CleanShot 2022-04-08 at 15 01 55@2x" src="https://user-images.githubusercontent.com/25163139/162537828-2af1637b-7d1b-49c5-bc3c-a75ec2441961.png">  ![CleanShot 2022-04-08 at 14 54 03@2x](https://user-images.githubusercontent.com/25163139/162537612-3661b22e-e135-4eb2-ab49-0360ea516224.png)  FWIW, we already use a border radius on our icon buttons:  <img width="300" alt="CleanShot 2022-04-08 at 15 03 36@2x" src="https://user-images.githubusercontent.com/25163139/162537957-669defce-459b-4af7-95cd-a3c57582cd78.png">  cc @misolori @lychung7
---
Título: UX Backlog
Descripcion: ## Summary  This backlog is a collection of design issues related to the user experience of the product. Design will use this list as a discussion point for iteration planning as well as discussions with the team during our weekly ux sync. You can reference our [previous backlog](https://github.com/Microsoft/vscode/issues/66299).  ## General  - [x] New file/editor creation [#145046](https://github.com/microsoft/vscode/issues/145046) - [x] Standardize social/YouTube Thumbnails - [ ] :runner: Website/Docs Re-Design - [ ] Explore touch-only mode [#70764](https://github.com/microsoft/vscode/issues/70764) - [x] Notification management [#144324](https://github.com/microsoft/vscode/issues/144324) - [ ] JSON ⇒ UI Experiences (tasks, launch, extensions) [#84309](https://github.com/microsoft/vscode/issues/84309) - [ ] Default run configurations (universal run) - [ ] Integrating [vscode.dev](http://vscode.dev) with docs - [ ] Improve settings navigation - [ ] Improve peek/comment views in large screens [#150824](https://github.com/microsoft/vscode/issues/150824)  ## Guidelines  - [x] Improved extension guidelines   - [x] Increase visibility in docs t.o.c. [vscode-docs#5207](https://github.com/microsoft/vscode-docs/issues/5207)   - [x] Update overview page and add missing pages (e.g. Walkthroughs, Panel, etc.) [vscode-docs#5389](https://github.com/microsoft/vscode-docs/pull/5389)   - [x] Include link in `yo code` generator [vscode-generator-code#358](https://github.com/microsoft/vscode-generator-code/pull/358) - [ ] Core design guidelines   - [x] Design systems patterns [#140601](https://github.com/microsoft/vscode/issues/140601)   - [ ] Illustration guidelines   - [ ] UX Best practices   - [ ] Component guidelines - [ ] Create design tokens (colors, spacing, type)  ## API  - [ ] Expose Table widget for extensions  ## Editor  - [x] 3-way Merge [#37350](https://github.com/microsoft/vscode/issues/37350) - [ ] Improve gutter support   - [ ] Support codicons in gutter decorations [#143774](https://github.com/microsoft/vscode/issues/143774)   - [ ] GlyphWidgets for overlapping decorators [#114776](https://github.com/microsoft/vscode/issues/114776)   - [ ] Show error & warnings in the gutter [#3915](https://github.com/microsoft/vscode/issues/3915) - [x] Improve commenting ranges [#115808](https://github.com/microsoft/vscode/issues/115808)  ## Extensions  - [ ] :runner: Extension view re-design [#151599](https://github.com/microsoft/vscode/issues/151599) - [ ] What’s New/Extension Updates [#102139](https://github.com/microsoft/vscode/issues/102139) - [ ] Extension recommendation E2E experience [#139321](https://github.com/microsoft/vscode/issues/139321) - [x] Extension Management [#68527](<https://github.com/microsoft/vscode/issues/68527>) - [ ] GitHub/Extensions Sponsors integration [#107482](https://github.com/microsoft/vscode/issues/107482) - [ ] Improve 1st party extension icons  ## Getting Started  - [x] User Profiles [#116740](https://github.com/microsoft/vscode/issues/116740) - [ ] User onboarding configuration - [ ] Playground/UI Overview - [ ] User Coach Marks/help bubbles [#120147](https://github.com/microsoft/vscode/issues/120147) - [ ] Web Playgrounds (Icon Theme, Extensions, Settings)  ## Source Control  - [x] Improve default git experience [#135992](https://github.com/microsoft/vscode/issues/135992) - [ ] Improve diff/merge conflicts UX  ## Themes  - [x] High Contrast theme types [#144193](https://github.com/microsoft/vscode/issues/144193) - [ ] Theme token inspector - [x] Default theme updates  ## UI  - [x] :runner: Title bar modernization [#142867](https://github.com/microsoft/vscode/issues/142867>) - [x] :runner: Command Center [#149445](https://github.com/microsoft/vscode/issues/149445) [#155458](https://github.com/microsoft/vscode/issues/155458) - [ ] Omnisearch - [ ] :runner: Layout density [#168671](https://github.com/microsoft/vscode/issues/168671) - [ ] Explore Fluent UI Design - [ ] Typography Tune up [#9152](https://github.com/microsoft/vscode/issues/9152) - [ ] Presentation mode (mobile) [#70764](https://github.com/microsoft/vscode/issues/70764) - [ ] GUI customization [#1833](https://github.com/microsoft/vscode/issues/1833) - [ ] Allow app icon to be configured [#120604](https://github.com/microsoft/vscode/issues/120604)
---
Título: Empty check boxes need more contrast with adjacent colors
Descripcion: https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html  > For active controls any visual information provided that is necessary for a user to identify that a control is present and how to operate it must have **a minimum 3:1 contrast ratio with the adjacent colors**  > For designing focus indicators, selection indicators and user interface components that need to be perceived clearly, the following are examples that have sufficient contrast... > Checkbox - empty | A black border on a white background indicates the checkbox.   All of our ~input controls~ checkboxes in the dark & light theme need to have a 3:1 contrast ratio between its background and adjacent color in the empty state. So either the border (if it has one) or the container's background.  |Dark|Light| |--|--| |<img width="191" alt="CleanShot 2022-04-05 at 09 57 59@2x" src="https://user-images.githubusercontent.com/35271042/161809200-34bf11c9-20a9-4bec-93c6-618b2d8a7a3c.png">|<img width="172" alt="CleanShot 2022-04-05 at 09 57 41@2x" src="https://user-images.githubusercontent.com/35271042/161809172-35b0ef8c-492f-40fd-b941-697f46717850.png">| |<img width="280" alt="CleanShot 2022-04-05 at 09 32 32@2x" src="https://user-images.githubusercontent.com/35271042/161802463-3079f144-e197-4f60-99fd-4f43eb02d40c.png">|<img width="280" alt="CleanShot 2022-04-05 at 09 39 35@2x" src="https://user-images.githubusercontent.com/35271042/161803706-4b54955d-3b10-4ed6-9edf-dc319b9d8a79.png">|  cc @isidorn @roblourens @rzhao271
---
Título: Explore improving the discoverability of filtering in tree views
Descripcion: Refs https://github.com/microsoft/vscode/issues/140601  During the last iteration we explore how we could improve the discoverability of filtering in tree views, so this issue aims to bring the discussion around the specific design interaction. Currently you have to place your focus in a tree view and then start typing. In this exploration, we'll propose to surface an entry point in the view toolbar via a dedicated action. We could alternatively add this to an ellipsis menu to reduce the visual clutter. Lastly, we'll look at simplifying the filtering options and only filter the results (as opposed to highlighting the matches).  https://user-images.githubusercontent.com/35271042/161711088-f19a1344-4768-4ceb-8376-16de84d00a15.mp4  @joaomoreno would love feedback here on the proposal and any additional options we can explore.  Related Issue - #70646 - #140563
---
Título: Scrolling suggestion docstrings with PgUp/PgDn does not work when only one suggestion
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  **Summary** Scrolling suggestions' docstrings with PgUp/PgDn works only when multiple suggestions pop up. When only a single suggestion is available (e.g. when the function's name is entered in full), the scrolling with PgUp/PgDn does not work.  **Steps to reproduce** 1. In an editor, in a .py file, type in a recognised identifier that has a long docstring. 2. Ctrl+Space (`Trigger Suggest`) to toggle suggestions. 3. Ctrl+Space (`toggleSuggestionDetails`) to toggle the docstring detail if it is hidden. 4. Ctrl+Alt+Space (`toggleSuggestionFocus`) 5. PgDn to scroll down the docstring. ❌ Nothing happens. (To be precise, PgDn works in the editor mode, i.e. `cursorPageDown`) ![fails](https://user-images.githubusercontent.com/52547519/161657466-4898953c-7986-4c97-b13e-c426921dbd6e.png)  **Expected behaviour** Everything works as expected when there are multiple suggestions. 1. Type only the first few symbols, so that there multiple possible suggestions. 2. [as above] Ctrl+Space (`Trigger Suggest`) to toggle suggestions. 3. [as above] Ctrl+Space (`toggleSuggestionDetails`) to toggle the docstring detail if it is hidden. 4. [as above] Ctrl+Alt+Space (`toggleSuggestionFocus`) 5. PgDn to scroll down the docstring. ✔ Scrolls as expected. ![works](https://user-images.githubusercontent.com/52547519/161657703-c0789a7b-0efc-47e4-ba5b-43aaa3853f56.png)  **What I tried** I tried removing `suggestWidgetMultipleSuggestions` condition from the keyboard shortcuts on PageDown, but this alone did not solve the problem.  - Default keybinding:  ![default keybindings](https://user-images.githubusercontent.com/52547519/161657718-b620ac0f-c047-4f5b-b035-25efae6d7099.png)  - Modified keybinding:  ![custom keybindings](https://user-images.githubusercontent.com/52547519/161657741-33aafe36-a02e-4f18-8177-047ebe50c038.png)  **Related**: - https://code.visualstudio.com/updates/v1_13#_suggestion-list-and-documentation-side-by-side  > For keyboard centric users who want to navigate up and down long documentation, press `Ctrl+Alt+Space` to move the focus to the documentation fly-out such that it can now receive keyboard shortcuts for Page Up/Down actions.  - also https://github.com/microsoft/vscode/issues/46892#issuecomment-402949843 .  **Info** - Does this issue occur when all extensions are disabled?: N/A (extensions are required but aren't the problem) - VS Code Version:  1.66.0 (user setup) Commit: e18005f0f1b33c29e81d732535d8c0e47cafb0b5 - OS Version:  Windows_NT x64 10.0.19042
---
Título: Inconsistent nomenclature SCM <-> "Source Control"
Descripcion: Within the UI in VS Code there are differing names for the SCM view depending on whereabouts you are in the UI.  Under the "View Menu" there is an entry from "SCM" but everywhere else it is referred to as Source Control. (Hovering over the icon in the activity bar names it Source Control, the view container title says Source Control and in the command palette, the command is listed as "Source Control: Focus on Source Control View".)  Then under settings there is a group "Features > SCM"  For consistency, it would be better to keep with a single (user facing) name that is used in all places.
---
Título: Explore how to better intergrate remote file system providers
Descripcion: Tracking UX explorations for improving the integration of remote fs providers such as OneDrive or Google Drive.  Ref: [OneDrive Browser extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.onedrive-browser)
---
Título: Consider a message and button limit for notifications and dialogs
Descripcion: Refs https://github.com/dotnet/vscode-dotnet-runtime/issues/427  <img width="467" alt="CleanShot 2022-04-03 at 16 46 57@2x" src="https://user-images.githubusercontent.com/35271042/161454258-a90c0529-ed97-45d7-99d0-b0aa08db31be.png">  This is a bad notification but it also seems like we should at least have better limitations so that extensions don't do this in the future. Maybe decreasing the line limit and number of actions?
---
Título: Syncing changes dialog shows wrong icon
Descripcion: <img width="558" alt="CleanShot 2022-04-03 at 16 38 53@2x" src="https://user-images.githubusercontent.com/35271042/161453896-866c8b25-197e-4570-89f0-f985541ca30b.png">  1. open vscode.dev where you had uncommitted changes 2. dialog asking if you want to sync 3. :bug: error appears indicating there may breaking changes  Since this is an error state, the warning icon should not be used here but instead the "error" icon
---
Título: Invisible resize drag handle on unshown autocomplete details popup
Descripcion: Issue Type: <b>Bug</b>  1. open autocomplete. 2. mouse hover to the right of the autocomplete options and you will find an invisible drag handle to resize the unshown autocomplete details popup  see the horizontal blue bar. it is the invisible drag handle lighting up once i click on it:  ![image](https://user-images.githubusercontent.com/20448845/161185770-d92ddd7a-fb9f-4fc1-add4-c71655d98f40.png)    VS Code version: Code 1.65.2 (c722ca6c7eed3d7987c0d5c3df5c45f6b15e77d1, 2022-03-10T14:33:55.248Z) OS version: Windows_NT x64 10.0.19044 Restricted Mode: No Remote OS version: Linux x64 5.10.102.1-microsoft-standard-WSL2  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz (12 x 2208)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|31.82GB (7.48GB free)| |Process Argv|--crash-reporter-id 9d1b4a74-6c23-44d3-9db5-383def926efe| |Screen Reader|no| |VM|0%|  |Item|Value| |---|---| |Remote|WSL: Ubuntu| |OS|Linux x64 5.10.102.1-microsoft-standard-WSL2| |CPUs|Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz (12 x 2207)| |Memory (System)|24.91GB (13.22GB free)| |VM|0%| </details><details><summary>Extensions (15)</summary>  Extension|Author (truncated)|Version ---|---|--- bracket-pair-colorizer-2|Coe|0.2.4 remote-containers|ms-|0.231.0 remote-wsl|ms-|0.64.2 gitlens|eam|12.0.5 restore-terminals|Eth|1.1.7 vscode-graphql|Gra|0.3.53 vscode-docker|ms-|1.21.0 vsliveshare|ms-|1.0.5449 vsliveshare-audio|ms-|0.1.91 vsliveshare-pack|ms-|0.4.0 vetur|oct|0.35.0 prisma|Pri|3.11.0 indenticator|Sir|0.7.0 language-stylus|sys|1.15.0 vscodeintellicode|Vis|1.2.17   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyl392:30443607 pythontb:30283811 pythonptprofiler:30281270 vshan820:30294714 vstes263cf:30335440 vscoreces:30445986 pythondataviewer:30285071 vscod805:30301674 pythonvspyt200:30340761 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593cf:30376535 vsc1dst:30438360 pythonvs932:30410667 wslgetstarted:30449410 vsclayoutctrt:30451275 dsvsc009:30452663 pythonvsnew555:30457759 vscscmwlcmc:30438804 vscgsvidc:30447482 pynewfile477cf:30450039  ```  </details>  <!-- generated by issue reporter -->
---
Título: VS Code Figma toolkit improvements
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Here are some of the improvements and updates that will be added to the VS Code Figma toolkit:  - [x] Update the quick pick component to include multi-select scenarios - [x] Add left + right placement of panels - [x] Update the Settings UI template to include the new hover state for the light theme  - [x] Fix a few bugs in the Settings UI template - [x] Fix button hover interaction
---
Título: Explore UX for three-way merge
Descripcion: We're exploring what it could look like to enable a three-way merge workflow in VS Code. Here are some initial ideas to get the ball rolling 👍  ## Prototype  Here's a brief walkthrough where I set up a simple merge conflict and resolve it with a three-way merge editor:  https://user-images.githubusercontent.com/25163139/160215589-6a275452-5f92-4341-9a00-1c57e345f120.mp4  ## Main views  Here are some quick screenshots from the prototype above:  ### Entry point  I've been exploring the idea of having multiple entry points from a merge conflict state. One is via the existing codelens actions ("Preview Merge")...  <img width="2159" alt="entry-point-codelens" src="https://user-images.githubusercontent.com/25163139/160215002-a7aced62-3a47-46f1-bdd2-40b58e5f888d.png">  ..and another via the SCM where there could be an icon button (icon here is just a placeholder) on the file that has conflicts:  <img width="594" alt="entry-point-scm" src="https://user-images.githubusercontent.com/25163139/160215010-95fb3d4f-b84d-48d7-bb4b-32a7c943395a.png">  ### Preview merge  Here's what the merge editor preview could look like. Here it features a mixed layout with the branches on top and the resulting code below. The branch editors are read-only while the result editor is editable.   <img width="2150" alt="default-state" src="https://user-images.githubusercontent.com/25163139/160215096-d1a858ac-d36d-4a7e-8ecb-d910a9ccf6bd.png">  ### With selections  Here are two examples where selections have been made. One with a selections from different conflicts on each branch:  <img width="2154" alt="with-selections" src="https://user-images.githubusercontent.com/25163139/160215165-516ca50d-07ff-4360-aa11-87ecab1e3ccb.png">  ...and another showing the same changes being picked on both branches:  <img width="2158" alt="accept-both-changes" src="https://user-images.githubusercontent.com/25163139/160215182-9edc132e-6a33-4d7d-9a69-0c4b709bbcde.png">  Feedback and ideas welcome!   cc @misolori @albertelo @lszomoru @rebornix
---
Título: Allow extensions to opt-in to pinning their Language Status Item by default
Descripcion: _Originally posted by @andschwa in https://github.com/microsoft/vscode/issues/145950#issuecomment-1077811671_  Have talked with @TylerLeonhardt about this too. When the PowerShell extension switched from its own status bar icon to the new Language Status Item API, the user experience was forcibly changed: the PowerShell icon (with the current version) is now by default hidden under `{}` (the language status item icon), which is confusing enough to our users that we've added it to our [troubleshooting](https://github.com/PowerShell/vscode-powershell/blob/master/docs/troubleshooting.md#how-do-i-change-the-powershell-version) document, and have kept it in our extension's preview channel.  While I understand the rationale of having _all_ language status items under the `{}` menu, and like being able to pin each icon, it seems that extension's should be able to opt-in to pinning their icon be default so as to not overly change the existing user experience.
---
Título: Make none-pinned language status items more prominent
Descripcion: Here is a suggestion about the visibility, sorry for disturbing. 🙂  We find abnormal severity (error or warning) for unpinned status (which is the default behavior) is not easy to find, compared to the pinned item.  pinned error: ![image](https://user-images.githubusercontent.com/45906942/159834588-27b7cb8b-e1ed-4b78-901d-ff544b0a7991.png)  unpinned error: ![image](https://user-images.githubusercontent.com/45906942/159834619-b9c5be85-560b-4001-993b-9f3a6cceccee.png)  Users will find the status easier for the pinned item than the unpinned item, since the background is different. Can we consider changing the background color of the pinned item as well? (or another way to help users find this status)  _Originally posted by @CsCherrYY in https://github.com/microsoft/vscode/issues/129037#issuecomment-1077025677_
---
Título: Uncommitted changes needs a different icon
Descripcion: <img width="300" src="https://user-images.githubusercontent.com/35271042/159553092-3bf37341-1e83-468a-90b7-c20aedfc8131.png">  It seems that uncommitted changes are not commits yet, so wonder if they should have different icons? cc @daviddossett @lychung7
---
Título: Indicate filtered state on Timeline view
Descripcion: Currently there isn't any visual indication on the timeline view when a filter (i.e. anything unchecked from the list) has been applied:  <img width="426" alt="CleanShot 2022-03-22 at 11 19 00@2x" src="https://user-images.githubusercontent.com/25163139/159549260-0494edf1-5ef4-4846-a43f-469a305fb20a.png">  One potential option here would be to follow the same dual icon pattern as pinning follows:  <img width="98" alt="CleanShot 2022-03-22 at 11 20 56@2x" src="https://user-images.githubusercontent.com/25163139/159549396-d649e9d5-8061-46b8-89a8-706c4de15eda.png">  <img width="97" alt="CleanShot 2022-03-22 at 11 21 04@2x" src="https://user-images.githubusercontent.com/25163139/159549407-f8f37349-e269-441a-a754-8264b6a9be67.png">  One other thought is that the timeline view header seems to further indicate the pinned state with plain text. While this could be somewhat crammed to if it included filtered state as well, it might be worth exploring.  <img width="329" alt="CleanShot 2022-03-22 at 11 21 37@2x" src="https://user-images.githubusercontent.com/25163139/159549481-5030533d-0038-4ef7-8b1b-be14db7d1471.png">  cc @bpasero @misolori
---
Título: QuickInput error aligns weirdly
Descripcion: Testing #145626  Notice how the quick input validation message aligns weirdly with the rest of quick input: 1. It overwrites the placeholder text to "Accept on enter..." 2. It goes below the quick input  It feels like it was just stuck on top of the existing quick input UI. I would love it feel a bit more native in the quick input.  ![Screenshot 2022-03-22 at 12 18 57](https://user-images.githubusercontent.com/1926584/159470393-66566f5e-37ea-4cc8-ab4f-f3c8a72e79b2.png)
---
Título: Custom dialog appears when discarding a change with RemoteHub extension
Descripcion: I am not sure the origin so assigning a few people. Steps: * install RemoteHub extension on desktop * open a repo via desktop * do a change * discard the change  => 🐛  you get a custom dialog even though I would have expected a native one.  ![image](https://user-images.githubusercontent.com/900690/159219063-d29f23b1-9944-4222-a44a-04e1298f2bb8.png)
---
Título: Timeline: make sources more prominent
Descripcion: Capturing feedback from @Tyriar from today's UX call: the "..." can make it hard to discover multiple timeline sources. Idea would be to show a prominent filter icon with a dropdown like we do in problems or extensions view  ![image](https://user-images.githubusercontent.com/900690/158629795-495a91d8-de39-4f98-8350-3a9c4329a7f1.png)  ![image](https://user-images.githubusercontent.com/900690/158629835-26e44be5-3f1f-4a34-b32d-115540c21484.png)  ![image](https://user-images.githubusercontent.com/900690/158629900-19e4dc57-35a5-4f0b-baab-8d1b04f7cbc5.png)  //cc @misolori @daviddossett
---
Título: Timeline: revisit merging sources from all providers
Descripcion: I am a timeline consumer for local history entries. I respect the decision to show all timeline sources merged together by default. I do not agree with that decision though and think a dropdown to switch between individual providers makes more sense.  My changes are on `main` and it works like this: * anytime you save a working copy, a new entry is added * the entries appear as timeline entries in the "Timeline" view as "Local History" * clicking an entry diffs to the current file  **Demo:**  ![Recording 2022-03-15 at 20 21 26](https://user-images.githubusercontent.com/900690/158455051-a1e907d1-34e5-436e-9f29-7bf8b000f611.gif)  Imagine existing users that are used to seeing the git history. They will soon see their timeline spammed with entries that have nothing to do with git (that is my main worry actually).  **Alternate Design**  Imagine a dropdown that allows to switch between the sources:  ![Recording 2022-03-15 at 20 23 53](https://user-images.githubusercontent.com/900690/158455488-0c78abd8-cd28-46b8-a281-cadf7d6a6d8d.gif)  //cc @kieferrm @egamma
---
Título: View action dropdown background inconsistency
Descripcion: While working on a dropdown for the timeline view I noticed how the background color is the sidebar background color, which is different from the debug dropdown:  ![image](https://user-images.githubusercontent.com/900690/158423811-13ad593c-8479-4e1b-a176-091cbe2928fa.png)  ![image](https://user-images.githubusercontent.com/900690/158423845-6fa4b6cb-aaf0-4e83-91f2-20328610e0af.png)  Same already applied to output if moved into the sidebar:  ![image](https://user-images.githubusercontent.com/900690/158423887-619f930f-688d-4957-b2b6-e91744581523.png)  I am not sure the idea here whether to align or not.
---
Título: Explore variations for File > New file and File > New file...
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  This is the current experience in the File menu for creating a new file and we want to explore different variations to improve the UX.   <img width="304" alt="Screen Shot 2022-03-14 at 7 52 05 AM" src="https://user-images.githubusercontent.com/60596156/158198134-0f2ba8fa-edbc-4cba-be6e-284752338d81.png">
---
Título: Add rounded corners to code suggestion
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I'd like the code suggestion small popup to have rounded corners to give it a more modern and minimalist feel/look.
---
Título: Too many expand/collapse icons in problems
Descripcion: This doesn't look right:  ![image](https://user-images.githubusercontent.com/2193314/157905515-32a50ad6-2edd-4c18-b3cd-7206ddb4a39d.png)  Version: 1.66.0-insider (user setup) Commit: 6b7453421201c888b81eae5c04ec822a6423608f Date: 2022-03-11T05:17:19.559Z Electron: 17.1.1 Chromium: 98.0.4758.109 Node.js: 16.13.0 V8: 9.8.177.11-electron.0 OS: Windows_NT x64 10.0.22000
---
Título: Toggle all files in "refactor previews"
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  I'm trying to rename a symbol from `decoder` to `is_decoder`. The "rename symbol" commonly prompts the "refactor preview" panel.   **Problem**: I'm using vscode for running machine learning experiments and I use the popular weights&biases library. The library automatically creates codebase checkpoints for each new experiment.  I wanted to rename a symbol, and the "rename symbol" command searched through all these code checkpoints and suggested making changes in all of them. However, I want to make changes only in my main codebase.  **Suggestion**: In the "refactor preview" panel, add a button to "toggle all/uncheck all" files. Then I can select only the limited number of files was to make the code changes.  ![CleanShot 2022-03-11 at 08 06 54](https://user-images.githubusercontent.com/18227298/157827839-906fa75b-a1b6-4175-8bcf-f0e6a753f8c0.png)
---
Título: Align editor find widget with the notebook find widget
Descripcion: To allow more filters/scopes for the find widget in monaco editor (for example, supporting search in strings/comments), we may want to align the ux with the notebook find widget by moving Find in Selection icon into the Find Input  <img width="376" alt="image" src="https://user-images.githubusercontent.com/876920/157726354-b6906f8c-506b-497b-a876-a05795697cd8.png">
---
Título: Icon request for local history entry
Descripcion: I am exploring to add entries to the "Timeline" view from saving files (= local history). This requires to use an icon to tell apart from SCM entries:  ![image](https://user-images.githubusercontent.com/900690/157634121-945f1ed9-e4db-4456-8317-4adbbc450408.png)  I am happy to use an existing icon or a new one, filing this issue to discuss.
---
Título: Extension is in odd disabled / enabled state when trying to enable an extension on a VS Code version that does not support it
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: No  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.66-insiders - OS Version: macOS monterey  This is a bit tricky as I'm not sure how to re-engineer this situation for the repro. But the repro is as follows.  1. VS Code Insiders 1.65 2. Install the .NET Interactive extension (version 310011 targets 1.65-insiders) 3. Disable the extension 4. VS Code Insiders updated to 1.66 5. Attempt to enable the .NET Interactive extension (note at this point there is no version that targets 1.66-insiders on the market) 6. Extension is now in a state where it cannot be enabled or disabled and I don't see an indication that the reason it's disabled is the engine version mismatch  <img width="962" alt="image" src="https://user-images.githubusercontent.com/812783/156849327-e46fe6d5-46df-44cb-8b4a-238b306294e6.png">  <img width="994" alt="image" src="https://user-images.githubusercontent.com/812783/156849348-41dc698e-a343-4621-a3fc-6977aae862d4.png">
---
Título: Leverage new support for markdown in timeline hovers for the git contribution
Descripcion: There is now support for using Markdown in timeline hovers, this should be used to embellish the current Git hover with improved formatting, emojis, avatar, and command links. This is the existing hover:  ![image](https://user-images.githubusercontent.com/172399/156771449-96be02c3-44b7-4d72-b5c7-0b42735be284.png)  Here are some examples for how Markdown is leveraged in hovers:  Remote Explorer/remote containers: ![image](https://user-images.githubusercontent.com/172399/156772301-c4eccdd3-3430-4986-a193-b099e49b2101.png)  Remote Explorer/codespaces ![image](https://user-images.githubusercontent.com/172399/156772417-6444b021-4ba4-4efa-97a6-3e9952f53002.png)  GitLens  ![image](https://user-images.githubusercontent.com/172399/156772690-ab7d63b6-8944-4dad-b05a-a7ed4b62305b.png)
---
Título: Explore alternate locations for the notifications center
Descripcion: The current location of the notification center in the status bar presents a few potential problems: - Notifications feel like a concept global to the application, even if many notifications are scoped to the current workspace. The status bar is mostly scoped to the current workspace/file, so it feels strange to have notifications located there. - The notification icon looks and feels like a regular status bar item, so it's hard to visually locate - It can be easy to miss notifications in the far lower right on the window  A few quick sketches to show what notifications could look like if moved to a more obvious area:  ## Move notification center to the title bar  This builds off the explorations by @lychung7 and @misolori to start moving more features to the title bar. E.g. search/commands, layout controls, etc.  ### macOS <img width="1034" alt="mac-dot" src="https://user-images.githubusercontent.com/25163139/156622550-a7748562-3720-480d-8c90-19d3b374714c.png">  ### Windows <img width="1025" alt="windows-dot" src="https://user-images.githubusercontent.com/25163139/156622577-4a71357f-a407-48fe-9282-66839b839727.png">  ## Use a different color for the notification dot  This could make notifications even more obvious. This might only make sense if we were to someday enable notifications _without_ a toast.  ### macOS <img width="1037" alt="mac-red-dot" src="https://user-images.githubusercontent.com/25163139/156622622-b84fc404-7d01-4975-b126-860cd96796f6.png">  ### Windows <img width="1020" alt="windows-red-dot" src="https://user-images.githubusercontent.com/25163139/156622647-de29df37-8c09-4618-92fd-90e7d7691be8.png">  ## Considerations  There are a few obvious trade offs here: - Notification list and toasts would overlap some workbench actions and tabs - Existing users are used to where notifications are located today - Potentially adds noise to the UI by moving notifications to a more prominent location - Should feedback have the same treatment given the global scope argument above?
---
Título: Provide mute and enable/disable functionality for notifications
Descripcion: As requested in #46676 and many other similar issues, I think it would be super useful to be able to mute notifications as well as enable and disable notifications for specific extensions.  ## Exploration  Here's how this could look: - Expose a menu on the notification list header to manage notifications for all or specific notifications - Expose a mute action on the notification list header that toggles the mute state. This could also be extended to mute for a specific duration (e.g. "Mute for 1 hour")  https://user-images.githubusercontent.com/25163139/156610574-f7cb9ef3-1bc1-4968-ab07-2dcc5317a977.mp4  I'm not happy with the icon choice for muting yet—let me know if there are any ideas here. I think the "bell with slash" icon is clear enough as a way to represent "muted" but I don't like using the regular bell icon for the mute action since it duplicates the main notification icon.
---
Título: allow rearranging of "source control" sections
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  this is for VSCode version 1.64.2  the current layout for source control is like this: Staged Changes section at the top (IF there are staged git changes) and Changes section at the bottom (EVEN IF there are no untracked git changes) <img width="319" alt="Screen Shot 2022-03-02 at 5 34 30 PM" src="https://user-images.githubusercontent.com/9736478/156335902-2c23d65a-6606-422d-b9d5-f450acf35421.png">  I'd really appreciate it if I can move the Staged Changes section BELOW the (Untracked) Changes section. if possible, also allow moving of the "Add Commit Message" text below the the Staged Changes section. here is a reference image from Atom Editor's git side panel: <img width="372" alt="Screen Shot 2022-03-02 at 5 44 11 PM" src="https://user-images.githubusercontent.com/9736478/156336595-74dc4b2e-79a4-4bef-8597-7899a47b3ae6.png">  I personally find Atom's approach at git layout pretty convenient: 1. from the very top, view all untracked changes then cherrypick the changes to be staged. 2. in the middle, review all staged changes, to ensure their correctness 3. and finally at the very bottom, approve the changes by leaving a commit message.  if moving the sections around is not an acceptable change for whatever reason, can we at least make the Staged Changes section always visible and have a FIXED HEIGHT? because the other problem I have with it being the top section is that when I stage a change from the (Untracked) Changes section, the Staged Changes section grows in height which pushes the (Untracked) Changes section down. This makes it hard for me to click the next (Untracked) Change item I wanted to click: instead of my cursor being right above the next item, the cursor is instead right above the "Changes" section header.  before staging App.js : <img width="301" alt="Screen Shot 2022-03-02 at 5 54 49 PM" src="https://user-images.githubusercontent.com/9736478/156339062-2b5b18d7-94fc-4125-9359-ee6ed7538c80.png">  after staging App.js, where cursor highlights section header instead of index.js : <img width="299" alt="Screen Shot 2022-03-02 at 5 55 12 PM" src="https://user-images.githubusercontent.com/9736478/156339363-4b774dfa-5cec-4781-aeb5-750e2db56974.png">  thanks for taking this idea in consideration
---
Título: Notifications with 2+ buttons should use primary and secondary button styles
Descripcion: Currently notifications are configurable to display multiple primary buttons. Here's an example from our [notification guidelines](https://code.visualstudio.com/api/references/extension-guidelines#notifications):  <img width="451" alt="notification-warning" src="https://user-images.githubusercontent.com/25163139/156245970-9d6726ca-6478-45a3-a610-24e9361d9097.png">  Generally using a bunch of primary actions is avoided as a basic UX principle—mostly given the added load it places on users to understand which option is the most likely one to take.  I can think of a few approaches off the top of my head: - Strictly enforce against using multiple primary actions in the API - Somehow lint for multiple contributed primary actions to gently discourage extension authors - Just add guidance to the notification API docs - Some combination of the above  This could extend to other areas as well (empty views, for example).
---
Título: Problems panels shows line number and column info inconsistently
Descripcion: ![CleanShot 2022-03-01 at 11 02 00@2x](https://user-images.githubusercontent.com/35271042/156232390-7ed4f9b6-ab49-4d70-a90a-a10893bf3865.png)  It's not clear what the `[XX, XX]` numbers mean in the problems view and after inspecting it appears that these are the line numbers and columns. We should update the string to keep it consistent with the way the status bar highlights this as `Ln XX, Col XX`.
---
Título: Dialog asking to copy or add workspace folder could mention target
Descripcion: I was testing drag and drop interaction with the explorer and found that the following dialog does not really tell me where the folder would be copied into. Especially when I drop to the empty explorer area and have multiple folders in my multi root workspace, the destination is not clear to me: will it be the first or second folder?  ![Recording 2022-03-01 at 08 19 35](https://user-images.githubusercontent.com/900690/156123128-cc0c7eb3-fd50-423f-b870-264b1b8f4c45.gif)   //cc @isidorn @misolori
---
Título: Refactor preview: not all checkboxes should be tabstops
Descripcion: Focus on the refactor preview view. Press tab (wanting to focus on the apply / discard) Instead focus is moved on all the checkboxes. You have to press tab a lot 🐛   I suggest to use the same strategy as the breakpoints view. Tab does not move focus to the checkboxes. And make sure that your role of your tree items is checkbox (`TreeAccessibilityProvider` has this built in to choose roles)
---
Título: Layout picker looks like a wrongly positioned dialog
Descripcion: Testing #143581  * F1 > Customize Layout  The picker sits at the quick pick position (I assume it's the same/similar code) but it looks like a dialog. It has title with string background and close command. That make it feel like it can be rearranged to a better location (which it cannot). Maybe its better to move the confirm/close button to the bottom  <img width="798" alt="Screen Shot 2022-02-23 at 09 30 03" src="https://user-images.githubusercontent.com/1794099/155284349-5d5aad01-c54a-4034-ab17-fd4a8cf71d19.png">  ---  move Ok/Accept/Done to the bottom  <img width="798" alt="Screen Shot 2022-02-23 at 09 30 03" src="https://user-images.githubusercontent.com/1794099/155285049-5572a465-70a9-4a07-a8dc-e55e85730ba3.png">
---
Título: Intellisense hover is dim making it difficult to see
Descripcion: <!-- Describe the feature you'd like. --> Hello! I found a UI problem in the process of using the code. The foreground color of the intelligent code prompt description document is dim, which especially affects the eyesight. This is particularly unfriendly to senior code writers. I hope you can adopt this opinion and improve it as soon as possible. to allow code developers to customize font colors. The font color range that needs to be improved I have marked it accurately using the red box and the numbers 1 and 2. Please see:  ![2022-02-18_code_提示文档前景色改进](https://user-images.githubusercontent.com/54253524/154707619-4d2ecf74-5af9-461c-9d22-cb89658f70e9.png)
---
Título: Source Control Tab - Git message hidding squash/discard/stage all buttons
Descripcion: Issue Type: <b>Bug</b>  When typing the commit message, if it is too long, an alert message is displayed on top of the actions buttons. I suggest to change this in a way where we could see the warning message and the same time have access to the actions.  VS Code version: Code 1.64.2 (f80445acd5a3dadef24aa209168452a3d97cc326, 2022-02-09T22:02:28.252Z) OS version: Windows_NT x64 10.0.19043 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-10610U CPU @ 1.80GHz (8 x 2304)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|15.73GB (5.00GB free)| |Process Argv|--folder-uri file:///c%3A/Projects/SenseiOS --crash-reporter-id 0ec6cdf6-03d9-4f4f-bac9-0e019fff5276| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (18)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-openapi|42C|4.8.2 lit-html|bie|1.11.1 vscode-eslint|dba|2.2.2 xml|Dot|2.5.1 gitlens|eam|11.7.0 vscode-html-css|ecm|1.11.0 prettier-vscode|esb|9.2.0 vscode-jest-runner|fir|0.4.47 vscode-test-explorer|hbe|2.21.1 vscode-docker|ms-|1.19.0 csharp|ms-|1.24.0 remote-containers|ms-|0.217.4 test-adapter-converter|ms-|0.1.5 language-liquid|nei|0.1.1 angular-karma-test-explorer|raa|1.2.8 vscode-yaml|red|1.4.0 sonarlint-vscode|Son|3.3.0 code-template-tool|yua|0.6.3  (1 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyl392:30425749 pythontb:30283811 pythonptprofiler:30281270 vsdfh931cf:30280410 vshan820:30294714 vstes263:30335439 pythondataviewer:30285071 vscod805:30301674 pythonvspyt200:30340761 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593cf:30376535 vsc1dst:30433059 pythonvs932:30410667 wslgetstarted:30433507 vsclayoutctrc:30437038 vsrem710cf:30416617 vsbas813:30436447 vscscmwlcmt:30436993  ```  </details>  <!-- generated by issue reporter -->
---
Título: macOS: inconsistent UI when it comes to inputs border radius
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.64.2 (Universal) - OS Version: macOS 12.2.1  On MacOS, even though some inputs such as selects have rounded corners, the focus indicator (1px solid border) does not:  <img width="187" alt="image" src="https://user-images.githubusercontent.com/19749621/153717226-c4ebb643-3702-4b76-ac6f-272d7106dd76.png"> <img width="204" alt="image" src="https://user-images.githubusercontent.com/19749621/153717220-54a24e1c-115e-47eb-9d07-023befd98045.png">  I believe that, going forward, all of VS Code's inputs should have rounded corners such as the one in the picture above. The focus indicators should, as well, if possible. This goes for both macOS and Windows, since Win11 has a similar design principle.  Currently, there's inconsistency between selectors and text inputs where the first ones are rounded (4px) and other inputs don't have any radius applied.  I'd be happy to help with this, but as this is such a large project, some guidance is welcome.  Steps to Reproduce:  1. Click on Output panel 2. Click on the select input 3. Dismiss the dropdown menu
---
Título: Add status bar for parameter hints
Descripcion: <img width="550" src="https://user-images.githubusercontent.com/35271042/153687498-edfef7be-5e75-4511-95bf-38fe500f4a33.png">  Have seen a lot of instances of users not knowing how to dismiss parameter hints (thread [here](https://www.reddit.com/r/vscode/comments/rzx2mc/help_me_remove_the_pop_up/) and [here](https://www.reddit.com/r/vscode/comments/sqck3k/why_does_vscode_display_this_when_i_write_print/)) so I was thinking that it might be useful to add a status bar to the parameter hints to give users an indication of how to dismiss, similar to the suggest widget status bar:  <img width="421" alt="CleanShot 2022-02-11 at 15 54 47@2x" src="https://user-images.githubusercontent.com/35271042/153686177-728444ed-b0ed-4f4c-b4e0-7fa4bbe0f648.png">  ## Suggestion  Add a status bar with actions to dismiss and others (maybe next hint?)  <img width="530" alt="CleanShot 2022-02-11 at 16 17 15@2x" src="https://user-images.githubusercontent.com/35271042/153687473-99bb00b8-987c-482e-b1b6-80aa37db1691.png">
---
Título: Always open editor even in error cases
Descripcion: 1) open a not empty repo folder 2) open a file in an editor (not preview mode) 3) create a new untitled file 4) add a couple of new lines 5) save it as an `ipynb` file 6) close the saved file 7) right click the ipynb file in the explorer and select "Open with..." > Jupyter -> error notification  -> the explorer immediately selects the file from step 2. In a small workspace this is not an issue but in a larger on it is. The `ipynb` file might scroll out of the view port.  For me, the error notification here is the wrong tool. This should be a modal dialog.   Recording of step 7 and the consequences:  ![CleanShot 2022-02-11 at 11 45 01](https://user-images.githubusercontent.com/4674940/153659314-688c6513-8c48-4694-a343-11f8aab57a06.gif)
---
Título: Explore using the window titlebar to make the command palette more discoverable
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> A couple of months ago we started brainstorming how we could update the titlebar.  Here are some of the most recent explorations:  ![Frame 14](https://user-images.githubusercontent.com/60596156/153643778-1c64ae10-7233-42fd-8103-47f82377f4ef.png) ![Frame 11](https://user-images.githubusercontent.com/60596156/153643759-88f8be4e-821c-450d-b205-66a22549cee7.png) ![Frame 16](https://user-images.githubusercontent.com/60596156/153643877-d73a630b-7516-401d-ad82-d9b2b7946268.png)   Now we'll be iterating specifically on the command palette experience that opens from the titlebar.
---
Título: Notebooks IntelliSense: DocString covers up auto-complete list when cell is at the bottom of the screen
Descripcion: Version: 1.65.0-insider (user setup) Commit: d09aeab62c1f93acf4a89b93e9a8a82419d6249a Date: 2022-02-09T05:16:17.063Z Electron: 16.0.8 Chromium: 96.0.4664.110 Node.js: 16.9.1 V8: 9.6.180.21-electron.0 OS: Windows_NT x64 10.0.22000  Steps to Reproduce:  1. in an ipynb file, add enough cells so the last cell is at the bottom of the screen 2. put in the following code in the last cell: import pandas as pd X = ['A','B','C'] Y = pd.Series(X) 3. then type in the following line of code and stop after the "." following the second "Y" print(Y,Y.)  Actual: auto-complete list comes up behind DocString ![image](https://user-images.githubusercontent.com/26419852/153302983-bfa7a282-7c4c-4e82-917d-d26289a36e50.png)
---
Título: Notebook UX/usability issues
Descripcion: I've been using notebooks more lately because of @joyceerhl's GitHub GraphQL notebook. And I find myself fighting with the UX of the notebook more and more.  Here are some of the issues I've been experiencing - The run button can be far away from the output (and worse can even be out of view)   - You can't even right-click to run the cell, as there isn't an option to run that single cell   - Having the run button not scroll out of view would help, but it might also be nice to have an addition run button or something in the statusbar, e.g. close to the output - Cells are not resizable   - I keep trying to drag the bar between the cell and its output to resize the output   - I don't feel like there is a silver bullet here, but I am constantly wanting the cell editor to be smaller and the output to be bigger. But it also completely depends on the context. I wonder if by default both the top and bottom could be made to scroll (and be resizable?), and then on focus they expand to not scroll? This could cause too much jumping, or maybe it could be done outside the document flow e.g. focus into the editor and it expands on top of everything below it.   - Overall I feel like I spend too much time scrolling around and looking at the output in a narrow window. - Cell context menu is overly tailored to creation and not running   ![image](https://user-images.githubusercontent.com/641685/152894082-d785080a-f714-460d-bf9c-475b0b9f5645.png)   - IMO, Cut/Copy/Paste, should be at the bottom near delete, Execute options should be at the top, and then the other options mixed in the middle - Scrolling the notebook is also an issue because of the multiple scrollable areas -- so if I am trying to scroll up in the notebook, I can constantly get stuck inside a cell's output as I'm doing that.   Another alternative to resizing the output, a suggestion from @TylerLeonhardt is to have an option (per-cell imo) to show the output side-by-side with the cell. I think having an orientation option would be a great addition.
---
Título: Open walkthroughs in new sidepanel
Descripcion: The current walkthroughs open in the editor space, which makes it hard to point to editor features. As new files and workspaces get opened, we have so far solved this by switching to split editor mode. Even as we started we already had mockups to explore walkthroughs in the sidebar, but which would then vanish when pointing to other sidebar views.  When the walkthroughs open in the new sidepanel on the right, they have more freedom to highlight different parts of the UI and persist in a stable location as more editors get opened. This will especially help walkthroughs that give UI tours, like [Luna Paint](https://github.com/lunapaint/vscode-luna-paint).  While it works mostly, the walkthrough UI would need some extra thought to make the best of the smaller sidebar space. How can we ensure the high-res SVGs and longer markdown content work well. As a goal, any current 1st and 3rd party walkthrough content should still work in any new UI we come up with, but might need follow up polish to make best use of the available space.  The walkthrough list could still be on the Get Started or be the welcome state of the "Walkthroughs"  This idea was reignited by MakeCode's intuitive onboarding guide (just as reference. We would not 1-1 follow the same UX):  <img src=https://user-images.githubusercontent.com/8599/152584250-dcb4e8e1-7323-48f5-a3ba-c1685377e524.png width=400>
---
Título: Incomplete walkthroughs pile up in Get Started
Descripcion: I have seen this issue many screen sharing sessions: Walkthroughs stay half-completed, stick around in the list, and make it feel stale even as extensions add new ones. While new walkthroughs get added to the end, the top ones don't make room.  The walkthroughs should be contextually relevant, lean, and uncluttered – not feel like the stack of books next to your bed that make you feel bad about not leveling up fast enough.  Mine as reference:  <img width="200" alt="image" src="https://user-images.githubusercontent.com/8599/152443901-2a1421f6-134a-4580-a151-fe703ad960ee.png">  A combination of behaviors could lead to this:  - **Users never used a walkthrough but steps get completed as they use VS Code.** The _done_ heuristics for walkthrough steps are still being triggered as users use VS Code, slowly completing walkthroughs but never completing them. - **Users move on while using a walkthrough.** Users explore some of the items that interest them and then naturally switch over to using VS Code or close the Get Started tab. - **Users complete items they need and leave out the rest.** Users intentionally click through items that they need and leave the rest. - **Users don't spend time to micro manage onboarding content.** While walkthroughs can be x'd out, this action has some uncertainty of what happens (_are they done forever or just hidden?_) and also adds unnecessary micro management to an onboarding feature.  Ideas that can be combined to make the walkthrough list more relevant and actionable:  1. Don't complete steps without the walkthrough being open. Makes the progress easier to understand. 2. Don't ⭐️-feature walkthroughs that are more than half completed, have any progress, or have been opened before. 3. Reduce out some of the todo-style checkboxes and progress to reduce the micro management burden (and simplify the UI). 4. Switch from todo style to a simpler design. We have existing mockups from @lychung7 and @misolori on a slideshow UI that is also a more responsive design for small screen estate.
---
Título: Streamlining the refactoring panel/diff view/preview experience
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  I've been experimenting with an extension that applies edits to the source code. I had some ideas for how this experience could be simplified. At a high level, it seems, at least from my perspective, that a few of the steps required. Here's an image that summarizes the final state I had in mind:  <img width="3742" alt="diff-view-proposal" src="https://user-images.githubusercontent.com/4606345/152368720-383ce4e6-a531-4831-93eb-196227a6d052.png">  Here's what would happen in this proposed flow:  1. The user clicks on the code action which contains an edit that needs confirmation 2. This immediately opens the refactoring preview window on the top half of the screen, and shows the refactoring that can be applied on the bottom. The user can hover over the refactorings in the bottom panel and click a checkmark that allows them to be applied.  The main reason I think these changes are beneficial is because they streamline the experience, and make it more obvious what is going on. Specifically, without these proposed changes there's a few areas that seem overly complex:  1. Currently, when the user clicks on the code action with the fix the refactoring preview window isn't open by default. The user needs to click on the file path in the bottom panel to open up the diff view. It isn't immediately obvious (at least to me) that the file path is clickable, so it isn't immediately obvious what the code action actually is 2. Additionally, the user needs to check the checkboxes in the bottom panel to select which refactorings can be applied. This seems like a useful way to select subsets of refactorings, but if the checkboxes are unchecked by default it requires a few extra steps to actually view the diff. Additionally, with none of the checkboxes checked the diff view just shows a diff of the file by itself (which doesn't express much added information).  The proposal, essentially, makes it so the previous two steps are not required by the user. This seems like it simplifies things since it makes, at least what I see as, the common case the default case.  Thanks for taking the time to read this and let me know if you have any questions
---
Título: Comments panel redesign
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  This is a followup to the discussion in #139524. Planned API changes means that more information can be surfaced on the UI (in particular, timestamp and thread status). At the same time, we want to reduce visual complexity, it can already be difficult to navigate through the set of comments and find which ones are relevant.  I'd  like to explore here designs that remove intermediate replies in a discussion thread. Rationale: reading a full discussion in the comments panel is not really feasible (because comment snippets are truncated and lack styling). If someone wants to read the discussion, they should open it. We need to show enough context so that a user can find the thread they are interested in.  Design 1. ![image](https://user-images.githubusercontent.com/485572/152359744-7df89fe6-ce30-4c17-bd3d-9b84609271a2.png)  Here, we show only the first and the last messages in each thread. The first message is useful for the context. The last message helps the user know what is the state of the thread, and if there was a message since they last read it.  We could add "..." somewhere to make it clearer that intermediate messages are not shown.  Design 2. ![image](https://user-images.githubusercontent.com/485572/152360182-22da77bf-47d6-4f06-86a4-6d44409ad0a0.png)  Here, we don't show the first message and we focus on the last update. We give information about hidden messages: how many messages are not shown and who where the authors. This design makes it more obvious that the full thread is not shown.  Other thoughts: - Being able to hide the resolved threads would be very useful. This would be similar to the filter we already have in the Problems panel (e.g. `Show warnings` can be unchecked). - It would also help if we had control on which thread is expanded. The API only lets us expand/collapse a thread in the editor view, maybe we could have the same for the Comments panel? This feature is important IMO if we keep a design that lists all intermediate replies.  (mocks designed by @albertelo) cc @alexr00 and @isidorn
---
Título: Fine tune when shell integration activation message is shown
Descripcion: This will be particularly important when we enable this by default  One option: - only show it in the first x terminals created of a particular shell
---
Título: Show some UI indication that I opted to install pre-releases of an extension even if the latest version is a release version
Descripcion: - Install a pre-release version of an extension - When the latest version is pre-release there is nice UI indication that I am on pre-release - If the extension updates to latest release version, then I have no clue that I have opted to install/update pre-releases of that extension. Show some UI indication in this case and also an option to not to update to pre-releases of that extension
---
Título: SCM - hard to see the file list visual structure
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  In the SCM panel, VS Code shows a list of modified files. When there are modified files in multiple directories (especially in a large repo), it can be difficult to navigate and make sense of the list.  VS Code offers two options:  1. View as List ![unnamed](https://user-images.githubusercontent.com/485572/150365531-007c5bf6-0d80-4c8e-8528-a75bfdaa1749.png)  * Lack of visual structure (i.e. difficulty scanning and distinguishing information). * Hard to see when two files are in the same directory (because the directory names are not aligned).  2. View as Tree ![unnamed](https://user-images.githubusercontent.com/485572/150365499-7a28a880-249b-49db-a2c5-96d28222a40e.png)  * Takes more vertical space. * Hard to see what’s the full path of a file (e.g. in which directory is content.ts?). * Easy to get lost after scrolling (the root part is no longer visible).  3. Proposal  I would like to have another rendering of the file list to fix these problems. I understand this might not be better in every case, so it should probably be a 3rd option.  ![unnamed](https://user-images.githubusercontent.com/485572/150365516-ab90b63f-62cf-45be-8e72-2b4e8a659397.png) (not a perfect mock, it's a screenshot from another tool, icons are missing)  * Compared to the screenshot 1, the filename and the path are reversed. * The part of the path that’s the same as the previous line is greyed out. * The structure is more obvious. * It requires horizontal space (this works well when the SCM panel is at the bottom).   Happy to send a PR when the proposal is accepted. I'm also happy to discuss other possible solutions.
---
Título: Move accept/discard button of refactor preview into panel
Descripcion: The buttons to accept/discard refactorings aren't easy to discover.   @lychung7 proposed to move them into the view (similar to the ports view) and I think we should explore that.   ![buttons fixed to bottom of panel](https://user-images.githubusercontent.com/1794099/150343277-2efe56dc-a8b4-446b-a3d4-4fc0c8ff7648.png)
---
Título: Source control panel - sync changes button when syncing is not in loading state
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->   ![image](https://user-images.githubusercontent.com/68393567/149564615-4881ca1e-d525-4a4e-8576-4182a2d63377.png) This button that you can see in my attached image, is in source control panel when you have changes to sync. But when you start syncing changes, the round icon is not loading as it's loading in bottom bar. I think it should be in loading state.
---
Título: Design Systems Patterns
Descripcion: ## Summary  This design exploration aims to look at how we can make the product more consistent from a design system perspective. Parts of the products use certain patterns while others don't, so we will explore what this could look like. The list below will grow and evolve as we discover more patterns:  - [x] Overflow - [x] View and action management - [x] Contextual windows (notification center, feedback) - [x] Drag and drop - [x] Filtering   ## Design Proposal  ### Overflow and view management  Below is video walkthrough of the current proposal for how we could apply our overflow and view management patterns to other areas like toolbar actions, status bar items, etc.  #### Related issues  - #46403 - #35744 - #9285  [<img width="740" alt="image" src="https://user-images.githubusercontent.com/35271042/149241062-e5c36f54-ba8e-46c6-a27f-e07ed7bd5090.png">](https://www.loom.com/share/0db793c008e54429a0fb9e5582caaea4)  https://user-images.githubusercontent.com/35271042/149242157-a3c023fa-ffc3-4e9d-a9f6-cfdd77a23adc.mp4  ### Contextual windows  In the status bar, we utilize contextual windows to display content close to the user's click target. Using the same spirit, this concept looks at using a "mini quick pick" for items that derive from the status bar. Because the quick pick can filter out results based on the input field, we inverted the orientation to keep the position of the input consistent.  https://user-images.githubusercontent.com/35271042/153288462-8365654b-daae-4110-a22d-62e3bc4e1258.mp4  ### Drag and drop  We currently allow users to move around views in the Activity Bar, Sidebars, and Panels. This explorer aims to see how we can extend this to the editor area and allow you to move files that are inside of views (Problems, References, Diff, etc.) and other views into the editor area. We also looked at how we can extend the drag and drop functionality for inserting paths/links in markdown/typescript files.  ### Related issues  - #5240 - #133018 - #111260  [<img width="903" alt="CleanShot 2022-03-08 at 10 27 43@2x" src="https://user-images.githubusercontent.com/35271042/157302207-c323ce71-6a95-4ef1-8eaf-666111991b6c.png"> ](https://www.loom.com/share/a7cdac3520e945adad7faf87a812ea10)  ### Filtering  We have a, hard to discover, feature in tree views that allow the user to [filter the list view on type](https://code.visualstudio.com/updates/v1_31#_new-tree-widget). This exploration looks at making that a little more discoverable by adding an entry point in the list header. This is also looks at consolidating the search filters & queries from the problems/settings/extensions views for a consistent experience.  #### Related issues  - #70646  [<img width="1478" alt="CleanShot 2022-03-17 at 15 31 13@2x" src="https://user-images.githubusercontent.com/35271042/158905077-cce70bf8-5d0f-4dd6-b59e-df532bbeb1f2.png"> ](https://www.loom.com/share/2bf76214202345ae979b06c69e45302a)
---
Título: Usability "souce control" tree element filtering bad
Descripcion: Issue Type: <b>Bug</b>  The "Souce Control" view of VS code allows for element filtering in its tree view (I like that!)  Alas, this filtering suffers from a few usability concerns which make the feature less functional than (easily) feasible.  Lets start with a screenshot which I will use to illustrate those challenges:  ![image](https://user-images.githubusercontent.com/3868036/149141800-8c386bc5-3461-4170-b3af-9c693276cf24.png)  **a) visually detached filter**  Notice how I "enabled" treeview element filtering by typing "care" - see upper right corner. But also notice the large gap between the typed "care" and the filtered elements (thanks to the commit message box).  Request: Make typed "care" appear above the "Changes" list (lower right corner of the Commit message), not in the upper right corner of the "Source Control" panel  **b) filtering (partially) collapsed tree-perspective treeview**  The treeview can be switched between a list and tree perspective, I much prefer the tree perspective. The tree perspective may be (partially) collapsed.  Filtering of elements works perfectly in any perspective, but in tree perspective (partially) collapsed elements are a pain: there does not seem to be any way to "expand all" or "collapse all", such that the effects of filtering become visible.  Request: Provide a means to at least "expand all" (e.g. [+]) and possibly "collapse all" ([-])  For reference, the plain "Explorer" panel does have a "collapse all" ([-]) icon in the top right corner - but also lacks an "expand all" (e.g. [+]) icon  So, generally, the lack of means to "expand all" has negative impact on the usability to filter that tree view, in particular for directories (workspaces) with a large number of (deeply nested) directories.   VS Code version: Code 1.63.2 (899d46d82c4c95423fb7e10e68eba52050e30ba3, 2021-12-15T09:39:46.686Z) OS version: Linux x64 5.15.13-200.fc35.x86_64 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz (8 x 2904)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>opengl: enabled_on<br>rasterization: disabled_software<br>skia_renderer: enabled_on<br>video_decode: disabled_software<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|1, 1, 1| |Memory (System)|31.31GB (15.31GB free)| |Process Argv|--disable-extensions --crash-reporter-id 80e0ae97-0bc4-4a76-8337-f435f2ec1554| |Screen Reader|no| |VM|100%| |DESKTOP_SESSION|/usr/share/xsessions/plasmax11| |XDG_CURRENT_DESKTOP|KDE| |XDG_SESSION_DESKTOP|KDE| |XDG_SESSION_TYPE|x11| </details>Extensions disabled<details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492cf:30256860 pythontb:30283811 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 pythondataviewer:30285071 vscod805:30301674 pythonvspyt200:30340761 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593:30376534 pythonvs932:30410667 vscop804cf:30404767 vs360:30404995 vsrem710:30416614 vsccppwtstudy:30421978  ```  </details>  <!-- generated by issue reporter -->
---
Título: Allow using 'statusBarItem.prominentBackground' in extension-provided StatusBarItems
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Right now extensions providing a StatusBarItem can only set their background to `statusBarItem.errorBackground` or `statusBarItem.warningBackground`, in order to maintain visual consistency across the UI.  The problem is that both of these colours are quite alarming, they are visually high-impact and immediately drag the user's attention away from whatever they are doing.  We are building an extension that provides a StatusBarItem where we would prefer a background that is different then the StatusBar background, but in a gentle way.  VSCode themes already provide such a colour: `statusBarItem.prominentBackground`.  We would like for this colour to be accessible by extension authors.  Thank you.  <!-- Describe the feature you'd like. -->
---
Título: revolution for git interface
Descripcion: ### this ui/ux for git operation is very poor and we are really suffering from many problems   specially  thanks to respect and understand them and not to prevent by prejudice    ![image](https://user-images.githubusercontent.com/53381292/148701493-08cc7266-051d-4c53-98a8-5e7488e2c7c4.png)  ###  Problems  1. it is very hard to know which remote repository is added for a project 2. it is not possible to add git remote account for each project  3. it is not support/possible to have multi git(remote repo) account  4. get standalone  git account from OS level and reduce it to project level 5. we can not login easy and logins is not persistent for new projects in the future works 6. .....   ### Solution **_`make all impossible and non-supports mentioned above to  possible and supporting by implementing this features`_**   I put best ui/ux for example to learn you(kosmaghzha) how to implement it pretty  ![image](https://user-images.githubusercontent.com/53381292/148701842-48583a61-5357-426d-b945-c72436f2644b.png)
---
Título: Add themeable elements to style Git sidebar headings
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I find it a bit eye-straining (and therefore a bit of a productivity hindrance) how indistinguishably Git sidebar UI divides **Changes** from **Staged Changes**. I wish there was a way to theme these headings, so that at least a divider could be rendered. Especially that when you add/remove changes from staging, the areas jump around, so there is no visual anchor to hold on to.
---
Título: Settings sync as a backup settings offering
Descripcion: In our UI we show settings sync as "Turn on Settings Sync" in various menus and settings UI. This is great and correct, however I believe that majority of users just want to backup their settings to get that warm fuzzy feeling of being safe. The whole wording of "Settings Sync" is not really best here - it is all about saving your data up in the cloud and you feeling secure. I love how Chrome just says "Sync is on".  I think we should improve this and I would love to hear your ideas on how. Here are some of mine that I believe will make this simpler for the users and more easily reachable: 1. Turn On Settings Sync button in the Settings UI needs to be a checkbox (like word picture below). "Turn on Sync" should be the title. 2. Fine tune the wording in the QuickPick dialog. "Please sign in to synchronise your data across devices" -> "Please sign in to sync your data across devices". All instances of "synchronise" should be changed with "sync" 3. Use more green, or checkmarks as reassurance once the Sync is on 4. Sell more prominently the idea of a backup - we currently only mention it in the welcome view. 5. Small status bar item?  Idea for this by @chrisdias  fyi @rzhao271 @misolori for settings UI fyi @Tyriar @lszomoru from the settings service side  ![Screenshot 2022-01-04 at 20 12 57](https://user-images.githubusercontent.com/1926584/148111536-acdacd28-4d67-40da-8a9b-f55e32f2f084.png)  ![Screenshot 2022-01-04 at 20 01 18](https://user-images.githubusercontent.com/1926584/148110157-ab022933-6d91-456a-8cb2-c8a4d8a01983.png)  ![Screenshot 2022-01-04 at 20 06 40](https://user-images.githubusercontent.com/1926584/148110791-f3d0013c-a0de-499a-9c4d-a44eeecff235.png)
---
Título: Support no value for editorSuggestWidget.selectedIconForeground
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Initially, the icon of suggested autocomplete items (editorSuggestWidget) has a color that depends on the type of the item.  Since recently, the selected item gets painted in white which disturbs me because, to me, white corresponds to snippets or random text.  I'm aware of the following option: `workbench.colorCustomizations -> editorSuggestWidget.selectedIconForeground`.  But this only allows forcing another color... what I want is to keep the default color whether selected or not. (for example mauve for methods, blue for fields, ...) What would be cool is to have null as a value or equivalent that would disable specific color for the icon of the selected item.  Also, I am pretty sure this problem occurred before, then went away, and came back only recently (last release maybe).  ---  See [related question on stackoverflow](https://stackoverflow.com/questions/68321114/customizing-vscode-theme-how-to-keep-original-icon-color-for-the-focused-item-i)  The solution proposed in the accepted answer didn't work for me (when using vscode default dark theme).  And since I am using the Monokai color theme, it wouldn't help anyway. I have the following colorCustomization in case it is related: ```json "workbench.colorCustomizations": {   "[Monokai]": {         "editorCursor.foreground": "#0F0",         "focusBorder": "#0F0",         "editor.selectionHighlightBorder": "#D8B43C",         "editor.rangeHighlightBackground": "#D8B43C55",         "editor.findMatchBorder": "#D8B43C",         "editorBracketMatch.background": "#D8B43C55",         "editorBracketMatch.border": "#D8B43C",         "editorIndentGuide.background": "#00000000",         "editorIndentGuide.activeBackground": "#D8B43C",         "activityBar.background": "#191919",         "editor.background": "#191919",         "editor.lineHighlightBackground": "#2d2d2d",         "list.hoverBackground": "#323232",         "list.activeSelectionBackground": "#424242",         "list.inactiveSelectionBackground": "#2d2d2d",         "sideBar.background": "#1b1b1b",         "sideBarSectionHeader.background": "#232323",         "editor.selectionHighlightBackground": "#0000",         "selection.background": "#207a27"     }, } ```
---
Título: X shouldn't overlay text in intellisense completion widget
Descripcion: Maybe this has always been the case, but in my opinion it looks bad and initially I thought it was some rendering bug. I would expect that area to be reserved and then you scroll to reveal text from under it <img width="333" alt="Screen Shot 2021-12-21 at 10 19 26 AM" src="https://user-images.githubusercontent.com/4544166/146954833-f464371b-5ac7-413d-9741-0da870011a2c.png"> .
---
Título: Provide a way to add a timestamp to a comment
Descripcion: Example of where this could be used: https://github.com/microsoft/vscode-pull-request-github/issues/121  Some ideas for how this could look:  ![image](https://user-images.githubusercontent.com/38270282/146794941-7ed4c079-de89-4441-8c6b-4691264890f6.png)
---
Título: terminal split button in the editor area doesn't work
Descripcion: a new terminal in the editor area isn't opened
---
Título: editorSuggestWidget.foreground ignored
Descripcion: Issue Type: <b>Bug</b>  Customizing `editorSuggestWidget.foreground` as [documented](https://code.visualstudio.com/api/references/theme-color#editor-widget-colors) has no effect.  **Given**  ``"editorSuggestWidget.foreground": "#ff0000",``  **Expected**  Foreground color of suggest widget (i.e., text color) is red.  **Actual**  Foreground color of suggest widget (i.e., text color) is default foreground color. Status bar color is red.  **Screenshot**  ![image](https://user-images.githubusercontent.com/73974/146191341-4ba72a86-2992-4123-a7ea-696bbd39f39c.png)   VS Code version: Code 1.63.1 (fe719cd3e5825bf14e14182fddeb88ee8daf044f, 2021-12-14T02:13:13.580Z) OS version: Darwin x64 21.1.0 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|6, 4, 3| |Memory (System)|16.00GB (0.27GB free)| |Process Argv|--crash-reporter-id 0404a371-ca9b-4f3c-9e1f-dfea7ff85d7c| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (64)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-sql-formatter|adp|1.4.4 alpine-js-intellisense|adr|1.2.0 Bookmarks|ale|13.2.2 ng-template|Ang|13.1.0 asciidoctor-vscode|asc|2.8.10 toml|be5|0.6.0 lit-html|bie|1.11.1 markdown-emoji|bie|0.2.1 markdown-preview-github-styles|bie|0.2.0 clj-kondo|bor|2021.12.1 vscode-tailwindcss|bra|0.7.4 vscode-toggle-quotes|Bri|0.3.5 vscode-standardjs-snippets|cap|0.8.15 solargraph|cas|0.23.0 postcss|css|1.0.9 transformer|dak|1.12.0 vscode-eslint|dba|2.2.2 gitlens|eam|11.7.0 vsc-material-theme|Equ|33.2.2 vsc-material-theme-icons|equ|2.2.1 prettier-vscode|esb|9.0.0 vscode-commands|fab|1.4.3 vscode-sql-tagged-template-literals|fri|0.0.18 vscode-sql-tagged-template-literals-syntax-only|fri|0.0.19 go|gol|0.29.0 vscode-graphql|Gra|0.3.41 todo-tree|Gru|0.0.214 elixir-ls|Jak|0.9.0 vsc-space-block-jumper|jmf|1.2.2 asciidoctor-vscode|joa|2.8.0 vscode-styled-components|jpo|1.7.0 center-editor-window|kai|2.3.0 endwise|kai|1.5.1 restructuredtext|lex|167.0.0 rainbow-csv|mec|1.10.1 prettify-json|moh|0.0.3 vscode-apache|mrm|1.2.0 vscode-docker|ms-|1.18.0 python|ms-|2021.12.1559732655 vscode-pylance|ms-|2021.12.2 jupyter|ms-|2021.11.1001550889 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.4 vscode-typescript-tslint-plugin|ms-|1.3.3 neos-fusion|net|1.0.6 vetur|oct|0.35.0 phoenix|pho|0.1.1 prisma|Pri|3.6.0 ruby|reb|0.28.1 vscode-commons|red|0.0.6 vscode-yaml|red|1.2.2 vscode-sort-json|ric|1.20.0 multi-command|ryu|1.5.1 jinjahtml|sam|0.16.0 vscode-nginx|sha|0.6.0 vscode-fileutils|sle|3.4.5 vscode-multiclip|sle|0.1.5 rewrap|stk|1.15.4 ayu|tea|1.0.5 vscode-status-bar-format-toggle|tom|3.0.0 simple-rst|tro|1.5.1 non-breaking-space-highlighter|vik|0.0.3 vscode-todo-highlight|way|1.0.5 vscode-ruby|win|0.28.0  (5 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383cf:30185419 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492:30256859 vstes516:30244333 pythontb:30283811 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 pythondataviewer:30285071 vscod805:30301674 pythonvspyt200:30340761 binariesv615:30325510 bridge0708:30335490 bridge0723:30353136 vsaa593:30376534 pythonvs932:30410667 vscop804cf:30404767 vs360:30404995 vsrem710cf:30405999 py55gd98cf:30411515 vscexrecpromp3t1:30407762 vscop841cf:30413486 vscop927cf:30413487 vscop436cf:30413488  ```  </details>  <!-- generated by issue reporter -->
---
Título: Notebook revert changes action
Descripcion: It would be great if I could undo all changes to a notebook cell just like how you can do that for segments of code in the editor. If this is already possible, I haven't been able to figure out how / it's not discoverable.    ![recording - 2021-12-02T111748 917](https://user-images.githubusercontent.com/29464607/144488297-cc47a706-37fa-4228-a6a1-e01bd414bc07.gif)
---
Título: Difficult hit target for partial language support notification
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.62.3 - OS Version: macOS Monterey 12.0.1  Ran into this while testing this item for python extension: https://github.com/microsoft/vscode-python/issues/18091. I feel this might be a VS Code issue, but could be moved if it's something the Python extension can fix.   Steps are same as the python issue linked.  1. Install the build of the python extension linked here  https://pvsc.blob.core.windows.net/extension-builds/ms-python-insiders.vsix 2. Select pylance as the language server for python 3. Open a python file in an untrusted folder 4. See the indicator that there is currently partial language support only ![image](https://user-images.githubusercontent.com/812783/144299810-84e3acd5-0e9c-4e7d-bbf0-b21eb1444ba8.png)  From the screen above you want to move your mouse to the "Learn More" link. But that hover goes away if you scrape just a bit of the "Python" language mode selector since that has a different hover. So you have to route straight up and over to get there.  Not a huge deal, but a bit of a minor annoyance if there was some way to tweak this here. Part of this issue might be that "{ } Python" are all part of the same status item, so you don't expect to lose the hover moving from one part of the button to another. ![LangHitTarget](https://user-images.githubusercontent.com/812783/144300401-6587400d-617b-4178-b29c-312424a39d0c.gif)
---
Título: Show a Pre-Release banner with a "Back to Release button"
Descripcion: Testing #138068  When clicking on the "Pre-Release version" link, the Pre-Release readme is shown (which is a good idea). However, if the content of that readme is not that different, the user will not notice any difference (and there is no obvious way to go back to the release readme).  I suggest to introduce some kind of banner:  ![image](https://user-images.githubusercontent.com/1898161/144252320-a61a6514-e522-4ae4-a5d9-1b5fdcbc8902.png)
---
Título: Green dot for pre-release feels random
Descripcion: Testing #138086  I have a hard time making sense of the green dot at the right of pre-release extensions. It is not self-explaining and there is no hover for it. Also, there is another light dot within a triangle on the other side. Intuitively I would have said that the green dot mean "on", "loaded", or "running"  <img width="357" alt="Screen Shot 2021-11-30 at 10 50 52" src="https://user-images.githubusercontent.com/1794099/144024649-f675f1dc-1fb2-4adb-94e3-013170dfe06e.png">
---
Título: Diff view: output metadata change UX is confusing
Descripcion: Version: 1.63.0-insider (user setup) Commit: ed3018f4310e906daa0a9119d997e75b8a38b879 Date: 2021-11-23T05:33:39.595Z Electron: 13.5.2 Chromium: 91.0.4472.164 Node.js: 14.16.0 V8: 9.1.269.39-electron.0 OS: Windows_NT x64 10.0.22000  Steps to Reproduce: 1. open this notebook in VS Code https://github.com/claudiaregio/data-science/blob/main/Titanic.ipynb 2. "Run All" cells 3. switch to the diff view for the notebooks file 4. scroll down to this cell ![image](https://user-images.githubusercontent.com/26419852/143326886-98a88815-116c-4813-800e-1b8ee881af76.png)  It's confusing that the two tables are highlighted in red and green colors, even though their content is identical. Also, the "Switch output rendering" button is hard to discover as it's on the far-right side.
---
Título: Extension in-app page width
Descripcion: New extension page within the app is way too narrow. This extremely tunneling view brings headache and nausea. It needs to be full width and without large fixed elements. <img width="1920" alt="Code_2021-11-24_04-53-31" src="https://user-images.githubusercontent.com/10468217/143157805-b59be852-6f9c-4653-b341-1a814a7b450a.png">
---
Título: Improvement on 'Search in Files'
Descripcion: Issue Type: <b>Bug</b>  It seems that the feature tries to display some snippet of a line so as show the search target string as well as have it fit in a small horizontal space. I could not find this documented in the feature description.  While this is worthwhile, I see two problems with the current implementation:   1. it can drop useful information (e.g. the fact that the line is commented out) 2. it is not indicating that there was elided text   VS Code version: Code 1.62.3 (ccbaa2d27e38e5afa3e5c21c1c7bef4657064247, 2021-11-17T08:11:14.551Z) OS version: Windows_NT x64 10.0.22000 Restricted Mode: No Remote OS version: Linux x64 3.10.0-1160.42.2.el7.x86_64 Remote OS version: Linux x64 3.10.0-1160.42.2.el7.x86_64   <!-- generated by issue reporter -->
---
Título: Dim backgound of non-focused editors
Descripcion: Issue Type: <b>Feature Request</b>  This would need a change in VS Code itself to be done right (can't be just an extension), since it would require each theme to have a dimmed-background color variable.  VS Code version: Code 1.62.2 (3a6960b964327f0e3882ce18fcebd07ed191b316, 2021-11-11T20:56:38.428Z) OS version: Windows_NT x64 10.0.22000 Restricted Mode: No   <!-- generated by issue reporter -->
---
Título: Notifications: fully show source details even when buttons are large
Descripcion: Issue Type: <b>Bug</b>  A call to `showInformationMessage(message: string, ...items: string[])` that includes a list of "items" to be presented as "action" buttons covers the "Source: name-of-extension" message. Compare the resulting toast message to a call to `showInformationMessage()` that does not include any action buttons.   There are actually two issues:  * the action buttons are placed such that you cannot read the "Source: name-of-extension" string added to the bottom of the notification message (particularly if there are a lot of buttons or they include a lot of text)  * there are no `^` and `v` controls to collapse or expand the notification message  The first bullet is the bigger issue, thus the name of this issue.  VS Code version: Code 1.62.1 (f4af3cbf5a99787542e2a30fe1fd37cd644cc31f, 2021-11-05T10:56:50.217Z) OS version: Linux x64 5.4.0-90-generic snap Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz (4 x 3696)| |GPU Status|2d_canvas: unavailable_software<br>gpu_compositing: disabled_software<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>opengl: disabled_off<br>rasterization: disabled_software<br>skia_renderer: enabled_on<br>video_decode: disabled_software<br>vulkan: disabled_off<br>webgl: unavailable_software<br>webgl2: unavailable_software| |Load (avg)|0, 0, 0| |Memory (System)|3.84GB (0.15GB free)| |Process Argv|--no-sandbox --crash-reporter-id b1f9ded4-f94e-4ecd-be87-f57354ae91ce| |Screen Reader|no| |VM|100%| |DESKTOP_SESSION|ubuntu| |XDG_CURRENT_DESKTOP|Unity| |XDG_SESSION_DESKTOP|ubuntu| |XDG_SESSION_TYPE|x11| </details><details><summary>Extensions (13)</summary>  Extension|Author (truncated)|Version ---|---|--- fortran|Gim|0.2.0 devcloud|int|0.0.5 oneapi-analysis-configurator|int|0.1.2 oneapi-environment-configurator|int|0.2.2 oneapi-gdb-debug|int|0.1.0 oneapi-samples|int|0.0.37 vscode-oneapi-devcloud-connector|int|0.1.2 python|ms-|2021.11.1422169775 vscode-pylance|ms-|2021.11.1 jupyter|ms-|2021.10.1001414422 jupyter-keymap|ms-|1.0.0 jupyter-renderers|ms-|1.0.3 cpptools|ms-|1.7.1   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythontb:30283811 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 vscoreces:30384385 pythondataviewer:30285071 vscod805cf:30301675 pythonvspyt200:30340761 binariesv615:30325510 vsccppwtct:30382698 bridge0708:30335490 dockerwalkthru:30377721 bridge0723:30353136 pythonrunftest32:30373476 pythonf5test824:30373475 javagetstartedt:30391933 pythonvspyt187:30373474 vsqsis200:30386379 vsaa593:30376534 vssld246:30386377  ```  </details>  <!-- generated by issue reporter -->
---
Título: Walkthrough content feels crammed
Descripcion: I've noticed the left column feeling a little tight in our default window size:  <img width="1024" alt="CleanShot 2021-11-09 at 10 25 34@2x" src="https://user-images.githubusercontent.com/35271042/140982769-37b39182-7c38-4554-ae86-5f2423aeeb7b.png">  And more so with the sidebar in a larger window:  <img width="1278" alt="CleanShot 2021-11-09 at 10 27 04@2x" src="https://user-images.githubusercontent.com/35271042/140982943-52103b94-7394-4b8f-9147-79f848c711d7.png">  ## Proposal  Can we bump the column size from `4fr` to `5fr`?  https://github.com/microsoft/vscode/blob/9472f261093ca7a1a6ac7b07c03614db2a707b27/src/vs/workbench/contrib/welcome/gettingStarted/browser/gettingStarted.css#L481  <img width="1024" alt="CleanShot 2021-11-09 at 10 30 22@2x" src="https://user-images.githubusercontent.com/35271042/140983414-f4fa63cd-d4ec-41cb-b625-4d3a8110be15.png">  cc @digitarald
---
Título: [Feature] Moving progress icon while scrolling down
Descripcion: It would be good if the progress icon of currently running cell could scroll down as well to be always visible  Visually this is especially useful for a cell with a long block of code.  For example (from Google Colab): <img src="https://user-images.githubusercontent.com/25514145/140626019-de6e628d-a658-4866-8dac-66976e51c528.gif" width=42% />
---
Título: Use custom styled tooltips everywhere
Descripcion: There is an awkward mix of native and custom styled tooltips currently. Some examples from Windows:  ![image](https://user-images.githubusercontent.com/530988/140614228-5a007ea3-ce26-4249-b724-c7467fb0bb53.png)  ![image](https://user-images.githubusercontent.com/530988/140614230-09431332-bdda-4907-a7ee-0dc5eab6beab.png)  ![image](https://user-images.githubusercontent.com/530988/140614233-3510f1b7-66f8-45bf-8f9b-5fa763e38211.png)  ![image](https://user-images.githubusercontent.com/530988/140614236-c56ab3d1-fe94-4472-81a6-bd5d02947faa.png)  ![image](https://user-images.githubusercontent.com/530988/140614238-eade3c22-7fe9-4914-9346-06fd83b77f20.png)  If window zoom is used (as above), then the mix is most apparent, since native tooltips don't zoom.  I think it would be best if all tooltips would use custom styling to make things consistent and more accessible.
---
Título: Search icons overlay the placeholder text
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.62.0 (Universal), Commit: b3318bc0524af3d74034b8bb8a64df0ccf35549a - OS Version: macOS 12.1, Darwin x64 21.1.0  Steps to Reproduce:  1. Click the search panel, and focus on the text box. 2. Resize the panel, then you can see the following:  <img width="182" alt="Screen Shot 2021-11-05 at 14 04 40" src="https://user-images.githubusercontent.com/18233088/140465767-6089fdc1-22c1-416d-b333-8aef43fe3ada.png">
---
Título: Explore a more helpful no-git-found state for SCM
Descripcion: ## Context  Users who don't have git installed get an overloaded welcome view in SCM. Given that they are exploring VS Code, we can support them in their discovery by a) explaining source control and b) guiding them towards setup.  ## Potential improvements  - [x] Cut out non-working buttons and focus on beginner-friendly intro - [x] ~Use themed SVGs to visualize benefits of SCM (tracking changes, commits in timeline)~ - [x] OS-specific links and installation flows - [ ] Silent one-click install using CLI commands (winget for windows, git/brew for macOS) - [ ] Potentially based on new walkthroughs for language extensions - [ ] _Keep exploring and learning …_  cc @lszomoru @misolori
---
Título: Improve the User Experience of the SCM during refresh
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  The SCM view often takes time (several seconds) on my computer to refresh the status of the repo after staging a file (due to a combination of multiple files to stage and high CPU usage from other processes).  During those refresh times, the `Status Letter` disappears and the `Stage`, `Discard`, `Open file` buttons are shifted to the right. See the two screenshots below, showing, first, the view when it's not refreshing and second when it's refreshing.  (I'm talking about the `Status Letters` at the right of the line [U for Untracked, M for Modified, and so on]).  ![image](https://user-images.githubusercontent.com/3692722/140097856-c4edc57b-94c9-4877-9482-ca0503718e1f.png)  ![image](https://user-images.githubusercontent.com/3692722/140098018-7dcb460a-383e-445d-b630-2024e1c944f6.png)  This issue, In this case,  is that if I click on the next file to stage at the position where the `Stage` button should be (muscle memory and fast clicking), my cursor is now in fact on top of a `Discard` button as they all shifted to the right. This triggers a discard operation, which luckily for me prompts a dialog to confirm the discard (which I immediately dismiss).  This is for now really annoying and could become dangerous if the discard dialog is someday removed or gets a "Do not show again" option.   Could you reserve the size of the status letter and/or don't move the button when the status letter is not available?  Here is the version of VSCode I'm using, but I had this issue for as long as I remember:  VS Code Version: 1.61.2 Commit: 6cba118ac49a1b88332f312a8f67186f7f3c1643 Date: 2021-10-19T15:49:28.381Z Electron: 13.5.1 Chrome: 91.0.4472.164 Node.js: 14.16.0 V8: 9.1.269.39-electron.0 OS: Darwin x64 21.1.0
---
Título: Show color widget title on load
Descripcion: Ah, I was mostly confused about the relationship between the icon and the tooltip,  because the tooltip shows up even when the icon is not rendered. In that case, I think it would further increase discoverability of the toggle function if the color hint and the contrast icon are displayed as soon as the widget appears, plus I might want to toggle between color formats right off the bat. (I didn't realize there was a toggle function till I read this issue either 😅)  _Originally posted by @joyceerhl in https://github.com/microsoft/vscode/issues/83589#issuecomment-952436572_
---
Título: Suggest widget message overflows in notebooks
Descripcion: * Be in a notebook editor * trigger suggest so that it shows a message (loading or no results) * :bug: the message overflows onto the border  <img width="312" alt="Screen Shot 2021-10-28 at 09 35 16" src="https://user-images.githubusercontent.com/1794099/139264796-d0e66586-db4c-4d8b-96fb-178a5c5f823f.png">
---
Título: Improving the default SCM user experience
Descripcion: ## Problem  This is a continuation of https://github.com/microsoft/vscode/issues/110882#issuecomment-928784945. One of the areas of friction that I see in our default SCM experience is how the actions and flows of staging => committing > pushing happen in different areas of the UI (primarily pushing). Additionally, it's not always immediately clear why the "commit" action is above the input when in most forms (even in the GHPR extension) has them below, not to mention that the ✅ takes some time to get used to.  <img width="370" alt="CleanShot 2021-10-27 at 15 47 30@2x" src="https://user-images.githubusercontent.com/35271042/139158257-ee55ee81-aca8-440f-b1a0-41624c1304e8.png">  ## Proposal  What if instead of making the sync actions live in the status bar we updated the default view to contain these actions and to keep with the hierarchy of "bottom" to "top" view. This means some actions would need to be re-arranged. This proposal aims to: - Moves the commit action to a primary action below the input - Adds the sync actions above the commit input box (and spaced between to allow for longer branch names and a consistent hit target) - Also adds the branch next to sync to be conveniently located never the rest of the scm actions - Allow for this view to be toggle off via a setting (to accommodate those who prefer less UI)  <img width="353" alt="CleanShot 2021-10-27 at 16 04 53@2x" src="https://user-images.githubusercontent.com/35271042/139159857-0f057592-5e86-4b6b-942d-7e31ef0fb34b.png">  https://user-images.githubusercontent.com/35271042/139158645-5b73bc7e-392f-44ff-85a8-2363c7ccd676.mp4
---
Título: Confusing behavior of escape key
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Describe the feature you'd like. --> I am enjoying the experience of editing jupyter notebook on vscode! However, I noticed one subtle difference in interaction.  There are 3 modes in vscode-jupyter: unselected, command, edit. If I press escape key in edit mode, I move to command mode. If I am in command mode, I move to unselected mode. This dual behavior is quite frustrating, because I have to make sure that I press escape key only once. In jupyter-lab pressing escape key in command mode does not change the mode I am in. I think this might be better default operation. Also, it will be great if there is way to disable unselected mode at least. (Correct me if this feature is already  available)
---
Título: Show which diagnostics have quick-fixes in the problems view without needing to mouse over each
Descripcion: When I hover over an item in the Problems list that has a fix, the icon changes to a lightbulb:  <img width="631" alt="Screenshot 2021-10-19 at 09 45 09" src="https://user-images.githubusercontent.com/1078012/137875544-e2d6d3f6-a48b-4ced-b0f8-39a9834d711e.png">  <img width="579" alt="Screenshot 2021-10-19 at 09 45 15" src="https://user-images.githubusercontent.com/1078012/137875553-147bb2e7-4814-4b75-8f53-910b8a8dc8bc.png">  It would be nice if I could easily see which ones have quick-fixes so I can quickly work through them fixing them, skipping over those that don't (rather than waiting some amount of time to guess whether that background async request for fixes has completed or not).  I think this could be done by allowing extensions to provide a flag on `Diagnostic` saying whether the diagnostic has fixes or not (this should be optional and the async request still sent if it's not define, for backwards-compatibility and languages where it's expensive to compute this up-front).
---
Título: Fix word-wrap for the new SCM "Sync changes" button
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.61.1 - OS Version: Win 21H1  Steps to Reproduce:  1. Clone a git repo 2. Make a commit  View the new changes button. Depending on the localization, its label can be pretty long (German):  ![image](https://user-images.githubusercontent.com/38782922/137808067-bd87ebbc-60a7-426b-9f35-a2eaad2cd274.png)  This does not really look nice, the text should be word-wrapped. Looks like some simple CSS task.
---
Título: Can we make the new sync button give better feedback
Descripcion: Issue Type: <b>Feature Request</b>  ![image](https://user-images.githubusercontent.com/11430497/137521746-52ac2468-1365-4ac6-9b1d-2dba13c99d42.png)  The newish sync button is a pain point for me, it fails to give any feedback when it's syncing. I'm also curious why this was added since there are a number of other ways to trigger a sync, especially since the UI in the bottom bar delivers much better feedback.  It would be nice to see this updated to give feedback and to have the ability to toggle it on or off.  VS Code version: Code - Insiders 1.62.0-insider (284e0db6c4cac1e557a43cd6691babdaafc2e1a9, 2021-10-12T05:44:48.500Z) OS version: Linux x64 5.4.0-87-generic Restricted Mode: No   <!-- generated by issue reporter -->
---
Título: Different breakpoint marker for unverified breakpoint before debug session start
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  If a user sets a breakpoint before the debug session starts, it will look like a successful breakpoint in red. Then once the debug session starts, it might get registered and stay red or it might fail to register and turn grey. Unless the program stops on entry, gets paused, etc, the user might never even notice that the breakpoint failed to register and wonder why it never got hit.   Displaying the preliminary breakpoint as registered is misleading. Users do not always realize that the validation will happen later and that they need to check that it succeeded ([example](https://github.com/golang/vscode-go/issues/1818#issuecomment-942745182), [example](https://github.com/golang/vscode-go/issues/1840)). I propose that a different marker is used for such breakpoints with a hover message that it will be validated once the debug session is launched.
---
Título: Deprecated message in settings ui should use an icon
Descripcion: <img width="769" alt="CleanShot 2021-10-13 at 14 40 36@2x" src="https://user-images.githubusercontent.com/35271042/137216460-1cc240ea-7517-4621-a943-4c8d1389a2be.png">  When we show a deprecated message we should use an icon since we shouldn't use color alone to assign meaning for accessibility.
---
Título: Improve some aspects of WillRenameFile experiences
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Pylance recently implemented WilRenameFile handler and noticed 2 things.  1. Will Rename Dialogbox will pop up even if empty edit (no changes or documentchanges) is returned. It would be nice if vscode check not only whether edits is null but check edits is empty. Provider can do the check but that means all provider needs to do the check when vscode can do it for all providers. 2.  If user selects "don't show again" in the dialogbox, it is not saved to settings so user can't reverse the decision they made for the workspace. It would be nice if users have a way to change the option they selected later on. 3. cancellation token created for progress bar is not propagated to WillRenameFile event handlers. so a handler once started can't be cancelled even if vscode file operation got cancelled due to either user clicking cancel on progress bar or timed out.
---
Título: Command link in language status wrap
Descripcion: * Have language status text that wrap and also have a multi-word command. * 🧀 the command words wrap which shouldn't happen  <img width="589" alt="Screen Shot 2021-10-06 at 16 08 55" src="https://user-images.githubusercontent.com/1794099/136347289-8e00453a-ffaf-4010-a00d-256a75b5ccc8.png">
---
Título: Notebooks - Diff indicator in scroll bar area missing
Descripcion: - VS Code Version: 1.61.0-insider   Notebooks doesn't have the diff indication in the scroll bar area like Python files  ![image](https://user-images.githubusercontent.com/19276747/136142438-1653f93c-c388-4cd7-b673-0b62abafaca6.png)
---
Título: Make it more clear that cells in the interactive window are readonly
Descripcion: Issue Type: <b>Bug</b>  While working with the interactive window, I often find myself trying to edit the code of cells that I've run. I think this is because they are rendered nicely and look so similar to code cells in notebooks  There currently isn't any feedback, which leaves me confused for a moment why my typing doesn't do anything. I think we should add some feedback, similiar to what we have for readonly editors  VS Code version: Code - Insiders 1.61.0-insider (Universal) (71ca6e8e74591ae5c577d52a2aa1bd0c3df5ac32, 2021-10-05T01:23:40.704Z) OS version: Darwin x64 20.6.0 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i9-9980HK CPU @ 2.40GHz (16 x 2400)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 3, 3| |Memory (System)|32.00GB (0.34GB free)| |Process Argv|--crash-reporter-id 48781ca2-1705-4f64-9bab-325055aab55d| |Screen Reader|no| |VM|0%| </details><details> <summary>A/B Experiments</summary>  ``` vsliv695:30137379 vsins829:30139715 vsliv368cf:30146710 vsreu685:30147344 python383:30185418 pythonvspyt602:30291494 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyt639:30291487 pythontb:30258533 pythonvspyt551cf:30291413 pythonptprofiler:30281269 vshan820:30294714 pythondataviewer:30285072 pythonvsuse255:30319630 vscod805cf:30301675 pythonvspyt200:30323110 vsccppwt:30377800 pythonvssor306:30340298 bridge0708:30335490 pygetstartedt2:30353727 bridge0723:30353136 pythonrunftest32:30365365 pythonf5test824:30361779 javagetstartedt:30350119 pythonvspyt187:30365360 pydsgst2:30361790 vsqsis300:30374797 vsaa593cf:30376535  ```  </details>  <!-- generated by issue reporter -->
---
Título: Provide clearer instructions on how to run text in the interactive window
Descripcion: Issue Type: <b>Bug</b>  1. Open Jupyter interactive window  **Bug** It is easy to overlook the `shift` arrow symbol in the run instructions:  <img width="610" alt="Screen Shot 2021-10-05 at 10 15 45 AM" src="https://user-images.githubusercontent.com/12821956/136071776-f7d5865e-0632-4d1c-a358-4dec75e2292c.png">  These instructions also go away after I type some text. In addition to the `run` button, could we continue to show a reminder of how to execute code in this case? I found myself pressing `enter` and then being confused as to why the code didn't execute   VS Code version: Code - Insiders 1.61.0-insider (Universal) (71ca6e8e74591ae5c577d52a2aa1bd0c3df5ac32, 2021-10-05T01:23:40.704Z) OS version: Darwin x64 20.6.0 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i9-9980HK CPU @ 2.40GHz (16 x 2400)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 3, 2| |Memory (System)|32.00GB (5.36GB free)| |Process Argv|--crash-reporter-id 48781ca2-1705-4f64-9bab-325055aab55d| |Screen Reader|no| |VM|0%| </details><details> <summary>A/B Experiments</summary>  ``` vsliv695:30137379 vsins829:30139715 vsliv368cf:30146710 vsreu685:30147344 python383:30185418 pythonvspyt602:30291494 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyt639:30291487 pythontb:30258533 pythonvspyt551cf:30291413 pythonptprofiler:30281269 vshan820:30294714 pythondataviewer:30285072 pythonvsuse255:30319630 vscod805cf:30301675 pythonvspyt200:30323110 vsccppwt:30364496 pythonvssor306:30340298 bridge0708:30335490 pygetstartedt2:30353727 bridge0723:30353136 pythonrunftest32:30365365 pythonf5test824:30361779 javagetstartedt:30350119 pythonvspyt187:30365360 pydsgst2:30361790 vsqsis300:30374797 vsaa593cf:30376535  ```  </details>  <!-- generated by issue reporter -->
---
Título: Selecting a kernel from the marketplace does not show other notebooks
Descripcion: <img width="815" alt="CleanShot 2021-10-04 at 15 05 45@2x" src="https://user-images.githubusercontent.com/35271042/135931179-6e100319-21aa-4567-ad9b-ff4485ab5586.png">  Originally filed in https://github.com/microsoft/vscode/issues/129652.   When opening a .NET notebook for the first time and selecting a kernel, you are always shown the Jupyter extension and there is no clear guidance about needing the .NET Interactive Notebook. It would be great if VS Code could detect the various languages used in a notebook and then show a list of relevant notebooks.  @ 00:05 is where I select a kernel  https://user-images.githubusercontent.com/35271042/135929628-21320177-a40a-4350-9976-9e121aebc7a3.mp4
---
Título: Notebooks - Support more markdown functionality in cell toolbar
Descripcion: I often find myself looking up markdown syntax because I forget what little symbol does what  Would be nice if our markdown cell toolbar had added functionality so I could just highlight the text and click a button instead of having to Google what I need   ![image](https://user-images.githubusercontent.com/19276747/135775716-521d2014-5f48-48d6-97e6-0fca7472a37a.png)
---
Título: Improve UX when showing raw cell output
Descripcion: Testing https://github.com/microsoft/vscode/issues/134142  For me, there's two issues:  1. The expanded cell is taller than my viewport. So I have nested scrollbars and need to use both of them if I want to see the top and bottom of the cell. It should be at most ~90% of the editor height 2. When the cell expands, I need to manually scroll it into view, which can be difficult due to nesting unless I'm dragging the outer scrollbar manually. The diff should scroll such that the raw output is at the top of the viewport as soon as the user hits "switch output rendering"
---
Título: Notebooks - Make default for Jupyter NB toolbar icon as opposed to icon + label
Descripcion: This request comes from the discussion started on this PR: https://github.com/microsoft/vscode-jupyter/pull/7651  The outline icon was added to the global toolbar in an effort to help discoverability. With now 8 icons in the toolbar and this being added as the last, depending on the screen size this icon is more likely to end up in the overflow menu and may reduce some of the effectiveness at improving discoverability.   For other languages too, the toolbar can get really long with the text.  ![image](https://user-images.githubusercontent.com/19276747/135530708-74f0b166-125d-4df8-acb3-439220ce8990.png)
---
Título: Allow custom hovers to be disabled
Descripcion: ![print](https://user-images.githubusercontent.com/91676010/135460793-ff335f81-341f-43e0-a262-bcb6b139d986.png)  Steps to Reproduce:  1. User native titlebar 2. Notice that some "hover" use the native OS hover.  3. Notice that other hovers use their own Frankenstein hovers that show up inconsistently  Please, provide a way for users to disable these hovers.
---
Título: Lock icon not the best for readonly files
Descripcion: Testing #133743  I do not like the use of the lock icon for readonly files because: 1) We already use the Lock for Locking Output  2) Lock does not really represent read only for me 3) Lock icon makes me want to click it to unlock it. And this decoration is not clickable (unlike the Output lock button)  By googling "readonly icon" I found the following, which is more clear to me. Did we consider using the crossed out pencil?  ![Screenshot 2021-09-29 at 13 41 52](https://user-images.githubusercontent.com/1926584/135261569-eefd6ea8-6e44-4afd-a3f3-3a9299ec1681.png)
---
Título: Notebooks - Hard to see where one table starts/ends in diff view
Descripcion: - VS Code Version: 1.61.0-insider - OS Version: Windows  When you open up a diff view and look at an output that is a table, it is a bit hard to see where one table ends and another starts. It is especially difficult if the horizontal scroll is out of sight on the screen  ![image](https://user-images.githubusercontent.com/19276747/135011774-ce4bcaae-5da4-4676-a0dc-705628b0d1da.png)   I would hope to see the separation below a bit more clearly   ![image](https://user-images.githubusercontent.com/19276747/135011947-a6fffdc1-9bd3-4df6-a705-b68f37d2fc67.png)
---
Título: Allow editor tab to be placed in panel
Descripcion: Now that I've been using the side panel, combining this with the live preview extension causes several "columns" to appaer. I would love to move an editor tab into a panel, much like terminal tabs can be moved to the editor.  ## Current ![image](https://user-images.githubusercontent.com/35271042/134747932-0431ac6b-c34f-4477-8e93-7a9d33f3a356.png)   ## Request ![image](https://user-images.githubusercontent.com/35271042/134747926-de745a6f-23a2-40a5-ba57-0112ad3d68be.png)
---
Título: Explore option for allowing to run all cells in a folded markdown region
Descripcion: Separating this out from #132690  When a markdown cell has code cells folded underneath, the suggestions is to surface the total number of cells folded and to show a run action next to it:  <img width="1004" alt="CleanShot 2021-09-23 at 12 51 59@2x" src="https://user-images.githubusercontent.com/35271042/134574593-7c89d8a4-28cb-418d-ad8e-4b4b3efc2e4e.png">  Running the cell would show progress for the cells (with a stop action that will interrupt the kernel). And when the cell is finished, the cell returns the previous state. You can also click on the cell `...` to expand the collapsed state (which is equivalent to opening the folded markdown region)  ![CleanShot 2021-09-08 at 13 52 06](https://user-images.githubusercontent.com/35271042/132584466-ba0bc4e8-d01f-403a-8a3a-47fb03e82762.gif)
---
Título: Intellisense completion covers code making it hard to type
Descripcion: > You mean it comes up on top of it visually?  Yes. I think the current design didn't take consideration of the fact that the code entering field is fixed in the lower right corner. It seems like this is a general issue in vscode if you type code in the lower right position.  ![TBiSMCWVMm](https://user-images.githubusercontent.com/33796896/134402255-be364422-899f-4898-a6eb-b0337f5436dd.gif) ![FAlQQVZS61](https://user-images.githubusercontent.com/33796896/134402257-602844e8-4fcd-4e28-a791-57fe90677193.gif)  _Originally posted by @StevenLi-DS in https://github.com/microsoft/vscode-jupyter/issues/7406#issuecomment-925191006_
---
Título: Add orange stripe for modified cell to notebooks
Descripcion: ![0](https://user-images.githubusercontent.com/6998329/134343210-e6eed98d-f975-4a8e-b921-b9d75f95c5fc.PNG)
---
Título: Improve Buttons in SVC Conflict Resolution
Descripcion: I think it would be more intuitive if "Accept X" would be next to "X" and just called "Accept". Maybe we can do something with injected text here.  Also, why is there "Start Live Share Session"? I guess it could be useful to start a live share session to resolve conflicts, but is this a common use-case? (it could be useful to start a live share session for anything, e.g. when there are diagnostics etc.)  ![image](https://user-images.githubusercontent.com/2931520/134330680-14c22b2f-ec5b-4ec3-b519-efef05bc86c0.png)
---
Título: Not clear how to add additional reactions to PR comments
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Use Help > Report Issue to prefill these. -->  When you open a PR in review mode with the extension, there is an extra button to add emoji's to the comments in the PR but it's not very clear. If there is already an existing emoji reaction to a comment, there is a button next to it to add another one, but it's not obvious (on github.com, there's a smiley face on the button)  In the extension: ![image](https://user-images.githubusercontent.com/9721254/134213746-e4d76535-252d-4625-86b0-cc2af168895a.png)   On github.com: ![image](https://user-images.githubusercontent.com/9721254/134213715-3cf1c88d-6a05-4050-84c5-b2c542d17c48.png)
---
Título: Jupyter Notebook pyplot output whitespace spans the entire available width
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.16 - OS Version: Windows 10 20H2  Steps to Reproduce:  1. Create a pyplot graph by code and run 2. Regardless of whether or not figsize is specified, background whitespace takes up the entire span of the available width  ![image](https://user-images.githubusercontent.com/55585505/133944523-4d15dd9c-18e3-45bb-84e4-5f167a19267d.png)  ![image](https://user-images.githubusercontent.com/55585505/133944537-0225d217-2e07-41d1-bae7-560c3b2acc29.png)
---
Título: SCM: use `strikethrough` decoration for deleted files instead of setting CSS class?
Descripcion: A decoration can indicate `strikethrough` via property now:  https://github.com/microsoft/vscode/blob/bcc715e15eca0163754bb82f22095b18d5f12ded/src/vs/workbench/services/decorations/common/decorations.ts#L21-L21  I noticed that SCM uses a CSS rule for setting this to labels and was wondering whether SCM could adopt this new property, given it already provides decorations in general.  https://github.com/microsoft/vscode/blob/a4e75b4ec1942faaf311b1b71ac8f2348edf93b4/src/vs/workbench/contrib/scm/browser/media/scm.css#L135-L137  //cc @joaomoreno
---
Título: debug-continue icon is bolder than others
Descripcion: @misolori we are trying to use the `debug-continue` icon for a button in the cell toolbar, but it has a more bold appearance than other icons. It seems like this is probably just on purpose because all the debug icons are colored and look nice with bold lines. But it might mean that we can't reuse them in other places. Or it might be fine. What do you think?  ![image](https://user-images.githubusercontent.com/323878/133703233-026bad7c-8b4a-4f3b-a1d5-11334e28e48e.png)   cc @DavidKutu
---
Título: Unclear copy for what sync settings will be replaced
Descripcion: I finally enabled Settings Sync as I had more projects in Codespaces but missed extensions I got used to. After enabling Settings Sync, I got:  <img src=https://user-images.githubusercontent.com/8599/133640718-bb562422-90d0-4600-b638-35f9604e45aa.png width=200>  `Replace Local` might be what I want (as I don't care about the prior backups) but I can't tell. Does it replace _my_ local with the cloud data – does it replace the cloud with my local? `Would you like to merge or replace with your data in the cloud?` also doesn't help as "your data" is ambiguous.  **Solution**  Maybe making it a bit wordier can help:  > *Do you want to replace or merge the existing cloud data?* > > Your cloud data is synced from another machine. If you like to keep machines in sync, merge their data. If this machine has the setup you prefer, replace your cloud data. > > [Merge local with cloud data] > [Replace cloud with local data] > [Replace cloud with local data]  ---  Related UI from steam that makes it crystal clear:  <img src=https://user-images.githubusercontent.com/8599/133641228-f14da444-52ec-444e-baba-ef41ff0e07a1.png width=300>
---
Título: [design bug] Make the search filter of debug console more protruding/visible
Descripcion: There was I stuck in the VSCode because I didn't realize I had the search filter on for a few weeks. Had the filter been more catchy, it wouldn't happen. See more here: https://github.com/Dart-Code/Dart-Code/issues/3536#issuecomment-918262945   For instance, make the `Showing 4 of 404` button in a different — highlighted (i.e. yellow) color. Currently that grey "button" blends with its background. <img width="1319" alt="Captura de pantalla 2021-09-13 a las 15 22 31" src="https://user-images.githubusercontent.com/25743901/133100980-6bd87e83-b15f-448e-8306-97b04c3a4e3d.png">
---
Título: Improve discoverability of cell folding
Descripcion: ## Summary  This issue explores how we could improve the discoverability of cell folding. We currently support markdown folding via the chevron, via code cells for both input and output using the context menus, and we also have code folding when line numbers are enabled.   The secondary issue is that when markdown cells are folded, it's difficult to tell what cells are folded underneath as there is no indicator. You also can't run any of the folded cells inside of the markdown region (unless you run all cells).  ## Design exploration  One idea is to use the left gutter for folding (similar to JupyterLab). One downside is that this repeats functionality via our chevron, but we have limited space for code cells and also have a split run button (which has a small chevron).  ![CleanShot 2021-09-08 at 13 23 35](https://user-images.githubusercontent.com/35271042/132580858-d5ede3cd-548d-4850-b5fc-fd77b3d1f97e.gif)   And for folding markdown regions, it would be great to show underneath what cells are hidden with an ability to run those cells. There's other questions with how do we surface additional information about those cells (run state, execution count, etc.) which may or not be useful. At the minimum, using the placeholder text with a run button will solve a large amount of frustration with knowing how many cells are folded and if they are running. This would also be done in parallel with #130611 for showing what cells are actively running.  ![CleanShot 2021-09-08 at 13 52 06](https://user-images.githubusercontent.com/35271042/132584466-ba0bc4e8-d01f-403a-8a3a-47fb03e82762.gif)
---
Título: Show run status and/or running time recent command or cell even when the cell is collapsed
Descripcion: ### Discussed in https://github.com/microsoft/vscode-python/discussions/15772  <div type='discussions-op-text'>  <sup>Originally posted by **ihnorton** March 24, 2021</sup> When working in the interactive window, I may run a cell and then do other things if I expect the evaluation to take substantial time, later I come back to check. If the call is still running after an "unreasonable" amount of time, I would likely kill it.  For the above workflow, it would be useful to have a display of the elapsed time for the most recently evaluated cell, perhaps after some minimum time has passed (maybe in place of the current spinning asterisk `[*]`?)  Please note that this feature request is distinct from IPython magic like `%time`: those work great, but they only give the elapsed time after the call has completed. I would like a timer that is independent of the kernel and shows the elapsed time _since something was sent to the kernel_.</div>
---
Título: add `ctrl+i` and `Cmd+i` to toggleSuggestionDetails
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> VSCode have add a new keybinding for `triggerSuggrstion` , https://github.com/microsoft/vscode/issues/105207 so, remenber to add ctrl+i for toggleSuggestionDetails which is usiing the same `ctrl+space`  ``` {   "key": "ctrl+i",   "command": "editor.action.triggerSuggest",   "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly" } ``` let add this ``` {   "key": "ctrl+i",   "command": "toggleSuggestionDetails",   "when": "suggestWidgetVisible && textInputFocus" } ``` ![image](https://user-images.githubusercontent.com/1876302/131450107-ea9aacd7-1d3d-40d7-9d4c-8addfd812eec.png)
---
Título: Exploration: Language-specific default overridden values and language-specific settings in the Settings editor
Descripcion: It is not made clear to the user that the non-language-specific user setting user defined for eg `editor.wordSeparators` is overwritten for a language by the default language-specific setting the extension defines.
---
Título: When all extensions disabled UI it is not very clear that disablement actually happened
Descripcion: 1. `github-dev`, in Extensions view search for "spell checker" 2. Notice that all extensions are disabled 3. When all extensions are rendered as disabled it is not obvious to the user that they are actually disabled 🐛  4. I suggest that the info that they are disabled should be yellow/orange not blue. To make it clear that there is a warning. Maybe we could also introduce a stronger disablement indication  Bonus bug: hover over a disabled extension -> it gets color and no longer looks disabled  fyi @misolori  ![Screenshot 2021-08-25 at 14 43 50](https://user-images.githubusercontent.com/1926584/130792654-19a272f9-e661-446f-b5fa-e9f0fe359f34.png)
---
Título: Locked groups: splitting a group with a terminal can lead to unexpected locked group
Descripcion: Testing #131196  Since the setting applies only when its the first editor in the group and there is more than one group, results can be confusing.  1. Open some file in the opened workspace as the first file in the only editor group. 2. Create a terminal editor which will show in the current group 3. Split the group after deciding you want to work with 2 groups  Both groups have terminals as the active editor but only the second group is locked. In this case I was not really trying to make a second group with a terminal but rather a second group for other files. And I kind of wanted the first group to be locked automatically. I can see this is a difficult case of trying to guess the users expectations, but I essentially tricked by both the setting and the split (duplication) behaviour.
---
Título: Locked groups: inactive tab not revealed in locked group
Descripcion: Testing #131196  The locking of group also blocks inactive tabs from being revealed: ![locked-with-inactive](https://user-images.githubusercontent.com/6461412/130634189-5b4f5219-030a-45c1-ac71-ebb901307167.gif)  Feel free to close if that's the expected behavior  - focus in first group - open 'bootrast.mon.css' which is also on the first group, but inactive - 'bootrast.mon.css' is opened in the second group
---
Título: [FR] Filter commands by source improvements
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  When looking for commands, it'll be great to be able to filter them by source in the table header, currently, the filter options are hidden in the top right corner, which is hard to find.  Also, typing `@source` currently won't trigger suggestions, it'd be great if it supports that.  ![image](https://user-images.githubusercontent.com/28700378/130372601-575bd140-78fe-4a59-a45f-25499ba241c3.png)
---
Título: Should default themes specify link hover color?
Descripcion: On the web (and not only) links usually react to hover (underline or color change). Right now in vscode in some places there is underline, like in markdown preview, in other places there is no style change, like in Settings UI or an editor hover.   There is already a color for that `textLink.activeForeground`. I think it would be better if default themes specified it.
---
Título: Configurable peek window position
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hi all,  As much as I love the peek feature, I'd really like its position to be configurable, as its only position currently obstructs reading of the following lines.  I'd personally be happy with being able to have it spawn above the peeked symbol instead of bellow, but with all the work being done in allowing panes to be moved around in vscode, I guess being able to define a set part of the window for it to appear would be even better for many people.  Hope this isn't too painful to implement and gets some attention, Thanks regardless, VSCode is still great with peek as it is :)
---
Título: Add hover states for editor find widget
Descripcion: This PR fixes #130475 and adds hover feedback to the editor find widget   https://user-images.githubusercontent.com/35271042/129815457-42de268f-8515-4607-8ecf-ffbe70a4ca6d.mp4
---
Título: Improve discoverability of available/installable output renderers for given mime types
Descripcion: ## Summary This issue captures the design explorations for improving the discoverability of output renderers. There are two main scenarios we want to focus on:  - When a notebook tries to use a renderer that is unavailable - When a notebook uses a renderer that the user did not expect to see  Given these two main scenarios, we want to explore ways to increase the visibility of output renderers.  ## Designs  ## Display badges  One simple idea would be to show a "badge" when there is an output renderer unavailable and also show an option to search the marketplace for other renderers:  ![image](https://user-images.githubusercontent.com/35271042/129783420-b6c7ed24-212f-4549-9c18-d6fdd616bf78.png)  <img width="735" alt="CleanShot 2021-08-17 at 11 48 58@2x" src="https://user-images.githubusercontent.com/35271042/129783519-e517f95f-1f58-4cab-b5a1-44a857edc0a1.png">  ## Status bar item  We could also add a status bar item for more of a seamless plug that would point to the same quick pick from above:  <img width="760" alt="CleanShot 2021-08-17 at 11 49 21@2x" src="https://user-images.githubusercontent.com/35271042/129783659-bba1ffb2-de8f-47b2-963b-bf4bfbef8568.png">  In the case where we have multiple outputs, we could consolidate the status bar items and show a list of the outputs before (though it's not best experience correlating the output list + visuals):  <img width="752" alt="CleanShot 2021-08-17 at 11 54 17@2x" src="https://user-images.githubusercontent.com/35271042/129784222-658fadd1-34ab-49ac-8664-b50d2c52a64f.png">   <img width="650" alt="CleanShot 2021-08-17 at 11 53 22@2x" src="https://user-images.githubusercontent.com/35271042/129784161-eb0b45e1-cb00-4f70-a2c5-c4eed27b1f0c.png">  And a "left-aligned" alternative:  <img width="804" alt="CleanShot 2021-08-17 at 11 54 59@2x" src="https://user-images.githubusercontent.com/35271042/129784357-b4812368-aee7-4678-bd99-1c1faba01aae.png">  ## New output toolbar  We could move the output actions (currently in the ellipsis) into a new toolbar above each output, which would also be a place to highlight missing renderers:  <img width="766" alt="CleanShot 2021-08-17 at 11 59 33@2x" src="https://user-images.githubusercontent.com/35271042/129785338-8510678a-939c-4fe5-8cca-6dff1b58c5c7.png">  An alternative would be to place alignment on the right and use a dropdown for quick changes. However, there is limited space in the dropdown to communicate and would contradict other patterns where we use the quick pick:  <img width="807" alt="CleanShot 2021-08-17 at 12 07 04@2x" src="https://user-images.githubusercontent.com/35271042/129785814-046003e6-9db2-4807-aa1d-cab3675f1f45.png">
---
Título: UX: editor placeholder affordance
Descripcion: This is just a collection of the fact that in certain cases we decide to show a "placeholder" editor to show a message to the user:  **Workspace Trust**  ![Screenshot 2021-08-17 at 09 17 52](https://user-images.githubusercontent.com/900690/129681539-836d47de-8af3-4da0-ab61-a3307737433d.png)  **Binary Files**  ![Screenshot 2021-08-17 at 09 18 38](https://user-images.githubusercontent.com/900690/129681563-77bd094d-fcde-467f-b7bb-3983df7a8693.png)  **Unavailable Resources (new!)**  ![Screenshot 2021-08-17 at 09 18 10](https://user-images.githubusercontent.com/900690/129681584-8222895b-5144-448f-afd8-ba05d3651ec1.png)  I wonder if the UX solution we have here is right or needs tweaks. I like that the UI is minimal but the presentation of the information might not be optimal, as well as discoverability of the action how to continue from there.  //cc @isidorn for accessibility concerns  //cc @stevencl who can maybe chime in how VS does it, if at all :)
---
Título: refactor preview diff window shows wrong changes on 2nd rename try
Descripcion: Issue Type: <b>Bug</b>  ## summary when I try to rename any variable continuously more than 2 times, wrong changes will appear in refactor preview diff window. this wrong preview will not appear if close diff window. (checked languages: c, javascript, python)  e.g. first, try to rename to long name  `value` => `value_longname` then, renamed as `value_longname` in diff window. (correct)  second, try to rename to long name  `value` => `value_longname2` then, renamed as like `value_longname2_longname`. (wrong)  perhaps cache of first rename preview is not cleared...?  also, when trying rename to short name, wrong remove like below may occur too.  before: `value_verylong = 123456789`  after:  `value789`   ## Version of VS Code  1.59.0 (user setup)  ## Your operating system  Windows 10 (OS: Windows_NT x64 10.0.19042)  ## List of extensions that you have installed  - all of installed: <details>      - auto-close-tag     - auto-rename-tag     - autodocstring     - better-align     - change-case     - cpptools     - flexible-zenkaku     - gc-excelviewer     - githistory     - gitignore     - indent-rainbow     - jupyter     - partial-diff     - php-debug     - python     - rainbow-csv     - uwsc-support     - vscode-css-formatter     - vscode-drawio     - vscode-edit-csv     - vscode-filesize     - vscode-firefox-debug     - vscode-input-sequence     - vscode-intelephense-client     - vscode-language-pack-ja     - vscode-pylance     - vscodeintellicode     - wandbox-vscode  </details>  - enabled when trying inspection (for rename feature)     - cpptools     - python     - vscode-language-pack-ja     - vscode-pylance   ## Reproducible steps (1... 2... 3...) that cause the issue  0. open code file in window 1. place cursor on variable want to rename 2. press f2 key, input new variable name, and preview with Shift+Enter 3. refactor preview corner appears at bottom of window 4. click line which want to show detail 5. refactor preview diff window (2 divided style window) appears  ----  6. without closing preview diff window, back to edit window 7. try to rename same variable (same operation as step 2.) 8. child window (modal window) appears, then select button for continue (in Japanese, button string is "続行") 9. switch to refactor preview diff window (same window as step 5.)  ----  10. wrong refactor previews appear in preview diff window   ## What you expected to see, versus what you actually saw  expected to see: correct rename preview actually saw: wrong rename preview   ## Images, animations, or a link to a video showing the issue occurring  ![capture gif](https://user-images.githubusercontent.com/88940383/129458095-f668267c-b020-4a70-9459-a690120195c8.gif)  ## A code snippet that demonstrates the issue or a link to a code repository the developers can easily pull down to recreate the issue locally      # python code     base = 12345679  # rename "base" to "base_value" or "i" more than two times      value = base * 27     print(value)   ## Errors from the Dev Tools Console (open from the menu: Help > Toggle Developer Tools)  nothing was displayed    VS Code version: Code 1.59.0 (379476f0e13988d90fab105c5c19e7abc8b1dea8, 2021-08-04T23:13:12.822Z) OS version: Windows_NT x64 10.0.19042 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz (8 x 3408)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|7.90GB (1.88GB free)| |Process Argv|--crash-reporter-id cd10292b-701e-4aee-8748-dbbd33dcf884| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (27)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-css-formatter|aes|1.0.1 vscode-intelephense-client|bme|1.7.1 gitignore|cod|0.7.0 githistory|don|0.6.18 php-debug|fel|1.17.0 vscode-firefox-debug|fir|2.9.4 auto-close-tag|for|0.5.12 auto-rename-tag|for|0.1.8 gc-excelviewer|Gra|3.0.42 vscode-drawio|hed|1.6.1 vscode-edit-csv|jan|0.6.0 flexible-zenkaku|low|0.0.1 rainbow-csv|mec|1.9.1 vscode-filesize|mkx|3.1.0 vscode-language-pack-ja|MS-|1.59.3 python|ms-|2021.8.1105858891 vscode-pylance|ms-|2021.8.1 jupyter|ms-|2021.8.1195043623 cpptools|ms-|1.5.1 uwsc-support|nal|0.0.3 autodocstring|njp|0.5.4 partial-diff|ryu|1.4.3 vscode-input-sequence|tom|0.2.0 vscodeintellicode|Vis|1.2.14 change-case|wma|1.0.0 wandbox-vscode|wra|3.0.0 better-align|wwm|1.1.6   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383cf:30185419 pythonvspyt602:30300191 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyt639:30300192 pythontb:30283811 pythonptprofiler:30281270 vshan820:30294714 vstes263:30335439 pythondataviewer:30285071 pythonvsuse255:30340121 vscod805cf:30301675 pythonvspyt200:30340761 vscextlang:30333561 binariesv615:30325510 pythonvssor306:30344512 bridge0708:30335490 vstre464:30350172 bridge0723cf:30351748  ```  </details>  <!-- generated by issue reporter -->
---
Título: Two "show more" links being shown in stdout output
Descripcion: Version: 1.60.0-insider (user setup) Commit: 58454f7bec838f79fe2422ab5914419147d82e40 Date: 2021-08-13T05:15:29.421Z Electron: 13.1.8 Chrome: 91.0.4472.164 Node.js: 14.16.0 V8: 9.1.269.39-electron.0 OS: Windows_NT x64 10.0.22000  Unfortunately, I'm not sure what I did to make this happen, but I certainly shouldn't see two "show more" links in one set of output. I had been modifying a particular cell over and over, and not really paying attention to the output, till I scrolled down. I'm trying to repro again with a simpler cell, but so far, no go.  ![image](https://user-images.githubusercontent.com/11685408/129454806-d945b71c-6960-497d-a7ce-e0cbf2005534.png)
---
Título: Python: interactive window not showing code execution status
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  July version(1.59) of VS Code came with new interactive window.  In the previous version interactive window shows [*] during the time when line is running. Once line completed, number appear [1]. In the new version user is required to click on the wheel sign to see if the line is still running.   Please return the feature from the previous version back to see if the line of code is still running without any additional clicks.  Thanks for your help.
---
Título: Suggest details: Should scrolling inside the popup prevent its closing?
Descripcion: An issue was fixed for the editor hover #112373 (basically scrolling to the end of the hover no longer closes the hover window).  Would it make sense to apply the same fix for the suggest details popup?  Also, parameter hints.
---
Título: Suggest details: close button doesn't have hover feedback
Descripcion: Similar to this issue: #130475  ![Screenshot (202)](https://user-images.githubusercontent.com/9638156/129249973-19fed0b2-01da-403e-9ed2-976d582f18aa.png)
---
Título: In Interactive Window and Notebooks, I don't know how to collapse a cell I just expanded.
Descripcion: Version: 1.60.0-insider (user setup) Commit: 7c25c174726ab969db3f99058cdf24bcfae1cfbe Date: 2021-08-11T05:15:24.598Z Electron: 13.1.8 Chrome: 91.0.4472.164 Node.js: 14.16.0 V8: 9.1.269.39-electron.0 OS: Windows_NT x64 10.0.22000  1. Start an Interactive Window session (more problematic because by default cells are collapsed 2. Hover over the '...' next to the line of code in a cell 3. The cell expands.  How do I recollapse this cell? I actually know how to do it, but double clicking in the margin is completely undiscoverable, especially since I didn't do it to expand the cell.  Note I was legitimately looking for a specific cell since I had entered a few that had the same first line. After I clicked the '...' I was truly confused, until I sat and thought about it. Then I decided to enter this bug. :)
---
Título: Explore ways to show execution progress while the execute cell is out of the viewport
Descripcion: ## Summary  When running a notebook that has a lot of cells, it can be hard to keep track of where the currently executing cell is. It becomes harder when the currently running cell is out of the viewport, so the user has to scan to notebook to find the correct one. See example below, where is the running cell?  <img width="1024" alt="CleanShot 2021-08-11 at 13 17 11@2x" src="https://user-images.githubusercontent.com/35271042/129097209-4f4cb913-daf0-4a93-b9c5-0a3118020537.png">   ## Concepts  These are all a collection of different ideas that I've explored. We can combine some of these different ideas together or treat them as separate items.  ### Status bar item  A simple option would be to add a status bar item that says `Running cell XX (8.2s)` and clicking on it would take you to the running cell:  <img width="534" alt="CleanShot 2021-08-11 at 12 54 28@2x" src="https://user-images.githubusercontent.com/35271042/129094337-2c526b1f-6e13-4546-9f72-8f69e5cf9c48.png">  <img width="760" alt="CleanShot 2021-08-11 at 12 54 52@2x" src="https://user-images.githubusercontent.com/35271042/129094385-cf1c9600-8f13-469e-b15e-5438b094b213.png">  ### Adding indicators  In addition to this, we could also add indicators in the outline view and editor tab. This is helpful for when you have the outline view open or you are on a different tab and want to know if a notebook is still running.  ![CleanShot 2021-08-11 at 13 20 45@2x](https://user-images.githubusercontent.com/35271042/129097717-5011b272-4b1b-4e1d-bfcc-1e32d5ca7c53.png)  ### Adding item in notebook toolbar  We could also add an action in the toolbar that will take you directly there, though we have to battle with the other actions to make this visible:  ![image](https://user-images.githubusercontent.com/35271042/129097859-38a20425-12e6-4bb9-9031-6bd042a38f58.png)  Alternatively, we could turn the kernel picker into a split action that and change the icon of the kernel into progress:  ![image](https://user-images.githubusercontent.com/35271042/129098034-cd2a2e1b-0126-48cb-ab3d-9c56c17a09e4.png)  ### Notifications  For the cases where a notebook can take a while longer (+1min) we could look into showing a notification if the user has focus somewhere else (like anther notebook)  <img width="625" alt="CleanShot 2021-08-11 at 13 29 59@2x" src="https://user-images.githubusercontent.com/35271042/129098754-0fa5bae1-c2b9-4769-93d9-16ef2793b0d9.png">
---
Título: Truncation in `Refactor Preview` panel
Descripcion: Version: 1.59.0 (user setup) Commit: 379476f0e13988d90fab105c5c19e7abc8b1dea8 Date: 2021-08-04T23:13:12.822Z Electron: 13.1.7 Chrome: 91.0.4472.124 Node.js: 14.16.0 V8: 9.1.269.36-electron.0 OS: Windows_NT x64 10.0.19043  This was originally reported against the C/C++ extension here: https://github.com/microsoft/vscode-cpptools/issues/7826  There appears to be some truncation that occurs in the `Refactor Preview` panel.  Repro is fairly simple, but involves using the C/C++ Extension.  Note that the C/C++ Extension does not return the contents of the line replicated in the `Refactor Preview` panel.  It only provides the range to be replaced, what to replace it with, what Icon to use, text for the group label, etc..  The remainder of the line extracted from the original file appears to be coming from VS Code.  Repro code:  ``` int foo(void) {     int foo = 1, // A much longer line that is not trunacated. }  int main(void) {     foo(), } ```  The repro is to use the Rename feature to change `foo` to `foo2`.  ![image](https://user-images.githubusercontent.com/49173979/128946529-42d2e5ef-a2b1-44d4-9793-19180c4ec0a8.png)
---
Título: Explore how to indicated read-only and deleted files open in editors more effectively
Descripcion: ## Summary  Currently when you open a file and it has been deleted or you open a read-only file, we append the text to the editor tab to indicate this:  <img width="430" alt="CleanShot 2021-08-10 at 15 26 20@2x" src="https://user-images.githubusercontent.com/35271042/128942910-b02fb116-4702-4435-ac8e-ce89f821eadc.png">   This can get busy when you have a lot of tabs open, especially with long names. This issue aims to explore a few different ways that we can visualize this.  ## Concepts  ### Option A  One idea is to try and use different seti file icons for this and show the information via tooltip:  ![image](https://user-images.githubusercontent.com/35271042/128946332-033fb244-702d-4d94-abfa-cc5009ce9d4d.png)    Alternatively, we could use codicons to display instead of seti:  ![image](https://user-images.githubusercontent.com/35271042/128946318-fef1f493-be73-4f52-8058-2f3f92436000.png)     ### Option B  We could use our info icon for read-only and error for deleted:  ![image](https://user-images.githubusercontent.com/35271042/128946289-4cbbbc47-5ef6-4cfa-94bb-83f3195ac6be.png)    ### Option C  Or we simply rely on the decorators to indicate it, we'd need to figure out how to show read-only:  ![image](https://user-images.githubusercontent.com/35271042/128946249-c7462bca-1bab-40ec-a883-500fa7ddfd4f.png)  cc @bpasero
---
Título: Align in-editor peek views (test, problems, references, etc.) UX
Descripcion: ## Summary  This issue aims to capture the consolidation of the test peek view + problems "go to problem" view. The problems view has UI to view the context of the failures, similar to a peek definition, while the problems view has limited UI and causes users to navigate from the error to the problems panel to see the next set of problems/warnings.  ## Test failures <img width="698" alt="CleanShot 2021-08-10 at 12 48 21@2x" src="https://user-images.githubusercontent.com/35271042/128925382-69cfc561-73bb-4750-934d-52395b8daaea.png">  ## Problems view <img width="705" alt="CleanShot 2021-08-10 at 12 50 21@2x" src="https://user-images.githubusercontent.com/35271042/128925625-af2d0e71-5ae1-40a8-9a00-9594c0250142.png">   ## Concepts  One idea is to combine the test UI with problems:  - Add toolbar options for navigating and toggling the side view inside of the peek view - Provide inline actions for problems where relevant (quick fix) - Update colors to add visual refresh to peek view  <img width="801" alt="CleanShot 2021-08-10 at 12 57 25@2x" src="https://user-images.githubusercontent.com/35271042/128926604-ec2b675a-5c4e-4add-8dc9-e3689b967baf.png">  cc @connor4312 @sandy081
---
Título: Buttons in editor widgets do not show any hover feedback
Descripcion: ![recording](https://user-images.githubusercontent.com/900690/128838832-08339c1c-f108-4be4-8ab6-692fb9f79e9e.gif)  //cc @rebornix
---
Título: Action buttons for cells should be visible even if code is not expanded
Descripcion: By "action buttons", I mean these three: ![image](https://user-images.githubusercontent.com/26465923/128752751-9e3a8d4f-0fd8-4691-be5c-99a098c21f5b.png)  They are only visible now if the cell's code is expanded (as shown).  Default view for a cell is with the code collapsed:  ![image](https://user-images.githubusercontent.com/26465923/128752822-d7c88140-0c7e-4102-a17f-f8514e2ccab6.png)  I do not want to expand a potentially large code cell just to be able to clear that individual cell out of the output window. The action buttons should be visible all the time.
---
Título: Improve walkthroughs in narrow view
Descripcion: When opening a walkthrough in a narrow view, it can appear like there is only item in the list:  <img width="1024" alt="CleanShot 2021-08-09 at 09 45 46@2x" src="https://user-images.githubusercontent.com/35271042/128743057-f3c3227c-b6e9-4adb-b6ff-a738523f970a.png">  We should update the narrow view to go into the single version like we previously discussed:  - move the illustrations/images above the content - add indicators for accessing the rest of the steps - only show one step at a time  ![image](https://user-images.githubusercontent.com/35271042/128743297-69f28fea-766f-44bb-8259-991765acc9b8.png)
---
Título: Controlling vertical space between output elements.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> [Friendly](https://github.com/friendly-traceback/friendly) is a program that can be used to help users understand the cause of tracebacks. A recent addition allows the insertion of interactive html buttons inside Jupyter notebooks to selectively show parts of the information available. Currently this is done by doing multiple calls to `display(HTML(...))`. This results in significant vertical white space between various output elements as shown in the following image.  ![image](https://user-images.githubusercontent.com/629698/128565440-b7b1b411-f197-471c-a193-bed641c9f6ba.png)  The ideal output is that of Google Colab, the output for Visual Studio is the least desirable.    Here is what is shown when one of the button is clicked to show the information. ![image](https://user-images.githubusercontent.com/629698/128566229-d2bb7f15-257f-4a27-b348-281916a82f59.png)   **Ideally, there should be a way to control/reduce/collapse the amount of vertical space between output elements in Visual Studio Code.**
---
Título: Removing cells in Interactive Python bad now
Descripcion: Issue Type: <b>Feature Request</b>  Hey, why did you guys remove the feature to clear code/cell output from the left hand side? I need to be able to selectively remove code blocks/output in interactive Python....quickly... Now I have no spinning progress indicator anymore for once, and no way to directly remove cells without extra click and way longer mouse movement to the righthand side menu that only becomes visible when the cell is selected. Really guys? This did not improve HCI. At least put keyboard shortcuts then...  VS Code version: Code 1.59.0 (379476f0e13988d90fab105c5c19e7abc8b1dea8, 2021-08-04T23:14:40.191Z) OS version: Darwin x64 20.6.0 Restricted Mode: No   <!-- generated by issue reporter -->
---
Título: [Status bar: rich hover] Still hard to mouseover
Descripcion: Same as #126888  When moving the cursor diagonally it closes too eagerly.  <img width="500" src="https://user-images.githubusercontent.com/9638156/128492637-261f3617-16ee-4082-b611-3f1cf5549b6f.gif" alt="demo" />
---
Título: Empty notebook should show a cell by default?
Descripcion: **Steps:** * out of sources * have GH issues notebook extension installed * run `scripts/code.sh <path to folder>/test.github-issues  **Result:** ![image](https://user-images.githubusercontent.com/900690/128471844-564f113e-1ee0-4310-b88a-ec9361c9309a.png)  I think this looks not very friendly for input, I would have expected a cell to show.  Besides, the buttons in the center seem to miss their top border.
---
Título: Values in dataframe display are not always centered in native Notebook UI
Descripcion: ``` Version: 1.59.0 (user setup) Commit: 379476f0e13988d90fab105c5c19e7abc8b1dea8 Date: 2021-08-04T23:13:12.822Z Electron: 13.1.7 Chrome: 91.0.4472.124 Node.js: 14.16.0 V8: 9.1.269.36-electron.0 OS: Windows_NT x64 10.0.19043 Jupyter extension: v2021.8.1195043623 ```  If you display your dataframe in the old interactive window, the values are always centered vertically. This keep the view consistent when you resize the interactive window and have long strings with spaces in your dataframe.  ![oDROY8pBi2](https://user-images.githubusercontent.com/33796896/128417521-131bba39-7425-4f34-8f73-9c87ce40eb71.gif)   However, in the new Notebook UI, the values are aligned on the top and looks inconsistent when resize the window.   ![5bsx6IHhEG](https://user-images.githubusercontent.com/33796896/128417498-7bf7882d-d365-4151-9570-897de7667862.gif)    ```python import pandas as pd import seaborn as sns import numpy as np  df = sns.load_dataset('tips') str_long = ['long str '*np.random.choice([0, 5], 1)[0] for _ in range(len(df))] df.assign(str_long=str_long)   ```
---
Título: Notebooks Getting Started Experience
Descripcion: Improvements for the Getting Started experience of Notebooks:  - [ ] Add some Getting Started content (this might not have the highest click through rate)    - Customizing layout    - Renderers in the marketplace    - Kernel extensions    - Debugging - [x] https://github.com/microsoft/vscode/issues/128592 and resolve how to curate Notebook extensions through either the getting started infrastructure or have Notebooks add a specific tag to their extension rather than using the messy category    - Make kernel extensions obvious to find - [x] https://github.com/microsoft/vscode/issues/128549     - Make a doc about the different customizations available? - [ ] Improve the discoverability and ease of use of custom renderers     - https://github.com/microsoft/vscode/issues/125876     - May need to seed the marketplace with more renderers  Immediate TODO: - [ ] Check in with Luciana and Jeffrey about their plans for Getting Started with Python to see if there's any overlaps
---
Título: Label activity bar icons so we can tell what they are
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I keep forgetting what all of the sidebar icons mean. It would be so much easier if they were labeled with words that I can read and instantly know what they do without having to waste time hovering a mouse over each icon in order to show tooltips that describe their functions. This would increase cognitive ease and let me spend my cognitive energy doing more important things like programming.  Labels should be visible by default with the option to remove labels for people want more sidebar density and have extra cognitive energy to spend on memorizing sidebar icons.  The advantages of this user interface design convention is well researched & documented.   *   [Yes, icons need text labels](https://www.nngroup.com/videos/icon-text-labels/) *   [The Importance Of Labels](https://blogs.msdn.microsoft.com/jensenh/2005/11/01/the-importance-of-labels/) *   [The best icon is a text label](https://thomasbyttebier.be/blog/the-best-icon-is-a-text-label) *   [Icon usability](https://www.nngroup.com/articles/icon-usability/) *   [Do icons need labels?](https://uxdesign.cc/do-icons-need-labels-6cb4f4282c00) *   [The Obvious UI is Often the Best UI](https://medium.com/google-design/the-obvious-ui-is-often-the-best-ui-7a25597d79fd)
---
Título: Revisit: Search by file should show terminal tabs in the list
Descripcion: Follow up from https://github.com/microsoft/vscode/issues/128445  As the original author of that code, I had some rationale in mind when excluding non-file based editors from quick open search after you type. I am not 100% convinced yet that terminals should appear in the quick open list after you start typing. Let me try to explain:  The fact that editors appear in quick open by default is something we had from day one, way before we had dedicated pickers for editors specifically (and way before we had tabs). The idea back then was to provide a simple navigation model where you can jump between editors via quick open without having to use the mouse while still being able to jump through the history more than one step (similar to how Alt+Tab works in OS). As such, no filtering is applied here and all opened editors appear.  However, I never felt that non-file based editors should appear in the quick open list once you start searching, because this is specifically for searching for files and not for editors:  ![image](https://user-images.githubusercontent.com/900690/127845987-2664f2b9-b7c9-4fa5-a916-10ac0585d102.png)  If you want to search for opened editors (including terminals), the more recent editors picker can be used instead:  ![image](https://user-images.githubusercontent.com/900690/127846055-a2a03cad-45be-4fc4-908c-cb6308bd693c.png)  Another concern I have is that we now seem to be very inconsistent because terminals now appear in the search results, while other non-file based editors do not. So I think we should decide consistently whether non-file based editors should appear in quick open once you start searching or not.  //cc @Tyriar @meganrogge @misolori @roblourens
---
Título: Update shell file icon
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> 🙈 The current icon doesn't fit the other icons or the VSC aesthetic.
---
Título: Notebook diff UI needs some sort of cell indicator
Descripcion: Notebook diff seems off to me. I find it hard to tell where cells begin and end:  ![image](https://user-images.githubusercontent.com/19672699/127533901-6677e0af-29e4-4004-95db-a54fdde281e9.png)  Perhaps we can include the execution count?
---
Título: Extension hover - recommended extensions
Descripcion: Testing #129421  We seem to be following the pattern in the hover: - Extension name - Extension details about enablement/capabilities/activation/etc. - Separator - Extension description  ![image](https://user-images.githubusercontent.com/3372902/127173210-53d359aa-c09a-4dce-adff-7bd66eecd88f.png)  This pattern is not being following with recommended extensions: ![image](https://user-images.githubusercontent.com/3372902/127173358-377e8e24-bd2e-4f8d-90c9-63eff5dc0cec.png)  I would move the reason of why the extension is recommended above a separator.   Where this looks really weird is with an extension like GitLens where you have meta-data both above and below the description: ![image](https://user-images.githubusercontent.com/3372902/127173631-f569de9f-9c2e-4002-a402-19bff4130ff2.png)
---
Título: Extension hover - activation time label
Descripcion: Testing #129421  Nit: At the moment the activation label looks like this. > Activation time : `250ms`  I do not believe there should be a space between the "time" and ":". > Activation time: `250ms`
---
Título: update go.icns
Descripcion: https://github.com/microsoft/vscode/blob/main/resources/darwin/go.icns   In https://github.com/microsoft/vscode-go/issues/1982, we updated the default go file icon in vscode,  but didn't update this icon.  If use of a different file icon is ok, I hope this go.icns to be replaced with a gopher that preserves its original cuteness. If it is not, I hope this to be replaced with the official go project logo (https://blog.golang.org/go-brand) to match the go file icon used inside vscode.
---
Título: List item indication when right clicking non selected item should change
Descripcion: Issue Type: <b>Bug</b>  Vscode deleting large files on remote server crashes. 68/5000  Linux servers have a PTH file for PyTorch. When I select the file and select delete, vscode will first try to open the file, which causes the deletion to fail and crash. This PTH file is usually more than 50MB. I suggest vscode change its policy so that for binary files over 10MB on the remote server, instead of reading directly, there is an option to ask whether to read.  VS Code version: Code 1.58.2 (c3f126316369cd610563c75b1b1725e0679adfb3, 2021-07-14T22:10:15.214Z) OS version: Windows_NT x64 10.0.19042 Restricted Mode: No   <!-- generated by issue reporter -->
---
Título: Provide extension authors with a better way to ask for donations than using notification toasts
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. -->  Today when I launched vscode I was greeted by a solicitation for donation from an extension. Now, this in and of itself is no cause for alarm, but the method in which this was done is. The extension is exploiting error notifications to force users to see and interact with a message window that does not go away on its own, that begs for money. He has even created a library for other extension developers to follow suit.  https://github.com/fabiospampinato/vscode-beggar  I find this behaviour from an extension to be incredibly intrusive and flat out unacceptable. This is clearly an exploit of an important feature of vscode. I quite frankly do not want to see ads or solicitations inside my productivity software. Below is a link to the extension in question, and a bit of back and forth I had with the developer in the reviews.  https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-todo-plus&ssr=false#review-details  I believe this behaviour to be an exploit and hope that it can be fixed so this kind of thing does not spread.
---
Título: Native Notebooks - Can't tell cells apart
Descripcion: Our survey monkey feedback indicates that users are still having a hard time understanding where cell boundaries begin/end. This makes it difficult for them to differentiate between markdown and code cells, input and output parts of the cell.   May or may not be related to https://github.com/microsoft/vscode/issues/125549  cc/ @tanhakabir @misolori   ![image](https://user-images.githubusercontent.com/19276747/126105015-d51f993f-10ad-4754-a331-0e8e0514944a.png)  ![image](https://user-images.githubusercontent.com/19276747/126013202-2f38ea47-f941-4674-80e3-b0229df818c3.png)  ![image](https://user-images.githubusercontent.com/19276747/126013259-6722de23-3be2-45cf-8db0-7e35f0fa9935.png)  ![image](https://user-images.githubusercontent.com/19276747/126013602-4846216f-c1db-44db-be2f-4e098e63f9a4.png)  ![image](https://user-images.githubusercontent.com/19276747/126013778-404e11a7-626c-4d38-a876-24127aba4bf3.png)  ![image](https://user-images.githubusercontent.com/19276747/126013819-0c706a15-9126-4f5d-b306-ee4d7530903d.png)  ![image](https://user-images.githubusercontent.com/19276747/126013867-f2e06986-12eb-4aec-a3ab-21f95024bd1a.png)  ![image](https://user-images.githubusercontent.com/19276747/126013880-90362d67-6742-43a0-a3b0-edf303b819a2.png)  ![image](https://user-images.githubusercontent.com/19276747/126013892-f47a2c6b-02ba-4086-bc0c-c89b3a5957d3.png)  ![image](https://user-images.githubusercontent.com/19276747/126013901-e16f5660-4272-422a-8d49-87da5472580c.png)  ![image](https://user-images.githubusercontent.com/19276747/126013938-6214b5ad-86d1-4ce3-acc1-1c46a6e8299e.png)  ![image](https://user-images.githubusercontent.com/19276747/126015634-bd92ff35-e2e2-4ca3-946b-7bc804d41c97.png)  ![image](https://user-images.githubusercontent.com/19276747/126015694-c6365ef4-d4b2-46e3-97c4-c5ff4624c8a8.png)
---
Título: Improve dirty terminal editor wording
Descripcion: I think we need hooks in editor land for this. Save should not be shown as an option.  ![image](https://user-images.githubusercontent.com/2193314/126008632-ec516f1e-abaa-434e-bdef-91a438e711d2.png)
---
Título: Basic usability issues with search & replace
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.58.2 - OS Version: Windows 10 2004  Compared to other text editors or IDEs, Visual Studio Code's most basic search & replace functionality is broken in numerous ways:  **When trying to make a replacement of a string, the selection is reset**  1. Select a block of code. 2. Type in the text to replace -- this incorrectly resets the selection. 3. Attempting to enable "find in selection" will set the selection to the first match, not the original selection.  **Toggling any button resets selections if there's a matching string.** 1. Open the search & replace box, with a memorised search string in the find box. 2. Press any button, such as "use regular expressions", "find in selection", etc... 3. The selection will be reset (incorrectly).  (similarly, going back to a search item in the history also resets selections).  **The history keyboard shortcut is the opposite of every other Windows IDE or text editor** I just assumed VS Code _has no search history_ because it doesn't respond to the standard keystroke that all other editors use. There is also no visual "prompt" indicating that a history exists unlike most other editors (which use combo boxes).  ```    VS Code:       UP    Visual Studio: DOWN    Notepad++:     DOWN    TextPAD:       DOWN    IntelliJ:      ALT+DOWN    MS Word:       DOWN ```  **There is no way to view search history** The only method is to scroll back one at a time, unlike most other IDEs or text editors that use a combo box that can be opened and used to "pick" a specific entry.  **Search in selection doesn't work consistently with "block select"** Selecting a block of code using middle-click-drag doesn't interact well with search. I can't even get reproducible scenarios! Just trying this a few times in a row resulted in different effects, including two _different_ selection highlights on top of each other, as well as a search indicating that "nothing matches" unexpectedly:  ![image](https://user-images.githubusercontent.com/14988123/125894039-46a46e5d-c633-4694-a898-020576f322fa.png)  ![image](https://user-images.githubusercontent.com/14988123/125893992-b26b6a14-534a-463f-a574-f7e33416a565.png)
---
Título: New activity bar/panel hovers take too long to show up
Descripcion: We added specially styled custom hovers to the activity bar and panel to help identify what these icons means and increase the discoverability of the keybindings. This originally had a short hover timer so the user would see this quickly, my thinking was that this short timing combined with the fact that these specially styled hovers could never be moused over mitigated any annoyance factor.  This also aligns with how many apps work these days, for example hovering over slack workspaces shows the hover nearly immediately, teams with its record icon, etc.
---
Título: MOVE The action icon bar to the title bar of window to space up the tab-bar[once again]
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> copy from https://github.com/microsoft/vscode/issues/104738  https://github.com/microsoft/vscode/issues/115198 I still believe this is a new efficient way to space up the space of tab-bar ![image](https://user-images.githubusercontent.com/1876302/125581334-cb948e54-6de0-4a05-b3c3-16f66c238502.png)  just like the new edge browser ![image](https://user-images.githubusercontent.com/1876302/125581008-63d8bfba-3310-4cdc-aede-e8ab97f14891.png)
---
Título: Explore improving end-to-end experience of opening your first Jupyter notebook
Descripcion: This issue covers the explorations to improve the end-to-end experience of opening a notebook for the first time.  ## Creating a new blank notebook  In this scenario, the user has not installed any extensions and attempts to create a new notebook file. Some proposed suggestions are:  - Add Jupyter notebook support out of the box (creating and running notebooks) - Contribute to the "New File..." API and show a notebook entry - Display a "Select a kernel and language to get started", similar to our untitled file experience ([refs](https://github.com/microsoft/vscode/issues/114307#issuecomment-823325581)) - Include a "Find More Kernels" option in the Kernel quick pick that goes to the marketplace - Also include a "Find more languages" option that goes to the marketplace - If a user selects a kernel and there is an associate language (i.e. Python) then the cell is auto-selected to that preferred language - If a user selects a language that has an associated kernel, then auto-select that kernel if there is one - If there is more than one kernel, prompt the user to select a kernel - Cache the user selection for the next time they create a new notebook or cell - Hide any actions in the toolbar that relate to the kernel when a cell hasn't ran yet   https://user-images.githubusercontent.com/35271042/125537626-247a40c8-664c-4a57-a154-ff9e9deb6bcb.mp4    ## Opening a notebook TBD
---
Título: Allow svgs in walkthroughs to be clickable
Descripcion: We previously talked about how it would be great if our [SVGs could leverage links](https://alligator.io/svg/hyperlinks-svg/) to open commands (like opening the extension marketplace) as the extension images in the walkthroughs look clickable:  <img width="1176" alt="CleanShot 2021-07-13 at 14 58 47@2x" src="https://user-images.githubusercontent.com/35271042/125530960-b2bffc1a-58e7-4974-8192-985a00ac5145.png">
---
Título: Font size for the extra info in suggestion list became smaller and can't be changed, causing problems with some fonts
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. --> - VS Code Version: 1.58.0 - OS Version: Linux x64 5.8.0-59-generic (Xubuntu 20.04.2)  Steps to Reproduce:  1. Open, for example, an empty `.js` file.  2. Press <kbd>Ctrl</kbd><kbd>Space</kbd> to open suggestions. If necessary, press it again to switch to the compact list. 3. Observe following: ![pic](https://user-images.githubusercontent.com/20289055/125254109-d0f3a400-e302-11eb-8208-9f788bc82489.png)  The information about the active element uses the same monospaced font as the editor, but **with smaller size**. From what I can see, this size can't be customized.  Since I'm using a bitmap font (converted to `.ttf`), this makes it illegible. This is the only place in the app where you can't customize the size of the monospaced font.
---
Título: Native Notebooks - Show Supported Languages in Language Picker
Descripcion: Had a quick chat with @misolori on the new built-in getting started flow for notebooks.  When starting off with a new notebook the user will have the ability to either change kernel or change the language. If they decide to change the language first, a drop down list with all supported languages appears.   ![image](https://user-images.githubusercontent.com/19276747/125112490-14000e00-e09c-11eb-8e47-372ced0bb14d.png)  However, a user may not have the required kernels to use certain languages and may lead to confusion when they cannot use one they have selected.   We were thinking it would be good to limit the languages in the list to just those that would be supported based on the kernels on a user's machine/extensions installed that provide kernels.   We do something similar with the kernel selector today - If user selects a kernel, we only show the languages supported by the kernel. Below is  example if user selects .NET kernel.   ![image](https://user-images.githubusercontent.com/19276747/125113266-48c09500-e09d-11eb-9284-47cd6024c40d.png)  The idea is to have a "global" version of the above experience.
---
Título: Explore adding 'toggle inlay hints' keybinding
Descripcion: Right now inlay hints are either on or off. However I believe VS lets you keep hints disabled normally and then peek at them as needed by holding down a key (`ctrl + alt` I believe): https://github.com/dotnet/roslyn/pull/48479  We should explore something similar for VS Code
---
Título: Native Notebooks - Keyboard shortcut for navigating in/out of notebook
Descripcion: Reporting on behalf of customer:   Steps to Reproduce:  1. Put focus on cell editor 2. Press escape twice 3. Focus ends up...somewhere?  4. Pressing tab brings focus back into notebook but into a different cell completely   Should tab be returning to the same cell in the notebook?  If not is there another shortcut that could help navigate back?   ![esc behavior](https://user-images.githubusercontent.com/19276747/124814764-41717e00-df1b-11eb-88b2-6af033f6934e.gif)
---
Título: Need a visual separator between the toolbar and the kernel selector
Descripcion: Right now it's your best guess where the line goes. Do we have a theme color token for this?  ![image](https://user-images.githubusercontent.com/4674940/124648095-a9f12a00-de4b-11eb-8075-ac2b028badfa.png)
---
Título: Visual treatment of the icon indicating the reason for disablement
Descripcion: Testing #127368  I realized that because the icon is "disabled" I would not have hovered over the icons indicating the reason for disablement in the extension view if the test plan item would not have told me to. Also, in the details editor this piece of information is important but is presented in a subdued fashion. This is less of an issue for non-built-in extension since they have buttons for enabling/disabling.   ![image](https://user-images.githubusercontent.com/4674940/124014192-0fe73880-d998-11eb-80a6-849ec509e5b8.png)  It's also strange that I can actually click the disabled icons and get a visual click response.
---
Título: Add an inline X button to our filter/search input boxes to quickly clear it
Descripcion: I would love to have an `x` inside many of our filter/search-type input boxes to quickly clear the input. I do this SO often and I always go looking for the non-existent button 😄   A few examples:  1. Extensions search 2. Search input 2. Debug Console filter box 3. Problems filter box 4. Settings filter box
---
Título: Settings UI: deprecation message is not highlighted enough in light theme
Descripcion: It doesn't stand out in the page, looks like any other text. Maybe it can benefit from some border or a special symbol.  ![deprecation_message](https://user-images.githubusercontent.com/9638156/123516201-956e9e00-d6a3-11eb-97ff-3d60d168a85d.png)
---
Título: Native Notebooks - Outline (aka Table of Contents or TOC) has low discoverability
Descripcion: Customer survey feedback shows that the discoverability of the outline view for notebooks is still low.   Could we potentially automatically open the outline view when a notebook is opened for the first x (5?) times to help discoverability?
---
Título: SCM - better distinguish when repositories have the same name
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> In the company where I work the project structure is as follows: .../PROJ_NR/software/<.git folder>+<data> In Source Control Repositories only the parent folder is displayed, which results in displaying only 'software' names. Is it possible for SCR to recognize identical folder names and add one more parent folder when it recognizes two identical names? I am adding a picture of how it looks like in practice at the moment.   ![Screenshot_20210621_153656](https://user-images.githubusercontent.com/13761341/122772611-d7fd3880-d2a7-11eb-8c94-435873f61abe.png)
---
Título: Allow SVGs in getting started to be themeable
Descripcion: We'd need to export our color tokens as css variables, which we can access in SVGs. This would allow illustrations to be themed like:  https://user-images.githubusercontent.com/35271042/122453947-a0b52180-cf5f-11eb-967b-4dffd484b701.mp4
---
Título: More obvious UI for output mimetype selector
Descripcion: This selector isn't the most obvious for changing output type. Especially since an ellipses isn't an icon I'd think about clicking often, I assume it contains secondary actions that aren't everyday actions and not something I'd use often which I would for changing output types.  ![image](https://user-images.githubusercontent.com/12758612/122435028-7c037e80-cf4c-11eb-864d-0efa556894d8.png)  Previously we had an icon that looked like: `</>` but I've seen some feedback where that icon is non-intuitive and doesn't make sense to click.   I think this is also compounded by the fact that changing output isn't common in other notebook platforms so most people aren't expecting to use that icon but are expecting a different outputs mentioned here: https://github.com/tanhakabir/rest-book/issues/85#issuecomment-828896165  There's also no UI indication that a cell has more than 1 output type available.  Ideas: 1. Language picker style output picker? Like this:  ![image](https://user-images.githubusercontent.com/12758612/122446951-14ebc700-cf58-11eb-84c6-b5babe28ae79.png)
---
Título: Spinner wheel in Python Debugger / similar to Jupyter notebook (currently there is no visual indication that a debug command was launched)
Descripcion: Steps to reproduce:  1. Use Python VS Code extension to launch a new jupyter notebook 2. Execute a cell with `import time, time.sleep(20)` 3. Notice the spinner icon that moves, denoting that something is running (below the cell with current runtime in seconds): ![image](https://user-images.githubusercontent.com/5317244/119143591-c2c98b80-ba15-11eb-8548-728216111a6f.png)  Now switch to the python debugger:   1. Use ctrl + shift + D to launch debug the current python file 2. Notice that the only visual affordance for seeing that something is running is the 'RUNNING' text in the bottom right in the call stack.  ![image](https://user-images.githubusercontent.com/5317244/119143862-1a67f700-ba16-11eb-8dda-7c6969d21656.png)  Just a thought, but adding a spinner icon besides 'running', or in the play/pause/stop on top while a debugging process is running, along with the timing info in seconds could be very helpful as a visual cue (I've found myself restarting processes frequently, unnecessarily)  _Originally posted by @altosaar in https://github.com/microsoft/vscode-python/discussions/16296_
---
Título: Bad UX / DX: Source Control Tab
Descripcion: Issue Type: <b>Bug</b>  Bad UX / DX: Spource Control Tab `Staged Changes` should be listed below `Changes`, to avoid having a `jumping list` each time an items is added to `staged Changes`, which is bad context switching.  VS Code version: Code 1.57.0 (Universal) (b4c1bd0a9b03c749ea011b06c6d2676c8091a70c, 2021-06-09T17:22:31.215Z) OS version: Darwin x64 19.6.0 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-8500 CPU @ 3.00GHz (6 x 3000)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|1, 2, 3| |Memory (System)|40.00GB (1.32GB free)| |Process Argv|--crash-reporter-id 3461cbd3-ced6-49fe-8609-19169d80821e| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (20)</summary>  Extension|Author (truncated)|Version ---|---|--- markdown-nomnoml|amo|0.0.3 vscode-apollo|apo|1.19.3 quitcontrol-vscode|art|3.2.1 better-toml|bun|0.3.2 vscode-eslint|dba|2.1.22 atom-icons|emr|1.2.0 prettier-vscode|esb|6.4.0 vscode-jest-runner|fir|0.4.39 auto-rename-tag|for|0.1.6 python|ms-|2021.5.926500501 vscode-pylance|ms-|2021.6.1 jupyter|ms-|2021.6.999230701 debugger-for-chrome|msj|4.12.12 env-cmd-file-syntax|Nix|0.3.0 vetur|oct|0.34.1 quicktype|qui|12.0.46 tabnine-vscode|Tab|3.4.5 highlight-matching-tag|vin|0.10.0 vscode-todo-highlight|way|1.0.4 material-theme|zhu|3.10.14  (5 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Allow suggest icons to be themeable
Descripcion: Issue Type: <b>Bug</b>  I updated the VS Code today and after updating it when I started writing code, I found that the colour of import suggestions as well as `object.method` suggestions' icon and text colour got changed. Previously, it was blue but now it is kind of grey. Because of this, I am not able to distinguish between local suggestions(words that are used in the current file) and actual functions/properties/imports.  I also tried removing the Cobalt2 theme and using vscode default theme but still, it is the same. Please check the below screenshot. The `publishCleanupEvent` should have appeared in the blue. I know that we can customise the colour of suggestions but I haven't touched any settings related to it.   ![image](https://user-images.githubusercontent.com/30300772/121641130-6dc8e480-caac-11eb-8c75-716669c7db47.png)  Edit: I found that the suggestion colour is the same but the current selection's colour is changing. ![image](https://user-images.githubusercontent.com/30300772/121641853-59d1b280-caad-11eb-841a-c0d7d546931f.png)  VS Code version: Code 1.57.0 (Universal) (b4c1bd0a9b03c749ea011b06c6d2676c8091a70c, 2021-06-09T17:22:31.215Z) OS version: Darwin x64 20.5.0 Restricted Mode: No  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-1038NG7 CPU @ 2.00GHz (8 x 2000)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 3, 3| |Memory (System)|16.00GB (0.50GB free)| |Process Argv|--crash-reporter-id 4864d9f4-e6d3-4f8e-9986-b64a8e1eb107| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (15)</summary>  Extension|Author (truncated)|Version ---|---|--- emojisense|bie|0.8.0 path-intellisense|chr|2.3.0 bracket-pair-colorizer|Coe|1.0.61 vscode-eslint|dba|2.1.22 gitlens|eam|11.4.1 EditorConfig|Edi|0.16.4 prettier-vscode|esb|6.4.0 auto-rename-tag|for|0.1.6 todo-tree|Gru|0.0.213 vscode-styled-components|jpo|1.6.4 react-proptypes-intellisense|OfH|1.0.3 material-icon-theme|PKi|4.7.0 code-spell-checker|str|1.10.2 serverless-ide-vscode|Thr|0.5.31 vscodeintellicode|Vis|1.2.14  (1 theme extensions excluded)  </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383cf:30185419 pythonvspyt602:30300191 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyt639:30300192 pythontb:30283811 pythonvspyt551:30311712 vspre833cf:30267465 pythonptprofiler:30281270 vshan820:30294714 pythondataviewer:30285071 vscus158cf:30286554 vscgsv2:30307504 vscorehov:30309549 vscod805cf:30301675 binariesv517cf:30312826  ```  </details>  <!-- generated by issue reporter -->
---
Título: Don't show `x` for currently opened files under "recently opened" in file quick access
Descripcion: Repro:  1. Dirty an editor 2. Switch tabs 3. Ctrl/cmd+p 4. Click the x, it disappears from the list but the editor does close - it should prompt  ![recording (10)](https://user-images.githubusercontent.com/2193314/121611835-03616700-ca0e-11eb-9255-3da3f3580dc3.gif)
---
Título: Errors appear under documentation when hovering above the error
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  ## Environment data  <details> <summary>System Info</summary>  VS Code version: Code 1.56.2 (054a9295330880ed74ceaedda236253b4f39a335, 2021-05-12T16:45:26.313Z) OS version: Linux x64 5.4.0-74-generic snap  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz (8 x 3066)| |GPU Status|2d_canvas: unavailable_software<br>gpu_compositing: disabled_software<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>opengl: disabled_off<br>rasterization: disabled_software<br>skia_renderer: enabled_on<br>video_decode: disabled_software<br>vulkan: disabled_off<br>webgl: unavailable_software<br>webgl2: unavailable_software| |Load (avg)|3, 2, 2| |Memory (System)|15.52GB (0.66GB free)| |Process Argv|. --no-sandbox --crash-reporter-id 3b63fda6-abd5-4a74-bb2c-203be5950901| |Screen Reader|no| |VM|0%| |DESKTOP_SESSION|ubuntu| |XDG_CURRENT_DESKTOP|Unity| |XDG_SESSION_DESKTOP|ubuntu| |XDG_SESSION_TYPE|x11| </details><details><summary>Extensions (22)</summary>  Extension|Author (truncated)|Version ---|---|--- Bookmarks|ale|13.0.4 django-html|bib|1.3.0 better-toml|bun|0.3.2 vscode-svgviewer|css|2.0.0 vscode-eslint|dba|2.1.20 gitlens|eam|11.4.1 EditorConfig|Edi|0.16.4 prettier-vscode|esb|6.4.0 hadolint|exi|1.0.2 vs-code-xml-format|fab|0.1.5 vscode-graphql|Gra|0.3.16 vscode-styled-components|jpo|1.6.4 dotenv|mik|1.0.1 language-gettext|mro|0.2.0 vscode-docker|ms-|1.13.0 python|ms-|2021.5.842923320 jupyter|ms-|2021.6.832593372 vsliveshare|ms-|1.0.4360 vscode-jest|Ort|4.0.2 vscode-stylelint|sty|0.86.0 shellcheck|tim|0.14.1 markdown-all-in-one|yzh|3.4.0   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368:30146709 vsreu685:30147344 python383:30185418 pythonvspyt700cf:30270857 pythonvspyt602:30300191 vspor879:30202332 vspor708:30202333 vspor363:30204092 pythonvspyt639:30300192 pythontb:30283811 pythonvspyt551cf:30311713 vspre833cf:30267465 pythonptprofiler:30281270 vshan820:30294714 pythondataviewer:30285071 vscus158cf:30286554 vscgsv2:30307504 vscorehov:30309549 vscod805:30301674 binariesv517:30312825  ```  </details>  ## Steps to reproduce:  - Have a Python project with pylint and/or blake configured  - Write an unused import: `from some.module import NotGonnaUseThis`  ## Expected behaviour  - The `from` keyword highlights in red - When moving the mouse over the `from` keyword, the error "Unused import NotGonnaUseThis" appears first  ## Actual behaviour  - The `from` keyword highlights in red - When moving the mouse over the `from` keyword, the 50+ lines of Python documentation about the `import` mechanism appear first, have to be scrolled down, then the error appears last.  This seems to be a regression, from around the time when the new Python engine (which we're not using) was promoted as standard.  ## Logs  <details>  <summary>Output for <code>Python</code> in the <code>Output</code> panel (<code>View</code>→<code>Output</code>, change the drop-down the upper-right of the <code>Output</code> panel to <code>Python</code>) </summary>  <p>  ##########Linting Output - flake8########## ##########Linting Output - pylint########## > ~/dev/webapp/.venv3/bin/isort - --diff --atomic --settings-path ~/dev/webapp/.isort.cfg cwd: ~/dev/webapp/citymeo/api > ~/dev/webapp/.venv3/bin/black --config ~/dev/webapp/webapp.toml --diff --quiet ~/dev/webapp/citymeo/api/views.py.2b3e4cd352dd623e053f79f23da9a131.tmp cwd: ~/dev/webapp > ~/dev/webapp/.venv3/bin/flake8 --config=/home/foucauld/dev/webapp/CI/flake8 --format=%(row)d,%(col)d,%(code).1s,%(code)s:%(text)s ~/dev/webapp/citymeo/api/views.py cwd: ~/dev/webapp > ~/dev/webapp/.venv3/bin/pylint --rcfile=/home/foucauld/dev/webapp/CI/pylintrc --msg-template='{line},{column},{category},{symbol}:{msg}' --reports=n --output-format=text ~/dev/webapp/citymeo/api/views.py cwd: ~/dev/webapp ##########Linting Output - flake8########## 22,1,F,F401:'drf_spectacular.utils.extend_schema_field' imported but unused ##########Linting Output - pylint########## ************* Module api.views 22,0,warning,unused-import:Unused extend_schema_field imported from drf_spectacular.utils  </p> </details>
---
Título: Abstract vector artwork for all built-in walkthroughs
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Problem: Screenshots are a confusing UI-within-a-UI experience and are often to detailed to focus the user's attention.  Solution: Abstract images will be better to explain the concepts with a cleaner look.  💪 goal is adding some lightweight animations (like a command palette opening and text being typed in).
---
Título: Reimplement the `editor.suggest.maxVisibleSuggestions` option
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hello there, I and my team were using version `0.21.2` of the `monaco-editor` which were using a version of `vscode` that supports the `editor.suggest.maxVisibleSuggestions`, which we find very useful in term of the editor design and user experience, but we had to upgrade to the version `0.23.0` where this option got removed in [this commit](https://github.com/microsoft/vscode/commit/cf1596bb37067d0fba4cdd5e9967d7595f4ed8c7).   My question here can we open an MR to revert removing that option or even make it work better with the new suggestion widget resize behavior?  Best regards.
---
Título: Make suggest widget inherit editor.letterSpacing
Descripcion: I set my `editor.letterSpacing` on negative to make the font more condensed, but the suggest widget doesn't inherit the value and the text looks wider than the editor text, which depending on the font also makes it look uglier. I would like to be able to make the font look the same in both.
---
Título: Custom hover pointer overlaps with element
Descripcion: I'm using the hover service with pointer = true  ![image](https://user-images.githubusercontent.com/6461412/120790576-6d23d180-c533-11eb-8c8f-4bc5a40de411.png)  I wonder if it weren't better if the arrow does not overlap with the element
---
Título: Cell toolbar cutting of capital letters in rendered Markdown
Descripcion: ![image](https://user-images.githubusercontent.com/4674940/120548883-be06bf00-c3a7-11eb-9510-5d352a71c419.png)
---
Título: Notebook getting started experience is noisy
Descripcion: Testing #125014  Opening a notebook, I'm presented with this screen:  ![](https://memes.peet.io/img/21-06-b26bf26e-927f-4011-94ee-f3d1c8046983.png)  There's a lot going on here. I need to parse through the image and realize that the 'context' is that thing on the bottom left side that's selected which is asking me to choose a layout for the notebook. It's also not very obvious that the images on the right are clickable, there's the selection border but it blends in with the other identically-colored borders in the images.  I don't care about the other getting started bullets in this context, they should be hidden and the current "flow" should be simpler and distraction free. The flow for setting up Parallels VM is a good layout/example of what I would expect.  ![](https://kb.parallels.com/Attachments/kcs-175705/BigSurRecovery.png)
---
Título: "Secondary" suggest is in the way of the "primary" one
Descripcion: Testing #122473.  I reduced the width of VS Code, and now I'm unable to see the first suggested option because it got covered up by another preview.  <img src="https://user-images.githubusercontent.com/7199958/120394291-11b1d380-c2e8-11eb-8c66-6f0e1ec828d3.png" width=300>
---
Título: Left-hand cell toolbar overlaps markdown content
Descripcion: Testing #125013  ![](https://memes.peet.io/img/21-06-af7938ba-39bf-491c-877b-eed59fd7f350.png)
---
Título: Numeric badge on extension icon - no way to check meaning, no way to hide
Descripcion: There is no way to check what does this numeric badge `1` on Python extension mean: ![image](https://user-images.githubusercontent.com/23004737/120367174-d5df3400-c310-11eb-9b24-b4bc36e29169.png)  There are no Python notifications in my VS Code. ![image](https://user-images.githubusercontent.com/23004737/120367788-98c77180-c311-11eb-8659-f0e384552522.png)  Please provide explanation in UI what numeric badge means and ability to hide it.  - VS Code Version: 1.56.2 - OS Version: Ubuntu Desktop 21.04 arm64  Steps to Reproduce:  1. Install VS Code 2. Install Python Extension
---
Título: Allow to drag groups when there is not enough space next to tabs
Descripcion: Testing #124848  I often have many editors open. If there is no free space in the editor group, I cannot start the drag operation. Impressive what else I can drag though, nice work!  ![image](https://user-images.githubusercontent.com/2931520/120306254-f50aa100-c2d1-11eb-8b31-d0bad6ab500a.png)
---
Título: Explore ways to not pollute editor groups with terminals with other editors
Descripcion: We're approaching adding terminal editors (tracked in https://github.com/microsoft/vscode/issues/10546) but one problem we foresee coming is that users will want to lay out their terminals for example like this:  ``` |------|------| |      |      | |      |------| |      |      | |------|------| ```  Where there are 1 or 2 fixed terminals on a side. For this I think it's not desirable that when you open a file while the terminal is active that it will add it to the terminal's group as it's essentially acting as a dedicated terminal group.  For terminals we could approach this by saying don't open text files in terminal-only editor groups, but I think it's worth considering generalizing the solution since same problem applies to regular text files too:  - I use split editors to show a reference on the right, I never want a second tab over there - Markdown preview on the side has the same issue  How about having another state for editors groups similar to pinned for editors, where file don't open in them and instead go to the closest editor group to the right or something?  cc @meganrogge
---
Título: Components that offer to open an editor should specify the `override` that makes most sense
Descripcion: This is a follow up from https://github.com/microsoft/vscode/issues/124122 (cc @andreamah) and my review from https://github.com/microsoft/vscode/pull/124394.  In https://github.com/microsoft/vscode/issues/124122 the issue at hand is that a UI piece in VSCode provides support to open editors (in this case the Outline view). If the user has configured the default editor to be an editor that is different from what the UI piece is intending to open, you get the wrong editor opening based on the user action.  I see that https://github.com/microsoft/vscode/pull/124194 tries to resolve this by teaching the outline view which `override` to use via probing on the `viewType` property (which only exists on notebooks and custom editors currently). I think there are 2 issues to follow up:  **Outline** The outline view works with outline providers that can return the outline for the given active editor. Currently I see 2: * `notebookOutline` * `documentSymbolsOutline`  Both implement a method `reveal` which is called when you click on an entry in the outline (and I think even when you use breadcrumbs too). I think a better fix for https://github.com/microsoft/vscode/issues/124122 would be to: * explicitly pass in the right `viewType` for [`notebookOutline#reveal`](https://github.com/microsoft/vscode/blob/7ea5b137eaf1771e3fa2c7b569b2fca880db12b8/src/vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline.ts#L541-L541) implementation based on the editor * enforce to use a text editor in [`documentSymbolsOutline#reveal`](https://github.com/microsoft/vscode/blob/3b87c36e2dc5a9a6f61fd11daca1e9316474ebdc/src/vs/workbench/contrib/codeEditor/browser/outline/documentSymbolsOutline.ts#L211-L211)  I think fixing the former is straight forward because it looks like the `notebookOutline` is always constructed over a notebook editor where the view type is known.  For the latter: we have a service called [`ICodeEditorService`](https://github.com/microsoft/vscode/blob/5c4663baadf575b10b548c437fdf10c9afb7d21f/src/vs/workbench/services/editor/browser/codeEditorService.ts#L18-L18) and the intent is: * it is the service that most components use that operate within the monaco code editor (e.g. find references, goto definition) * it should always result in a text editor opening, never be overridden  As such, I would think that in the code editor service we need to either pass `EditorOverride.DISABLED` or the identifier of the default text editor.  **Other UI Components (e.g. search, problems, custom views?)** I can reproduce the issue for outlines easily with other UI components that allow to open editors, e.g. for search:  ![recording](https://user-images.githubusercontent.com/900690/119335012-0f1e0100-bc8c-11eb-9b16-671c32ab86e5.gif)  There are probably a lot more places where the user can trigger an editor to open. I think for UI components that operate on text (e.g. search, problems), we need to make sure that the resulting editor is text based.
---
Título: Explore extension contributions to the "New..." item
Descripcion: ## Overview We've seen feedback from users that creating custom files, i.e. non text files like Notebooks, is difficult to find. Right now the only way to create a new custom file is through the command palette but users are not aware of this. They often looked in the menus and on the welcome page. This issue aims to address this issue.  ## Design  ### Option 1 This proposal simply appends the item under the "New File" item, because new file is for text files, and this item would be for a custom file.  ![image](https://user-images.githubusercontent.com/35271042/119055868-9878bf00-b97e-11eb-9f3d-e35c134ff87f.png)  ### Option 2 We could alternatively combine the items into single row if there are too many and use the split button:  ![image](https://user-images.githubusercontent.com/35271042/119055947-b6462400-b97e-11eb-9f77-a27a5f15311d.png)  ### Option 3 This would make clicking on "New File" open a quick pick with the list of options:  ![image](https://user-images.githubusercontent.com/35271042/119173820-9c5b1e80-ba1c-11eb-887e-b2b8eb0d3dd9.png)
---
Título: Terminal label distance with left-aligned tabs
Descripcion: I find the terminal active "details" button very useful (well the text at least -- I never click on it), but with left-aligned tabs it can be VERY far away from where my focus is.  Hopefully, there is a way to solve for that.  For my specific use-case, since I have my terminal split with another view  ![image](https://user-images.githubusercontent.com/641685/118561910-c5886000-b739-11eb-88cf-bbafe5a47c1d.png)  It would be great if the content of the "details" button was duplicated into the terminal view's `titleDescription` like how the Timeline view shows the name of the active file  ![image](https://user-images.githubusercontent.com/641685/118562067-05e7de00-b73a-11eb-9db7-dd2b0af8b5f2.png)  That would address my specific issue, but doesn't solve for the overall issue.
---
Título: No longer scaling toolbar icon
Descripcion: Issue Type: <b>Bug</b>  Install vscode-print from https://marketplace.visualstudio.com/items?itemName=pdconsec.vscode-print and observe that the icon is clipped. This is new behaviour.  ![image](https://user-images.githubusercontent.com/5498936/117230497-908a2c80-ae60-11eb-845a-8f4c5abcb583.png)  To be clear, I am the author of vscode-print and it is entirely possible that the icon asset is non-compliant in some way that historically was compensated by scaling. I could edit the asset easily, this is SVG and not a bitmap. I was about to do so when it occurred to me that this probably affects any number of other extensions.  I can change the asset to fix this and foist a gratuitous update on all my users or you could go back to scaling. Let me know which you think is appropriate.  VS Code version: Code 1.56.0 (cfa2e218100323074ac1948c885448fdf4de2a7f, 2021-05-04T22:09:06.405Z) OS version: Windows_NT x64 10.0.19042  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-8260U CPU @ 1.60GHz (8 x 1800)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|19.87GB (8.88GB free)| |Process Argv|--crash-reporter-id 2468ae4e-d85d-44d9-beb4-ad13f8b9e08e| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (33)</summary>  Extension|Author (truncated)|Version ---|---|--- android-dev-ext|ade|1.3.2 vscode-sql-formatter|adp|1.4.4 markdown-mermaid|bie|1.9.2 path-intellisense|chr|2.3.0 vscode-postgres|cko|1.1.17 vscode-eslint|dba|2.1.20 gitlens|eam|11.4.1 EditorConfig|Edi|0.16.4 dotnet-test-explorer|for|0.7.5 mdmath|goe|2.5.1 vscode-peacock|joh|3.9.1 eml|lei|0.4.0 git-graph|mhu|1.30.0 vscode-docker|ms-|1.12.1 vscode-language-pack-fr|MS-|1.56.1 vscode-language-pack-ja|MS-|1.56.1 csharp|ms-|1.23.11 remote-containers|ms-|0.177.0 remote-wsl|ms-|0.56.1 azure-account|ms-|0.9.8 cpptools|ms-|1.3.1 powershell|ms-|2021.2.2 vscode-typescript-tslint-plugin|ms-|1.3.3 vsliveshare|ms-|1.0.4131 vsliveshare-audio|ms-|0.1.91 vsliveshare-pack|ms-|0.4.0 debugger-for-chrome|msj|4.12.12 vscode-print|pdc|0.9.3 quicktype|qui|12.0.46 autoimport|ste|1.5.4 html-preview-vscode|tht|0.2.5 vscode-mermaid-editor|tom|0.11.0 vscode-arduino|vsc|0.4.2   </details> <!-- generated by issue reporter -->
---
Título: Version control icons became minuscule with latest update
Descripcion: Issue Type: <b>Bug</b>  Go to Source Control tab and look at the icons for all source projects. The commit and other icons are tiny!  https://imgur.com/a/mmJc04T  VS Code version: Code 1.56.0 (cfa2e218100323074ac1948c885448fdf4de2a7f, 2021-05-04T22:09:06.405Z) OS version: Windows_NT x64 10.0.19042  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|AMD Ryzen 7 3800X 8-Core Processor              (16 x 3900)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|31.93GB (24.41GB free)| |Process Argv|--crash-reporter-id c140cd00-e08b-4c0a-8002-90bd79eae591| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (7)</summary>  Extension|Author (truncated)|Version ---|---|--- php-debug|fel|1.14.12 php-intellisense|fel|2.3.14 php-pack|fel|1.0.2 fontsize-shortcuts|fos|1.5.0 vscode-edit-csv|jan|0.5.8 vscode-wordpress-hooks|joh|0.5.4 svn-scm|joh|2.13.5   </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383cf:30185419 pythonvspyt602:30294772 vspor879:30202332 vspor708:30202333 vspor363:30204092 vstes516:30244333 pythonvspyt639:30291489 pythontb:30283811 pythonvspyt551:30291414 vspre833cf:30267465 pythonptprofiler:30281270 vsdfh931:30280409 vscnewfilehidden:30294815 vshan820:30294714 vscoreces:30290705 pythondataviewer:30285071 vscus158cf:30286554 vscgsv2:30294352  ```  </details>  <!-- generated by issue reporter -->
---
Título: Notebook compact/zen view
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  The current UI of notebook editor is mouse friendly, you can insert, move or run cells with your mouse with ease. However once I am familiar with keyboard shortcuts (e.g., Jupyter's single character keybindings), the whitespace reserved for toolbars or buttons are adding too much value to my workflow. In a relative small screen, we can view fewer cells in vscode than Jupyter  <img width="1536" alt="image" src="https://user-images.githubusercontent.com/876920/116952348-4fff9880-ac3f-11eb-9114-d7703cc850e7.png">   We have similar problems in the text editor but users can easily modify settings to embrace a more compact view (left). Note that the right side one is less compact, but more mouse friendly (breadcrumbs, codelens)   <img width="1536" alt="image" src="https://user-images.githubusercontent.com/876920/116952234-02832b80-ac3f-11eb-8aea-f61e858601a3.png">  We may consider similar UI options to allow users to have more compact views in notebook.
---
Título: Inline actions on hover obscure title/selectable area
Descripcion: When the width is below a certain threshold, we shouldn't show the inline actions.  ![recording - 2021-04-29T141850 874](https://user-images.githubusercontent.com/29464607/116619822-d5104800-a8f5-11eb-9b39-37636d58e9fe.gif)
---
Título: Add visuals for extension star rating and downloads
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Hello!  First off, thanks to anybody who's contributed to VS Code, as it has been a joy to use.  # Motivation  When searching for extensions in the Side Bar, the download count and star ratings stay in a concise view that could be more visually intuitive. There's no strong visual distinction between download counts—`2.5M`, `2.5K`, and `250` indicate very different things about the usage of an extension, but are visually not different. The same principle goes for star ratings.  # Proposal  I propose that when the sidebar is made wider, we make use of that real estate and provide some visualization for these data points:  Before:  ![Before: Concise but less practical](https://user-images.githubusercontent.com/25071920/116457455-0a9b2f80-a829-11eb-8e2f-c6e14483c7f7.png)  After:  Note the bar beneath the download count, which would help a user more quickly understand an extension's usage.  ![After: Descriptive visualizations](https://user-images.githubusercontent.com/25071920/116457547-256da400-a829-11eb-9c6f-7d8425acad54.png)  # Caveats  I believe that the star rating feature would be somewhat easy to implement. But the download gauge would be somewhat tricky because there is no logical "denominator"—would the gauge be logarithmic? Would the denominator be based on only the extensions displayed within the search results? These are technical "gotchas", but I don't believe they would prevent this feature from being useful or feasible.  If people like this idea, I would be happy to get involved and try to help make it happen.  Thanks, and happy coding!  :octocat: ❤️
---
Título: Modal dialogs should reduce noise around dialog
Descripcion: Related to https://github.com/microsoft/vscode/issues/122520  We should do something to the entire workbench when a modal dialog is open: either fade out, grayscale, blur, etc. Something that indicates to the user that everything but the modal dialog should be currently ignored.
---
Título: Rename and delete in explorer should have ... since they need additional info
Descripcion: Related: https://github.com/microsoft/vscode/issues/122296  Both need additional info:  <img width="241" alt="Screen Shot 2021-04-27 at 4 55 10 AM" src="https://user-images.githubusercontent.com/2193314/116237173-bf8ff800-a714-11eb-8c27-4c93d26a4aea.png">
---
Título: Panel titles jump on hover in high contrast theme
Descripcion: ![recording (1)](https://user-images.githubusercontent.com/900690/116217133-a48bab00-a749-11eb-855d-0a5fa8a989a6.gif)
---
Título: Update changing default editor
Descripcion: ## Current When changing the default editor we show a ⚙️ in the quick pick to change this. The gear action by itself is not clear that it will immediately change the default and assume there would be another screen to confirm.  ![image](https://user-images.githubusercontent.com/35271042/116126891-054cb200-a67c-11eb-8b94-957dfa2505c1.png)   ## Proposal Change the flow to match how you select different formatters to make it clearer/explicit. In the formatter case, there is a "Configure Default Formatter..." that is clear and indicates that user input is required on the next step. The same can be applied to default editors.  ![image](https://user-images.githubusercontent.com/35271042/116127067-40e77c00-a67c-11eb-938a-70b4daa95d11.png)  cc @bpasero
---
Título: Adjust Font size for Find Widget and Auto-fit
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I use reg-ex a lot, I take notes in markdown and its just easy for me at this point to change one format to another when things copy in weird. etc, etc,  Reason isnt all that relevant-  but here:    ![](https://i.imgur.com/iAZ6c38.png)  The font size is much to small for me.  I haven't yet found a setting that modifies it.  And changing everything (via zoom level) is not ideal either, as then I have to scale every other setting.    If we can adjust CodeLens, this should also be adjustable.  As is- its quite difficult to do complicated regex sequences as common chars such as {[(, ,., li1 etc are difficult to discern.  In addition, long sequences are often out of scope, you have to manually stretch the bar or scroll with the cursor to see the rest.  It would be nice if that box automatically grew horizontally to say ~80% of the width of the editor.  It would also be nice - (in some use cases) if it grew vertically as well.  For multiline matches.  It grows vertically now, though in weird circumstances that dont seem consistent.   2.) For regex matches it would be nice to "assume" the closing paren as default.  This helps when writing them on the fly and you are looking at the highlights and match counts to see you are going in the right direction.  It seems trivial to "assume" a closing paren if the current search string comes up invalid.  Its just an ease of life thing.  I dont think the auto close parentheses setting works in the box either. - making auto-close parentheses in the search box an option might actually be the easier implementation.  3) there were a few regex features I noticed that VScode seems to lack.  It would be nice to at least document the feature set that VSCode intends to support.  Things that are standard in MSFT documentation (for C/C++/C#) are missing here.  And though I am sure the correct place to look might be the javascript/typescript doc on the topic, I have yet to see that.   The relevant settings appear to be:  ```css .monaco-editor .find-widget .monaco-findInput .input {     font-size: 13px } ```
---
Título: Consider using focus-within for showing actions in scm
Descripcion: I just mostly copied the behavior of actions showing up with keyboard focus in terminal tabs, however one change I made was to use `:focus-within` for the _non-hover_ styles to avoid showing the actions unless keyboard focus is there. I think this would be a nice change for SCM as well.  <img width="219" alt="Screen Shot 2021-04-23 at 5 26 17 AM" src="https://user-images.githubusercontent.com/2193314/115870783-97428980-a3f4-11eb-8653-44b7ad863634.png">  See https://github.com/microsoft/vscode/commit/cfb866ac5337405606caa401c123ecc85ca7ebb5
---
Título: "Reopen folder using..." should use a more dedicated ux solution, not notifications
Descripcion: Refs: https://github.com/microsoft/vscode/issues/119463  Currently we have mulitple experience to reopen the folder because there is a `Dev Container` file or a `.code-workspace` file. Both of them use notifications in order to make the user aware of this.  Instead of this I propose the following: * Do not use notificaitons for this (especially painful since they appear on startup) * We should consider showing this in the empty editor area instead of action hints. Button "Reopen in Container"  * Consider having this in the welcome view * We should have something in the explorer. Either a Ttitle area button, or a blue button in the empty area  fyi @misolori @bpasero for ideas  ![Screenshot 2021-04-21 at 12 21 42](https://user-images.githubusercontent.com/1926584/115538538-46b81880-a29c-11eb-9868-793a4c8c63c6.png)
---
Título: No hover background change for show search details
Descripcion: Issue Type: <b>Bug</b>  ![Screenshot (465)](https://user-images.githubusercontent.com/9638156/115075514-db6cf000-9f03-11eb-9ffd-d31d3c068e63.png)  ![Screenshot (468)](https://user-images.githubusercontent.com/9638156/115079924-94cec400-9f0a-11eb-803a-0815716943a6.png)  ![Screenshot (466)](https://user-images.githubusercontent.com/9638156/115077353-94ccc500-9f06-11eb-95af-646881456f63.png)  VS Code version: Code - Insiders 1.56.0-insider (ce791d27dc9889a392f4d29abefe9c53eb0b5129, 2021-04-16T11:25:09.662Z) OS version: Windows_NT x64 10.0.18363   <!-- generated by issue reporter -->
---
Título: Cursor should be normal on disabled icon
Descripcion: Issue Type: <b>Bug</b>  ![Screenshot (464)](https://user-images.githubusercontent.com/9638156/115075248-7addb300-9f03-11eb-8c3d-24f176511302.png)  ![Screenshot (474)](https://user-images.githubusercontent.com/9638156/115086183-7241a880-9f14-11eb-9190-0a02a43ce670.png)  1. Hover over disabled icon 2. Cursor uses `pointer` while Stable uses the right one `default`  VS Code version: Code - Insiders 1.56.0-insider (ce791d27dc9889a392f4d29abefe9c53eb0b5129, 2021-04-16T11:25:09.662Z) OS version: Windows_NT x64 10.0.18363   <!-- generated by issue reporter -->
---
Título: Notebook: read-only mode
Descripcion: Notebooks are incredibly powerful. Even more so as a presentational tool. When consuming them or using them as a presentational tool, the user doesn't need to create cells, go into input mode, etc. This hits me often: I get overwhelmed by the amount of hover UI and buttons to click when I'm simply browsing a notebook. I also fear modifying it to the point of no return. This makes me anxious to use a notebook, I think I might not be alone in this camp.  Also, I find that I'm more often consuming a notebook rather than editing it, after the initial creation. Take our GH Issues notebooks as a clear example.  We should have a mode that removes all the noise from a notebook editor so the user can consume it without anxiety. IMO this should even be the default mode in which a notebook editor always opens and there should also be a very clear UI piece that allows the user to toggle _edit_ mode, promoting the editor into today's experience.  cc @misolori @jrieken for thoughts
---
Título: Notebook cell focus feedback should disappear when clicking the empty view content or somewhere else
Descripcion: I finally figured out the details of something that annoys me all the time our notebooks. Notice in the GIF how that border of the focused cell doesn't disappear when clicking elsewhere... I can only make it disappear when pressing <kbd>Escape</kbd>.  ![recording (6)](https://user-images.githubusercontent.com/22350/114997392-a35aa400-9e54-11eb-8b13-e3d7f42ec9fe.gif)
---
Título: Missing underlines on selected panel tab
Descripcion: Insiders ![image](https://user-images.githubusercontent.com/323878/114897247-e91c5b80-9dc5-11eb-98f2-4f9e21f085f2.png)  Stable ![image](https://user-images.githubusercontent.com/323878/114897315-f6d1e100-9dc5-11eb-840b-127a7c17ac9c.png)  The border is still there, just pushed out of view by padding, I think this is from the action bar hover changes
---
Título: Git Sync Icon is not centered
Descripcion: ![image](https://user-images.githubusercontent.com/6738986/114640671-2cfa5c80-9d03-11eb-888f-da8a84188a03.png)   https://user-images.githubusercontent.com/6738986/114640906-9aa68880-9d03-11eb-8e2a-5e48b3c89cf5.mp4  版本: 1.56.0-insider 提交: 394a2e4779ff767e2761a59a51b15848dcd24173 日期: 2021-04-13T11:11:34.416Z Electron: 11.4.2 Chrome: 87.0.4280.141 Node.js: 12.18.3 V8: 8.7.220.31-electron.0 OS: Darwin x64 20.3.0
---
Título: iPad new action style provides no feedback when action touched
Descripcion: Currently we only render the action hover, and when the action gets clicked the hover background nicely changes. I really like this new flow. However this does not work for the iPad because there is no hover when you are using touch.  What iOS seems to do for native actions is upon click show for 500ms inverted colors on the icon. What do you think about using this approach for our actions for the iPad?
---
Título: Inactive editor group tab close button jumps
Descripcion: ![recording (1)](https://user-images.githubusercontent.com/900690/114524364-6ff5fa80-9c45-11eb-89d6-3be750e0938d.gif)
---
Título: No hover feedback in high contrast theme
Descripcion: I feel that actions should get a feedback similar to the hover feedback in trees now that we added the hover feedback in light and dark themes:  ![recording](https://user-images.githubusercontent.com/900690/114500971-5e9ef500-9c29-11eb-8cae-45a846855c80.gif)
---
Título: Custom dialog X moved
Descripcion: It's on the left in Insiders, the right in stable, was that on purpose?   ![image](https://user-images.githubusercontent.com/323878/114424089-a6ac1200-9b6c-11eb-8ed1-3acef27a6dbe.png)
---
Título: Notebook cell focus border issues
Descripcion: I really like that we have the focus border but it still bothers me that the left and right ones are so close to the edge of the editor. Since my sidebar is on the right, the left border pretty much aligns with the edge of the window. The right border is drawn over the scroll bar. It feels like it should not touch the scrollbar. I'm wondering whether 1) we should add some margin around the border, 2) experiment with a broader border.  ![image](https://user-images.githubusercontent.com/4674940/114246343-3a03fe00-9947-11eb-8b8a-bf36f9ea2276.png)
---
Título: Actions in notifications are glitchy
Descripcion: ![image](https://user-images.githubusercontent.com/22350/114195701-8c242f80-9905-11eb-884e-d6962cb49849.png)
---
Título: Close button in empty grid is now left instead of right
Descripcion: ![image](https://user-images.githubusercontent.com/900690/114155655-04005300-9922-11eb-9980-fc769e2c3d97.png)
---
Título: Editor toolbar icons miss paddings
Descripcion: Stable: ![image](https://user-images.githubusercontent.com/900690/114146698-31e09a00-9918-11eb-82db-2283642ffc6f.png)   Insiders: ![image](https://user-images.githubusercontent.com/900690/114146711-360cb780-9918-11eb-908e-bff291d2bedd.png)  I think we can probably reduce the padding a bit, but I find the current insiders one way too narrow.
---
Título: for multroot workspace, creatTerminal with profile using command should choose the root
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> 版本: 1.56.0-insider (system setup) 提交: 5904b7b686e9274631893d560fdbc55a5567f878 日期: 2021-04-08T17:51:28.503Z Electron: 11.4.2 Chrome: 87.0.4280.141 Node.js: 12.18.3 V8: 8.7.220.31-electron.0 OS: Windows_NT x64 10.0.14393   1. there is two command that creating terminal. one is without profile, the new one is  with profile 2. when in multiroot, the frist one give the choice of root,but no choice of profile 3. but the new one have no choice of root but profile 4. i think we should combine the two command as one 5. thus, we can use the same key `ctrl+shift+~` to creat special terminal in special root 6. also ,please reconsider the UX of terminal  ![image](https://user-images.githubusercontent.com/1876302/114122451-dbc52400-9922-11eb-9c51-266eca42ca1c.png)
---
Título: UI - Problem with right padding in close tab button.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> - VS Code Version: Insider 5904b7b686e9274631893d560fdbc55a5567f878 - OS Version: Windows 10 20h2  Steps to Reproduce:  @joaomoreno  Problem with right padding in close tab button.  Insider ![image](https://user-images.githubusercontent.com/17777237/114094742-f4025800-98bc-11eb-9a5a-f5e972ea040e.png) Stable ![image](https://user-images.githubusercontent.com/17777237/114094772-fd8bc000-98bc-11eb-92a8-ed6efc0f42f4.png)   <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->
---
Título: Improve UX of completed and hidden items and the recent workspaces list
Descripcion: ## Overview This is to track improving the way that Getting Started items are displayed when there are no items left.  ## Concept One idea is to shift the content to make better use of the space. This would move the "Recents" list to the right and place "Getting Started" below it. We'd also have some way to trigger resetting items if someone accidentally dismisses one.  ![CleanShot 2021-04-08 at 11 53 01](https://user-images.githubusercontent.com/35271042/114081399-5d547d80-9861-11eb-85c6-5c8f0eb72dc2.gif)   And in the case we want to have a setting to completely hide "Getting Started", it would like this:  ![image](https://user-images.githubusercontent.com/35271042/114081381-57f73300-9861-11eb-85b6-aa085ecca566.png)
---
Título: Light bulb in problems view makes entry jump
Descripcion: I had the `streetsidesoftware.code-spell-checker` extension installed (in a Codespace):  ![recording](https://user-images.githubusercontent.com/900690/114046982-9a346a80-9889-11eb-9313-4189933b4220.gif)
---
Título: [Regression insiders] UI for button is misplaced in quickpick
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> Version: 1.56.0-insider (user setup) Commit: bb90ba3d5a5f8d114045b045f3bbe1ebc404f54a Date: 2021-04-07T12:30:14.880Z Electron: 11.4.1 Chrome: 87.0.4280.141 Node.js: 12.18.3 V8: 8.7.220.31-electron.0 OS: Windows_NT x64 10.0.19042  Steps to Reproduce:  Set up a quickpick with a button.  ![image](https://user-images.githubusercontent.com/13199757/113982389-8c390800-97fd-11eb-8ac2-0ccbfe35e714.png)  While in stable VSCode, button appears normally, ![image](https://user-images.githubusercontent.com/13199757/113982565-c4404b00-97fd-11eb-94d9-8104080f926b.png)
---
Título: Update toolbar actions with hover feedback
Descripcion: Now that https://github.com/microsoft/vscode/issues/120226 has added hover feedback, we should look at improving the other areas that use this to make them feel consistent. Here's an idea to update the notebook toolbar and status bar items to also have matching corners:  ![CleanShot 2021-04-07 at 07 47 33](https://user-images.githubusercontent.com/35271042/113919147-19e20c80-9798-11eb-9766-fee09bb211c5.gif)  We'd need to account for when items in the status bar that have a bg color (like the remote indicator or error bg)   cc @bpasero for status bar, @rebornix for notebooks
---
Título: Call Stack's inline debug command buttons are no longer vertically centred
Descripcion: Issue Type: <b>Bug</b>  1. Start debugging something. 2. Hover over a row in the Call Stack panel.  ![image](https://user-images.githubusercontent.com/6726799/113905754-6561de00-97cb-11eb-91c8-823fd0e581c5.png)  I suspect #120247 from @joaomoreno   VS Code version: Code - Insiders 1.56.0-insider (bb90ba3d5a5f8d114045b045f3bbe1ebc404f54a, 2021-04-07T12:30:14.880Z) OS version: Windows_NT x64 10.0.19042   <!-- generated by issue reporter -->
---
Título: Search: actions shift
Descripcion: ![recording](https://user-images.githubusercontent.com/900690/113827606-c960b400-9783-11eb-81c6-3c40475b3979.gif)
---
Título: Vertical separator too wide
Descripcion: * open `my-work.github-issues` * run a cell * 🧀 there is a vertical separator which is showing too wide  <img width="203" alt="Screenshot 2021-04-07 at 08 52 39" src="https://user-images.githubusercontent.com/1794099/113823174-9f58c300-977e-11eb-93a2-2648dd8925a3.png">
---
Título: Treat Notifications Window as Normal "Pane"
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> The other day, I had the darndest time trying to find a notification I missed. As a person who is more "word based" than "picture based," I just glossed over the notification icon at the bottom right as something that would have "history" and spent a while looking in the View menu for a "Notifications Window." Finally asked someone on the internet and they pointed out the obvious.  However, my proposal here is, why is the Notifications Window "special"? Why can't I use it like any other window? In particular, I am thinking about scenarios where I get an error as a notification and need to do a lot of navigation through code, the IDE, etc, to rectify it. Would be nice if I could just add it as a tab like "Problems." I also don't know why it isn't just another "View" in terms of navigation of the IDE.  For all I know, you can do this and I am just bad at finding features (as evidenced by the first graph). However, I don't think so and when I asked around, i didn't get any answers.
---
Título: Update enable/disable setting descriptions
Descripcion: Brought up [through user feedback](https://twitter.com/_tomalak/status/1378989217905266688) that our settings that mention "enabled/disable" in the description are confusing:  <img width="600" src="https://user-images.githubusercontent.com/35271042/113591373-a948bd80-95e8-11eb-9f37-9a36b5753ec7.png">  I realize that this is inconsistent with how we describe other settings and tend to use "Enable" only, to make that clear:  <img width="450" src="https://user-images.githubusercontent.com/35271042/113591705-19574380-95e9-11eb-92a4-ecb92567b141.png">
---
Título: Can not select text in markdown cell
Descripcion: Issue Type: <b>Bug</b>  Can't select text from a markdown preview, it always tries to drag the cell.  VS Code version: Code 1.55.0 (428daa3650c9b38c92d194172cba735b95a7c77f, 2021-03-26T22:22:39.145Z) OS version: Darwin x64 20.3.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i9-9980HK CPU @ 2.40GHz (16 x 2400)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|4, 4, 4| |Memory (System)|32.00GB (0.47GB free)| |Process Argv|--enable-proposed-api donjayamanne.kusto --crash-reporter-id 299c833a-1961-40e9-a094-f10b65ea4e64| |Screen Reader|no| |VM|0%| </details><details> <summary>A/B Experiments</summary>  ``` vsliv368cf:30146710 vsreu685:30147344 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vstry244:30276681 pythonvsdeb440:30248342 pythonvsded773:30248341 pythonvspyt875:30259475 pythonvsnew554:30281908 pythontb:30283811 openwsldoc:30282072 vspre833:30267464 pythonptprofiler:30281270 vshan820:30276952 pythondataviewer:30283453  ```  </details>  <!-- generated by issue reporter -->
---
Título: Better action hover feedback
Descripcion: This PR fixes #120226  Unsurprisingly, thanks to the magic power of CSS, this was wayyyy more work than expected, since people override CSS all the time, especially for something as popular as the action bar. Calling our owners of areas where I touched a lot of CSS (workbench actions, search, extensions) to do a good smoke test around the actions. Thanks! 🙏  This PR also makes sure the hover feedback stays visible even while the dropdown menu of the `...` toolbar action is open.
---
Título: Improve toolbar UX
Descripcion: Here's a couple of variations from @misolori:  ## Toolbar hovers  ![CleanShot 2021-03-30 at 11 42 32](https://user-images.githubusercontent.com/22350/113105017-ffb39780-91b5-11eb-8406-723fd33321cc.gif)   ## Run split button  ![CleanShot 2021-03-31 at 12 56 49](https://user-images.githubusercontent.com/35271042/113203389-d845e480-9220-11eb-9c10-4c914fada2ef.gif)  <img width="600" src="https://user-images.githubusercontent.com/35271042/113203841-5f935800-9221-11eb-9371-0b95b156474d.gif">   ![image](https://user-images.githubusercontent.com/22350/113105080-0e01b380-91b6-11eb-9448-f2f4f172fc88.png)
---
Título: Explore using hints with getting started
Descripcion: We explored these in the early days of the onboarding flow and wanted to bring this back to explore to see if using it with Getting Started will help make the path clearer for the user or when an action is not needed.  ![image](https://user-images.githubusercontent.com/35271042/112934419-94df5f00-90d6-11eb-97fb-06baa14d0973.png)
---
Título: Clearer UI indicators for native notebooks cell edit mode
Descripcion: @joyceerhl commented on [Thu Mar 25 2021](https://github.com/microsoft/vscode-jupyter/issues/5306)  <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Was just in a QP where a customer who is accustomed to Jupyter notebooks keyboard shortcuts was trying to use the `b` keyboard shortcut to insert a cell below the current cell and didn't realize that he had the cell in edit mode. Once he pressed the esc key to select the cell, the `b` shortcut worked, but I needed to point it out for him to notice the difference.
---
Título: Collapsed cell input doesn't look great
Descripcion: Testing #119715  Not sure how to improve it, maybe centering the line would be a minor improvement? It just doesn't look like it fits to me  ![image](https://user-images.githubusercontent.com/2193314/112290261-49e3c880-8c4c-11eb-88e4-28a310975f8e.png)
---
Título: Consider making cut grey out the cell, instead of removing it immediately
Descripcion: Testing #119715  Right now cutting a cell will completely remove it immediately, imo we should align more with how VS Code's explorer works which does the same thing as Windows Explorer:  ![recording](https://user-images.githubusercontent.com/2193314/112288454-96c69f80-8c4a-11eb-8c76-d6c55f10d42f.gif)  It's arguable what the right behavior here is since cutting text will remove it immediately, but this was unexpected since cells are kind of like sub-files and I wasn't expecting to need to "reorient" myself after cutting with the big change in screen content.
---
Título: [Getting Started] Reaching the end of a walkthrough is lackluster
Descripcion: Follow up from #119496.  Finishing a getting started walkthrough (or all of them) does neither celebrate the occasion nor engage the user to continue their journey. It's a missed opportunity to raise the energy and tie in the next walkthrough.  Ideas: - Engaging copy - Pitch next walkthrough - Bring back to Welcome page
---
Título: Need a margin on the right edge so cells don't overlap the scroll bar
Descripcion: Testing #119118  ![image](https://user-images.githubusercontent.com/641685/112225487-437d2e80-8c03-11eb-8bc4-8332fac04aa3.png)
---
Título: Selection border has high priority than focus border
Descripcion: Issue Type: <b>Bug</b>  * Open `endgame.github-issues` * Set customized colors  ```             "notebook.cellBorderColor": "#899ba636",             "notebook.cellInsertionIndicator": "#83afe5",             "notebook.cellStatusBarItemHoverBackground": "#ffffff26",             "notebookStatusErrorIcon.foreground": "#df8c8c",             "notebookStatusRunningIcon.foreground": "#cccccc",             "notebookStatusSuccessIcon.foreground": "#a8ce93",             "notebook.focusedCellBorder": "#83afe5",             "notebook.focusedEditorBorder": "#83afe5",             "notebook.inactiveFocusedCellBorder": "#83afe599",             "notebook.selectedCellBorder": "#a8ce93",             "notebook.selectedCellBackground": "#6a7d89" ```  * Click on the cell container, it shows the focus border    <img width="771" alt="image" src="https://user-images.githubusercontent.com/876920/112213211-13219a00-8bdb-11eb-8b72-da4a5dcf8d09.png">  * Click on the cell editor, it shows the selection border  <img width="766" alt="image" src="https://user-images.githubusercontent.com/876920/112213240-1a48a800-8bdb-11eb-911d-952b506c83af.png">    VS Code version: Code - Insiders 1.55.0-insider (a6f6b4aa8e3a688d9a5cbcd5df14af511ce2bd8e, 2021-03-23T05:13:33.822Z) OS version: Darwin x64 20.3.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i9-9980HK CPU @ 2.40GHz (16 x 2400)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|3, 3, 3| |Memory (System)|32.00GB (0.16GB free)| |Process Argv|--enable-proposed-api ms-vscode.vscode-notebook-history --enable-proposed-api vscode.notebook-editing --enable-proposed-api vscode.vscode-test-resolver --crash-reporter-id 1a907bbd-fa02-4595-81e0-63e1648afb31| |Screen Reader|no| |VM|0%| </details><details> <summary>A/B Experiments</summary>  ``` vsliv695:30137379 vsins829:30139715 vsliv368cf:30146710 vsreu685:30147344 python383:30185418 pythonvspyt602:30263608 vspor879:30202332 vspor708:30202333 vspor363:30204092 vstry244:30244315 pythonvsdeb440:30224570 pythonvsded773:30223139 pythonvspyt875:30259475 pythonvsnew554:30265444 pythontb:30258533 pythonvspyt943:30277000 wslfolderdoccf:30278406 vsc_aa:30263845 vspre833:30267464 vshan820:30276952  ```  </details>  <!-- generated by issue reporter -->
---
Título: CodeRibbon Feature Request
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> It would be great to have a code ribbon that works like https://github.com/utk-se/CodeRibbon
---
Título: Displeasing gap between selected cells
Descripcion: Testing #119118  When selecting multiple cells, there is an esthetically displeasing "gap" between adjacent selected cells:  This makes it difficult to immediately say if the selection is contiguous or there is an item not selected:  ![image](https://user-images.githubusercontent.com/5047891/112152843-01dc8b80-8be3-11eb-878c-aa9e8ec6036b.png)
---
Título: Debug: current stopped line should indicate better?
Descripcion: Especially when you enable to show values like here:  ![image](https://user-images.githubusercontent.com/900690/112028630-aa81e100-8b38-11eb-8f5c-5541b7b1a42a.png)  You end up with so many yellow lines that the current line that is stopped becomes harder to track.  Slightly related to: https://github.com/microsoft/vscode/issues/119485
---
Título: Native Notebooks - Editor + Output font size do not match (Add setting to change output font size)
Descripcion: # Steps to Repro:  1. Open settings (UI)  2. Set editor font size to 8 3. Open notebook, run simple print statement  # Actual Behavior:  Output does not honor set editor font size ![image](https://user-images.githubusercontent.com/19276747/111547881-129a8680-8737-11eb-98be-3687ee78f845.png)
---
Título: separator in 'files to exclude' is not obvious, should be communicated to the user
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> - VS Code Version: 1.54.2 - OS Version: windows 10  Steps to Reproduce:  1. Type ```*.md,*.cs``` into Files To Exclude  <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?:   <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported direct to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->  Was #39549 reverted? It doesn't seem to work anymore.  P.S. there should really be a tooltip or something explaining the required syntax for this field. I shouldn't have to search github issues to understand how to use this feature.
---
Título: Make the Extension Pack list of extensions view resizeable or smaller
Descripcion: When you open an extension pack with a smaller window it's impossible to read the extension pack text because the list of extensions is so large and not resizeable. I believe the window size I'm looking at is the default window size on fresh install of vscode so that would mean for new users looking at extension packs they won't be able to see the readme.  ![recording (16)](https://user-images.githubusercontent.com/12758612/111264751-554c4980-85e5-11eb-8ead-709ab3e4b1eb.gif)
---
Título: Support showing the activity bar in alternate layouts
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -→  [I searched and didn’t find a relevant issue]  <!-- Describe the feature you'd like. -->  By default the activity bar is displayed on the left side of the editor. However, a more compact layout (especially if you have a shortcut to toggle the sidebar) would be above or below the sidebar content:  <img width="1136" alt="Screenshot_2021-03-10 23 59 43" src="https://user-images.githubusercontent.com/25517624/110738292-02494f80-81fd-11eb-9908-24cf032cfd4d.png">   Placing it on the top would resemble how Xcode lays out its sidebar: <img width="200" alt="Screenshot_2021-03-11 00 03 32" src="https://user-images.githubusercontent.com/25517624/110738409-3de41980-81fd-11eb-9188-9681a6a314e1.png">
---
Título: Default sidebar width should not trigger narrow mode for extensionsViewlet
Descripcion: The default sidebar width is dynamically calculated but ends up being 251px for most window sizes I tested. The `narrow` mode for the `extensionsViewlet` is triggered for ⪬ 300px.  <img width=200 src="https://user-images.githubusercontent.com/8599/110428517-3afef280-805e-11eb-8175-dcbe1d1db283.png">  <img width=200 src="https://user-images.githubusercontent.com/8599/110428620-6aadfa80-805e-11eb-9c23-fa4e2651750d.png">  While `narrow` is great for small spaces, it hides key information like the icon, rating and download numbers. For users who don't discover the resizing, important context is lost for extensions. I noticed this during my work on getting started, as it guides users early into the extension panel, which looks no very inviting without expanded.  Ideas for solutions  - Trigger narrow for ⪬ 250px - Add a size before narrow that allows more context like a smaller extension icon and simpler rating, or other redesign ideas.  Tooltips on descriptions to read cut off text.  <img width=200 src="https://user-images.githubusercontent.com/8599/110429461-da70b500-805f-11eb-99e6-f9bcf49c90ef.png">  cc @sana-ajani @misolori @fiveisprime
---
Título: Ability to include additional extensions in an extension that can be installed together
Descripcion: ## Use Case  As an extension author, I would like to compose an extension that  - contribute a set of features to VS Code - include extensions contributing additional features to VS Code - Installing my extension also installs the included extensions - User can selectively uninstall/install the included extensions  - Represent/Highlight extension's features first  Following extensions will benefit from this  - [ms-vscode-remote.remote-ssh](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh) - [Equinusocio.vsc-material-theme](https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme) - [ms-vscode-remote.remote-ssh-nightly](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh-nightly)  ## Extension Pack  Extension can achieve this currently by declaring the extensions to include using `extensionPack` property. But this highlights the included extensions as primary feature contributions than promoting the features contributed by the extension which is unwanted.  ## Proposal 1 - Use `extensionPack` property & `Extension Packs` category  Use `extensionPack` property and signal VS Code to render the extension as Extension Pack or not by using `Extension Pack` category. If categorized as `Extension Pack` then the packed extensions are shown prominently otherwise extension is shown as normal extension and packed extensions are shown in separate tab like `Dependencies`.  ## Proposal 2 - Extend `extensionPack` property to define rendering semantics  Introduce a new property `showAsExtensionPack ` in `extensionPack` schema, that extensions can use to control rendering of the included extensions in the extension editor.  If set to `true` then the included extensions are shown prominently otherwise extension is shown as normal extension and packed extensions are shown in separate tab like `Dependencies`. Eg:  ``` "extensionPack": {        "showAsExtensionPack": true,        extensions: [              "pub.a",              "pub.b",        ] } ```
---
Título: Explore replacing the terminal dropdown with tabs
Descripcion: This is the first step in https://github.com/microsoft/vscode/issues/10546.
---
Título: Use custom hover for activity bar tooltip
Descripcion: ![Kapture 2021-03-03 at 13 31 26](https://user-images.githubusercontent.com/35271042/109875078-d1798100-7c24-11eb-905a-205803583a06.gif)  I think one of the areas that could benefit from quicker tooltips/custom hovers is the activity bar as it is a frequently used area and the native tooltip takes too long to load. We've seen this in user studies where new users are not sure what these items are and don't click on them.  cc @bpasero @alexr00
---
Título: Add "Get Started" content to extension detail
Descripcion: https://user-images.githubusercontent.com/35271042/109847662-51432380-7c04-11eb-9c00-9c77a2ee9d41.mov  Refs https://github.com/microsoft/vscode/issues/116414  This is based on the work of https://github.com/microsoft/vscode/issues/106715 and how we've added support for extensions to contribute to this (https://github.com/microsoft/vscode/issues/116414). One idea to bring this content more in context of where the user is at is when an extension is installed. Currently we show the readme in the "Details" tab, but I think showing the get started content for the extension on this page is more appropriate and can prevent extensions from creating their own "welcome pages".
---
Título: Button focus state inconsistent
Descripcion: In notifications we show an outline offset when the button is focused:  ![image](https://user-images.githubusercontent.com/35271042/109537974-68eba200-7a74-11eb-91aa-ad246d5e0cf9.png)  But in other places the offset isn't applied correctly and blends in with the hover state:  ![image](https://user-images.githubusercontent.com/35271042/109538023-730da080-7a74-11eb-8f33-ff2885b7d6bc.png)  We should add the offset to all of our buttons to make the focus state clearer and pass a11y.  fyi @joaomoreno @isidorn @bpasero
---
Título: [Feature Request] Feedback for contribution point "editor/title/run"
Descripcion: _// This is a follow-up issue for https://github.com/microsoft/vscode/issues/114123_, cc @jrieken  Thanks to the team to provide a centralized contribution point for the `run` button. Here are some feedback for consideration.  - Show the keyboard shortcut in the dropdown menu? - Considering another entry for `debug` (editor/title/debug)? In that case the user can just have one click if each contribution(run and debug) just has one entry. - Just like what we have in the debug view, the title area can have a dropdown menu explicitly and VS Code can memorize the last choice. (But given the very limited area there, this might not be a good idea though)   <img width="166" alt="Screen Shot 2021-02-26 at 8 41 08 AM" src="https://user-images.githubusercontent.com/6193897/109238388-6a1b9580-780e-11eb-8792-8b4c9408b87f.png">
---
Título: Option to fit dataframe/table output to column widths
Descripcion: @jaymegordo commented on [Mon Feb 22 2021](https://github.com/microsoft/vscode-jupyter/issues/4908)  It would be nice if the new jupyter native notebooks either compressed the dataframe column display width by default, or had an option to do so.  When tables have few/narrow columns the display would look better similar to the `rendered html` image below:  jupyter native notebook: <img width="1434" alt="df_wide" src="https://user-images.githubusercontent.com/29611875/108785677-c2107e80-7526-11eb-9812-488e7105826a.png">  rendered html: <img width="730" alt="df_fitted" src="https://user-images.githubusercontent.com/29611875/108785681-c341ab80-7526-11eb-9ac6-682de83a789f.png">   I've tried with the `pandas.display` settings like `max_colwidth` but those don't seem to have an effect on the display output.  ---  @DavidKutu commented on [Mon Feb 22 2021](https://github.com/microsoft/vscode-jupyter/issues/4908#issuecomment-783779287)  Thanks for the suggestion @jaymegordo. I'll bring it up in our next meeting.  ---  @DonJayamanne commented on [Tue Feb 23 2021](https://github.com/microsoft/vscode-jupyter/issues/4908#issuecomment-784524228)  @DavidKutu please move this upto VS Code as they own the rendering of tables (via HTML)
---
Título: No visual indication that cells have been multiselected on high contrast theme
Descripcion: Verifying https://github.com/microsoft/vscode/issues/117449  1. Open a .github-issues notebook 2. Change theme to high contrast 3. Shift + click to multiselect some cells  The original active cell still shows the orange border, but the other select cells don't have any background change
---
Título: Notebook diff: Pointer on right column of new cell
Descripcion: Checked area has pointer cursor despite no action on click  ![image](https://user-images.githubusercontent.com/8586769/109209848-e0fa5500-7760-11eb-877e-1ef15fc4a82a.png)
---
Título: Output rendering size changes aren't smooth
Descripcion: follow up from https://github.com/microsoft/vscode/issues/116786  * open GH issue notebook, run a query * open an item from the query and modify it so that it doesn't match the query anymore (like verify a bug) * re-run the query * 🧀 there is a moment at which the new, shorter output is rendered but list isn't relayouted, leaving an awkward bottom padding  https://user-images.githubusercontent.com/1794099/109145528-e0fb5480-7762-11eb-9645-15548b3ce72f.mov
---
Título: Editor toolbar should flow primary actions into the "..." when space is little
Descripcion: Testing #117259  Once the amount of contributed commands gets really long, in narrow views you lose the tab:  ![image](https://user-images.githubusercontent.com/35271042/109081928-e8195880-76b7-11eb-8708-d6b929f45142.png)  Should we move things into the overflow, one-by-one, once you hit a certain threshold? Like:  ![image](https://user-images.githubusercontent.com/35271042/109082044-126b1600-76b8-11eb-859f-bfe0e9698d84.png)
---
Título: something that says Shift and Click to select more cells
Descripcion: Testing #117295  When I hold down shift in a notebook, it would be nice to see `Shift + Click to select more cells`.  Similar to how there's text that says Ctrl + Alt + Enter to run, but this would only appear if I have the shift key pressed
---
Título: toggleExplainMode stopped working
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- 🕮 Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions --> <!-- 🔎 Search existing issues to avoid creating duplicates. --> <!-- 🧪 Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ --> <!-- 💡 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. --> - VS Code Version: 1.53.2 - OS Version: MacOS Catalina 10.15.7  Steps to Reproduce:  1. I add a variable. Add a dot (.) and then the suggestions come up. 2. When I do a `cmd + /`, it doesn't show the explain block anymore  It was actually working fine until a few hours ago. But then it suddenly stopped working. I've tried completely uninstalling and installing vscode. I've tried this on a windows PC as well. Same issue. I'm unable to toggle to explain mode anymore  <!-- 🔧 Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <!-- 🪓 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. --> <!-- 📣 Issues caused by an extension need to be reported direct to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->
---
Título: Polish focus colors in out-of-the-box themes
Descripcion: Refs https://github.com/microsoft/vscode/issues/113246  We need to polish the notebook focus colors for our default themes:  - [x] Abyss - [x] Kimbie Dark - [x] Monokai - [x] Monokai Dimmed - [x] Quiet Light - [x] Red - [x] Solarized - [x] Tomorrow Night Blue
---
Título: Explore user profiles
Descripcion: ## Overview This issue aims to explore what adding "profiles" could look like in the product. These profiles can be used in education, presentations, or can even be language specific. The explorations should cover being able to setup and switch between profiles. Ideally these profiles should be synced with [Settings Sync](https://code.visualstudio.com/docs/editor/settings-sync) (if used) so you can use those profiles anywhere.  One idea for settings is to introduce a new settings object like:  ```jsonc {     "profiles": {         "demos": {             "files.autoSave": "onFocusChange",             "editor.fontSize": 18,             "editor.tabSize": 2,             "editor.fontWeight": "600",             "screencastMode.enabled": true,         }     },          "editor.fontFamily": "Cascadia Code",     "editor.renderWhitespace": "all", } ```  The "Demos" profile inherits the current settings a user has and adds additional settings on top of the current ones. Also, when profiles are enabled we will create a "Default" profile where the user can switch back to their default mode.  ## Related issues - Screencast Mode only settings #105226 - Sync mutliple settings profiles #92393 - Multiple environment profiles (either per-session or per-window) #57548 - User profile #53453 - Enable/disable extensions from config file #40239 - Local Workspace settings #40233 - Support "perspectives" like approach in VSCode #95182
---
Título: Tabs: hovering over file symbol or git state of a tab doesn't show git status in the title
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.53.0 - OS Version: Windows 10 20H2  Steps to Reproduce:  1. edit a file in a git repo 2. save it 3. hover over its tab title (notice git status e.g. "modified") 4. hover over the file icon or the "M" batch and see the error  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Proposal for updating commenting area for diffs
Descripcion: I was exploring ways to improve the PR experience in VS Code and one of the ideas involved updating the glyph area for comments. Currently we show a gray bar and a unicode `+` and `♦` that don't look very pretty.   ## Current ![image](https://user-images.githubusercontent.com/35271042/106973183-3b2a6c00-6707-11eb-92e3-a201790c4e41.png)  ## Proposal  A couple of things I explored:  - Moving glyph area to the left of line numbers. This helps create separation between between the scm indicators and a clear area for adding comments. - Adding button for adding and view comments. This follows a similar pattern on GitHub for reviewing changes. - Hiding diff chunk areas. This reduces the visual noise and I think most people will be commenting on changed lines in the PR as opposed to lines that are not related - Adding color to the `+` and `-` changes to look visually pleasing  ![Kapture 2021-02-04 at 16 36 03](https://user-images.githubusercontent.com/35271042/106973201-42ea1080-6707-11eb-8728-ea12fce064bb.gif)  Unsure who should I assign to so assigning to @rebornix and @alexdima for now
---
Título: Help text decorator on untitled file
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> From https://github.com/microsoft/vscode/issues/114307#issuecomment-761973812, there is an idea for having a codelens/decorator as help text in an untitled file, similar to repl.it. From UX discussion, having a codelens above the first line that goes away when the user starts typing would shift the editor up.   ![image](https://user-images.githubusercontent.com/35271042/104872738-85d47780-5903-11eb-8782-d4c481addc5e.png)  Perhaps we could use a decorator instead. For the help text to be useful, it would have to guide the user to do an action. An example could be:  - Choose the language you want to code in -> user clicking on language would open up the Language Mode quick pick.   Once the user does that, the help text could change to linking to snippets of code for that language, like the repl.it experience. To flesh this idea out some more, could we add hyperlinks in decorators? Could we add logic to have the decorator go away as the user starts typing?
---
Título: Revisit "Find File References" contribution in editor tab and explorer menus
Descripcion: I noticed that a new "Find File References" entry made it into these menus:  ![image](https://user-images.githubusercontent.com/900690/106753214-adc61980-662b-11eb-97a5-fccd19d46cb8.png)  ![image](https://user-images.githubusercontent.com/900690/106753237-b3236400-662b-11eb-84e4-2164f21fdefc.png)  I think we should at least have a UX discussion around making these menus larger than they are already today. We are generally very careful about adding more entries.  //cc @misolori @egamma
---
Título: Introduce a terminal toggle in the status bar
Descripcion: Refs https://github.com/microsoft/vscode/issues/115641  This idea is to introduce a terminal toggle in the status bar to increase visibility and discoverability. Once the user starts a terminal session, the terminal item should update the count to reflect this.  https://user-images.githubusercontent.com/35271042/106699690-32ffee80-6598-11eb-8007-2703d90f8bee.mov  I'll bring this up in our ux sync to discuss with the team
---
Título: Design exploration for improving experience for new users
Descripcion: ## Overview  This design exploration aims to improve the overall experience for new users while also providing value for existing users. Going through feedback from new and existing users we've heard that:  - Activity bar icons can sometimes be hard to understand if not familiar with them - Some features (like the command palette and terminal) are hard to discover - Desire to control overall density  We also wanted to take the opportunity to explore updating the overall aesthetics like:  - Create uniform sizing/padding (using multiples of 4) - Update default color system - Alternate placement of account/settings  ## Demo  Below is an example of this exploration. Here's a few ideas that we tried:  - Adding labels to the activity bar - Moving account/settings to the top right - Introducing an omni search to include commands, files, tasks, etc. (also combining text search into this) - Introducing a "density" toggle (similar to email clients) - Introducing a Terminal toggle in the status bar - Introducing GUI features for Git - Condensed color system into ~10 colors   ![design mockup](https://user-images.githubusercontent.com/35271042/106676782-5c0a8a00-656c-11eb-96d8-439204827c21.png)   https://user-images.githubusercontent.com/35271042/106675880-c02c4e80-656a-11eb-8f5f-ead5e96300ba.mp4   ## Feedback  Here's the feedback I've received on this concept from our team. I'll break down the concepts into individual issue for those we are interested in pursuing more. Note: since this concept touches several ideas at once, it would be good to break down some changes (like density changes and showing more/less UI should be separate).  ### Pros - Friendlier activity bar labels for new users - Omni search helps discoverability of command palette/search - Moving settings/accounts in title bar helps separate views from menus - Consistent spacing makes for a uniform UI - Easy toggle for changing density  ### Cons - Omni search   - Can be hard to distinguish   - Could be too advanced for new users   - Takes up title bar space (will need to look into OS guidelines)   - Need to evaluate relationship between Quick Open + Command Palette   - Can take up dragging real estate for title bar - Could be costly to maintain two designs w/ density mode - Some prefer settings/accounts in activity bar  Happy to hear any additional feedback others have on this concept.
---
Título: Settings editor should not open as preview editor
Descripcion: I thought I had fixed this but now I see that `preferencesService.ts` has many calls to `openEditor` and I guess I forgot some: when you just open settings (via `Cmd+,`) I think the editor should really not open as preview editor because this kind of editor to me does not feel like an editor that should easily go away when I open another editor.  Any objections to adding `pinned: true` to all calls when opening editors?  Similar to here:  https://github.com/microsoft/vscode/blob/c1274981145f439fc205d83dc487d33b03c1896c/src/vs/workbench/services/preferences/browser/preferencesService.ts#L374-L378  //cc @sandy081
---
Título: Parameter hints persists when changing view to Settings
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.53.0-insiders - OS Version: Win 10 1909  Steps to Reproduce:  1. Create a new Notebook using the command palette command: `Jupyter: Create New Blank Notebook` 2. Create some dummy code where some sort of info dialog pops up 3. While dialog is open click on Settings gear and see that dialog is still open  ![recording (7)](https://user-images.githubusercontent.com/12758612/106049491-011ff100-609b-11eb-8f09-5d15c6fd5d90.gif)  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: N/A
---
Título: Change workbench.editor.enablePreview default to false
Descripcion: Creating issue for discussion based on #115088  For background, see https://stackoverflow.com/questions/38713405/open-files-always-in-a-new-tab  **Current:** workbench.editor.enablePreview default `true`. Newly opened files open over the current file being edited  **Expected/sane:** workbench.editor.enablePreview default `false`.   There are numerous requests in this stackoverflow post to change the default behaviour to more sane default of new file opens being done in a new tab instead of over the existing tab.   This would follow the principle of least astonishment and be more similar to how browsers open (_blank) links in new tab.   I have to change this setting every time on a new instance. I have not heard a case where someone prefers the current default behaviour to the more expected conventional one.  I can reopen #115088 if it is decided this is the way to go.   Thanks,
---
Título: Difficult to see where Explorer Outline lands
Descripcion: Testing #114902  * open `.vscode/notebooks/my-work.github-issues` and click on the markdown outline entries * it is difficult to see where the actual outline is because there is nothing rendered to indicate where I landed  ![TO_UPLOAD](https://user-images.githubusercontent.com/5047891/105966189-9b286f00-6084-11eb-95da-cbb3afa1ca62.gif)  As a comparison, in the editor there is some "current line" affordance to help with that (even if it is somewhat weak and does not flash): ![TO_UPLOAD](https://user-images.githubusercontent.com/5047891/105966356-d460df00-6084-11eb-8792-fa875c9188cc.gif)
---
Título: Have automatic overflow behaviour of tool bars
Descripcion: * install latest jupyter extensions * use tabs * look at the editor title and see that most space is consumed by commands * we should automatically move some commands into the `...` menu  <img width="827" alt="image" src="https://user-images.githubusercontent.com/1794099/105963633-84cce400-6081-11eb-8c11-6a5671537c2e.png">
---
Título: Notebooks error that are too long removes language selector button
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.53.0-insider - OS Version: Win 10 1909  Steps to Reproduce: 1. Open up a Jupyter Notebook like the one in this repo: [OCTImagePredictionNotebook](https://github.com/tanhakabir/OCTImagePrediction/blob/master/Notebook.ipynb) 2. The default kernel was C# (not sure why) but keep at as C# or change it to C#. 3. Click run on the first cell and the error will be extremely long which then prevents me from switching the language in the cell  ![image](https://user-images.githubusercontent.com/12758612/105905490-57c3f700-5fd7-11eb-8dcc-ca4978cffa3c.png)
---
Título: Consider greying out stale output when replaying a notebook cell
Descripcion: Testing #114969  When you press play on a cell that has output there's a lot going on, especially when the cell executes quickly because the cell below gets pushed up and then back down again.  ![recording (45)](https://user-images.githubusercontent.com/2193314/105892944-57236480-5fc7-11eb-9fa4-efc509a43e95.gif)  Instead of this, could we grey out or clear the output without actually removing the webview to prevent the flicker. So this:  ![image](https://user-images.githubusercontent.com/2193314/105893173-a10c4a80-5fc7-11eb-87c7-6e96a820d945.png)  Becomes:  ![image](https://user-images.githubusercontent.com/2193314/105893301-c731ea80-5fc7-11eb-91d6-b96eb3955714.png)
---
Título: Tab wrap - tab right border color changed after pin
Descripcion: Testing #114827  After having tabs wrapped, the tab right border color is correct   ![image](https://user-images.githubusercontent.com/876920/105892316-88e7fb80-5fc6-11eb-8037-700d53da91a0.png)  Sometimes when I pin an tab, the right border color changed, unpinning the tab will restore the color  ![image](https://user-images.githubusercontent.com/876920/105892291-7f5e9380-5fc6-11eb-8e49-d06add246089.png)
---
Título: Notebook cell status bar lacks left padding
Descripcion: Testing #114969  ![image](https://user-images.githubusercontent.com/2193314/105879934-9cd83100-5fb7-11eb-8742-3ddead95d026.png)
---
Título: Indent guides don't look great in notebook cells
Descripcion: Testing #114969  The "status bar" of the notebook cell has the same color as the editor so the indent guides just end all of a sudden:  ![image](https://user-images.githubusercontent.com/2193314/105874824-eaea3600-5fb1-11eb-8010-9b75cb8c8436.png)  Compare to editor:  ![image](https://user-images.githubusercontent.com/2193314/105874884-f9d0e880-5fb1-11eb-9ef9-e01379e166e9.png)
---
Título: Notebooks +Code/+Markdown is distracting
Descripcion: Testing #114969  It keeps showing and displaying when you move the cursor vertically  ![recording (34)](https://user-images.githubusercontent.com/2193314/105874508-7911ec80-5fb1-11eb-95d4-692a81484191.gif)  ![recording (35)](https://user-images.githubusercontent.com/2193314/105874626-a52d6d80-5fb1-11eb-904e-016755e02e24.gif)  Can we improve this somehow? Some thoughts:  - Only show after a timeout has happened (reset on cursor move?) - Show all the time at lower opacity, only setting to `opacity: 1` when the cursor is over it?
---
Título: Confusing diff information
Descripcion: Testing #114969  * create fresh notebook plotly.txt-contents, the file is untracked * open diff editor * for one cell/output-pair it says "Outputs changed",  * for all other it doesn't, outputs are collapsed * I would expect all outputs to rendered equally because they are all untracked  <img width="1338" alt="Screenshot 2021-01-26 at 14 31 09" src="https://user-images.githubusercontent.com/1794099/105851476-6dd7b480-5fe3-11eb-84ab-35cee5107a77.png">
---
Título: Align "Accept..." and "Replace..." buttons in settings sync
Descripcion: ![image (1)](https://user-images.githubusercontent.com/10746682/105816620-d0658c00-5fb4-11eb-8354-7df807d732f6.png)  ![image (2)](https://user-images.githubusercontent.com/10746682/105816637-d52a4000-5fb4-11eb-945e-7d41cbe7ad24.png)  ![image](https://user-images.githubusercontent.com/10746682/105816791-01de5780-5fb5-11eb-9ce8-dd4bc18ec79f.png)  In first two scenarios which are dialogs, it makes sense to say `Replace..` which is easy to understand and in the last scenario it makes sense to say `Accept...` as they are in context of remote and local diff editor content OR    CC: @bpasero
---
Título: Link preview tooltip requires two hands to use
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I'd like a "Follow link" link in the link tooltip, similar to some of the other link tooltips. Current situation requiring use of two hands: ![image](https://user-images.githubusercontent.com/9662163/105679591-fa547b00-5eee-11eb-8253-7a304b09de0b.png)  Related: #78647
---
Título: Native Notebooks - Collapsing output from bottom leads to incorrect scroll location
Descripcion: Transfer from https://github.com/microsoft/vscode-jupyter/issues/4473  > Not sure whether to classify this as a bug, as it's more a UX issue than a real bug. >  > Currently, when collapsing a very long cell output (by doing right-click and then "collapse cell output"), it appears that the notebook retains the previous scroll coordinates. >  > This is an issue with long outputs, especially if they span more than the total screen height. In those cases, after collapsing the cell I often end up with a view of cells that are much further down in the notebook, forcing me to scroll up and waste time trying to find back where I was. >  > It would probably make more sense to automatically scroll so that the cell whose output was collapsed is visible?  I am only able to repro this behavior if I try to collapse the output from the bottom of the output. Scroll location remains correct when collapsing from the top of the output.   ![Collapse Scroll Off](https://user-images.githubusercontent.com/19276747/105639725-c31e9500-5e2e-11eb-80e9-874653fcbaae.gif)
---
Título: Can't update, says on read only volume
Descripcion: Issue Type: <b>Bug</b>  VS Code says it's on a read only volume and can't update. It's not.  <img width="885" alt="CleanShot 2021-01-22 at 16 57 44@2x" src="https://user-images.githubusercontent.com/7030831/105563552-4e831380-5cd3-11eb-8842-0d3997fe129c.png">   VS Code version: Code 1.51.1 (e5a624b788d92b8d34d1392e4c4d9789406efe8f, 2020-11-11T01:11:34.018Z) OS version: Darwin x64 20.2.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-9750H CPU @ 2.60GHz (12 x 2600)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|4, 3, 3| |Memory (System)|16.00GB (0.11GB free)| |Process Argv|--crash-reporter-id 69f7fc60-9d49-4aa3-994a-ae8107e76b0c| |Screen Reader|no| |VM|0%| </details>Extensions: none <!-- generated by issue reporter -->
---
Título: Native Notebooks - Cell Toolbar Covering Markdown Content
Descripcion: When cell toolbar is on the left it covers the markdown content.   ![image](https://user-images.githubusercontent.com/19276747/105424816-ed890c00-5bfc-11eb-97fe-fd4333724099.png)
---
Título: Better representation of web/codespaces instances in settings sync machines view
Descripcion: Explore better ways of representing web/codespaces instances in settings sync machines view, currently it is overwhelming
---
Título: Improve UX For Resizing Editor Suggestions Box
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hello, thank you for your great contributions to VS Code!  Recently in the /r/vscode subreddit, [a post was made](https://www.reddit.com/r/vscode/comments/l0gxhk/vs_code_showing_only_one_axample_as_in_picture/) by a user who was only getting a single editor suggestion while typing. The problem was that the the user must have inadvertently minimized the box in the past, and now had no idea how to restore it to its original size. This happened to me too a while ago, and I went a while without having a good solution to the problem.   Image from reddit post:   ![image](https://user-images.githubusercontent.com/25141252/105192260-e8956100-5b05-11eb-80ad-fa0a14eb67c3.png)  Judging by the amount of upvotes on the post (50+ at the time of writing this) I imagine that this is an issue that many VS Code users experience and are confused about at some point. Its also easy for the user to assume that there is just a single suggestion, and decide to disable the box altogether since it's not as useful as it once was.  Is there some simple way to improve the UX without too much trouble? Maybe something like the drag handle UI that shows in the bottom right corner of HTML text areas?  ![image](https://user-images.githubusercontent.com/25141252/105192304-f34ff600-5b05-11eb-8c74-ffe4f0f9eaf2.png)
---
Título: Refused to load the image
Descripcion: * start cpp dev container * rename a symbol and make sure that refactor preview shows * :bug: there are no category icons and below CSP errors on the console  <img width="1429" alt="Screenshot 2021-01-20 at 09 59 20" src="https://user-images.githubusercontent.com/1794099/105151379-2db99300-5b06-11eb-8e11-56ed0441ae0d.png">    ``` Refused to load the image 'vscode-remote://dev-container+2f55736572732f6a7269656b656e2f436f64652f7673636f64652d6465762d636f6e7461696e6572732f636f6e7461696e6572732f637070/home/vscode/.vscode-server-insiders/extensions/ms-vscode.cpptools-1.1.3/assets/ref-comment-light.svg' because it violates the following Content Security Policy directive: "img-src 'self' https: data: blob: vscode-remote-resource:". ```
---
Título: Make it easier for new users to save untitled files
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> We notice that beginners often get tripped up when they launch VS Code for the first time and create their new file. They are not sure how to run their file, because they often don't realize they have to save their file and save it as a particular file extension to get language support. From @burkeholland's user test, one idea that came up was to include the options to Save an untitled file from the right-click tab menu. Thoughts on also adding an option to "Choose language" from the right-click menu which would open up the language mode quick pick?    ![image](https://user-images.githubusercontent.com/9721254/104504493-8510ae00-55b0-11eb-8c87-dacac4793500.png)
---
Título: Native Notebooks - navigation through notebook subtle
Descripcion: ## Steps to reproduce: 1. Open notebook outline 2. Click through the cell headings and see where the selected cell is  When I click through the outline I have a tough time finding where I actually am in the notebook.  1. If the cell I would like to go to is out of view, when I click it on the outline it doesn't auto-scroll such that the cell is at the top of the notebook canvas. It is somewhere in the middle of the canvas.  2. When I look for where it is in the canvas, it took me a long time to realize the only indicator was the run button showing up. Even after realizing that was what to look for, it is a bit small and subtle. I was expecting to see the selected state (two blue lines around the cell)
---
Título: Notebook doesn't snap view to the executed cell.
Descripcion: Issue Type: <b>Bug</b>  - open a notebook - execute a cell which generates a long output (exceeding view height) - right click on the l.h.s. of the cell and click "clear cell outputs"  Expectation:  the view should snap to the cell that just got executed.  What happens: the view stays where it was and hence, all cells are shifted to out of the view.   VS Code version: Code - Insiders 1.53.0-insider (ed6c343edb720d91ee0859e566c84b5687f5a9d5, 2021-01-08T10:46:04.327Z) OS version: Windows_NT x64 10.0.21286 Remote OS version: Linux x64 5.4.72-microsoft-standard-WSL2  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz (12 x 2208)| |GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|31.78GB (13.08GB free)| |Process Argv|--folder-uri=vscode-remote://wsl+Ubuntu-20.04/home/fghavamian/projects/accelerate_computer_simulations --remote=wsl+Ubuntu-20.04 --crash-reporter-id e7f4e6f1-32af-4fc6-b89f-a530bcad4f73| |Screen Reader|no| |VM|0%|  |Item|Value| |---|---| |Remote|WSL: Ubuntu-20.04| |OS|Linux x64 5.4.72-microsoft-standard-WSL2| |CPUs|Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz (4 x 2208)| |Memory (System)|15.64GB (0.16GB free)| |VM|0%| </details><details><summary>Extensions (6)</summary>  Extension|Author (truncated)|Version ---|---|--- es7-react-js-snippets|dsz|3.1.0 remote-wsl|ms-|0.52.0 material-theme|zhu|3.9.12 latex-workshop|Jam|8.15.0 python|ms-|2020.12.424452561 jupyter|ms-|2020.12.414227025   </details><details> <summary>A/B Experiments</summary>  ``` vsliv695:30137379 vsins829:30139715 vsliv368cf:30146710 vsreu685:30147344 openlogontheside:30221882 python383:30185418 vspor879:30202332 vspor708:30202333 vspor363:30204092 vswsl492:30208929 wsl2prompt:30219162 vstry244:30230484 pythonvsdeb440:30224570 unusedprompt:30219164 folderexplorercf:30219167 openfilemenucf:30219169 pythonvsded773:30223139 core-portspanelcf:30233468  ```  </details>  <!-- generated by issue reporter -->
---
Título: Please add the ability to whitelist/blacklist certain notifications
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ -->  So, for a regular plugin, would just uninstall the plugin if it kept giving me annoying notifications that I don't want, but with VSCode, you don't have that option, because they are built into application itself.  Can you please create a way to silence the infuriating notifications that pop up all the time that no one wants? People are trying to work.
---
Título: Revisit how activity bar items and status bar items can be hidden by the user
Descripcion: Currently hiding an activity bar item is different than hiding a status bar item.  Activity bar: ![image](https://user-images.githubusercontent.com/172399/103543055-2bb4ca80-4e9e-11eb-894b-3f99c49e0ce0.png)  Status bar: ![image](https://user-images.githubusercontent.com/172399/103543085-3bccaa00-4e9e-11eb-8f62-192e945671c4.png)  Hiding the selected item is the top most item in the activity bar and the bottom most item in the status bar.  Do we need support for hiding the selected item at all? The user can already hide any item from the menu.   As part of this effort should also investigate how to guide users about how to restore a hidden item.
---
Título: SCM - option to prefer repo name
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Option to prefer repo name to branch name in Source Control Repository view. Please refer to https://github.com/microsoft/vscode/issues/104801#issuecomment-684589792  This design choice makes the git integration unusable for many of us.  ![image](https://user-images.githubusercontent.com/1332462/103112910-05c13780-460d-11eb-9541-f35f1cb0a0a0.png)  Versus  ![image](https://user-images.githubusercontent.com/1332462/103112929-17a2da80-460d-11eb-9aa2-d43a9d9f6d5f.png)
---
Título: Notebook cell placeholder text should be updated for Markdown cells
Descripcion: ![image](https://user-images.githubusercontent.com/35271042/102541506-5c56d080-4065-11eb-9692-855689ed8951.png)  Something like `Escape to stop editing` (like we have on the checkmark) or `Ctrl + Enter to finish editing`. I realize that both commands do the same thing, so we should make sure that all title tooltips are consistent.
---
Título: Dropdown buttons should include the main action as well
Descripcion: I think when you have a button with a dropdown, the menu should include the default action as first entry:  ![image](https://user-images.githubusercontent.com/900690/102488316-28cb7480-406c-11eb-9cfe-9ccebbc70cca.png)  ![image](https://user-images.githubusercontent.com/900690/102488325-2cf79200-406c-11eb-9892-94862c1e7231.png)
---
Título: Indicate menus better in the activity bar
Descripcion: Extracted from https://github.com/microsoft/vscode/issues/112237  <img height="700" src="https://user-images.githubusercontent.com/35271042/101814637-454b3800-3ad3-11eb-8d6c-9eab6dcc9571.gif">
---
Título: Ability to switch to previous behavior on 1.52.0 'Preview editor improvements'
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  With the November 2020 update, code navigation options do not open the navigated file in the same editor even when the current editor is in the preview mode. This quickly litters the workbench with a ton of editors when I want to drill down inheritance trees for example. If I want the navigation target to open in a new editor I can quickly get out of the preview mode with a command like `save` and then navigate so I don't understand the need for this change. I was able to use the `Go->Back` command to go to the previous editor in the preview mode already so I never lost track of where I have navigated from and this way the workbench is not littered with a ton of editors I'm not interested in. It really goes against the nature of "preview mode" in my opinion.  So my request it, please make it toggleable, I want the old behavior back. By old behavior I mean if the current editor is in preview mode and I navigate from it with commands like go to definition, open the definition file in the same editor in preview mode.
---
Título: Web: Merge main menu and home menu into one
Descripcion: ## Summary This is to capture the ideas around improving the web navigation menu (i.e. Codespaces). Currently, we have two navigation menu items:   One to navigate going back (and open in VS code soon) and another to navigate the VS Code menu:  <img height="300" src="https://user-images.githubusercontent.com/35271042/101813957-43cd4000-3ad2-11eb-8f30-c05db37e0ad5.png"> <img height="300" src="https://user-images.githubusercontent.com/35271042/101813974-4a5bb780-3ad2-11eb-881d-90c7def07506.png">  The problem that this introduces is the user has to stop and think which menu to use and it also adds more items to the activity (which adds visual noise).  ## Exploration  One idea is to combine these two items into a single menu. We also discussed showing an indicator on the main menu item to better indicate that a menu would appear.  <img height="700" src="https://user-images.githubusercontent.com/35271042/101814637-454b3800-3ad3-11eb-8d6c-9eab6dcc9571.gif">  ## Open Questions - Should the `>` indicator appear for settings + accounts? - Should the `>` indicator appear on hover for the activity bar or only when you hover over the item?
---
Título: Allow to set a background image into the editor
Descripcion: Issue Type: <b>Feature Request</b>  There are some extentions that support set image for editor as background, but when startup there is a spalsh , which is not elegant. It will be awesome if vscode can support background image natively like Jetbrains IDEA.  VS Code version: Code 1.51.1 (e5a624b788d92b8d34d1392e4c4d9789406efe8f, 2020-11-10T23:34:32.027Z) OS version: Windows_NT x64 10.0.19042   <!-- generated by issue reporter -->
---
Título: Active viewlet indicator bleeds into custom menu
Descripcion: I often notice how on Linux the active viewlet indicator touches the main menu:  ![image](https://user-images.githubusercontent.com/900690/101174049-a2fb0280-3643-11eb-9191-ff2f798bbb2c.png)  I wonder if something like this would work better?  ![image](https://user-images.githubusercontent.com/900690/101174113-b60dd280-3643-11eb-8dd8-d16a8d708311.png)  Or an entire different way to present this?
---
Título: Explorer bulk edit and preview changes don't work well together
Descripcion: To verify this in the Java extension, I changed the implementation of the rename refactoring by using the `workspace.onWillRenameFiles` handler, and now after I rename fileA.java to fileB.java, one undo will restore the refactor and the filename.  But I also found two potential problems about the willRenameFiles handler.  - The UI state is in chaos if the returned edit enables the preview flag.  If `FileWillRenameEvent.waitUntil()` returns a workspace edit with the preview flag enabled (e.g. add `needsConfirmation` properties), the UI state will be in chaos. See the screenshot below. It shows REFACTOR PREVIEW panel, but the file explorer is frozen and also shows the running notification. ![image](https://user-images.githubusercontent.com/14052197/101131662-a2ad3800-3640-11eb-91af-86e223084ba3.png)  _Originally posted by @testforstephen in https://github.com/microsoft/vscode/issues/111208#issuecomment-738621642_
---
Título: Code cell right hand padding is missing
Descripcion: <img width="1056" alt="image" src="https://user-images.githubusercontent.com/3372902/101020263-82ad4400-356e-11eb-9b1b-ebc2f3a9e541.png">
---
Título: Hard to select all of an output cell
Descripcion: When a text output cell is longer than the screen its difficult to select all of the contents. ctrl+A selects the code, and dragging to the edge of the screen does not trigger scroll.
---
Título: Clicking issue from output of GitHub Issues notebook loses blue border around focused cell
Descripcion: Testing #111552, with a closer look at last checked item in https://github.com/microsoft/vscode/issues/109549 (clicking on an issue in cell output and navigating back to VS Code).  Focus on a cell and run it:  ![image](https://user-images.githubusercontent.com/25310137/100781567-0bd24880-33c0-11eb-9870-adb5c9da0f17.png)  Click on an issue from its output  Return to VS Code, looks like focus on the cell was lost:  ![image](https://user-images.githubusercontent.com/25310137/100781641-21e00900-33c0-11eb-98e8-e18ce1f9ab5c.png)  However, I tried changing language mode, and it successfully picked up that cell and changed it to markdown:  ![image](https://user-images.githubusercontent.com/25310137/100785341-5b674300-33c5-11eb-8a3a-75eb9f51614a.png)  Could we indicate focus on this cell (/when users interact with or click on the output area) in some way? i.e. still include the blue border around the cell, or some sort of border/shading around the output?
---
Título: Remote explorer should be more user-centric
Descripcion: Today (for me) using the Remote Explorer consists of having to switch between remote types to find the box I want to connect to. I often am switching between WSL, SSH, and Codespaces. I find that this hard switch between these types, hampers usability.  I would much prefer a more unified user-centric view, that shows me my "favorite" and/or recent connections and I could add new connections (regardless of type) from the same unified UX. I don't really want to have to think about what type of connection I am making, rather I just want to connect to a certain machine/folder/etc.  I also think there should be a more consistent user experience across the different types -- i.e. the same menu choices, etc. For example, the context menu for a WSL connection doesn't have an option to open the folder in a new window, and while SSH does, its inline action is set to it.  /cc @misolori @bamurtaugh
---
Título: Ability to Favorite Files
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Often, when I want to edit something in the _settings.json_ I have to dig through my file system to find the file.   The feature I'm requesting is a way to favorite files, like you would tabs in a browser, in the editor.  This would be helpful for things like _.bashrc_ or Firefoxs _userChrome.css_, files that are too complex for nano but are frequently edited.   Thanks
---
Título: Ports: consider to distinguish a view for managing ports and a way to launch my app
Descripcion: I setup once @egamma express app in codespaces and ran it.  I see that we have a view for ports that is both to: - manage ports (remove, public/private, etc) - launch my app  I feel that we need another way to discover how to launch my app after I started it from the terminal. The notification that appears is very useful in that regard:  ![image](https://user-images.githubusercontent.com/900690/100426978-090ae700-3092-11eb-8fa0-45362d37e625.png)  I also find the status bar very good:  ![image](https://user-images.githubusercontent.com/900690/100427012-145e1280-3092-11eb-8644-7574e853b907.png)  Maybe we could: - have one view specifically to manage ports (as today) close to where contextual information about the remote I am connected to is shown - have another entry point specifically for running my web app in the browser (that does not necessarily talk about "ports")
---
Título: Ports should be inside sidebar and not panel
Descripcion: I setup once @egamma express app in codespaces and ran it.  I find that ports do not benefit from all the space a panel offers:  ![image](https://user-images.githubusercontent.com/900690/100426706-9b5ebb00-3091-11eb-838e-8c43d33fc044.png)  I would put ports closer to where contextual information about the remote target is shown to me. I feel that the list of forwarded ports is a detail and should not deserve such a prominent place.   As for the "Open in Browser" entry point, I would still allow this from a different entry point like quick pick.
---
Título: search toggle button: focus box is broken up
Descripcion: ![image](https://user-images.githubusercontent.com/6461412/100334494-28433f00-2fd4-11eb-8d7c-78e7d91cbddb.png)  The problem is caused by the rule  ``` .monaco-button { 	outline-offset: 2px !important, }  ```  added by https://github.com/microsoft/vscode/commit/a0b7c2310f4f77b801d185a65f3488953c80508b
---
Título: Improve the way extensions are shown while using local/remote environments (WSL)
Descripcion: Right now, if you're using at least one WSL instance you have two panels in the extensions section that show both the local and remote extensions installed/ enabled.  I haven't tested this scenario, but I imagine that if you have other remote environments you'd have a lot of panels showing similar things:  ![image](https://user-images.githubusercontent.com/13930952/99885153-b48ae600-2c11-11eb-9771-e70cf9269851.png)  Wouldn't it be better if there was just one single panel showing the extensions you have installed/ disabled like before and then, for each extension page you have the possibility to select based on the environments available?  ![image](https://user-images.githubusercontent.com/13930952/99885394-53641200-2c13-11eb-9188-fd8370966301.png)   I think that for most cases you'll end up with more extensions than environments, so maybe makes sense to invert the way we toggle this feature!? I mean, I figured that this would avoid confusion because right now, if you have similar remote environments you'd have the same list repeated over and over, for each of those environments.   I guess that the main difference would be something like: instead of "grouping" the extensions by the environment they're been used, we could do something like tags/ labels to show all the extensions in one place. What do you think?
---
Título: Native Notebooks - Hover Add Cell Target Too Small
Descripcion: We are still seeing feedback that hovering to add cells is tricky. (GitHub + Survey)   https://github.com/microsoft/vscode-jupyter/issues/3997  There was an action item after our API sync to increase the target size for the hover add code cell/markdown cell icons.  Is there an update on the status of that?
---
Título: Add clearer indicator of current version to TS version selector
Descripcion: Tracks adding some text to the TS version selector UI to make it more clear what the current version is
---
Título: Horizontal scrolling in output cells
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> **Ask:** Horizontal scrolling for output cells in the core notebook. Or max height of cells for plain text that's vertically scrollable after.  When there's a big block of text, it's hard to read it all with no text wrapping. And if to help with wrapping, you choose to use plain text instead then for really large text like the source for a website, it doesn't collapse any of it and the block of text is way too long.  Both scenarios currently: ![image](https://user-images.githubusercontent.com/12758612/99457286-93f42080-28df-11eb-9055-1b803e285b2c.png)
---
Título: Update default styles and polish focus treatment
Descripcion: This PR address some of the issues from #109549  - Updates default styles - Removes cell selection bg (color token is still there) - Updates cell focus color to use `focusBorder` color and creates a new token `notebook.selectedCellBorder` - Makes cell toolbar appear on hover instead of on focus (means only one toolbar is shown at a given time) - Adds a placeholder text in status bar when cell is focused (this needs to be localized) - Increased hit target for run and fold icons   ![ezgif com-gif-maker (6)](https://user-images.githubusercontent.com/35271042/99299069-85363c80-27ff-11eb-9242-03206516845e.gif)
---
Título: Git/SCM: Use vscode.open and vscode.diff for a better editor opening experience
Descripcion: <!-- Thank you for submitting a Pull Request. Please: * Read our Pull Request guidelines:   https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests. * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `master` branch. * Include a description of the proposed changes and how to test them. -->  This PR fixes #110397  cc @bpasero @jrieken @eamodio
---
Título: Align the `install` buttons in the recommendations dialog with the extensions viewlet
Descripcion: The recommendations dialog currently shows 3 buttons  ![image](https://user-images.githubusercontent.com/172399/99244403-4fdf1e00-2802-11eb-897c-034e6c732c6c.png)  Suggest to change the Install button to be a drop down with the option to not sync as in the Extensions Viewlet  ![image](https://user-images.githubusercontent.com/172399/99244679-b6643c00-2802-11eb-95ab-77f3bccf3bf3.png)
---
Título: I can only one dropdown option when i type in an extension's shorthand or snippet
Descripcion: So basically let's say I type in the shorthand or snippet for an extension in a file, I only see one option to choose from even if multiple extensions might use the same shortcut or snippet. In some cases things built from visual code such as options like value or onChange in a jsx file dont even show up I noticed this started happening this week and i literally uninstalled and installed all plugins  ![Screenshot (1)](https://user-images.githubusercontent.com/33573587/99144823-815bbc00-263f-11eb-989f-4c850549e840.png)  In the above screenshot you would notice only one option when i type rf even though i have multiple extensions that use the same shortcut
---
Título: autocomplete failed on mac big sur
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version:1.51.1 - OS Version:big sur 11.0.1  Steps to Reproduce:  1.autocomplet failed  ![1605320050957](https://user-images.githubusercontent.com/59404295/99136807-32893480-25f5-11eb-9f8b-296dca4eca1e.jpg)   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Intellisense menu only shows one option at a time
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.51.1 - OS Version: Windows_NX x64 10.0.19041  Steps to Reproduce:  1. Trigger Intellisense  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes Yes  ![image](https://user-images.githubusercontent.com/22644543/99047652-caa30180-2594-11eb-9b64-6229a13cfdfa.png)
---
Título: Release notes should have a visible way to opt-out
Descripcion: Since we open release notes (by default) on each release, there should be a visible way to opt-out. Either a checkbox similar to the Welcome experience, or a markdown command link.  re: https://twitter.com/seldo/status/1326224452472860673
---
Título: Change focus treatment for notebook cells
Descripcion: Here's an idea to address the focus issue in #109549  > When switching back and forth between different editors or windows I easily lose track of where the keyboard focus is inside a notebook  What if we made the cell selection focus only visible when the cell is focused and then have it go away when the editor gets into focus? We'd also want to use the same focus border color:  ![Kapture 2020-11-10 at 11 06 51](https://user-images.githubusercontent.com/35271042/98737142-a8be3a80-235a-11eb-9f11-8beaffc6397c.gif)  This would also mean that when the user changes focus to other elements in the editor the focus should not be visible in the notebook.
---
Título: Render new lines in suggest widget details
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  In reference to the refinement here: https://github.com/microsoft/vscode/issues/109717#issuecomment-719440817 The details view in the suggest widget no longer shows the line breaks that the text authors intended for us to see. I think it should work like the mouse over hover text where it breaks the line up if it gets too long but also shows the actual line breaks in the text. See this example: ![image](https://user-images.githubusercontent.com/42123497/98030836-e4fd1280-1e11-11eb-8c48-90f9b02e1316.png)
---
Título: Intellisense shows only one suggestion
Descripcion: Issue Type: <b>Bug</b>  I'm coding in js, css and html and intellisense shows only one suggestion  VS Code version: Code - Insiders 1.51.0-insider (fce8fc82cacf0b4e2a18c633b6c6f3058702a5c9, 2020-11-02T19:45:32.796Z) OS version: Windows_NT x64 10.0.19041  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-9600K CPU @ 3.70GHz (6 x 3696)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|15.91GB (8.56GB free)| |Process Argv|--crash-reporter-id cd7405a1-4997-42c2-abbd-a29c4b00bc6b| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (2)</summary>  Extension|Author (truncated)|Version ---|---|--- material-icon-theme|PKi|4.4.0 vscode-counter|uct|2.2.0  (1 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Suggest Widget: will not close on escape
Descripcion: Steps to Reproduce:  1.  Open a javascript file 2.  Input this code:     const str = 'Test test1 test2'    str.  // <= intellisense pops up string info  <kbd>Esc</kbd> will not close the suggestion widget.  <kbd>Shift</kbd>+<kbd>Esc</kbd> does close it.  Occurs in javascript files in Insider's Build - I have not seen it in my other languages (limited to css, html and json files) or Stable in any language.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  Version: 1.51.0-insider (user setup) Commit: 49696e87c64f478f97909a91d41ff2913df9bf71 Date: 2020-10-31T00:22:00.097Z Electron: 9.3.3 Chrome: 83.0.4103.122 Node.js: 12.14.1 V8: 8.3.110.13-electron.0 OS: Windows_NT x64 10.0.20246
---
Título: Provide a way for a CompletionItem to have both a color and documentation
Descripcion: Currently in order for a color to be shown in a completino item, the color has to be the _only_ thing in the documentation (or it has to be the label)  https://github.com/microsoft/vscode/blob/5264ab94a337ea8acae51c550aefe1f0b578f656/src/vs/editor/contrib/suggest/suggestWidgetRenderer.ts#L33-L49  This forces me to use the 'detail' for documentation, which looks awkward  ![](https://memes.peet.io/img/20-10-0299c46b-9ec4-43b0-a24b-17e80f111489.png)  It would be very useful if documentation could be provided in addition to the color. Perhaps allow the color to be specified on either the first or last line (or in the `detail` property). Using the first or last line would not be breaking in the current behavior.
---
Título: Editors: revisit "preview" editors default behaviour
Descripcion: Documentation: https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode  We hear from users that the editor "preview" feature is controversial (see https://github.com/microsoft/vscode/issues/105600 and https://stackoverflow.com/questions/38713405/open-files-always-in-a-new-tab). This issue is to explore if we can make some tweaks to the current behaviour without changing the default setting to disable preview editors.   //cc @misolori @stevencl
---
Título: Suggest detail does not shrink to fit content when resized
Descripcion: The gif is pretty illustrative. You can see that when resized, the detail view doesn't shrink. However, when suggest is retriggered, it has appropriately shrunk. I'm not sure if this is intended behavior.  ![recording (26)](https://user-images.githubusercontent.com/38270282/97697363-31a9bc00-1aa7-11eb-87d1-96f3267d9153.gif)
---
Título: Should peek editor close on ESC before suggest?
Descripcion: Steps: * bring up a peek references view for example (or call hierarchy) * bring up intellisense suggest widget * hit `ESC`  => the peek editor closes  Shouldn't suggest close first?  Looks like this could be related to command weights, where the one for closing peek is > suggest. The suggest one is declared here:  https://github.com/microsoft/vscode/blob/6b7eabb7f2e31e3ee1d02bdc3ebaffccd3d19402/src/vs/editor/contrib/suggest/suggestController.ts#L623-L623  //cc @alexdima
---
Título: Improve user experience when settings sync requires client update
Descripcion: Improve user experience when settings sync requires client update  From @Tyriar   This seems like terrible UX to me and certainly not what I want to see what I first open VS Code on another machine, though if we do stick to this, we could lessen the impact by tuning the notification so that it's not an error and maybe wrap it into the regular actionable update notification.
---
Título: Have a setting to disable inline details for suggestions
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Apologies, I'm not sure if this makes more sense as a VS Code issue or a TypeScript one, but I'm starting here since it impacts the editor UI.  VS Code provides great support for autocompletion for string unions, but it falls a little short for very long strings.  With the example code ``` type Option = "aVeryVeryLongNameThatTakesUpSpace" | "alsoAVeryLongNameThatAlsoDoesThat",  function f(o: Option) {} ```  When I type `f("")` and ask for autocompletion, this is what I see <img width="462" alt="Screen Shot 2020-10-29 at 11 07 52 AM" src="https://user-images.githubusercontent.com/39533986/97614301-0192e800-19d7-11eb-8522-459bc06c3462.png">  Notice that while the second option is completely readable, the selected option gets cut off. If I select the second option, then the first option is readable but the second one is cut off. This is especially frustrating because the info that takes up the extra space is completely redundant! It's the exact same name as the string itself.  I'm not sure if there are some cases where that extra info is helpful, but could it be special cased to not display if it's the exact same as the original string?
---
Título: Custom menu: consider to align accounts menu like gear and home menu
Descripcion: Extracted from https://github.com/microsoft/vscode/issues/109603 I think the accounts menu should appear like gear and home menu do, aligned to the right of the activity bar but at the same location as the icon:  ![image](https://user-images.githubusercontent.com/900690/97603249-83e9cf00-1a0c-11eb-8ff2-32f5e6854b11.png)
---
Título: Status bar settings name
Descripcion: We should simplify the status bar setting and use `editor.suggest.showStatusBar` (which aligns with `.showIcons` etc)
---
Título: Suggest box pops up again after explicitly dismissing it and pressin arrows
Descripcion: From Accessibility Gitter channel @Menelion  Hi everyone! After updating VS Code Insiders yesterday it's extremely hard to work since something has changed in the autocomplete algorithm. Now when autocomplete is triggered and I either accept it with Enter or dismiss it with Escape, and then left arrow to review by character what was actually inserted (sometimes it's useful), autocomplete pops up again and prevents me from doing anything, horizontal arrows just don't help. If I press Escape, then try to left arrow to the method again, it pops up for the third time, and it loops. So, for example, the method is called myMethod(), and it was auto-suggested. I'm on the ) char, I left arrow to the ( char, so far so good. then, if I left arrow once more to the d of myMethod, autocomplete pops up again preventing me from navigating.   Correction: autocomplete now pops up when I just navigate by line past the line that has something that can be suggested. Before it popped up only when I typed characters. could the previous behavior be returned back somehow? Thanks.  From @isidorn Gist seems to be that the suggest box pops up automatically after being manually dismissed which is unexpected.
---
Título: The position of details widget of suggests is not correct sometimes
Descripcion: Version: 1.51.0-insider Commit: 2ee8b8c645ec8ab54304bacae7aa979c1d9c647a Date: 2020-10-29T06:00:13.428Z Electron: 9.3.3 Chrome: 83.0.4103.122 Node.js: 12.14.1 V8: 8.3.110.13-electron.0 OS: Darwin x64 17.7.0  Steps to Reproduce:  2. Open a TypeScript file. 3. Type `vscode.languages.`, and open suggests and details with `Ctrl-Space` 4. The position of a suggest details`vscode.languages.match` is not correct.  The same thing happens for `vscode.commands`. The active cursor must be above the middle of the screen.  Does this issue occur when all extensions are disabled?: Yes  ![スクリーンショット 2020-10-29 17 02 11](https://user-images.githubusercontent.com/10665499/97541557-b42f6e80-1a08-11eb-98d0-2b9405fd801a.png)  ![スクリーンショット 2020-10-29 17 02 36](https://user-images.githubusercontent.com/10665499/97541582-babde600-1a08-11eb-8f71-f2868c6f7f05.png)
---
Título: Suggest widget shows up randomly
Descripcion: - Cursor up or down a line, landing at the end of a word - The suggest widget appears  ![Oct-28-2020 18-42-54](https://user-images.githubusercontent.com/323878/97515052-6bff4600-194d-11eb-99bd-70e2d9b23f41.gif)  This reproes totally consistently for me, but I was editing for a while today without noticing it, so I don't know whether I did something else to make it happen
---
Título: Incorrect link colors in suggestion details
Descripcion: **Repro** 1. Using Dark+ 1. In an html file 1. Trigger suggestions: `<div ari ` 1. Look at the the suggestion details   **Bug** The colors for the links are off:  <img width="1445" alt="Screen Shot 2020-10-28 at 4 49 14 PM" src="https://user-images.githubusercontent.com/12821956/97508894-fb046200-193d-11eb-98bc-be672406ce6e.png">  Here's stable for comparison:  <img width="1299" alt="Screen Shot 2020-10-28 at 4 49 53 PM" src="https://user-images.githubusercontent.com/12821956/97508907-022b7000-193e-11eb-8700-87261e7d963e.png">
---
Título: Menus: tweak position with custom menus in activity bar
Descripcion: I know we had a recent change in this area which I think was good, but I still think the position of the custom menu over the hamburger action icon or the gear icon could be improved.  Here is today:  ![image](https://user-images.githubusercontent.com/900690/97453002-9e04ae00-1935-11eb-8c0b-30bbf7eec81e.png)  ![image](https://user-images.githubusercontent.com/900690/97453019-a2c96200-1935-11eb-82ce-d087b75aea52.png)  The current location makes it look almost like a right-click context menu that is anchored to my mouse, but not the icon.  Compare with e.g. Teams:  ![image](https://user-images.githubusercontent.com/900690/97453134-bc6aa980-1935-11eb-97a7-8610f686321d.png)  ![image](https://user-images.githubusercontent.com/900690/97453154-c096c700-1935-11eb-9711-84b0e78b8465.png)  I think the truth is somewhere in between: more anchored to the action icon (not above or below) and maybe aligned to the activitybar width?  //cc @misolori
---
Título: Details height wrong after toggling
Descripcion: * have suggestions with details and auto size * toggle details (off/on) while list shows (`ctrl+space`) * :bug: height is wrong  ![Oct-28-2020 11-31-43](https://user-images.githubusercontent.com/1794099/97424574-32a8e500-1911-11eb-82ef-41fdc88248ad.gif)
---
Título: There is no editorSuggestWidget.selectedForeground setting
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> It would be nice to be able to change the text color for the currently selected item in the suggest widget so we don't have to worry about the text color being legible with 2 different background colors. Currently you can't make a pretty standard theme with white background, black foreground, and dark blue background for the currently selected item because the black text is hard to read on the dark blue background: ![image](https://user-images.githubusercontent.com/42123497/97378626-12ead000-18c3-11eb-96f9-3c02f4d8e836.png)
---
Título: Suggest widget: Details view doesn't resize width to fit content
Descripcion: Testing #109394  The details view correctly resizes the height to fit more lines, but the width stays the same no matter the content. ![NoSizeChanges](https://user-images.githubusercontent.com/42123497/97301877-94594880-1858-11eb-9ef4-3ff2a49ad530.gif) I think it should resize up to the edge of the editor and add a scrollbar if needed. Alternatively the width I set should persist across sessions so I can drag it to the edge once and never think about it again.
---
Título: Screen flickering when resizing details panel
Descripcion: Testing #109394  See screen cast  ![cast](https://user-images.githubusercontent.com/1931590/97277601-f6a25100-1838-11eb-84ce-50c7282ac481.gif)
---
Título: The detail of a suggest does not remember its height
Descripcion: Version: 1.51.0-insider Commit: 7a3bdf4ee9588755d447aa1c3b5db4a123fc11a9 Date: 2020-10-23T07:32:22.213Z Electron: 9.3.2 Chrome: 83.0.4103.122 Node.js: 12.14.1 V8: 8.3.110.13-electron.0 OS: Darwin x64 17.7.0  Steps to Reproduce:  1. Resize the height of the detail of a suggest. 2. Close it and reopen it with `Ctrl-Space` 3. The height is not restored.  Does this issue occur when all extensions are disabled?: Yes  ![Oct-26-2020 18-40-05](https://user-images.githubusercontent.com/10665499/97157270-388cb200-17bb-11eb-915f-6efc735dbf95.gif)
---
Título: SCM: Should use Ctrl-UpArrow instead of just UpArrow?
Descripcion: Issue Type: <b>Bug</b>  I've been using the scm commit history in insiders for the past few days. Here's some general feedback on the UX:  ### Unexpectedly navigating through history I'll often hit up or down arrow to go to the next or previous line, and instead end up navigating through the history.   Could we require holding down ctrl or some other key to navigate history? I don't know why but I hit this a lot more in the commit history than I ever do in the search input boxes. Maybe this should be discussed at the UX sync?  ### Lost commit message I've lost my commit messages a few times (possibly #109121). This is quite frustrating when you have written a long commit message, and it's something I think we need to fix this iteration  VS Code version: Code - Insiders 1.51.0-insider (7a3bdf4ee9588755d447aa1c3b5db4a123fc11a9, 2020-10-23T07:32:22.213Z) OS version: Darwin x64 19.6.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i9-9980HK CPU @ 2.40GHz (16 x 2400)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 2| |Memory (System)|32.00GB (0.95GB free)| |Process Argv|-psn_0_2732699 --crash-reporter-id cc7f0c9b-aa2b-4a45-8baa-81ffda32679e| |Screen Reader|no| |VM|18%| </details> <!-- generated by issue reporter -->
---
Título: Terminal passthrough commands/keyboard shortcuts
Descripcion: When running Remote-WSL/Remote-SSH/Codespaces from a winows box to a Linux box we get unavoidably conflicts for keyboard shortcuts. To mitigate we use `terminal.integrated.commandsToSkipShell`, however without research there is no way for a user to know that this controls the behavior. We should explore how to teach the users about the setting (and maybe rethinking the setting to easily allow for `everything goes to the workbench` and `everything goes to the terminal`.)
---
Título: Safari/iPadOS: UI affordance for non default cursor style
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  On Desktop, we use `cursor: ` CSS rule a lot to change the mouse style for various purposes, but it's not availbale on iOS. However, we still get the `:hover` event when iOS is attached with an external mouse/trackpad. We need to go through all places we modify cursor style to ensure we have a proper fallback for iOS.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No
---
Título: Pinned tabs need more prominence
Descripcion: I know we have a new color token to separate the pinned tabs, but it doesn't feel like it gives enough prominence of the ones that are pinned. We also discussed this in standup and some felt the same about needing a stronger prominence. Below are some ideas.  ## Always show the pin icon  This means we'd need a hybrid icon of pinned + dirty. This one is my favorite as it keeps the look cleaner.  ![image](https://user-images.githubusercontent.com/35271042/95264481-3f3f8f00-07e4-11eb-8891-257d46360d8a.png)  ## Add space for two icons  This follows closer to #106956 and VS by making space for two icons  ![image](https://user-images.githubusercontent.com/35271042/95264991-25eb1280-07e5-11eb-9be0-8b5dcbae8a14.png)    ## Stronger border  This was @kieferrm's idea about increasing the pinned tab border to 2px  ![image](https://user-images.githubusercontent.com/35271042/95265061-487d2b80-07e5-11eb-8035-ead1517c5a64.png)
---
Título: Add hint to find Show All Commands
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> If you are new to VS Code it is hard to find the key for "Show All Commands". Any plugin is it using, but not refering about the pressing or name of this to get into it.  Maybe it would be helpful to show hint with information what to press in bar where document names for opened documents is shown. If space get rid this information can be removed, maybe also remove after first few presses of the key.
---
Título: Explore integration between extensions view and GitHub Sponsors
Descripcion: # Intro This issue aims to explore what it could look like if we integrated GitHub Sponsors into the extensions view. Currently, extensions are not tied to a single user, so we'd need for a way for an extension to tell us what users they'd like to be added to the "sponsors" list. One idea is having a new entry in the `package.json` with a list of GitHub usernames that we could link to.  #  Design We could remove the redundant information on the installed extensions (ratings + downloads) and add a ❤️ icon that signals to users that an extension can be sponsored by them. When opening the extension, we could have a special GitHub Sponsor button that links to the users being sponsored. One thing we need to consider is having multiple sponsors, do we introduce a new tab that has the list of sponsors? What other information would users want to know about before sponsorin?  ![image](https://user-images.githubusercontent.com/35271042/94322810-624a8300-ff48-11ea-9b75-9c52ed5d77fa.png)
---
Título: Improve default diff view w/ metadata changes
Descripcion: The current view when running the same notebook that has no code changes but has metadata/output change takes up quite amount of vertical real estate (related to https://github.com/microsoft/vscode/issues/105916):  ![image](https://user-images.githubusercontent.com/35271042/94204622-6c9c4c80-fe76-11ea-949a-53aa5332ea62.png)  One idea about improving this is using an icon + coloring the text the same color as our modified indicator and collapsing it by default. This gives the user more real estate while still drawing attention to changes. I think we tried something similar before (bold + collapsed) but that didn't seem to provide enough of an indication.   ![Frame 38](https://user-images.githubusercontent.com/35271042/94204929-0f54cb00-fe77-11ea-8716-cfd40cd75508.png)
---
Título: Hover: font size is larger than what I hover over
Descripcion: The workbench typically defines a font size of `13px` but somehow the hover sets it to `14px` meaning that the hover text is always larger compared to the text.  https://github.com/microsoft/vscode/blob/c80b8a3318e6ea354061be254a69f148c2c500b2/src/vs/workbench/services/hover/browser/media/hover.css#L8-L8  Worth mentioning that the native hover on macOS seems to have an even smaller font size.  //cc @alexr00 @misolori
---
Título: Hover pop-up documentation pane is sometimes absurdly small
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.50.0-insider - OS Version: Windows 10  Steps to Reproduce: 1. This happens to me when editing Unity C# files. 2. Just do a Ctrl-Space to get the hover popup, and scroll through the options.  ![vscode](https://user-images.githubusercontent.com/478606/93865881-379dc780-fcc7-11ea-9e7b-044e2cd84c4f.gif)  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: This occurs when the only extension enabled is the C# extension (that allows such pop-ups to exist in the first place)
---
Título: Option to combine tabs and title bar
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I generally use VS Code in fullscreen mode to maximize the vertical space available for code. However, I also frequently have to use it as a regular window so I can see something next to it, such as a debugger or other tool. I'd love to be able to reclaim the extra space I get in fullscreen mode even when in a window.  Specifically, I'm interested in an option to combine editor tabs and the title bar. Literally just wedge them together. I don't need the buttons on the right side of the tab region, so this actually looks fairly clean, imo.  Current ![image](https://user-images.githubusercontent.com/484784/93721703-b0c1e100-fb46-11ea-8e09-1448f32c65ec.png)  Desired ![image](https://user-images.githubusercontent.com/484784/93721825-6c831080-fb47-11ea-844b-3a069f7453fb.png)  Honestly, don't really need the logo either ![image](https://user-images.githubusercontent.com/484784/93721895-cedc1100-fb47-11ea-90cd-bf28313f6086.png)
---
Título: snippets are not displayed completely
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.48.2 - OS Version: windows 10  Steps to Reproduce:  How to make the width of the box wider to show the whole ![image](https://user-images.githubusercontent.com/33505774/93558894-05335800-f9b1-11ea-9681-136368e94f84.png) lua.code-snippets ![image](https://user-images.githubusercontent.com/33505774/93558794-d1f0c900-f9b0-11ea-9664-b1e6ef413cc7.png)  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No
---
Título: Notebook cell border has <1px offset
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.50-Insiders - OS Version: macOS   <img width="184" alt="image" src="https://user-images.githubusercontent.com/876920/93391009-69c0ac80-f823-11ea-9a07-f545cf23aa6f.png">   As shown in above image, when border color is set to `#f0f` and cell background is set to `#0ff`, you can tell that there is probably 1px or less misalignment.   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No
---
Título: Support syntax-highlight CompletionItem.detail when shown above the documentation
Descripcion: `CompletionItem` has a `detail` field that is documented as:  > A human-readable string with additional information about this item, like type or symbol information.  It's a `string` and is rendered above the documentation when the extra popup is open. However it doesn't get any syntax highlighting so it looks kinda bad:  ![Screenshot 2020-09-16 at 14 06 34](https://user-images.githubusercontent.com/1078012/93341333-e2286d00-f825-11ea-9dee-6857ac0bcff6.png)  We can do syntax highlighting in the `documentation` field (as it's `string | MarkdownString`):  ![Screenshot 2020-09-16 at 14 07 32](https://user-images.githubusercontent.com/1078012/93341407-fb311e00-f825-11ea-88f6-58e9fa805d14.png)  However if we put the signature there, then it will be duplicated because it's also in the `detail` (and if we remove from `detail` it won't ship in the collapsed completion list).  It would be nice to support highlighting this in some way (whether it's by extending the type, just always doing it, or having some way to suppress the `detail` from the extended popup so it can be inserted above the docs manually).
---
Título: Getting Started experience
Descripcion: ## Overview When opening VS Code for the first time, it can be intimating to figure out how to configure the editor to best meet your needs and workflow. This is even more so for students and those learning new languages. This issue aims to explore what a first run user onboard experience could look like. This will walk the user through the basic core features of using the editor (themes, command palette, extensions) while also teaching users how to access certain features.  ## Designs ![Kapture 2020-09-09 at 15 25 57](https://user-images.githubusercontent.com/35271042/93161773-1e45bb80-f6c8-11ea-8780-6e55162a2570.gif)
---
Título: Explore improvements to welcome pages
Descripcion: This meta issue is to track the various work items related to the welcome page. The main goal is to improve our welcome page for new and existing users while also providing meaningful updates relating to extensions and product updates.  ## Issues - [x] First run user onboarding #106717 - [x] Welcome page explorations https://github.com/microsoft/vscode/issues/63152 - [ ] What's new https://github.com/microsoft/vscode/issues/102139
---
Título: Explore ux for switching notebook kernels/connections
Descripcion: This issue is to capture the ux explorations for switching notebooks kernels/connections. These examples should consider connecting to a local server as well as a remote one. You can think of the relationship as servers (jupyter server) + databases (kernels).  ## Option A This option shows local kernels by default and then provides an option to add a server. Once an additional server has been added, when the user attempts to switch kernels we'll show the parent (server) list first and then drill down to the kernels. If there is authentication (like in the Azure ML extension) then we'll use the authenticator provider.  ![Kapture 2020-09-11 at 14 58 47](https://user-images.githubusercontent.com/35271042/92976515-86ce3780-f43f-11ea-8795-f5a2b424c147.gif)   ## Option B This option also shows local kernels by default, but utilizes a custom view for managing connections. The user can switch kernels either from the quick pick or the view. Any kernel that the user connects to gets added to the respective list (similar to opening Recents quick pick).  ![Kapture 2020-09-11 at 15 03 45](https://user-images.githubusercontent.com/35271042/92976788-3905ff00-f440-11ea-9631-a266a5b40aab.gif)
---
Título: Revisit Proxy Auth Dialog
Descripcion: **Steps to see it in action:** * `git clone https://github.com/microsoft/vscode-proxy-agent.git` * `cd vscode-proxy-agent/tests/test-http-auth-proxy` * `docker build -t test-http-auth-proxy .` * `docker run -d -p 3128:3128 test-http-auth-proxy` * `code --proxy-server=http://localhost:3128` * (running out of sources: configure `extensionsGallery` in `product.json`)  ![image](https://user-images.githubusercontent.com/900690/92928076-e5df7c80-f43e-11ea-893f-50ea3b39827b.png)  **Issues:** * it shows 2 login dialogs instead of one * it would be nice if credentials are remembered (e.g. use some auth service) * it currently does not use our normal way of window opening via `bootstrap-window.js` * it seems to fail when you start VSCode from a network drive (https://github.com/microsoft/vscode/issues/106468#issuecomment-692533307) * it could get some UI polish to look more like our other (custom) dialogs * it is not localized * could this be a dialog triggered from within the workbench and not `electron-main`? * can we add it to the smoke test to capture regressions earlier? * check for more related issues: https://github.com/microsoft/vscode/labels/proxy
---
Título: "x" button in a tooltip overlaps the text
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> ``` Version: 1.48.2 Commit: a0479759d6e9ea56afa657e454193f72aef85bd0 Date: 2020-08-25T10:09:08.021Z Electron: 7.3.2 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Darwin x64 19.5.0 ```  Steps to Reproduce:  1. Open a vscode extension repository (e.g. https://github.com/moshfeu/vscode-compare-folders) 2. Go to package.json > contributes > commands (e.g. https://github.com/moshfeu/vscode-compare-folders/blob/c41b738c4d876cfc613ccfdf78abb80ee58029d7/package.json#L210). 3. Type "command" and observe the tooltip  <img width="857" alt="Screen Shot 2020-09-05 at 21 07 16" src="https://user-images.githubusercontent.com/3723951/92311149-47c26100-efbd-11ea-8544-304eb2fc2c5c.png">  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes Does this issue occur on Insider?: Yes
---
Título: Custom tree hover vs native hover
Descripcion: From @bpasero in https://github.com/microsoft/vscode/issues/106010  Our custom hover is different from native hovers in the following ways: * the position is above while OS native experience seems to be below * the hover still appears very fast for me compared to the native Chrome hover, at least twice as fast * on Chrome at least, once I make the hover appear, moving the mouse to other elements with hover shows the hover almost instant, so I think they have some logic that would make the hover appear faster once you have it visible, this is likely an accessibility feature to make it easier to discover pieces of the UI  The reason why I am sensitive to this is that we should try to match the native look and feel as much as possible. To give another example: we are using hand cursor on clickable elements in the UI and we got users complaining that this is a pattern only seen in web UIs but not native UIs. I fear we might end up annoying more users that want an experience that is closer to what the OS provides.   cc @misolori for UX and @Tyriar for workbench hover in general
---
Título: Notebook diff: needs some UX love
Descripcion: Testing #105770  1. Make some change to the `my-work.github-issues` file 2. Open it in the SCM diff view:  What I do not like from this view is: * Too horizontal vertical lines, reminds me of a real life note book * Does not look like the original notebook view. Why can't we just render two notebook views side by side with the diffs outlined with some background * No clear Vertical line that splites Left and Right side * Looks very different compared to our regular Diff view  fyi @misolori  ![Screenshot 2020-09-02 at 10 49 52](https://user-images.githubusercontent.com/1926584/91960308-0b1b0f00-ed0a-11ea-9499-47621e948908.png)
---
Título: Notebook diff: cell metadata change does not stand out
Descripcion: Testing #105770  1. Open the `my-work.github-issues` file 2. Unlock some cell 3. Notice how the file appears as modified in the Git changes view, however no change is shown  I would expect that my change to unlock / lock a cell is shown in the diff view.
---
Título: Recommendation is too aggressive on first run
Descripcion: From @kieferrm   I started up with a clean user data dir and clean extensions dir. When I start VS Code I get immediately the docker extension recommendation. As this is the first run experience, this feels much too aggressive. Also, we tell the user that we don't only send telemetry, we also tell them we already inspected their local system.  I think we should take our time and prompt on the 2nd or 3rd day of usage.  ![image](https://user-images.githubusercontent.com/4674940/91907038-fda84b00-ec5d-11ea-8fb6-0b3c4ff61645.png)
---
Título: Markdown cell header styling
Descripcion: Testing #105769  H4 Markdown elements are rendered in bold which looks out of place when all other text elements are regular weight.  ![image](https://user-images.githubusercontent.com/12818376/91925928-ecc1fe80-ec8a-11ea-9656-efa53375bd36.png)
---
Título: Execution order label position
Descripcion: Let's use the to continue the discussion from https://github.com/microsoft/vscode/issues/104680 and Teams in September. The current location is aligned with the bottom of the cell. If we keep that location, it needs polish, for example, for overflow behavior and growing to the left.
---
Título: Explore supporting multiple run actions on a notebook cell
Descripcion: We've received requests from the Python extension for the desire to surface multiple run actions for a single cell. This issue is to capture the ux explorations for this.  ## Split run button  This would allow an extension to specify additional run actions and be in the same location as the current run button  ![image](https://user-images.githubusercontent.com/35271042/90923797-29e0e380-e3a3-11ea-90ac-17a29f83704e.png)
---
Título: Improve keyboard shortcut sync failure flow
Descripcion: I've got the `Unable to sync keyboard shortcuts because the content in the file is not valid. Please open the file and correct it.` error and was surprised by the zero guidance provided in the following steps.  ![image](https://user-images.githubusercontent.com/35271042/90919813-fc446c00-e39b-11ea-874a-b817c73b754d.png)  Then when you open your keyboard shortcuts: ![image](https://user-images.githubusercontent.com/35271042/90919788-f0f14080-e39b-11ea-936a-4efb3ba1f281.png)  It's not immediately obvious what to do next. If you look really closely you can see in the scrollbar that there are errors, but this is not immediately obvious. Suggestion would be to provide more guidance, like open the peek error view when you open this file:  ![image](https://user-images.githubusercontent.com/35271042/90919881-18e0a400-e39c-11ea-8ee1-2f4867bc2bcb.png)
---
Título: Progress bars should have a way to report what they are about
Descripcion: Issue Type: <b>Bug</b>  This is a rather general issue on vscode UX choice for it's busy indicator (aka throbber, or "that flying dash under assorted elements throughout the interface").  Whenever my vscode is busy for a long time, I'm always curious about "what is going on". Nowhere is this information available, and it should be.  I have simply many issues with git and typescript in vscode, but I can't even start writing the issues, because you will "need more information".  That's it: to start, I think there should be a clear indication about tasks that were started but not completed... something that tells us why is there a "flying dash" under open file tabs, or under "explorer view title", or elsewhere.  VS Code version: Code - Insiders 1.48.0-insider (2277c8e2a3e1cc630a6397301ba54a1dccd8a60d, 2020-08-07T11:32:09.993Z) OS version: Windows_NT x64 6.1.7601  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-3340 CPU @ 3.10GHz (4 x 3093)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off_ok<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|15.44GB (3.88GB free)| |Process Argv|| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (19)</summary>  Extension|Author (truncated)|Version ---|---|--- bracket-pair-colorizer|Coe|1.0.61 vscode-eslint|dba|2.1.5 xml|Dot|2.5.0 gitlens|eam|10.2.1 vscode-lombok|Gab|1.0.1 java-properties|ith|0.0.2 git-graph|mhu|1.23.0 vscode-typescript-tslint-plugin|ms-|1.2.3 java-ide-pack|pve|1.2.1 java|red|0.59.1 vscode-xml|red|0.11.0 vscode-yaml|red|0.8.0 vscodeintellicode|Vis|1.2.7 vscode-java-debug|vsc|0.27.1 vscode-java-dependency|vsc|0.9.0 vscode-java-pack|vsc|0.9.1 vscode-java-test|vsc|0.22.3 vscode-icons|vsc|10.1.1 vscode-java-saber|You|0.1.1   </details> <!-- generated by issue reporter -->
---
Título: Can you please add run single cell on top tool bar
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  If i want to enter large number of lines of code snippet in a single cell and if i want to execute it , I have scroll up to the starting of cell to run it . Instead i feel the UX will be better if that feature is included in tool bar itself , so that i don't have to scroll up every time
---
Título: Make notebook status bar contributable
Descripcion: It would be great if extensions could provide richer functionality via the status bar, like we currently do in our Core status bar. One idea is this will allow for extensions to provide content actions that are separate from cell actions, like a Markdown WYSIWYG:  ![image](https://user-images.githubusercontent.com/35271042/90573561-8eb1f900-e16b-11ea-9ef3-37d9dceaffe6.png)
---
Título: Pycharm like jupyter control
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Instead of having a plus button to add a new cell, can we make a new cell using the '#%%' and '#%% md' statements. Also, instead of having the output viewed directly under the cell, can we have an option move outputs to the side.  ![23ae1b95-4dad-466f-ae97-41d0b18725ee](https://user-images.githubusercontent.com/49263742/90475876-5d4b1600-e0f6-11ea-8e96-9f0ae73063f3.gif)
---
Título: Hover state for adding new cells is hard to find
Descripcion: During the Python user studies we discovered that some users had a hard time finding the add new cell toolbar at the bottom However, once they discovered it they really liked the position of it. We should explore to see if we can improve this discoverability. A few ideas below:  ## 1. Increase the hover target   We can try to increase the vertical hover target to allow users to trigger this. We'd need to be cautious to make sure this can work with interactive elements above it like the status bar.  ![image](https://user-images.githubusercontent.com/35271042/90428859-7792de80-e079-11ea-9234-b0972b734fca.png)   ## 2. Always visible on hover  Similar to our cell toolbar, but this adds visual noise while making it highly discoverable. The other cells can still be triggered on hover.  ![Kapture 2020-08-17 at 11 13 35](https://user-images.githubusercontent.com/35271042/90429535-c3925300-e07a-11ea-8254-b81a5345eb6f.gif)
---
Título: Notebook UX Feedback
Descripcion: This issue is to track the feedback from the [new native notebook experience](https://devblogs.microsoft.com/python/notebooks-are-getting-revamped/).   ## Bugs - [x] Make Markdown Cells Grabbable #104104 - [x] Add cells above first cell #96446 - [x] Clearing output is unclear/hard to find, add to context menu - [x] Delete cell action should be at the end #104082 - [x] Improve execution count discoverability on hover/active cells #104680 - [x] Hover state for adding new cells is hard to find https://github.com/microsoft/vscode/issues/104854  ## Feature requests - [x] Make notebook status bar contributable #104958 - [x] User settings for cell toolbar position & status bar visibility - [ ] Drag and drop for joining cells - [ ] Multi-select on cells
---
Título: Move editor actions into the window title to free up space
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> with [https://code.visualstudio.com/api/references/vscode-api#StatusBarItem](https://code.visualstudio.com/api/references/vscode-api#StatusBarItem)  there are to many statusbar item  to be added by extensions. it is too many to show those tabs, even hard to select one tab.   catastrophic extrusion of tabs. I think, the statusbarItem is good idea, but it is also a bug of designe of interact-surface. title bar is another good layout to place those statusbaritems in stead of tabs collectiion. ![image](https://user-images.githubusercontent.com/1876302/90325496-e5be9f00-dfae-11ea-82f5-f5d04bade1d6.png)  just like vs ![image](https://user-images.githubusercontent.com/1876302/90325687-48189f00-dfb1-11ea-8ee6-bd338b8eebf8.png)
---
Título: Improve execution count discoverability on hover/active cells
Descripcion: # Summary In the Python user studies we found out that users had a hard time finding the execution count when they would run cells. This is because we hide the execution count when a cell is hovered or active and show the run button in place:  ![Kapture 2020-08-14 at 10 14 57](https://user-images.githubusercontent.com/35271042/90275422-2388bf80-de17-11ea-88fe-0c2691cf64c6.gif)  # Explorations  ## 1. Place in status bar Closer to the execution time and near the output window  ![image](https://user-images.githubusercontent.com/35271042/90276051-1e784000-de18-11ea-8ec9-f1edc8e95e0a.png)  ## 2. Only show on hover of execution count When there is no execution count, we could display the run button. When the execution count appears, then we make the play button only appear when you hover on execution count. This could introduce discoverability issues with the run button.  ![Kapture 2020-08-14 at 11 28 09](https://user-images.githubusercontent.com/35271042/90281417-62237780-de21-11ea-9207-fa5abf79acda.gif)   ## 3. Vertically stack This could cause visual noise/distraction as you scroll + hover several cells at a time  ![Kapture 2020-08-14 at 11 16 27](https://user-images.githubusercontent.com/35271042/90280357-a281f600-de1f-11ea-9e75-70a55190e61c.gif)   ## 4. Place at the bottom of cell  This has the potential to clash with the output renderer that appears on the left of the output  ![image](https://user-images.githubusercontent.com/35271042/90280575-ff7dac00-de1f-11ea-8c1e-0d6b8e4d3b9e.png)
---
Título: Feature request: Make vscode adoption easier for Visual Studio users
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hi,  I'm a regular Visual Studio user, and I'm finding myself needing to use vscode more regularly. One thing that I'm finding detracts from feeling comfortable using it is subtle visual aesthetics and behaviors that might perhaps stem from vscode being an Electron based application, whereas Visual Studio is a Windows/WPF application.  Here are some examples of things that stand out to me. I could make a list much longer than this (I will keep updating this list as I keep using vscode), but hopefully this gets the idea across. I may not be explaining some of these things with the best terminology since these are visual/gut feelings I have and I don't know how to express them properly or know the technical reasons for how some of these things work.  1. When hovering over files in the explorer, the mouse uses the hand icon like when hovering over links in a web page, but Visual Studio uses the normal pointer icon. 2. Tabs    - The tab that shows the open file name of open file is very big compared to Visual Studio, both in width, height, and font size.    - Pinning a tab doesn't have pin icon like Visual Studio that you can left click, rather you have to right click to get the option in a context menu.    - A pinned tab in vscode becomes very small and stops displaying the filename, whereas Visual Studio keeps the filename and size. Not seeing the filename makes it hard to remember what was pinned (looks like this issue is also described in #98161).    - There isn't a hover state on tabs themselves, whereas in Visual Studio they change to a different color    - When I hover over the `x` of a tab to close it, there isn't a hover state for the `x`.  3. The explorer, source control, extensions, etc. items are on the left side, whereas in Visual Studio they are either located on the right or accessible via other methods (status bars, file menus). I realize these can be moved to the right by a setting but it was something I had to figure out how to do. 4. Menus    - Compared to Visual Studio, the file and context menus looks different. I would describe this as perhaps Visual Studio menus are look more like native OS menus, whereas vscode ones look like a positioned HTML element mimicking a menu.    - vscode menus have different options when in similar contexts, no icons, and the name and shortcut keys are shown in a different horizontal order.    - The fonts in menus just don't look as good, they seem less focused/blurry. Visual Studio ones look sharper. 5. Even when I configure the same font and size in vscode as I use in Visual Studio, it doesn't look the same size. Maybe there is some difference in rendering technology behind this. 6. There isn't a toolbar in vscode, I don't think this is a feature. 7. Scrollbars don't look like regular scrollbars (no up/down arrows at the top and bottom, don't have padding on the left and right side of the dark part of the scroll bar). 8. Visual Studio feels like a desktop application with things being visually tighter and perceptively feeling snappier, compared to vscode not having these attributes. 9. Most windows in Visual Studio are draggable to different areas of the screen to create custom layouts, and can be docked, pinned, and with a nice drag and drop indicator. vscode's drag and drop is much more limited in what can be dragged around and doesn't look as good. For example, explorer, search, source control are all tied together and can't be dragged around, whereas in Visual Studio they can all be manipulated independently.  Aside from this list, which I could keep expanding upon if that is helpful, I feel like I'm using a web browser. I assume a lot of this is because it IS a web browser, but just because vscode is built upon web technologies, does it have to look and feel like a web page? I don't know how much of the user experience is restricted by the use of Electron.  If there are a lot of existing settings that already address some of these concerns to make vscode look and feel more like Visual Studio, a `Visual Studio emulation settings` option that sets that collection of settings with the necessary values all at once would be nice.
---
Título: Include select service flow into the configure command and turn on sync wizard
Descripcion: In order to make the select service more discoverable and to help the user understand that it's a thing, we should add it to the flow for turning on settings sync _for Insiders only_:  Step 1:  ![image](https://user-images.githubusercontent.com/2193314/90025240-b506fe80-dc6a-11ea-9e21-bc0532bba5a0.png)  Step 2:  ![image](https://user-images.githubusercontent.com/2193314/90025231-b2a4a480-dc6a-11ea-82d6-12fd0c6bc3a0.png)  Step 3: Account selection  We should also roll the select service into the `Settings Sync: Configure...` command and remove the extra select service command.
---
Título: Text under icons in activity bar
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> People who are new to VS Code could benefit if we put names under the extension icons in the activity bar. In user studies with students, they tended to click on text over icons when first exploring the editor. Could we use the default extension name as the text? Something like this:  ![image](https://user-images.githubusercontent.com/9721254/89950134-d79f0600-dbdd-11ea-9dfe-0236ae5d697d.png)
---
Título: Autocomplete appears on top of replace dialog
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.47.3 - OS Version: macOS 10.15.3  Steps to Reproduce:  1. Open a new file and type something 2. Open autocomplete tooltip (by pressing ctrl+space) 3. Open the replace panel 4. Try to scroll the editor  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <img width="636" alt="Capture d’écran, le 2020-08-08 à 21 05 36" src="https://user-images.githubusercontent.com/199648/89717884-f1143800-d9ba-11ea-809b-325b99d1eccc.png">
---
Título: Collapse Chevron - Native Notebooks Editor
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  Users during Python Extension Native Notebooks QP (5/8) failed usability test on collapse cells.   Potential solution is to make the chevron marker larger or more bold.
---
Título: Align conflicts handling with manual merge behaviour
Descripcion: Currently following prompt is shown when there are conflicts notification while sync is on.  <img width="470" alt="image" src="https://user-images.githubusercontent.com/10746682/89476827-fc355100-d78b-11ea-845a-aa1c4c3bda90.png">  Clicking on `Show Conflicts` action opens the diff editor directly. Instead align this with manual merge behaviour by opening the conflicts view and allowing the user to merge manually.
---
Título: Bottom border of collapsed cell looks messy
Descripcion: Testing #103887  The extra border here looks rather messy:  <img width="630" alt="image" src="https://user-images.githubusercontent.com/2230985/89462302-0c184b00-d722-11ea-97bd-dda71dda154b.png">  If we want to indicate there's folded content, maybe a light or dashed border aligned with the vertical centerline of the folded icon would look better?
---
Título: Clickable area to expand should go across entire cell
Descripcion: Testing #103887  I feels like I should not have to click on the icon exactly, but instead the area to rexpand should cover the entire horizontal area of the cell.
---
Título: Create design guidelines for extension authors
Descripcion: We've received a lot of requests from extension authors about needing design guidelines for best practices and recommendations. This could cover a wide range of areas like: activity bar, sidebar, custom views, status bar, webviews, etc. Below is a list of a few design guidelines that we can model this after:  - [GitHub Primer](https://primer.style/design/ui-patterns/button-usage) - [Adobe Spectrum](https://spectrum.adobe.com/page/cards/) - [Salesforce Lightning](https://www.lightningdesignsystem.com/guidelines/overview/) - [Atlassian](https://atlassian.design/guidelines/product/components/banners)  cc @gregvanl as I think this might live on our website
---
Título: UX improvement for find decoration for line starts
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version:1.47.3 - OS Version:win10 1909  ![regex](https://user-images.githubusercontent.com/50835399/89142549-4e9f2380-d57a-11ea-83d4-a0f866ee2b50.png)  Steps to Reproduce:  1.Who is wrong with this regular expression? 2.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: No
---
Título: Cannot view completion description using mouse
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates.  DONE --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/  DONE -->  - VSCode version: Code 1.48.2 (a0479759d6e9ea56afa657e454193f72aef85bd0, 2020-08-25T10:13:11.295Z) - OS version: Windows_NT x64 10.0.19041 - Does this issue occur when all extensions are disabled?: **Yes**  Steps to Reproduce:  1. Open any file with autocomplete support (like settings.json) 2. Start typing to trigger completion dropdown 3. Enable documentation with <kbd>Ctrl</kbd>+<kbd>Space</kbd> 4. Now scroll down using mouse 5. Click on a completion item using right-click (or left-click with a modifier key like <kbd>Ctrl</kbd> or <kbd>Alt</kbd>)  Current Behavior:  - clicking on the completion item immediately accepts it - this makes it **impossible to view documentation using the mouse**  - I couldn't find any command to select (focus) the hovered CompletionItem (and even if there was one, [it couldn't be mapped to mouse click](https://github.com/microsoft/vscode/issues/3130)  Workaround:  - scroll to the item you want to select and press <kbd>PageUp</kbd>/<kbd>PageDown</kbd> and then up/down arrows a few times to select the desired item  ![workaround using keyboard instead of mouse](https://user-images.githubusercontent.com/8436102/92237299-6807f800-eeb7-11ea-8d77-469b1e7778d1.gif)  I think there should be a way to select `CompletionItem`s using the mouse without accepting them immediately (which is what clicking on them does now)
---
Título: [notebook] Reduce vertical space between output data.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.48.0-insider - OS Version: Win10  Steps to Reproduce:  1. Install [.NET Interactive Notebook extension](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode) 2. Open an existing file (can be blank) with the extension `.dib`. 3. Set cell contents to this and execute:  ``` csharp Console.WriteLine(1), Console.WriteLine(2), ```  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: N/A  The C# code snippet essentially mimics `"1\n2"` but the rendering makes it look like it was `"1\n\n2"`.  The same output is observed if `WriteLine` is changed to `Write` which doesn't append a newline.  Actual output: ![image](https://user-images.githubusercontent.com/926281/88975974-15ac3980-d270-11ea-98e9-71cb1e08d824.png)  Desired output (**faked with paint**): ![image](https://user-images.githubusercontent.com/926281/88976127-61f77980-d270-11ea-83af-eddfe178a261.png)
---
Título: No visible UI change when cell execution is fast
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.48-Insiders - OS Version: macOS  Steps to Reproduce:  1. Install Python extension and turn on native notebook support (https://devblogs.microsoft.com/python/notebooks-are-getting-revamped/) 2. Create a new file, create a cell with content `a = 1` 3. Click the run button  The execution is fast so there is no progress bar or spinner and since the mouse is on top of the run button, users can't see the execution count as well.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No
---
Título: Dropdown base font-size increased on Insiders
Descripcion: Issue Type: <b>Bug</b>  See debug viewlet and terminal dropdown:  ![image](https://user-images.githubusercontent.com/35271042/88317630-65b65980-ccce-11ea-9008-df65f13e6306.png)   Compared to Stable:  ![image](https://user-images.githubusercontent.com/35271042/88317671-78309300-ccce-11ea-85ce-650419fa253c.png)    VS Code version: Code - Insiders 1.48.0-insider (8c426f9f3b6b18935cc6c2ec8aa6d45ccd88021e, 2020-07-23T05:40:23.559Z) OS version: Darwin x64 19.6.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7920HQ CPU @ 3.10GHz (8 x 3100)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 2| |Memory (System)|16.00GB (0.19GB free)| |Process Argv|-psn_0_4240395 --enable-proposed-api miguelsolorio.vscode-fluent-icons --crash-reporter-id 6c893641-26cf-4adf-abbc-7a4135b893c1| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (39)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-track-build-errors|aes|0.0.2 mock-debug|and|0.42.1 markdown-checkbox|bie|0.1.3 vscode-opennewinstance|chr|0.0.7 vscode-eslint|dba|2.1.8 pug-formatter|duc|0.6.0 gitlens|eam|10.2.2 prettier-vscode|esb|5.1.3 vscode-open-in-github|fab|1.2.3 vscode-pull-request-github|Git|0.18.1 todo-tree|Gru|0.0.178 all-symbol-kinds|jri|0.0.1 vscode-colorize|kam|0.8.17 vscode-fluent-icons|mig|0.0.1 theme-monokai-pro-vscode|mon|1.1.17 vscode-duplicate|mrm|1.2.1 vscode-scss|mrm|0.9.0 vscode-azureappservice|ms-|0.17.0 vscode-azurestaticwebapps|ms-|0.2.0 python|ms-|2020.8.95714-dev vscode-pylance|ms-|2020.7.3 remote-containers|ms-|0.128.0 remote-ssh-edit-nightly|ms-|2020.7.22500 remote-ssh-nightly|ms-|2020.7.22500 remote-wsl|ms-|0.44.4 azure-account|ms-|0.9.1 hexeditor|ms-|1.1.0 vscode-github-issue-notebooks|ms-|0.0.35 vscode-markdown-notebook|ms-|0.0.10 vscode-typescript-tslint-plugin|ms-|1.2.3 debugger-for-chrome|msj|4.12.9 vetur|oct|0.25.0 LiveServer|rit|5.6.1 svg-preview|Sim|2.8.3 vscode-fileutils|sle|3.0.1 enumerator|swi|0.0.6 sass-indented|syl|1.8.9 ms-teams-vscode-extension|Tea|1.0.3 sort-lines|Tyr|1.9.0  (3 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Notebooks: explore dragging text outside of cell to create new cell
Descripcion: Similar to #103119, this one also came out of the study discussion. It would be interesting to see if we you could select text and dragging outside of the cell to create a new cell. Rough mockup:  ![image](https://user-images.githubusercontent.com/35271042/88227862-2252e100-cc23-11ea-8f92-d2323c9ad079.png)
---
Título: Notebooks: explore dragging and holding a cell to join cells
Descripcion: We saw this come up on a user study and thought it was an interesting interaction we could explore. We sort of do this in the editor by selecting text and dragging the text (see line 43):  ![image](https://user-images.githubusercontent.com/35271042/88224629-216b8080-cc1e-11ea-9a43-e5d775f0c1bc.png)  Here's a very rough mockup:  ![image](https://user-images.githubusercontent.com/35271042/88227013-ce93c800-cc21-11ea-8826-e8f244d9b23e.png)   We would have to watch out for how this works with regular drag and drop and make sure it doesn't get accidentally triggered.  cc @rebornix
---
Título: Idea: Flash when "going back up" on F3
Descripcion: When I search for something and then hit F3 or its equivalent to go to the next item, something that usually matters to me is if I'm repeating the loop or not. What I do is check the scrollbar to check if it jumps back up, but this is not ideal. So the idea is to make the code area "flash" for a split second when the next occurrence happens to wrap to the top again. This gives a clear feedback that it has wrapped. What I have in mind is applying some css class to the code area and remove it after 200ms or so, maybe some box-shadow around it.
---
Título: suggest widget size
Descripcion: Does anyone know if there is another simpler way to do this?   **This is not a proper solution, but a hack that might break after any program update!**  As VsCode is styled mainly using CSS to change the size you have to simply override default values. This can be accomplished by using "Custom CSS and JS loader" extension and injecting your own CSS.   _Width value is static 430px:_  `.monaco-editor .suggest-widget {   width: 430px,  } `   _Height value is set inline on element by editor depending on how many suggestions there are so !important is necessary to owerride it:_  `.monaco-editor .suggest-widget>.tree {   height: 300px !important, }  `  _Originally posted by @povilasbaranovas in https://github.com/microsoft/vscode/issues/29126#issuecomment-639731615_
---
Título: Terminal VSCODE_GIT_IPC_HANDLE warning triangle
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.48.0-insider (system setup) 5e5fa3edde19d38ac512d65ccefe2a12ecab025a - OS Version: Windows 10 x64 10.0.19041  Steps to Reproduce:  1. Launch VS Code insiders with --disable-extensions 2. Open the terminal pane 3. Not the warning that says: ``` Extensions want to make the following changes to the terminal's environment:  VSCODE_GIT_IPC_HANDLE=\\.\pipe\vscode-git-114c7062bd-sock ```  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  Git version: 2.27.0.windows.1 This occurs with CMD.exe or Powershell.exe as the default terminal  ![image](https://user-images.githubusercontent.com/7095040/87721223-b7655e00-c77b-11ea-8f52-c0ac0c9f228e.png) ![image](https://user-images.githubusercontent.com/7095040/87721290-d237d280-c77b-11ea-9109-959cd1c4b47b.png)
---
Título: Settings sync: manual sync flow feedback
Descripcion: Overall the flow is nice imho 👍   **Dialog**  The dialog does not seem to reflect what the options are, esp. given "Sync Manually" is the default:  ![image](https://user-images.githubusercontent.com/900690/87529286-0f726680-c68f-11ea-9b59-f00ead3f349b.png)  **Actions**  This one deserves explanation, maybe at the minimum it should have a "..." and then trigger a dialog explaining what happens.  ![image](https://user-images.githubusercontent.com/900690/87529386-37fa6080-c68f-11ea-9152-ad40c3d2ab3c.png)  **Icons**  The "merge" icon imho is bad, initially I thought this would refresh the view to diff it again:  ![image](https://user-images.githubusercontent.com/900690/87529527-6d9f4980-c68f-11ea-8e30-dd0290884b18.png)  For consistency I would keep the icons (Accept Remote, Accept Local) even when the file does not exist in either place. Otherwise it gets a bit hard to understand what is going on.  ![image](https://user-images.githubusercontent.com/900690/87529656-97f10700-c68f-11ea-8c49-37550bd2a6e9.png)  **Flow**  Since either "Accept Local", "Accept Remote" or "Merge" can be destructive operations, I wonder if a dialog should appear each time you click it explaining you exactly what the operation does. This is similar to clicking the "Discard Changes" button in Git that will really delete any changes you made.   ![image](https://user-images.githubusercontent.com/900690/87530035-1c438a00-c690-11ea-96e5-3b6f6052b7e3.png)   **Bugs**  Clicking on a file does not preserve focus but moves it into the editor:  ![image](https://user-images.githubusercontent.com/900690/87529842-dc7ca280-c68f-11ea-88ca-7ffe7a5c1d2b.png)  //cc @misolori
---
Título: Adding a cell below a folded cell adds it in the wrong place
Descripcion: ![Kapture 2020-07-14 at 10 28 33](https://user-images.githubusercontent.com/35271042/87457166-cce05980-c5bc-11ea-9a7e-88f79e25c275.gif)  1. Create a markdown heading with a child cell below 2. Fold markdown heading 3. Add new cell below folded cell 4. :bug: Markdown heading is expanded and new cell is added below  Expected to add new cell below folded cells
---
Título: What's new icon/UI for extensions (and future API)
Descripcion: In the extension authors call today, it was confirmed that extension authors want to share the following items when extensions are updated. We also know that customers don't want to be bombarded by welcome/update pages opening when extensions are updated.  * New features * Fixed issues * Features/UI that moved * Images or gifs showing how new features work * Guided tours of new/updated features  With that in mind, it's possible to alert customers that extensions have been updated and allow them to go as deep as they want, whenever they want, to learn about new features and fixes.   Provide a new UI element in the activity bar of a "gift" or something similar to indicate extensions have been updated.  ![image](https://user-images.githubusercontent.com/1186948/87178603-406b2980-c292-11ea-86e4-2d30f375a6ef.png)   The badge count would indicate how many extensions have been updated and clicking the "gift" icon would show an overlay with a short blurb taken from the extension changelog (automatically taken from the .md).  Firefox does something like this: ![image](https://user-images.githubusercontent.com/1186948/87179021-ed45a680-c292-11ea-9700-dab33faad6fd.png)  This allows customers to mark items as "read" to remove the badge count, out out of future update notifications, and click into the "learn more" link to go into the extension's changelog in the extension view.   Showing the changelog could be automatic, but in future iterations we could create richer experiences such as overlays or guided tours. This would require an API that extensions would expose to launch into the update experience.
---
Título: Restore Tree View Toggle Button
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> As noted in #102041, the tree view toggle in the source control view has been removed in favor of a context sub-menu. Please consider bringing this button back as I switch frequently between both views when I'm selecting changes to stage. Now the process much more tedious as it requires 3 clicks instead of just 1.
---
Título: SCM: Single view feedback
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> I do not like the new look of the source control. In the old system, if I had 4-5 repos showing, the one or two with active changes would show up clearly at the bottom. Now it's very muddled, and sort by status simply puts the repos with changes at the top. Maybe allow for sorting such that changes show up at the bottom where there is plenty of null space, not at the top surrounded by other repos and text/widgets.  Repos with changes should stand out and be separated from other nominal repos. The current sytsem doesn't do that.
---
Título: [SCM] Action buttons are not always visible
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  I have an issue with the action buttons visibility. If my side panel width is not big enough and the names of my repositories are relative long I can not see the buttons. Below is a screenshot of the issue:  ![image](https://user-images.githubusercontent.com/11719529/87150219-f5610e80-c2b1-11ea-8808-d2b6ebb5fdc8.png)  Also, there is no commit button, so I have to increase the width of the panel, which is not the best solution, because when I switch to the Explorer view is it is just wasted space.  ![image](https://user-images.githubusercontent.com/11719529/87150527-859f5380-c2b2-11ea-971a-4a0d24dd294e.png) ![image](https://user-images.githubusercontent.com/11719529/87150495-6ef8fc80-c2b2-11ea-8447-c198c2eefaf1.png)  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.47.0 - OS Version: Windows 10 Pro 2004 19041.329  Steps to Reproduce:  1. Add a repository with relative long name to Explorer 2. Switch to Source Control panel  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Suggest status bar screen cheese
Descripcion: * enable suggest status bar * sometimes you get this 🔽    <img width="1017" alt="Screenshot 2020-07-10 at 10 59 42" src="https://user-images.githubusercontent.com/1794099/87141507-6d740800-c2a3-11ea-9985-5f0ac0403e94.png">
---
Título: Explore showing indent guide in notebooks as a visual indicator that cells are "under" the markdown headers
Descripcion: Now:  ![image](https://user-images.githubusercontent.com/2193314/86940086-38c34d80-c0f7-11ea-8dce-343ef23652d1.png)  Example:  ![image](https://user-images.githubusercontent.com/2193314/86940133-4a0c5a00-c0f7-11ea-8310-20855fbcf42c.png)  Maybe this could only show when hovering the twisty or header? This is similar to the list widget.
---
Título: Notebooks: cell background makes it look heavier
Descripcion: I just looked at how notebooks used to be in stable and prefer it actually over our current designs with regards to the background color on cell. Compare the initial look of a notebook.  **Stable** ![image](https://user-images.githubusercontent.com/900690/86507270-3ef3ba00-bdd7-11ea-93ed-ba04706ec9a8.png)  **Insiders** ![image](https://user-images.githubusercontent.com/900690/86507278-50d55d00-bdd7-11ea-8d40-982f4a65cef5.png)  Maybe the cell selection background could be optional for people that want it?
---
Título: Notebooks: only show the status bar after executing a cell
Descripcion: From #101600  Proposal would be to hide the status bar in notebook cells unless the cell has been executed. This means that the language picker would be hidden, which I personally think should be hidden unless there is more than 1 language (you can still perform this action via the command palette).  ## Default state ![image](https://user-images.githubusercontent.com/35271042/86409376-9e35bb00-bc6d-11ea-9054-2f1526b601d3.png)  ## With execution ![image](https://user-images.githubusercontent.com/35271042/86409423-b7d70280-bc6d-11ea-96cc-3f918dc4d56a.png)  cc @kieferrm @roblourens @jrieken
---
Título: Notebooks: explore a more compact bottom toolbar
Descripcion: Related #101600  We currently have this bottom toolbar for adding new cells:  ![image](https://user-images.githubusercontent.com/35271042/86403160-fe266480-bc61-11ea-9029-6c375cde6cfb.png)  Feedback from the team has been that the bottom toolbar takes up a lot of space and feel the need to iterate on the ux of this. Below are a couple of ideas + explorations around how we could make it look more compact.  ## Overlay buttons ![image](https://user-images.githubusercontent.com/35271042/86403898-76415a00-bc63-11ea-9342-2ab4dc453058.png)  ## Secondary toolbar ![image](https://user-images.githubusercontent.com/35271042/86403990-9d982700-bc63-11ea-958e-a63f9ee5cb20.png)
---
Título: Notebooks UI
Descripcion: Sorry for filing such a kitchen sink issue...  Some comments on the current UI:  - We're being too generous in using padding in this view. There is sooooo much whitespace for so little information. - Indentation looks broken: text editors should be left aligned with paragraphs. I see that we're making space for that `play` action, but why isn't that action simply inside the right side action bar? At best, you could still align the editor with the paragraphs and just outdent the action, just like paragraph twisties are outdented. - There still is no text indentation inside the editors https://github.com/microsoft/vscode/issues/99363 - There is an entire page of whitespace if I scroll all the way down. This makes no sense in a non-text editor view. It feels very weird. - _Selecting_ a row makes it appear like it _popped out_ of the screen with the eerie shadow - Why does every cell have a status bar? This takes up so much expensive vertical space and even creates screen cheese (see below). Why not put those actions inside the action bar?  ![image](https://user-images.githubusercontent.com/22350/86363013-7b5bd480-bc76-11ea-917c-418eb1922aad.png)  ![recording (1)](https://user-images.githubusercontent.com/22350/86364732-d7bff380-bc78-11ea-8e6a-676dedf83c20.gif)  cc @lszomoru @bpasero @misolori
---
Título: Allow notifications to have newlines
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  I would like to be able to use newlines in the notifications.  I know it has already been rejected [here](https://github.com/Microsoft/vscode/issues/48900), but the VSCode native alerts are able to have multi-line comments, so why isn't this an option for the extensions? If `"Notifications are imho not the right place to show structured text with formatting"`, then where else are we supposed to show complex notifications? Is there any other available location in VSCode?  Also I would argue that multi-line notifications are a pretty basic thing. I am not asking for the ability to add sixteen colors and a cursive font, I just need to be able to, say, make a confirmation message which shows the contents of an object in a structured way, for example.  And I am [not the only one who still wants this](https://stackoverflow.com/questions/54300025/how-to-newline-in-vscode-window-showinformationmessage).  Therefore opening this as a feature request again.
---
Título: Tweak peek inside notebooks
Descripcion: @isidorn had shared this with me a while back  * have a notebook * run reference search or F8 for errors <img width="913" alt="Screenshot 2020-07-01 at 17 04 56" src="https://user-images.githubusercontent.com/1794099/86259989-ffea1c80-bbbc-11ea-8357-81be4fbd07c9.png">  Issues/suggestion:   * there are many lines for peek and for the focus border * the peek editor has some whitespace at its left and right side * instead of lines we should experiment with more background color, e,g drop the outline and only use background
---
Título: Notebooks: consolidate output actions
Descripcion: This is more of a generic notebook request. Would love it if we could consolidate the output actions so they're in the same place. We could try to add them to the toolbar with a separator. This would allows us to have additional output actions (like expand/collapse output):  ![image](https://user-images.githubusercontent.com/35271042/86173759-52e8a480-bad5-11ea-8616-967aaeb6f278.png)  ![Kapture 2020-06-30 at 13 30 22](https://user-images.githubusercontent.com/35271042/86174620-d951b600-bad6-11ea-95c7-6384a6ab88dc.gif)  And we could also put less used actions in the ellipsis (locked, etc.)  cc @roblourens @jrieken
---
Título: Notebook: weird drop-shadow border around active cell
Descripcion: Testing #100965  I would prefer just the focus outline I think:  ![image](https://user-images.githubusercontent.com/900690/86111283-dd75d780-bac6-11ea-91dd-b27b0cf29240.png)
---
Título: Notebooks: no results output should have better indication
Descripcion: Refs: https://github.com/microsoft/vscode/issues/100965  1. Open `my-work.github-issues` 2. Run some cell that produces no results, or modify a cell such that it produces no results 3. Output of the cell is non existent - since there are no results. It would be nice if there was some UI decoration to make this more clear  I see that it says `0 results` but it is easy to miss imho  ![Screenshot 2020-06-30 at 11 08 32](https://user-images.githubusercontent.com/1926584/86107436-1c555e80-bac2-11ea-90de-86b2406c3a81.png)
---
Título: Selected but not focused sessions inline actions have wrong color
Descripcion: 1. Start debugging two sessions 2. Have one selected and one focused in the tree 3. Hover over the selected one -> notice debug inline actions do not have contrast. They should have that special css rules applied so they are white.  How it is  ![Screenshot 2020-06-26 at 12 39 30](https://user-images.githubusercontent.com/1926584/85849037-82806f80-b7aa-11ea-8a0a-d2d39f7ffe09.png)  How it should be  ![Screenshot 2020-06-26 at 12 42 53](https://user-images.githubusercontent.com/1926584/85849071-91672200-b7aa-11ea-81a0-973d357cade7.png)  @misolori feel free to asign back to me
---
Título: Changes view: harder for me to understand "clean" state for a repo
Descripcion: One thing I am not so happy about the new changes UX is that I often think that the other repos are dirty changes I need to review:  ![image](https://user-images.githubusercontent.com/900690/85844366-eacb5300-b7a2-11ea-9a9a-b23b85e00fd0.png)  I wonder if there is anyway to distinguish changes (= files) more from other repos. Of course this is harder for me where file icons are turned off.  //cc @misolori
---
Título: debug-alt codicon in size for action bar
Descripcion: As mentioned in https://github.com/microsoft/vscode/issues/92269#issuecomment-649311774  We need the debug-alt codicon in size to fit in the editor title action bar. Is it possible to introdcue a new codicon or to fix the current one such that the icon is well aligned with others?  ![Screenshot 2020-06-25 at 15 58 33](https://user-images.githubusercontent.com/1926584/85733752-bd2bce80-b6fc-11ea-9113-61ed87f6dd0d.png)
---
Título: Very long suggest details freezes vscode
Descripcion: * have a very long string, like https://github.com/microsoft/vscode/blob/c66ac0387c12b0293fc58dd7922fa4a4861cd567/src/vs/workbench/test/browser/api/extHostDocumentData.test.perf-data.ts#L6 * make that string appear in IntelliSense * 🥶 freeze  [Profile-20200624T110551.json.txt](https://github.com/microsoft/vscode/files/4825271/Profile-20200624T110551.json.txt) [CPU-20200624T110426.cpuprofile.txt](https://github.com/microsoft/vscode/files/4825273/CPU-20200624T110426.cpuprofile.txt)
---
Título: Add providers to tell user their results are incomplete
Descripcion: ## Problem  With #99643, VS Code will be able to provide JS/TS IntelliSense while a project is being loaded in the background. While the project is being loaded however, the IntelliSense results may not be complete.  For example, suggestions will only include suggestions from the current file and go to definition may fail if a symbol is defined in another file.   The only way a user can know that the results are incomplete is by looking for the `Initializing JS/TS features` entry in the status bar. I believe it would also make sense to indicate that results are incomplete inline where the results are being rendered  ## Proposal  Allow language feature providers to signal that a result they returned is not complete. This should include a user facing message that explains why the results are incomplete (this message should also potentially allow links so that users can learn more about the issue or take an action to fix the underlying issue)  Off the top of my head, I believe this would make sense for the following providers:  * Completions * Go to definition * Go to implementation * Go to type definition * Go to declaration * Find all references * Workspace symbols * Hover?  This would allow other language extensions to offer IntelliSense that is progressively enhanced as their project loads. It would also be useful in for serverless scenarios
---
Título: Snippets readability issues and downsides of January update
Descripcion: We develop an extension that will allow users to load code snippets only for libraries that they use in the current project. We try to standardize snippets by providing a predictable way of searching them by typing library name and them method/function etc.  Previously in October update, it was displayed this way: ![image](https://user-images.githubusercontent.com/2697570/85380042-be160200-b53c-11ea-90f9-c02cb3884f41.png) But in January update it looks this way: ![image](https://user-images.githubusercontent.com/2697570/85380155-e00f8480-b53c-11ea-8ed3-5eafc7a06db4.png)  It causes serious readability issues since you can see the snippet's name and instead you see half name and half description which does not make any sense. Even with the empty description you still truncate the first part.   Also, I've looked through the existing issue and did not find a way to customize that window, so we can't increase the size to make it better for users.   Could you suggest the workaround we can use to make it readable again?
---
Título: Review and clean up overflow actions in extensions viewlet
Descripcion: Re: https://github.com/microsoft/vscode/issues/98614  Review and clean up overflow actions in extensions viewlet
---
Título: Documentation of a CompletionItem does not resize dynamically
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.46.1 (also tested on Insiders) - OS Version: 10.0.14393  In my language, I wish to display previews of the built-in icons to users. However, as the images are fetched from the web (and I could not find any way of storing images locally), there is a very slight delay which makes the size of the preview not take into account the size of the image.  To do that, I put a `MarkdownString` in my `CompletionItem`:  ```js var compItem = new vscode.CompletionItem(), compItem.documentation = new vscode.MarkdownString("![](https://i.imgur.com/hych4AE.jpg)"), ``` The first time I fetch the image, the preview is this size:  ![](https://i.imgur.com/QLpe6dF.png)  I had to insert newlines and spaces as a workaround to make the image visible. If I only display the image, the preview's height would be the length of a single line.  If I go to the next item then go back, the image is already fetched, making the preview the right size:  ![](https://i.imgur.com/8ldlogX.png)  The preview should resize dynamically when it has finished fetching images, instead of staying the same original size.  Steps to Reproduce:  1. Install the "overpy" extension 2. Create a new file, switch the language to "overpy" 3. Type `Icon.`, you will have a list of icons 4. Notice how the size of the preview changes depending of whether the image is cached  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: N/A
---
Título: Polish settings-sync UI
Descripcion: ### UX - [x] Sync: provide better progress information when sync is turning on #100411 - [x] Sync commands are undiscoverable #100425 - [x] :runner: UX: Improve first time sync user experience #100346 - [x] :runner:Synced data view is overwhelming #100347 - [x] Sync should allow you to replace synced data #100791 - [x] Use the same "sync" terminology across the product and docs #100315  - [x] Skip sync configure dialog when re-enabling sync #100336   ### Bugs - [x] Closing browser when Settings Sync starts leaves app in broken state #100314 - [x] Turning on sync from an old device fails #100348 - [ ] Extensions list doesn't auto-update when sync is installing extensions #100415 - [x] Synced data shows entries with no changes #100416 - [x] Restoring extensions data from synced view shows wrong data #100448  cc @RMacfarlane @Tyriar
---
Título: Sync commands are undiscoverable
Descripcion: These are the commands that we show when clicking on sync:  ![image](https://user-images.githubusercontent.com/35271042/84950653-1748e600-b0a4-11ea-872b-a7387b5127d7.png)  And these are the commands that are in the command palette:  ![image](https://user-images.githubusercontent.com/35271042/84950753-3a739580-b0a4-11ea-95ea-32c5ea56ed31.png)  I think it would be worthwhile to add a command in the sync menu that's labeled "Advanced" where we surface the synced data, local backups, logs, etc. otherwise they become hard to discover. I was specifically looking for the Synced Data view and couldn't find it until I remembered it's not in this list.
---
Título: Extensions list doesn't auto-update when sync is installing extensions
Descripcion: This came up a lot in our previous user studies and thought we filed this issue.  1. Open extensions list before turning on sync 2. Turn on sync 3. 🐛 Extensions list never gets updated  <img width="1199" alt="image" src="https://user-images.githubusercontent.com/35271042/84932886-d217ba80-b089-11ea-885d-3e46017ecd4f.png">  But when I update the query it shows the right info:  <img width="1199" alt="image" src="https://user-images.githubusercontent.com/35271042/84932921-de037c80-b089-11ea-970f-62dea506caa9.png">  We should auto-refresh the list once sync starts installing extensions so users can see the update in real-time
---
Título: Sync: provide better progress information when sync is turning on
Descripcion: I'm setting up sync on another machine (empty data) and when I turn Sync on, there is nothing telling me what is happening. There are indicators on the extension and gear icons but the menus don't show any information so it's confusing to the user what is happening. If you have a lot of data, this could take more than a minute. Questions I asked myself: Is sync turning on? Is it stuck? What's being installed? How much longer will this take?  <img width="994" alt="image" src="https://user-images.githubusercontent.com/35271042/84931353-895f0200-b087-11ea-9cd8-16be24e29fab.png">  I would expect to see a toast notification, similar to our remote connections, where it would say "Turning on sync..." and a link to the details which would open the logs. Or an item in the status bar that links to the logs. Once sync is turned on, you would never see this again. This is just for the first time you turn on sync.
---
Título: Synced data view is overwhelming
Descripcion: I'm assuming that this view is modeled after how we store the data in the backend, but from a user's perspective this view is extremely overwhelming:  - Everything is grouped by data type (settings, keybindings, etc.) and then by date - Every entry includes a non-actionable row for the machine - There is no way to rollback to a certain place in time, you have to do it file-by-file - The UI state file (globalstate.json) is a weird format that users don't need to see - The context item "Show raw JSON data" is another item that users don't need to see  ![image](https://user-images.githubusercontent.com/35271042/84852562-0c457580-b012-11ea-873f-97afed6c72f4.png)   ## Proposal  - Sort the view based on time - Remove the machine item and append to the filename - Update actions so that you can rollback to either a single file or to a date in time - Move context menu actions into a global ellipsis (logs, reset, etc.)  ![image](https://user-images.githubusercontent.com/35271042/84852498-df915e00-b011-11ea-9a32-a02c3dd682c8.png)
---
Título: UX: Improve first time sync user experience
Descripcion: ## Problem When turning on sync on secondary machine, it asks to either replace or merge the synced data. There is also an option to "Show Synced Data" which leads to a confusing flow:  <img width="50%" src="https://user-images.githubusercontent.com/35271042/84850338-588db700-b00c-11ea-8196-18b5e4bbb158.png">  <img width="50%" src="https://user-images.githubusercontent.com/35271042/84850383-778c4900-b00c-11ea-818f-22cae6410d23.png">  From this point, there is nothing guiding the user back through the flow to continue to turn on sync and is quite confusing. I would expect a better guided experience to:  1. View the difference of the local and synced data 2. Choose to either replace or merge 3. Complete the sync process  ## Proposal Create a specific view for this scenario where a user can view the diff between the local and synced data and then allow them to either replace/merge all or do it one by one:  ![image](https://user-images.githubusercontent.com/35271042/84851154-604e5b00-b00e-11ea-9854-575330331a69.png)
---
Título: Support reparenting views during drag and drop without destroying and recreating them
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> Version: 1.46.0 Commit: a5d1cc28bb5da32ec67e86cc50f84c67cc690321 Date: 2020-06-10T08:59:04.923Z Electron: 7.3.1 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Linux x64 5.3.0-59-generic  Steps to Reproduce:  1.trigger the refactoring preview window, 2.drag it to wherever you like ---- oops, cannot drag them and yes it can be reproduced on the Insider version  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes
---
Título: 'Read More...' and 'Read less...' tooltips on completions are inconsistent
Descripcion: Issue Type: <b>Bug</b>  ![image](https://user-images.githubusercontent.com/6726799/84565016-38d16700-ad5e-11ea-88cb-df6285c65c6f.png)  ![image](https://user-images.githubusercontent.com/6726799/84565041-68806f00-ad5e-11ea-8881-da7e9896c0b4.png)  1. Keyboard shortcuts should be in parentheses. 2. 'less' should be capitalized. 3. Use of ellipsis is non-standard.  I will submit a PR to fix these.  VS Code version: Code 1.46.0 (a5d1cc28bb5da32ec67e86cc50f84c67cc690321, 2020-06-10T09:03:20.462Z) OS version: Windows_NT x64 10.0.18363
---
Título: No feedback when choosing "Check for Updates..."
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  When choosing `Help > Check for Updates...` there is no feedback from the application in some cases. When there are no updates available, a dialog appears.  ![image](https://user-images.githubusercontent.com/484784/84524690-394efc80-ac8f-11ea-8561-2b7eca293f11.png) When the _are_ updates...nothing happens. You have to open the Help menu again and notice that the text for `Check for Updates...` has changed to `Downloading Update...`.  I think there are two solid improvements to be made here: 1. When an update is available show a notification that says an update is downloading after clicking `Check for Updates...`. 2. When an update is not available show a notification that says no updates are available, instead of an OS dialog.
---
Título: Clicking on an account should show a flyout menu rather than quick pick
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  Clicking on the accounts button shows the list of identities that are signed in. It seems odd to see this listed as commands to begin with but when clicking on any identity in the list, the quick pick shows up with a list of actions that the user can take. Instead of the quick pick, I expected to see a fly out menu with the two commands. ![IdentityShouldShowFlyoutCommandsNotQuickPick](https://user-images.githubusercontent.com/1704059/84420175-91dfb480-ac11-11ea-8c16-1c76f7b7d4d9.gif)
---
Título: Dragging and dropping a viewlet does not make it active
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  When repositioning a viewlet in the activity bar by dragging and dropping, it is not made active upon dropping. This is in contrast to dragging and dropping editor tabs. ![DraggingAndDroppingAViewletDoesNotMakeItActive](https://user-images.githubusercontent.com/1704059/84419913-31507780-ac11-11ea-9e6a-066a8ef492cb.gif)
---
Título: No easy way to revert changes made to views and panels
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  It is very easy to drag some panels out of a view and place them elsewhere. Eventually you can end up with many panels that were originally all in one view placed all over the workbench. Either this shouldn't be supported or it should be possible to easily revert back to the original, default layout. ![DontAllowPanelsFromOneViewToBeMovedToAnotherView](https://user-images.githubusercontent.com/1704059/84419699-e59dce00-ac10-11ea-984a-d9861d21eace.gif)
---
Título: No way to distinguish between view panels that can be moved and those that can't
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: - OS Version:  Some viewlet panels can be dragged out and placed in other panels. Some panels cannot. However, there is no way to distinguish between these other than trying to drag and drop and seeing if the action completes. ![NoWayToTellWhichPanelsCanBeMovedAndWhichCant](https://user-images.githubusercontent.com/1704059/84419394-73c58480-ac10-11ea-8819-586c7adb06e8.gif)
---
Título: Editor ellipsis commands shown centred when tabs are off
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: - OS Version:  With editor tabs turned off, the editor ellipsis menu draws the list of commands centred rather than left justified. ![WithTabsOffEditorEllipsisMenuCommandsAreDrawnCenteredInsteadOfLeftJustified](https://user-images.githubusercontent.com/1704059/84419178-23e6bd80-ac10-11ea-9ceb-941fbba7feb9.png)
---
Título: Settings search behaves differently to search viewlet
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: - OS Version:  The settings search expands search results when additional search terms are added (i.e., it appears to search for settings which contain one or more of the search terms). In contrast, the search viewlet reduces search results when additional terms are added as it appears to search for text which contains all search terms. ![SettingsSearchBehavesDifferentlyToSearchViewlet](https://user-images.githubusercontent.com/1704059/84419025-e97d2080-ac0f-11ea-98d7-8f5f355ec2b0.gif)
---
Título: Problems badge does not have the same colour as other badges
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  ![ProblemBadgesAreNotThemedColour](https://user-images.githubusercontent.com/1704059/84418729-7b385e00-ac0f-11ea-9fd1-0cb8d3e5c66a.png)  The problems panel badge is not the same colour as other badges. They should be blue in this case instead of grey.
---
Título: Ellipsis in search viewlet shows more UI, not commands
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  In the search viewlet, the ellipsis button is used to reveal include and exclude input boxes. I don't think ellipsis should be used to permanently modify the UI. I believe ellipsis should only be used to temporarily show UI or commands for which there currently is not enough space to show permanently. ![EllipsisInSearchViewletShowsMoreUINotAdditionalCommands](https://user-images.githubusercontent.com/1704059/84418591-52b06400-ac0f-11ea-8f0f-969080c80d34.png)   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No
---
Título: Blue tab indicator to indicate edits is inconsistent with editor indicator
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  If you make a change inside an editor with auto save off, a blue line is drawn on the tab to indicate that there are changes. At the same time, a green line is drawn in the editor gutter to show the location of the changes in the editor. These colours should probably be consistent?  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No
---
Título: Active tab should have an indicator consistent with active viewlet, panel
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: - OS Version:  ![ActiveEditorTabDoesNotHaveSameActiveIndicatorAsViewletAndPanel](https://user-images.githubusercontent.com/1704059/84417510-a621b280-ac0d-11ea-8ed5-da68bc0e0d4f.png)  The active tab should probably have an indicator running along the top of the tab, consistent with how active viewlets and horizontal panels are shown.  We use an indicator to show that the tab contains changes (as shown in the package.json tab in the screenshot) but nothing indicating that the tab is active.
---
Título: Explore diffing for notebook cells
Descripcion: ## Overview In the editor, we have existing patterns for showing source control (scm) decorations, which is also one of the entry points into source control diffing. This issue is to explore what scm decorations look like within the context of notebook cells.  ## Existing Patterns  ### SCM decorators ![image](https://user-images.githubusercontent.com/35271042/84402053-d723c800-abb8-11ea-8064-0db2d6041019.png)  ### Inline diffs ![image](https://user-images.githubusercontent.com/35271042/84402110-e9056b00-abb8-11ea-8ce4-2b3e195b4026.png)  ## Design Explorations ![Kapture 2020-06-12 at 10 33 50](https://user-images.githubusercontent.com/35271042/84530757-53d9a380-ac98-11ea-8f1b-8232d00f487e.gif)  ### SCM decorator ![image](https://user-images.githubusercontent.com/35271042/84528485-9dc08a80-ac94-11ea-953d-01e3d9f22f4f.png)  ### Inline diff ![image](https://user-images.githubusercontent.com/35271042/84530383-eb8ac200-ac97-11ea-99bb-c6b791a25a74.png)
---
Título: Terminal environment indicator is way too subtle, low contrast and overlaps text
Descripcion: This indicator seems like a really important part of [this new feature](https://code.visualstudio.com/updates/v1_46#_environment-variable-collection). If users don't notice it, it will seem like the feature doesn't work.  The icon is grey, really low contrast against the background, and text can run over/under it making it even harder to see:  <img width="194" alt="Screenshot 2020-06-11 at 15 42 51" src="https://user-images.githubusercontent.com/1078012/84400812-6d2c1280-abfa-11ea-9579-0bb10c35ab55.png">  Since this only appears when an extension has done something fairly important (like you just changed SDK and it updated the path), I think it should be a lot more visible than this.
---
Título: GitHub issue notebook: why gray background?
Descripcion: When I run my work query I get all the issues with a gray background. Why not white? I think it would look more similar to GitHub, and would not look disabled as the current gray gives me that effect.  ![Screenshot 2020-06-10 at 22 14 22](https://user-images.githubusercontent.com/1926584/84314128-d31b8a00-ab67-11ea-87df-d3a2fa0c6698.png)
---
Título: Notebook: very easy to scroll out of sight horisontally
Descripcion: Notebooks can be small visually, and scrollbars are not visible unless hovered. Thus it is very easy for the user to accidently click on the horisontal scrollbar and be taken out of view.  First I suggest to put the scrollbar all the way to the bottom as mentioned here https://github.com/microsoft/vscode/issues/99781 Then I suggest to only render the scroll bar when there is somewhere to scroll to. And potentialy not allow to scroll beyond last visible column
---
Título: Notebook scrollbar rendered too high
Descripcion: Notice how the scrollbar in the notebook is too high compared to the space in the notebook. It should be 30 px lower, to be all the way to the bottom. The current rendering make it look like it is floating in mid air  ![Screenshot 2020-06-10 at 21 49 32](https://user-images.githubusercontent.com/1926584/84311858-53d88700-ab64-11ea-827b-d56336c940a8.png)
---
Título: Add hover/drag sash color
Descripcion: Here is an example from slack, when you try to grab a resize bar ![sash](https://user-images.githubusercontent.com/641685/84197673-52c62d80-aa70-11ea-8e39-70e146bdd9c7.gif)
---
Título: "files to include" suggestions
Descripcion: It would be nice for users to show suggestions hints in opaque text, how to write for controls, example by filters:  files to include files to exclude  ![image](https://user-images.githubusercontent.com/30563443/84196415-c44cae80-aa65-11ea-9543-fb34ede73e12.png)
---
Título: dark mode: unchecked checkboxes are hard to see
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.45.1-1589445456.el7.x86_64 - OS Version: Fedora 31  Steps to Reproduce:  1. open Settings, search 'ident' (or others with checkboxes) 2. checkboxes are hard to see. When unchecked, it's not clear there's a checkbox there: ![Screenshot from 2020-06-09 09-44-48](https://user-images.githubusercontent.com/1283842/84114955-e3cbe300-aa35-11ea-96f2-22a50beba567.png)   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Improve visual hierarchy of notebook cells
Descripcion: When looking at the default styling for notebook cells, it becomes hard to visually see the difference of markdown cells vs code cells because they share a lot of similarities:  - Both cells use the same indentation - Markdown cells in edit mode are identical to code cells - Executing/Folding icons occupy the same vertical space  ![image](https://user-images.githubusercontent.com/35271042/84083461-83d22f80-a996-11ea-8a33-bc67181caab0.png)   We should look to improve the visual hierarchy of these cells.  <hr>    Compared to other notebooks:  **Colaboratory**  ![image](https://user-images.githubusercontent.com/35271042/84083031-b62f5d00-a995-11ea-909c-574e895a030d.png)  **NextJournal**  ![image](https://user-images.githubusercontent.com/35271042/84083228-11f9e600-a996-11ea-81f8-51eb53d3dc8c.png)  **Jupyter**  ![image](https://user-images.githubusercontent.com/35271042/84083340-49689280-a996-11ea-82a8-10a266f84c82.png)  **nteract**  ![image](https://user-images.githubusercontent.com/35271042/84413586-b2821d00-abc5-11ea-8a8a-2421f0cc495a.png)
---
Título: Opening a context menu in a notebook cell cause a lot of UI churn because of focus change
Descripcion: ![focus](https://user-images.githubusercontent.com/641685/83801639-7ad01e00-a677-11ea-9e68-dde7b5ce9953.gif)  You can see the focus outline is lost, chevrons are dimmed, the toolbar loses a button, etc
---
Título: Notebook: weird find widget animation
Descripcion: ![recording (17)](https://user-images.githubusercontent.com/22350/83760087-bddcc200-a674-11ea-8c34-ab0bdcdaa49f.gif)  It feels like it's hiding behind something, but it's not!
---
Título: Donn't render newline-characters as new lines in suggest details widget
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.45.1 - OS Version: any  Steps to Reproduce:  1. Create an extension providing a completion item with detail set to   `"void writeln(\n\tT...\n)(\n\tT args\n)"`  2. Observe that VSCode reordered the detail string in the small view:   (changed to `void writeln( ) T...`)   ![reordered](https://user-images.githubusercontent.com/2035977/83759569-0778dd00-a674-11ea-8a5e-ecde1e28803b.png)  3. Observe that the big detail view is missing the indentation: (doesn't work with tabs or with spaces)   ![missing indentation](https://user-images.githubusercontent.com/2035977/83759699-3db65c80-a674-11ea-839b-3b687370f35c.png)  On the API documentation (https://code.visualstudio.com/api/references/vscode-api#CompletionItem) it says detail is just "A human-readable string with additional information about this item", so I wouldn't expect VSCode to split it up into lines, reorder the lines and show that in the short UI.  The missing indentation part is probably a separate issue from this though.
---
Título: Notebook input cell has no left padding
Descripcion: On Windows:  ![image](https://user-images.githubusercontent.com/22350/83756049-c03c1d80-a66e-11ea-9e49-d5792310b3de.png)  Actually the overall padding looks strange... no left padding, too much padding on top/bottom.  Also, is that `GitHub Issues` really needed? It seems to take over excessive space.
---
Título: Got into a blank notebook editor state
Descripcion: Got into a blank notebook editor state where I cannot add any cells  - Have issues notebook with following content/cells  ``` [{"kind":2,"language":"github-issues","value":"repo:microsoft/vscode assigne:@me label:settings","editable":true},{"kind":2,"language":"github-issues","value":"epo:microsoft/vscode assignee:@me label:settings"}] ```  - Open the notebook and keep deleting cells - Once all cells are deleted, Type `cmd+z` to undo  🐛 Editor becomes blank  ![Kapture 2020-06-04 at 11 56 32](https://user-images.githubusercontent.com/10746682/83743078-806b3b00-a65a-11ea-853b-81e427c99049.gif)
---
Título: Gear icon is not obvious to set default editor type
Descripcion: Testing #99003  <img width="590" alt="image" src="https://user-images.githubusercontent.com/10746682/83638109-f4e5a180-a5a8-11ea-8746-a0d2b58105a8.png">
---
Título: Notebook: "High Contrast" is incredibly low-contrast
Descripcion: Testing #98985  Very minimal contrast here: ![image](https://user-images.githubusercontent.com/8586769/83571224-3f4d1c80-a4dc-11ea-8cc4-ff8f08c74216.png)
---
Título: Drop feedback for empty panel is a bit weird
Descripcion: I would suggest to show the blue drop feedback over the entire panel, and not have that space to the top excluded.  ![recording](https://user-images.githubusercontent.com/900690/83510931-1f166100-a4ce-11ea-89a4-49268661be3b.gif)
---
Título: Problems with the "1" badge on the "Manage" gear icon
Descripcion: VS Code Insiders:  - I was always seeing:   <img width="129" alt="2020-06-02_09-31-46" src="https://user-images.githubusercontent.com/1898161/83492838-2a5c9300-a4b4-11ea-92f5-0e6eca8811ca.png">   which made me assume that a VS Code update is available (which wasn't) - opening the menu showed this:   <img width="295" alt="2020-06-02_09-31-05" src="https://user-images.githubusercontent.com/1898161/83492952-5aa43180-a4b4-11ea-976c-28d425bbbdae.png">  IMO the "(1)" at the end of "...Preferences" is hard to identify as the reason for the "1" in the gear icon. - selecting the item from the menu opened a Quickpick which showed that I'm "signed in as weinand" (and then there were two other entries: one for MS and one for github)   Since there was no indication for an error, I dismissed the Quickpick but the "1" on the gear icon stayed. Only when I selected the "signed in as weinand" in the Quickpick I could remove the "1" on the gear icon.  There are a few things we should improve: - a "problem 1" should look different than an "update 1" on the gear icon. - a space is missing in the "...Preferences(1)" menu action between the "...Preferences" and the "(1)". - instead of only showing a "(1)" I suggest to show "(1 problem)" to make it stand out. - in the Quickpick nothing indicated that there is an issue. - why do I have to run the "signed in as weinand" action to fix the problem? The wording suggested that I'm already signed in. Should it be named "sign in as weinand"?
---
Título: Add buttons for filtering and sorting when searching for extensions
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  Tried searching for existing issues but couldn't find any, so my apologies if this is a duplicate.  <!-- Describe the feature you'd like. -->  ![image](https://user-images.githubusercontent.com/12476526/83343945-b359ab80-a2b5-11ea-81b5-1f4c9b33d041.png)  Using the above image as reference:  I think that it would be a very useful to have dedicated buttons for applying filters, and for applying different sorting to the Extension Marketplace search view. I believe it would be a good addition for a few reasons:  1. Give these features more discoverable to new (and old) users. 2. Much quicker and easier access than clicking the "3 dot" button and then visually searching through the long list of very visually similar looking options. 3. This would be a good place to also add a "clear filters/sorting" button.  Thanks! 😊
---
Título: Improve first run experience
Descripcion: This issue to explore how we might improve the (default) first run experience from the file explorer (and other areas).   ## Current Experience  ### Desktop Today, when you install VS Code for the first time and open a file you are greeted with a series of views in the explorer:  1. Open Editors 2. Folders 3. Outline 4. Timeline 5. NPM Scripts  ![image](https://user-images.githubusercontent.com/35271042/82950090-9477b400-9f59-11ea-9d50-788f19a37b63.png)  ## Proposal  We can consolidate some of the features that have overlap in other areas: 1. Hide `Open Editors` in favor of Editor Tabs 2. Folders - Keep Visible 3. Hide `Outline` in favor of Breadcrumbs + `Go To Symbols in Editor` 4. Timeline - Keep Collapsed 5. Hide `NPM Scripts` in favor of adding an action ~in the editor toolbar~ via codelenses in the `package.json` file to surface it  ![image](https://user-images.githubusercontent.com/35271042/83075924-809b8300-a029-11ea-933b-7654fc6121c0.png)     ## Other Ideas In addition to this proposal, we also discussed the following options that would require more engineering effort: - Once we add a secondary sidebar, we could move file specific views onto it (outline, timeline, etc.) - For Codespaces: hide the remote explorer and surface port forward through the remote picker - For the GitHub extension: combine the PR and Issues view into the SCM view since they are all `git` related features - Make the sidebar headers clickable to surface the view options (right-click menu to toggle views) - Add an action from the `Go To Symbols in Editor` quick pick that toggles the outline view
---
Título: Command palette should support different (monospace) fonts
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  Similar to https://github.com/microsoft/vscode/issues/55169, although for different reasons. Namely, this:  ![Screen Recording 2020-05-26 at 1 45 59 pm](https://user-images.githubusercontent.com/4211302/82902531-7c9f3080-9f57-11ea-9ce1-8ff1a2e33922.gif)  Feels a lot better/more solid than this:  ![Screen Recording 2020-05-26 at 1 46 33 pm](https://user-images.githubusercontent.com/4211302/82902669-b7a16400-9f57-11ea-896b-1b895d67f05f.gif)  The characters moving each time I type a character is distracting, but the problem goes away completely when I use a monospace font. This could also be fixed by only changing the color of the matching characters, but that would make it harder to spot.
---
Título: SCM hover action overlaps with code folding chevron
Descripcion: Issue Type: <b>Feature Request</b>  The code folding caret and the view control next to it are too close together.  trying to click to fold code results in the other debug (not sure what its called) popup to happen.  move the line to the other side of the numbers to give more space.   VS Code version: Code 1.45.1 (5763d909d5f12fe19f215cbfdd29a91c0fa9208a, 2020-05-14T08:27:35.169Z) OS version: Windows_NT x64 10.0.18362  ![grabilla em1424](https://user-images.githubusercontent.com/3129247/82850923-29cc6700-9ecc-11ea-9fd2-fae0752b7945.png)   <!-- generated by issue reporter -->
---
Título: Width text see picture
Descripcion: I already have set font size 36pt on Visual Studio Code.app for mac  Please fix width see picture <img width="1500" alt="Screen Shot 2020-05-22 at 1 37 05 PM" src="https://user-images.githubusercontent.com/4253305/82708102-506f7100-9c32-11ea-9541-10b3568af3bf.png">
---
Título: IntelliSense pop-up doesn't react to font size changes while showing
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.45.1 - OS Version: Windows 10 64bit  Steps to Reproduce:  1. Show IntelliSense pop-up using Ctrl + Space 2. Ctrl + scroll up to extend zoom lvl  *I have 4k display  <img width="1920" alt="bigger-zoom" src="https://user-images.githubusercontent.com/19596268/82548801-319eab00-9b5c-11ea-8786-5890e1e042a8.png"> <img width="1920" alt="bigger-zoom-2" src="https://user-images.githubusercontent.com/19596268/82548803-32cfd800-9b5c-11ea-9307-35a5225c367b.png">    <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No
---
Título: Improve TS auto import label
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.45.1 - OS Version: macOS Mojave 10.14.6   Steps to Reproduce:  Recently, the autocomplete auto import text has become cropped so short as to be completely useless.  In many cases over the past couple of days, I've had the option to import 2-4 same-named classes/components.  Normally, I can select the correct one based on the additional text  > Auto import from 'react-native'  Now the package name is cropped to the same text for all options:  > Auto import from 'react...  This makes the auto-import feature completely useless (one of the most important features in an IDE).  See example: ![autoimport-broken](https://user-images.githubusercontent.com/1436281/82420388-5295cc00-9a88-11ea-8d0b-69065b95abc5.gif)  1. Create project with React Native + React Navigation 2. Type in 'Header' and cmd+space to open autocomplete (It may be that additional conditions apply, for example what the other options presented in the list would be.)  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Pinned tabs: add a setting to show more context
Descripcion: Refs: https://github.com/microsoft/vscode/issues/12622  Today pinned tabs shrink to only their icon (`38px`). Having many pinned tabs open it is harder to tell each apart and as such a setting could be added to either show parts of the file name or the entire tab without shrinking it or maybe show a rich hover with more details once you hover over a pinned tab.  Today we do this:  ![pin-tabs](https://user-images.githubusercontent.com/900690/82320852-389ab180-99d4-11ea-8d35-524e16e452db.gif)  Visual Studio for example seems to always show the full tab:  ![image](https://user-images.githubusercontent.com/900690/82320878-43eddd00-99d4-11ea-8ea3-800aeec45f2f.png)  //cc @misolori
---
Título: Title on external link notification is too close to border
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.46.0-insider - OS Version: Windows_NT x64 10.0.18363  Steps to Reproduce:  1. Click on external link (I clicked on the logo at the top of the "Bookmarks" extension page) 2. External link confirmation box should pop up, title of the box will be too close to the left side of window.  ![image](https://user-images.githubusercontent.com/1389808/81871886-9428f300-952d-11ea-8406-7f80c24066f2.png)  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Make autocomplete pop-up windows expandable
Descripcion: Issue Type: <b>Feature Request</b>  Unlike other IDEs, VSC doesn't seem to allow autocomplete pop-up window expansion.   Such a feature would come in handy, imho.  VS Code version: Code 1.45.0 (d69a79b73808559a91206d73d7717ff5f798f23c, 2020-05-07T16:18:48.860Z) OS version: Windows_NT x64 10.0.18363   <!-- generated by issue reporter -->
---
Título: improving diff ui / diff optical illusions
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  can you guys make those lines straight? thanks 🥇   ![image](https://user-images.githubusercontent.com/15141614/81589835-20b2a480-93ba-11ea-820b-eb0e81254d4b.png)  _know it's optical illusion just wanted to share, feel free to close this one straight away_ :) but have to admit it's kinda hypnotizing isn't it when you look at it?
---
Título: Enlarge/change icons for a more touch-friendly interface
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Hey there,  I was hoping to bring attention to the fact that the icons for the left panels are rather small, and I also believe them to be "tough" or not as intuitive as it could be.   Since the day I got a touch screen laptop, I could never go back. It allows me to be more productive without having to buy a mouse to carry around, or memorize loads of commands.  Yes, I am aware that Ctrl + '+' is capable of enlarging the whole interface, but it cannot be as elegant as something designed with touch in mind. The text size, for instance, is already fine for the code, but could be bigger on the left panels. The best way to exemplify my point is OneNote, which has a modern-looking interface, with bigger icons with touch in mind (I believe). Not only that, its icons also have more "feedback", meaning it changes when the cursor hovers over them.   Of course, one can't expect for a different UI layout to be fit for everybody, so having an option to toggle between normal and touch, as in Office products, would be best, I imagine.  FInally, a last comparison I could make is related to the "feeling" of apps like OneNote and Office programs on windows. The latter, even though quite polished and feature-rich, does not offer the same experience as the previous.   P.S.I: When I say "OneNote", I am refering to the app that already comes with Windows 10, and not the one included in Microsoft Office.  P.S.II: I wrote this after researching a way to make things bigger, but could only find about the ctrl+ command.
---
Título: Explore a richer ui for the account picker and settings sync
Descripcion: Similar to Chrome and Edge, we should explore using a richer ui to make the information and actions much clearer. This could follow the similar visual patten as notifications.  ## Chrome <img width="50%" src="https://user-images.githubusercontent.com/35271042/81324578-068c6580-904c-11ea-9a4d-ec231752c0fb.png">   ## Edge <img width="50%" src="https://user-images.githubusercontent.com/35271042/81324500-e9579700-904b-11ea-8f6c-43ac9f8112ec.png">
---
Título: Horizontal scrollbar is broken.
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.44.2 ff915844119ce9485abfe8aa9076ec76b5300ddd x68 - OS Version: Fedora Linux 5.6.8-200.fc31.x86_64  Steps to Reproduce:  1. Write code that is longer than one screen and wider than one screen 2. Try to drag the hotizontal scrollbar to the end of the long line  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Not sure.  I launched `code --disable-extensions` and now the bug doesn't even occur with extensions enabled again anymore. Weird.  Here is a video that demonstrates the issue: https://www.youtube.com/watch?v=iljabc6RusA
---
Título: Inconsistent offset with compact folders in explorer
Descripcion: VS Code version: Code - Insiders 1.45.0-insider (a250df703de955a38aed427a917bce8278ab3331, 2020-04-24T10:02:48.114Z) OS version: Windows_NT x64 10.0.18363  ![grafik](https://user-images.githubusercontent.com/530988/80974223-571b7d00-8e18-11ea-8e22-e2a1884c03b9.png)
---
Título: Show progress notification if turning on sync takes longer time
Descripcion: From @misolori   When I turn on sync for the first time, it ends up taking quite a long time (~1min) and it was hard to tell whether something was stuck or if it was still in progress. The gear badge is subtle and am wondering if we should show a progress toast after 15-20s to give the impression that things are still syncing? I feel like maybe we've discussed this before.  cc @Tyriar
---
Título: Allow Line Numbers in Notebook Cells
Descripcion: Issue Type: <b>Feature Request</b>  Notebook cells markdown in edit mode and code cells should allow line numbers. I enabled word wrap and it was difficult to discern lines.  VS Code version: Code - Insiders 1.45.0-insider (a0fe37870c42e0704a492cdc6b8550b4cf23f63c, 2020-04-30T05:39:08.281Z) OS version: Windows_NT x64 10.0.19041   <!-- generated by issue reporter -->
---
Título: Say what extensions make which environment changes
Descripcion: Forked from https://github.com/microsoft/vscode/issues/96250  > Also, should we indicate which extension is doing which changes?  ![image](https://user-images.githubusercontent.com/2193314/80715906-df61f100-8aab-11ea-857a-2c275f160fa2.png)
---
Título: Multiple designs for the "pill" that is being shown in the input field
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  I have noticed two different "designs" for the pills that are being shown in input fields.  Settings sync preferences ![image](https://user-images.githubusercontent.com/3372902/80619129-88750100-8a44-11ea-883c-9b0634aedea8.png)  Settings ![image](https://user-images.githubusercontent.com/3372902/80619195-a5113900-8a44-11ea-8d97-f574a25b8853.png)  <!-- Use Help > Report Issue to prefill these. --> Version: 1.45.0-insider Commit: 4bd206856db30c27d38aa0f1fbe74bac6156edc7 Date: 2020-04-29T05:31:36.229Z Electron: 7.2.2 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Darwin x64 19.4.0  Steps to Reproduce: 1. Click on "Manage" in the lower left hand corner, and choose "Online Services Settings" 2. Use the palette to open "Preferences Sync: Configure..."  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Separation (or mark) of disabled add-ons into built-in and additional ones
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> At the moment we have this division: ![obraz](https://user-images.githubusercontent.com/30685349/80611282-b6554800-8a3a-11ea-828b-60ccd0b034b7.png)  In the current situation, built-in add-ons that are turned off mix with the turned-off add-ons that i install from the market by myself ![obraz](https://user-images.githubusercontent.com/30685349/80611647-2b288200-8a3b-11ea-86e4-6b0bd8bff0ba.png)  It would be good if the disabled built-in add-ons have some indication that they are built-in add-ons Maybe some small badge similar to add-ons marked with an asterisk as recommended?  Or maybe just stop showing built-in disabled add-ons in `Show disabled extensions` Or maybe any different separation way?  I request about it because if you have many add-ons that are turned off, this is a bit confusing
---
Título: Find a better way to display collapsed views in Panel
Descripcion: Issue Type: <b>Bug</b>  Testing https://github.com/microsoft/vscode/issues/96318.   At the right side of the panel are three collapsed views. This has been going through several iterations but the current solution is less than perfect. It wastes space and does not look good.   ![image](https://user-images.githubusercontent.com/4674940/80608475-acf0bf00-89eb-11ea-97be-0e1d0cf75f07.png)  VS Code version: Code - Insiders 1.45.0-insider (4bd206856db30c27d38aa0f1fbe74bac6156edc7, 2020-04-29T05:31:36.229Z) OS version: Darwin x64 18.7.0   <!-- generated by issue reporter -->
---
Título: Size distribution when moving a view container from sidebar to panel
Descripcion: Issue Type: <b>Bug</b>  Testing https://github.com/microsoft/vscode/issues/96318.   My initial sidebar layout: ![image](https://user-images.githubusercontent.com/4674940/80608254-597e7100-89eb-11ea-8e53-bc169f03456b.png)   My resulting panel layout: ![image](https://user-images.githubusercontent.com/4674940/80608308-6bf8aa80-89eb-11ea-9f66-36ccd5f6c506.png)  You kept the ratios but it seems to me we want to be smarter here as the size of the first view makes it unusable.  VS Code version: Code - Insiders 1.45.0-insider (4bd206856db30c27d38aa0f1fbe74bac6156edc7, 2020-04-29T05:31:36.229Z) OS version: Darwin x64 18.7.0   <!-- generated by issue reporter -->
---
Título: Terminal warning icon
Descripcion: Issue Type: <b>Bug</b>  With the changes we made to feed git credentials to the terminal, I now see in all terminals the info icon.  The visual presentation of the hover as it is right now seems problematic:  ![image](https://user-images.githubusercontent.com/4674940/80606497-4074c080-89e9-11ea-9a86-a52ca72e0c89.png)  - font size is too large - file paths are usually long - it doesn't scale: The picture above is for three env variables (out of the box). As soon as another extension like python adopts it this number goes up after I opened my first python file.  I think we should show a short information in the hover, with a `Show details` link that opens an editor with the explanation.   VS Code version: Code - Insiders 1.45.0-insider (4bd206856db30c27d38aa0f1fbe74bac6156edc7, 2020-04-29T05:31:36.229Z) OS version: Darwin x64 18.7.0   <!-- generated by issue reporter -->
---
Título: Adding new cell toolbar is not discoverable when there is just one cell
Descripcion: #96279  ![Kapture 2020-04-29 at 13 10 36](https://user-images.githubusercontent.com/10746682/80589644-dc6af000-8a1a-11ea-98c4-831193841a2e.gif)
---
Título: Identify the extensions requesting changes to terminal environment
Descripcion: https://github.com/microsoft/vscode/issues/96300  Can we specify which Extension(s) are trying to update the environment variables?  Right now it just says "Extensions" (plural, even in this case there is only 1 extension making a change).  Ideally I would see which extension(s) are changing which variables.  ![image](https://user-images.githubusercontent.com/1487073/80548974-da4c5700-8970-11ea-8929-c51f935ed16d.png)
---
Título: Notebook: there should be an affordance to add Code/Markdown above first cell
Descripcion: Refs: https://github.com/microsoft/vscode/issues/96279  Currently it looks like you can only add below:  ![image](https://user-images.githubusercontent.com/900690/80512514-e38ff080-897d-11ea-8b7b-f9da3cc0d46e.png)
---
Título: Notebook: cell language selector should open dropdown menu at location not quick pick
Descripcion: Refs: https://github.com/microsoft/vscode/issues/96279  Clicking the "Cell Language Selector" imho should just open a menu at the point where I click (similar to code actions) and not quick pick which is in a different part of the screen potentially.  ![image](https://user-images.githubusercontent.com/900690/80512296-914ecf80-897d-11ea-9bdb-3cc14d0e012c.png)
---
Título: Notebooks: show errors in overview ruler
Descripcion: Refs: https://github.com/microsoft/vscode/issues/96279  I think it would be great if errors in a notebook could be shown in the overview ruler:  ![image](https://user-images.githubusercontent.com/900690/80511240-218c1500-897c-11ea-8860-49b5f24cc33d.png)  //cc @jrieken
---
Título: Unhappy account picker
Descripcion: re #96226  * Logged in with Github * Setting up pref sync * :bug: the account picker mixes accounts I am logged in to with account providers. What are the odds that I don't want to use the existing provider?  <img width="747" alt="Screenshot 2020-04-28 at 10 55 03" src="https://user-images.githubusercontent.com/1794099/80468403-6c3b6c00-893f-11ea-8371-3e15ccc9ed74.png">   IMO it should be ``` ------------------------------------------------ jrieken (GitHub)                      logged in ------------------------------------------------ Login with Microsoft                      others Login with GitHub ```  So, have a group for account I am logged in to and have a group for providers
---
Título: Settings Sync: use profile avatar
Descripcion: ![image](https://user-images.githubusercontent.com/35271042/79923209-f177cb80-83e9-11ea-8ed2-241fc15627f8.png)  I would really love it if Settings Sync used my profile avatar from the account that I've logged in as. If there are multiple, default to the one that sync is connected to. If there is no avatar, use the default icon we use today. Also allow for the user to select their avatar if there are multiple avatars.  cc @Tyriar @kieferrm @roblourens
---
Título: Use more prominent focus indicator in trees
Descripcion: From https://github.com/microsoft/vscode/issues/93916  The different shades of backgrounds in the explorer are a little confusing:  ![image](https://user-images.githubusercontent.com/2193314/79865698-6f0eed80-8390-11ea-8113-9d5633392eb5.png)  A border could be nicer and more obvious which is the special item, it also aligned with Windows Explorer:  ![image](https://user-images.githubusercontent.com/2193314/79865658-5e5e7780-8390-11ea-93de-26bd8cf4e5c9.png) ![image](https://user-images.githubusercontent.com/2193314/79865665-60283b00-8390-11ea-9956-e5a5303d4301.png)  Related: https://github.com/microsoft/vscode/issues/95767
---
Título: List: range selection should update focused element
Descripcion: Current behavior looks a little weird imo:  ![55a14309-f15c-49e4-97ff-7692a09c041b](https://user-images.githubusercontent.com/2193314/79865419-fc9e0d80-838f-11ea-895c-bc789ddaa05c.gif)  I think the reason behind this is because the original item is important as it is the root item if the user shift+clicks elsewhere. But even so, the last clicked item is probably more important at this point. I suggest we move to what Windows explorer does and highlight the item that was most recently clicked:  ![222f4401-258b-4ba7-9d7a-834837ea9c24](https://user-images.githubusercontent.com/2193314/79865297-c9f41500-838f-11ea-9529-a550e8a6d266.gif)
---
Título: Improve rendering of find matches touching each other
Descripcion: Issue Type: <b>Bug</b>  I need to remove some lines of text from about 80 files (every file has about 2000 rows) at the same time. I wanted to use search&replace tool in vs Code(ctrl+shift+f).   And my issue consists of two different problems: ## Problem 1   Given following rows: ``` být=elektronický=zásilka být=jiný=způsob být=poskytování=pozáruční být=poskytování=servisní být=pozdě=třetí být=pozáruční být=pozáruční=servis být=příslušný=krajský být=příslušný=poškozený být=schopný=dodaný být=servis být=servisní být=servisní=služba být=služba=zahrnující být=zejména=uvedený ``` where I need to remove whole row with occurence. This works correctly and matches 3+grams:  `^být=[^=]+=.*` This incorrectly matches also 2grams: `^být=[^=]+=.*\n`  Then i thought - ok, I can make some workaround and split it to two regexps which lead to problem 2.  ## Problem 2  When I removed all occurences of this `^být=[^=]+=.*` from all files, then I needed to remove blank lines. I used the same tool for multi search and replace in all files from the same folder. I used this regexp `^\n` and the button for replace all (it said about 2000 occurences) didn't do almost anything (changed about 3 files from 80).   Ok I tried to click to replace all button in multisearch window file by file. Reached 3rd file where it stopped to work as well.   Ok if I click fast enough I might be done soon I thought and clicked on replace for each occurence in multisearch window.  And I was terrified when I later found that it instead of deleting blank lines also deleted lines with text. (e.g. `cena=náhradní=díl`)   VS Code version: Code 1.44.1 (a9f8623ec050e5f0b44cc8ce8204a1455884749f, 2020-04-11T01:48:12.622Z) OS version: Windows_NT x64 10.0.18363  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2808)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: enabled<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off_ok<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|31.87GB (20.32GB free)| |Process Argv|| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (14)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-base64|ada|0.1.0 vscode-markdownlint|Dav|0.34.0 jsonpath-extract|dav|1.2.3 gc-excelviewer|Gra|2.1.34 Angular2|joh|9.1.2 rainbow-csv|mec|1.6.0 vscode-docker|ms-|1.0.0 csharp|ms-|1.21.17 vscode-kubernetes-tools|ms-|1.1.1 python|ms-|2020.3.71659 powershell|ms-|2020.3.0 vscode-typescript-tslint-plugin|ms-|1.2.3 vscode-yaml|red|0.7.2 markdown-all-in-one|yzh|2.8.0   </details> <!-- generated by issue reporter -->
---
Título: [Accessibility] Selection and highlighting colors are confusing
Descripcion: Issue Type: <b>Bug</b>  Selection and highlighting is very confusing.  It is hard to tell what the current selection is because its colour is less dominant than than the highlight. This is especially confusing when cycling through lots of matches.  ![image](https://user-images.githubusercontent.com/4403806/79425793-91f27800-8005-11ea-9e5b-a362553b898e.png)    VS Code version: Code - Insiders 1.45.0-insider (4f05de82a75569601bc2dc894023383b4ce1c2c0, 2020-04-13T17:53:50.995Z) OS version: Windows_NT x64 10.0.18363  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-4930K CPU @ 3.40GHz (12 x 3402)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off_ok<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|undefined| |Memory (System)|23.94GB (12.10GB free)| |Process Argv|--folder-uri file:///c%3A/Development/winforms| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (4)</summary>  Extension|Author (truncated)|Version ---|---|--- csharp|ms-|1.21.17 powershell-preview|ms-|2020.4.2 html-preview-vscode|tht|0.2.5 vscode-icons|vsc|10.1.1   </details> <!-- generated by issue reporter -->
---
Título: Should we optimize sync setup for syncing everything
Descripcion: If the vast majority of people just sync everything (like myself), we could save users from encountering this visually noisy/complex dialog:  ![image](https://user-images.githubusercontent.com/2193314/79363645-0261a200-7efd-11ea-997a-7ded9c73b3d8.png)  By hiding it behind another that simply listed the options:  - Sync everything - Customize what to sync
---
Título: Define keybinding button should match blue button style used elsewhere
Descripcion: We don't use round corners anywhere else: ![image](https://user-images.githubusercontent.com/2193314/79271858-5913a100-7e55-11ea-82bc-b664058b2796.png)  Can we match this? ![image](https://user-images.githubusercontent.com/2193314/79271871-60d34580-7e55-11ea-857e-05601e3689d4.png)
---
Título: Support GitHub logins in settings sync
Descripcion: Currently Settings Sync needs MSFT account. This request is to allow users to use GitHub account to login and use Settings Sync
---
Título: Notebook UX Explorations
Descripcion: ## Summary  This issue covers the ux explorations for our [Notebook native support](https://github.com/microsoft/vscode/issues/91987).  ## Backlog - [x] :running_man: 1. Cell toolbar - [x] :running_man: 2. Cell progress and status - [x] :running_man: 3. Output toolbar - [x] :running_man: 4. Drag and drop - [x] :running_man: 5. Folding indicators and folding UX - [x] :running_man: 6. Keyboard and cell focus - [x] :running_man: 7. Changing cell type - [x] :running_man: 8. How does the current focus indication go together with SCM decorations? - [ ] What does a minimap for notebooks look like? - [ ] Overall polish: spacing, color, ... - [ ] Notebook diffing - [ ] Global notebook state and actions  ## Designs ### 1. Cell toolbar Code Cells <img width="866" alt="Cell toolbar - Code" src="https://user-images.githubusercontent.com/35271042/79805881-fec68480-831b-11ea-9b28-87ff4cfd1ad9.png">  Text Cells <img width="866" alt="Cell toolbar - Markdown" src="https://user-images.githubusercontent.com/35271042/79805890-025a0b80-831c-11ea-9dd4-153a5154b4a8.png">  <img width="866" alt="Cell toolbar - Markdown Edit" src="https://user-images.githubusercontent.com/35271042/79805889-01c17500-831c-11ea-80e0-a8a1164d702b.png">   ### 2. Cell progress and status  ![Kapture 2020-04-16 at 22 09 14](https://user-images.githubusercontent.com/35271042/79534370-33da8a80-802f-11ea-8b09-72b2e2e1cba8.gif)  <img width="866" alt="Status Bar - Default" src="https://user-images.githubusercontent.com/35271042/79506613-269bac80-7feb-11ea-8929-52d77f04ea18.png">  <img width="866" alt="Status Bar - Running" src="https://user-images.githubusercontent.com/35271042/79506618-28657000-7feb-11ea-89c0-d3b2cc86aaae.png">  ### 3. Output toolbar Switcher for output renderers ![Kapture 2020-04-16 at 13 13 57](https://user-images.githubusercontent.com/35271042/79502208-2815a680-7fe4-11ea-9483-6e46e423b323.gif)  ### 4. Drag and drop ![Kapture 2020-04-16 at 21 47 05](https://user-images.githubusercontent.com/35271042/79533077-e14b9f00-802b-11ea-94bf-100e8232012a.gif)  ### 5. Folding cells ![Kapture 2020-04-16 at 15 11 20](https://user-images.githubusercontent.com/35271042/79511681-a4b08100-7ff4-11ea-84f8-5aac80760474.gif)  ### 6. Keyboard and cell focus  Code Cells ![Kapture 2020-04-16 at 12 37 55](https://user-images.githubusercontent.com/35271042/79499011-239abf00-7fdf-11ea-90b1-16529f4b9cae.gif)  Text Cells ![Kapture 2020-04-16 at 12 22 02](https://user-images.githubusercontent.com/35271042/79497663-ed5c4000-7fdc-11ea-8bc5-896a84b52173.gif)  ### 7. Changing cell type ![Kapture 2020-04-16 at 14 35 05](https://user-images.githubusercontent.com/35271042/79509003-88f6ac00-7fef-11ea-9408-64c70eacbff0.gif)  ### 8. Focus indicator & SCM decorations TBD
---
Título: Are terminal word link hovers too aggressive?
Descripcion: If everything in the terminal can be a link will the tooltip get annoying?  One idea is to only show underlines and tooltips when ctrl/cmd is not down when the match is "high quality" (web or validated local).
---
Título: Improve the settings sync flows with authentication
Descripcion: Improve the settings sync flows with authentication  ## Sign in flow  Signing in showing too many notifications and not consistent. Sign in from Accounts UI and I see following dialogs   a. For the first time ever  <img width="622" alt="image" src="https://user-images.githubusercontent.com/10746682/78883896-66e2b400-7a5a-11ea-94eb-ddd40bc304bb.png">  <img width="662" alt="image" src="https://user-images.githubusercontent.com/10746682/78884127-bc1ec580-7a5a-11ea-966a-306608202af1.png">  b. Afterwards  <img width="487" alt="image" src="https://user-images.githubusercontent.com/10746682/78883763-3b5fc980-7a5a-11ea-9eae-de8b6ab2ca8f.png">  <img width="662" alt="image" src="https://user-images.githubusercontent.com/10746682/78884127-bc1ec580-7a5a-11ea-966a-306608202af1.png">  ## Sign out flow  Signing out is showing following notification  <img width="489" alt="image" src="https://user-images.githubusercontent.com/10746682/78882615-97295300-7a58-11ea-94ac-327e406f5598.png">  There should be a sign in button instead of Turn on. Because user did not turn off sync here. It shall be same as the action button that is shown in the gear icon  <img width="344" alt="image" src="https://user-images.githubusercontent.com/10746682/78882885-0606ac00-7a59-11ea-87f6-2fc1735a9437.png">  Above notification is also shown even when settings sync is turned off  Also do we need successfully sign out notification here?  ## Error flow  Errors while signing in  Following notifications are shown which are not helpful  <img width="499" alt="image" src="https://user-images.githubusercontent.com/10746682/78884626-8c23f200-7a5b-11ea-8ea6-639ecac0391a.png">  ## Cross Window Flow  Sign in/Sign out from one window is prompting turn on/turn off sync notification on another window  https://github.com/microsoft/vscode/issues/94176  - Open two windows with sync enabled  - Sign out from one window and you get a turn off notification in that window  - But it is not expected to get the same notification in another window - Now sign in from one window and you get following notification in another window  <img width="480" alt="image" src="https://user-images.githubusercontent.com/10746682/78885085-4156aa00-7a5c-11ea-90e4-ca2838509c33.png">   ## Others  - Decouple auth and settings sync - https://github.com/microsoft/vscode/issues/94050
---
Título: Provide a UI component toolkit for WebViews
Descripcion: Refs: #93604  As WebViews get used more and more to provide functionality (especially now with Custom Editors), it would be great to provide a reusable set of components that fit VS Code's UI/UX style and behavior.
---
Título: Should provide buttons to select/unselect all changes when preview a workspace edit
Descripcion: **Use Case**: When the user renames a Java file from file explorer, the Java extension would watch on `workspace.onDidRenameFiles` event, then calculate and generate a workspace edit to update its class name and references. Since it takes some time to calculate the edit, the user may perceive the file contents to be updated after a while. There is a lag between file rename and file content update. In order to improve the UX, we would show progress notification at the status bar during the calculation, and also want to try the preview API to preview the workspace edit instead of automatically applying the edit.  **Problem**: Currently `workspace.applyEdit` interface doesn't provide an option to allow the extension to force preview the workspace edit. A workaround is to add `WorkspaceEditEntryMetadata` property to the workspace edit. Since in java language, we don't distinguish which changes need to be confirmed, in order to trigger the preview pane, i just set the needsConfirmation to true for all changes. This will make all changes unchecked in the preview tree, and the users have to check one by one if they want to apply all. This is especially not convenient for large projects, as the possible modifications include many positions. ![image](https://user-images.githubusercontent.com/14052197/78649658-531b3e80-78f0-11ea-9932-8c9eda0c88ed.png)  **Expected**: At least, provide an easy way to bulk select the changes. Further, it would be nice to expose a client API to force preview a workspace edit and keep all changes checked by default, like what rename did (shift + enter).
---
Título: Rename Preview "Group Changes By File" view doesn't show the reference type icon info
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.43.2 and the latest Insiders. - OS Version: Windows  Steps to Reproduce:  1. Invoke the Rename Preview somehow with results that types with icons. I used our internal C/C++ extension at https://github.com/microsoft/vscode-cpptools.  Actual: No reference type icons are shown  ![image](https://user-images.githubusercontent.com/19859882/78301167-8d01d480-74ed-11ea-8385-31ee1130d6e1.png)  Expected: Type icons should appear. Hovering over the icon should show the type label. Otherwise the info is only available via the group by type view and it's a regressions compared to our previous custom UI.  ![image](https://user-images.githubusercontent.com/19859882/78301518-0a2d4980-74ee-11ea-8f12-5fe02d7ce26c.png)  VS  ![image](https://user-images.githubusercontent.com/19859882/78301763-6a23f000-74ee-11ea-9d13-80a8c28356c6.png)   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Notebook view state restore: cell heights
Descripcion: Issue Type: <b>Feature Request</b>  Currently when we are switching different notebooks, cells and their outputs are rerendered every time. The catch is users keep seeing cells reflow. To mitigate this issue, we can save cell total heights into the view states and then restore when the same file is opened again.  With this the file reopening will be like  ![Kapture 2020-04-01 at 16 58 11](https://user-images.githubusercontent.com/876920/78197524-72225800-743a-11ea-8070-38b34ce203e7.gif)  We need to redesign the initial layout for each cell carefully, which will include but not limited to  - [ ] We need some way to determine the cell changes or not instead of relying visual `index` in the list - [x] When the cell is rendered, it will the cached total height first and then trigger new layouts with debouncing. Note that debouching might affect a newly opened document. - [x] View Cell layout info is updated correctly when scrolling up and down (move them out of view and then move in)  *rebornix/cell-height-caching*  VS Code version: Code - Insiders 1.44.0-insider (20b88fa0694cae8e46ffd305a1450ba58ae6065b, 2020-04-01T08:34:11.087Z) OS version: Darwin x64 19.2.0   <!-- generated by issue reporter -->
---
Título: Sorting of entries in the refactor preview puts checked items last instead of first
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.43.2 - OS Version: Windows or others.  Steps to Reproduce:  1. See issue https://github.com/microsoft/vscode/issues/90664 , that says "We should make sure that categories with unconfirmed changes go atop, files should be sorted by name and changes by line number".  Expected: Our C/C++ extension would prefer the opposite behavior with the confirmed changes going on at the top, which is what was originally requested at https://github.com/microsoft/vscode/issues/77728#issuecomment-585985696 and what matches Visual Studio's C++ Rename preview:  ![image](https://user-images.githubusercontent.com/19859882/78183200-57d98180-741c-11ea-8002-4497d14771af.png)  Was there a reason the opposite sorting was desired? Our Find All References UI (and our current Rename UI) puts the confirmed/checked references at the top, so flipping the order for rename is confusing to our users. In many scenarios, users just want to preview the confirmed/checked references, and they skip the other stuff, which is why we'd prefer the other types of unconfirmed/unchecked references to be at the bottom, since those types are less likely to be renamed.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Use a simple context menu for output mime type
Descripcion: Testing #93742  * Create a notebook with a query like `repo:microsoft/vscode label:bug assignee:alexdima is:open` * Execute the query and click on the output mime type button * Observe that the quick pick opens * This is unexpected, I would have expected a local context menu:  ![image](https://user-images.githubusercontent.com/5047891/78063671-e1dc0880-7390-11ea-8ef0-e3f3f83f1a48.png)  ![image](https://user-images.githubusercontent.com/5047891/78063745-fa4c2300-7390-11ea-9034-fd398e32405e.png)
---
Título: Settings UI: Support theming the line where user and workspace scopes can be selected
Descripcion: This greyscale line looks off in my theme and it looks the same across all themes so I guess we can't theme it currently? Alternatively using transparent white (for dark) instead of opaque greyscale would be a good enough fix for me.  ![image](https://user-images.githubusercontent.com/2193314/78053936-27b7b300-7336-11ea-9402-0291b178000c.png)
---
Título: + Code + Markdown weird design
Descripcion: Refs: #93742  I find the + Code + Markdown separator design a bit weird. We do not use it anywhere else in vscode and it is not accessible - no way to focus into it. I would remove it until other parts of the notebook ux are polished. And this could ideally be done via context menus  ![Screenshot 2020-03-31 at 16 19 58](https://user-images.githubusercontent.com/1926584/78037314-a844d680-736b-11ea-9c32-8a09f018e117.png)
---
Título: Feature to minimize cell-output
Descripcion: <!-- ⚠️⚠️ Do Not Delete This! feature_request_template ⚠️⚠️ --> <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Having a button on each cells output so that larger blocks can be minimized to reduce the on-screen info. Could be a sliding feature if not a button. Such as minimizing/maximizing a screen size vs. drag & drop to resize.  This could improve notebook overview and reduce clutter, even when the cells can't be deleted.
---
Título: Notebooks: icons need love
Descripcion: Refs: #93742  Currently we use the following icons for notebooks. I see the followgin issues  1. Clicking on the Lock Cell Icon and holding the Icon gets cliped becasue there is not enough vertical space 2. We use the Continue icon for "Execute Notebook Cell". Which is wrong, we need a different icon here. Idealy the same one which we use on the left hand side. Which would just be a green triangle, which means execute everywhere we use 3. For Run all Cells we use a single green triangle which is wrong imho. We should use an icon which represents multiple, so for example mulitple green triangeles 4. Lock icon is the same icon which we use for Output do not scroll. I think we need a different icon here as it has a different meaning 5. We use an X to delete a cell. Why not a trash can just like the terminal uses it   ![Screenshot 2020-03-31 at 13 28 12](https://user-images.githubusercontent.com/1926584/78021427-863f5a00-7353-11ea-98f3-e3169a1529c1.png)
---
Título: Notebooks: double click on empty area should open new cell
Descripcion: https://github.com/microsoft/vscode/issues/93742  Double click on empty area should open new cell Same as double click on empty editor area opens new untitled editor, double click on tab area opens new tab..
---
Título: DND: blurring editor area is not helpful for me
Descripcion: I find the blurring of the editor area rather distracting than helpful, especially after I got used to how things work, now when I start to drag a view e.g. in the panel, I see this large UI update everytime.   I suggest to not have this feedback.
---
Título: Drop stash should ask for comfimation
Descripcion: <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> <!-- Please include the latest version of VS Code you've confirmed to not have this feature --> Code version: 1.43.1 In repo control, when you press 'Drop Stash' there is no popup to confirm this action. Due to fact that 'Apply Stash' is above drop, there is high probability to missclick (yes, I did it. I have deleted quite a lot of work)  This feature can save a lot of accidents of deleting stash. ![screen](https://user-images.githubusercontent.com/22496424/77462231-22250f00-6e04-11ea-8f85-48e555e7bc04.png)
---
Título: Show a modal when doing side-by-side diffs of files which is opt-in
Descripcion: ### Feature It would be great if there was an additional way to view side-by-side diffs of files maybe through the use of a modal that is shown above all the open editors which would make it a lot easier to see diffs when working with split windows.   When you select a file to view the diff, the default behaviour is to open the diff in the focused split window which I find to ruin the developer experience. What I end up doing every time is closing all my split window editors and then viewing the diff so that it is more viewable.  This feature if implement might be best to be **opt-in**  Here in the below image, I am using split-window editors  ![Screenshot from 2020-03-24 15-19-00](https://user-images.githubusercontent.com/26552540/77429845-f180ad80-6de2-11ea-9547-46e81559d89d.png)  When you open a file diff then it shows it in the focused split window  ![Screenshot from 2020-03-24 15-21-15](https://user-images.githubusercontent.com/26552540/77429986-242aa600-6de3-11ea-8714-d6ea63195d01.png)  Even if I close the **Source Control** explorer I still find that I would need to close the split windows, it would be great to have a modal to show diffs of files, so you can separate open file editors and diff previews  ### Version  VS Code version: **1.43.1**
---
Título: Minor UI inconsistencies: Input theme references
Descripcion: I expected that the overall search input in the UI preferences view is styleable via `settings.textInputBackground` and `settings.textInputForeground`. But currently it is styled via `input.background` and `input.foreground` only.  Please take a look at the attached screenshot. And you may want to use this setting snippet for further debugging.  <img width="1280" alt="vscode-input-theme-references" src="https://user-images.githubusercontent.com/3532570/76908802-e640f580-68a9-11ea-9c7e-c2644cf3dc85.png">  ```     "workbench.colorCustomizations": {         "input.background": "#0000ff",         "input.border": "#ffff00",         "input.foreground": "#ffffff",         "settings.textInputBackground": "#00ff00",         "settings.textInputForeground": "#000000",         "settings.textInputBorder": "#ff0000",     }, ```
---
Título: Minor UI inconsistencies: Alignments in Sidebar
Descripcion: The vertical alignment in the sidebar views could be more consistent. Please see the attached screenshot where I have marked the deviating areas.  <img width="1280" alt="vscode-sidebar-alignment" src="https://user-images.githubusercontent.com/3532570/76908563-4b481b80-68a9-11ea-8d82-0a9538b95956.png">
---
Título: Minor UI inconsistencies: Input heights
Descripcion: I found different heights within Visual Studio Code and counted a total of six different values: 38px, 48px, 50px, 52px, 56px and 60px. Perhaps we can reduce/unify these to a set of three values, like small, medium and large? In my opinion, at least the inputs in the sidebar should have identical heights to prevent small layout jumps when changing the sidebar view.  <img width="1280" alt="vscode-input-heights" src="https://user-images.githubusercontent.com/3532570/76908515-29e72f80-68a9-11ea-9e7b-fdfe11d6bd69.png">
---
Título: Rename "Turn on Sync..." to "Turn on Preferences Sync..."
Descripcion: `Turn on Sync...` action to turn on syncing preferences is bit not clear and does not say what it is syncing. User will come to know only after executing that action. Instead rename it `Turn on Preferences Sync...` so that user already knows what this action is about.
---
Título: Progress notifications: visually distinguish between title and message
Descripcion: Currently the notificatino simply append progress title and message. I suggest to have some visual distinction to make them more readable.  Use case: debug progress has both title and message, and it would be cool if they are nicely formated. Currently I can not append them to be in the same content since then the status bar message will be too long  fyi @weinand
---
Título: Quick input: changes to support more complex quick open handlers
Descripcion: To support quick open with the quick input widget, I had to make a couple of changes to quick input itself where we were missing support.   @chrmarti listing them here so that you can comment if this is ok or should be changed (e.g. naming):  **`IQuickPickItem` related** * `IQuickPickItem.keybinding`: renders a keybinding on the right hand side of the pick (used in commands picker) ![image](https://user-images.githubusercontent.com/900690/76735838-12535e00-6766-11ea-91e4-f04e7d7d8954.png) * `IQuickPickItem.italic`: shows the label in italic (currently used for editors that are in preview mode) * `IQuickPickItem.strikethrough`: shows the label with a strikethrough (currently used for deprecated symbols) * `IQuickPickItem.buttonsAlwaysVisible`: will show the items buttons toolbar always, not just on hover (this is used for dirty editors to show the dirty indicator black dot always - same as we do in open editors view)  **`IQuicPick` related** * `IQuicPick.canAcceptInBackground`: this allows to accept an item from the picker without closing it via right-arrow or middle mouse click (this is used in all quick opens that can open an editor to allow for opening in the background without leaving the picker). to detect that an item was accepted in the background, I also had to add `IQuickPickAcceptEvent`
---
Título: Revisit usage of box-shadow
Descripcion: IMO the shadows used in the app are weird, here's a notification with its default shadow:  ```css box-shadow: rgba(0, 0, 0, 0.53) 0px 0px 8px, ```  ![image](https://user-images.githubusercontent.com/1812093/76266745-5c1cdf80-6260-11ea-94c4-7ae190821820.png)  That shadow is unnatural, shadows are caused by objects obstructing a light source, the object in this case is the notification itself and for that shadow to happen the light source should come perpendicularly out of the notification, i.e. it should be perpendicular to the screen, basically it's as if I'm the light source in this scenario, and I'm not usually the main light source in the real world.  In the real world the biggest light source is the sun and during the day it's pretty much always above the objects obstructing its light rays, i.e. the shadow one sees usually is more accentuated at the bottom, not at the top, nor it is uniformly distributed like in the screenshot above.  Here's what a notification with a more natural shadow would look like:  ```css box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4), ```  ![image](https://user-images.githubusercontent.com/1812093/76266914-f11fd880-6260-11ea-897e-d220effe5e2e.png)  I think that's a significant improvement, considering we are talking about a shadow, enough of an improvement that I had to open this issue 😅
---
Título: Improve parameter hints UX
Descripcion: This is similar to https://github.com/microsoft/vscode/issues/14165, but focuses specifically on parameter hints. Here's the comparison of UI for IntelliJ and VS Code:  IDEA: ![good](https://user-images.githubusercontent.com/1711539/76109452-c1609e80-5fdc-11ea-85b1-26cd06e18b24.png)  VS Code: ![wtf](https://user-images.githubusercontent.com/1711539/76109454-c1f93500-5fdc-11ea-9378-b2cbd69897f1.png)  IDEA's version is massively more useful, because:  * it uses a single line (so no spacing wasted for wrapping, no weird breaks mid parameter) * it is *centered* at the cursor position (as opposed to being to the right)  Although this is far from an extreme case, the VS Code version is nigh unusable :-(   Note that many language servers for VS Code implements parameter snippet completion, where arguments of the function call are prefilled:   ![image](https://user-images.githubusercontent.com/1711539/76109788-7b580a80-5fdd-11ea-93d7-121f16487df8.png)  I think that this behavior is basically a work-around for VS Code parameter hints not being very useful.
---
Título: Refactor preview re-sorts edits when checking/unchecking them
Descripcion: * have refactor preview with categories showing * uncheck items are sorted atop, others below * uncheck an item from the bottom * :bug: the view resorts  ![Mar-02-2020 16-54-43](https://user-images.githubusercontent.com/1794099/75693216-edabb080-5ca6-11ea-8390-321ad0a418a9.gif)
---
Título: Fix suggest widget hiding `type` field when `label` is too long
Descripcion: From:  https://github.com/microsoft/vscode/issues/90552#issuecomment-586150833  ![74374388-27b62080-4d93-11ea-84d1-1e9498c78071](https://user-images.githubusercontent.com/1794099/74513989-0dec1900-4f0c-11ea-84a6-2eb015207189.png)
---
Título: Refactor preview leaves panel open
Descripcion: * have no panel open * F2 with preview * accept or discard the preview * :bug: panel is still open
---
Título: Add an entry point for sync from the settings ui
Descripcion: One of the things that came out of the study was that users often went to the settings ui to try to set this up. Now, they may not have known what word to look for (see #91192) but they did scan the page for some type of entry point.  I'm not quite sure if and where this should live, but figured I'd get the conversation going. I'm not saying this is something we should do, just that we know this is the first place users go to.   One idea is to add a button somewhere, but then that brings up the "where does Sync live” and where else we'd want to show indicators:  ![image](https://user-images.githubusercontent.com/35271042/75376805-84323900-5885-11ea-9d21-f2d0cc9f1e71.png)  Or maybe it's just that we add a setting that is bubbled up to the top:  ![image](https://user-images.githubusercontent.com/35271042/75377480-c90a9f80-5886-11ea-8f67-35b488038997.png)     Other browsers do something similar when going to the browsers settings, but have a different approach with an actual "profile" section as the first item:  **Chrome**  ![image](https://user-images.githubusercontent.com/35271042/75376150-631d1880-5884-11ea-9505-2d96d3548ce7.png)   **Edge**  ![image](https://user-images.githubusercontent.com/35271042/75375987-19343280-5884-11ea-9719-b294ad3c9d8e.png)  cc @Tyriar @RMacfarlane
---
Título: Please allow toggling rendering and editing of markdown cells
Descripcion: refs #91328  I prefer to be able to render markdown only after I'm done editing to not clutter the notebook.
---
Título: Add issue and user completion item kinds
Descripcion: I've had several requests for this now:  Custom icons: https://github.com/microsoft/vscode-pull-request-github/issues/1529  Codicons: ![image](https://user-images.githubusercontent.com/38270282/75328392-3cf47a00-587e-11ea-9e48-d56fa12c866e.png)
---
Título: Investigate adding TS project entry to the status bar
Descripcion: **Background** We currently show the active TS version in the status bar. This can be clicked on the switch the TS version. However actually switching the TS version is a fairly uncommon operation. The vast majority of users are also using VS Code's built-in TS version and likely don't really care which version of TS is being used for their IntelliSense  One piece of additional information that would likely be more helpful if  the current TS file belongs to any `tsconfig` project. We'd also like to make commands such as `TypeScript: Go to project configuration` more discoverable  **Proposal** Investigate replacing the existing TypeScript version status bar entry with one that displays if the file is part of tsconfig project or now. When clicked, this could open a quick pick with some common project operations:  - Switch TypeScript version - Go to project version - Tasks/build? - Enable project wide error reporting? - Help?  Users would always be able to disable this status bar entry if they find it gets in the way. The hope is that it would not take up much more space than the existing version information
---
Título: Two icons for representing notification progress are confusing
Descripcion: Refs: https://github.com/microsoft/vscode/issues/91163  We showing notificatino progress we render two icons in the status bar. The ball and the spinner. I am not a big fan of this appraoch as they seem like two disconnected icons to me. We should somehow marry them, or show a progress in some other way. On the very least they should share some backgroun color / outline  ![Screenshot 2020-02-25 at 21 01 59](https://user-images.githubusercontent.com/1926584/75282891-14369b00-5812-11ea-82c7-924a0686536f.png)
---
Título: Notifications UX feedback
Descripcion: Refs: #91163  There are some things which I dislike about the notifications UX: 1. Top level hide uses the Escape icon, same as the icon per notification which has a stronger meaning. Suggestion -> we should use a different icon for the top level action 2. The difference between an unread and a hidden notification is not very clear to me and I think it can be confusing to our users. When do I actually see a badge in the notification bell? Since I do not see it if I just hide all my notificaitons with ESC. Do you treat them as read then?  3. There should be clearer UX indication that the top level actions are run on everything, Currently that is not the case as they look tied to the top level notification.
---
Título: Suggest widget with codicons are off aligned
Descripcion: When using codicons in the suggest widget detail pane, they appear to be off aligned:  ![image](https://user-images.githubusercontent.com/35271042/75178592-3aaee600-56ed-11ea-8fc7-9d6e691ad2ad.png)  Tweaking the CSS I was able to use `vertical-align: sub` to get it closer:  ![image](https://user-images.githubusercontent.com/35271042/75178828-b01ab680-56ed-11ea-9567-7941884e5855.png)   cc @alexr00
---
Título: Find/replace icons are not intuitive
Descripcion: Issue Type: <b>Bug</b>  Related to my feedback on find/replace behavior (#91210), the dialog is also difficult to use because of its reliance on mystifying icons over labeled buttons.  * Several icons are just variants of `Aa` and `Ab` and `AB` etc. which are hard to keep straight without tool tips * The "find in selection" icon doesn't convey selection * Replacement options are hidden behind a generic disclosure triangle * "Match whole word" doesn't convey much, there are 3 lines and I don't know what any of them represents * "Replace" vs "Replace all" is reasonably intuitive but I'm not sure why "replace all" is differentiated with multiple characters being replaced rather than just multiple occurrences.  Aside from its icon, I'm not sure why "find in selection" is over to the right by the controls for navigating between occurrences, rather than an option that controls search behavior like "ignore case".  I also noticed that some button tooltips are in Title Case and others are in Sentence case, not sure if there is a reason for that.  VS Code version: Code 1.42.1 (c47d83b293181d9be64f27ff093689e8e7aed054, 2020-02-11T14:44:27.652Z) OS version: Darwin x64 19.3.0
---
Título: Find/replace dialog fights me on selection
Descripcion: Issue Type: <b>Bug</b>  I find the find/replace dialog frustrating to use, in that it often switches modes on me against my wishes. I especially find that many of my frustrations stem from its behavior regarding the current document selection.  Let's suppose I have the following code:  ```python foo()  def asdf():     foo() ```  I want to find the occurrence of `foo()` within the function body, ignoring the first line.  First I select the body of the function and press Cmd-F and type "foo".  Simple, right? What happened? Well, actually I haven't given you enough information to tell! It depends on whether I dragged from the top-left to select or the bottom-right, because this decides whether the insertion cursor is at the beginning of the function or after it.  If the insertion cursor was *before* the function definition, then the `foo` inside the function body is now highlighted. If the insertion cursor was *after* the function definition, then the topmost `foo` is highlighted, even though it was outside of my initial selection.  Either way, I lost my intended selection for scoping my search to just this function.  But, the selection is only hijacked when you modify the search query. If the dialog remembered the query from before, it worked as I expected. Before I carefully analyzed the behavior, this was one reason the dialog seemed unpredictable.  ---  Now suppose I have closed the find dialog but later want to do the same search again. I select some code and again press Cmd-F, the dialog reopens. What state is it in?  Well, again the answer depends on context.  If I selected multiple lines of code, then my original search for "foo" is still in the field. But the "find in selection" option is reverted to being disabled.  If I selected a single line of code, or some portion of it, then the selected line is copied into the search field, erasing my previous search. If it was not "foo" but a complex regular expression, you can imagine this is frustrating.  ---  In short, the find/replace dialog would benefit from more consistency of its behavior. Also, some of these behaviors may be expected on Windows but are not expected on macOS.  VS Code version: Code 1.42.1 (c47d83b293181d9be64f27ff093689e8e7aed054, 2020-02-11T14:44:27.652Z) OS version: Darwin x64 19.3.0
---
Título: Reword sign in text in quick pick
Descripcion: ![image](https://user-images.githubusercontent.com/35271042/75083187-3eafed80-54cc-11ea-92c4-ecc06146bee7.png)  The text `Please sign in...` is very long and wordy (on Windows it wraps to two lines). Can we shorten to something simple like `Sign in to synchronize your data across devices`?  A few examples from others:   **Chrome** <img width="50%" src="https://user-images.githubusercontent.com/35271042/75083382-47ed8a00-54cd-11ea-9222-7aafba1d2e1f.png">  **Edge** <img width="50%" src="https://user-images.githubusercontent.com/35271042/75083383-4a4fe400-54cd-11ea-864e-3062682d3f89.png">
---
Título: Update "Turn on sync" text strings
Descripcion: <img width="50%" src="https://user-images.githubusercontent.com/35271042/75083425-7d927300-54cd-11ea-9f39-c20d3ffb3620.png">  One of the pieces of feedback we got were that people were looking for an "Account" or "Sign in" terms when looking to enable sync. Can we update the `Turn on sync` text string to read: `Sign in to turn on sync`? Below are examples:  **FireFox** <img width="50%" src="https://user-images.githubusercontent.com/35271042/75083376-42903f80-54cd-11ea-8423-377eb40548ff.png">  **Chrome** <img width="50%" src="https://user-images.githubusercontent.com/35271042/75083382-47ed8a00-54cd-11ea-9222-7aafba1d2e1f.png">  **Edge** <img width="50%" src="https://user-images.githubusercontent.com/35271042/75083383-4a4fe400-54cd-11ea-864e-3062682d3f89.png">
---
Título: Explore replacing notification count with alternate icon
Descripcion: Currently when you have multiple notifications you see a notification count like:  ![image](https://user-images.githubusercontent.com/35271042/75007233-54b8a200-5429-11ea-9674-963f8a2f5a55.png)  It would be interesting to explore reducing the shift of showing the number count with an alternate icon like so:  ![image](https://user-images.githubusercontent.com/35271042/75007277-7580f780-5429-11ea-8e6e-cc51e053835a.png)
---
Título: Explore animation for when sync makes changes
Descripcion: Since some feedback we've seen is there's no feedback for when a sync happens and a notification would be too heavy (https://github.com/microsoft/vscode/issues/86088), I think we should consider an icon that briefly shows over the gear menu. Note that this should not show for every sync, but only when a change is actually happening (first sign in or merge). What I'm envisioning is a rotating refresh icon that transforms into a tick over 2-3 seconds, we haven't done anything like that yet though.  cc @sandy081
---
Título: Issue reporter UI should better indicate that "Don't Know" cannot be used for submission
Descripcion: Extracted from https://github.com/microsoft/vscode/issues/90937  > Additionally, when trying to submit an issue using Report Issue from the Command Palette, if I choose "File on > Don't Know" nothing happens when I click the Preview on GitHub button and I'm unable to report the issue from that form.  VS Code version: Code 1.42.1 (c47d83b, 2020-02-11T14:44:27.652Z) OS version: Darwin x64 19.3.0
---
Título: Indicator to show a setting or an extension is not synced
Descripcion: User can configure extensions and settings to be ignored while syncing. There are also some settings which are ignored by default (like machine settings).   We would need some UI indication representing that these items are not getting synced
---
Título: Sync status indication
Descripcion: From user study:   Users were not sure whether sync was working, they all manually searched through settings/extensions to verify that sync was working and everyone expressed a desire for an indicator (last synced timstamp, sync is on, etc.)
---
Título: sync.ignoredExtensions should provide intellisense
Descripcion: Related: https://github.com/microsoft/vscode/issues/90930  <img width="493" alt="Screen Shot 2020-02-18 at 2 10 53 PM" src="https://user-images.githubusercontent.com/2193314/74782537-7e6e9f00-5258-11ea-8690-21e3656a5022.png">  Should auto complete to all currently installed extensions.
---
Título: Sync ignored extensions instructions aren't very useful
Descripcion: <img width="712" alt="Screen Shot 2020-02-18 at 2 09 20 PM" src="https://user-images.githubusercontent.com/2193314/74782427-47988900-5258-11ea-9dfd-321722025bc7.png">  It needs extension _ids_, it should mention that explicitly.
---
Título: Turn on/off sync should be in the preferences menu
Descripcion: Some people don't look in the gear menu, the file/preferences menu is the first place some people seem to go. A bunch of the preferences menu is part of the gear menu as well.
---
Título: "Replace (Overwrite Local)" button wording
Descripcion: Why does the dialog say this instead of just "Replace Local" or "Overwrite Local"? "Replace" by itself without the parens could just as easily mean replacing the server.
---
Título: Better sorting of entries of refactor preview
Descripcion: From https://github.com/microsoft/vscode/issues/77728#issuecomment-585985696  We should make sure that categories with unconfirmed changes go atop, files should be sorted by name and changes by line number
---
Título: Notifications: indicate progress notification if hidden in notification center
Descripcion: Version: 1.42.0 Commit: ae08d5460b5a45169385ff3fd44208f431992451 Date: 2020-02-06T10:51:33.119Z Electron: 6.1.6 Chrome: 76.0.3809.146 Node.js: 12.4.0 V8: 7.6.303.31-electron.0 OS: Darwin x64 17.7.0  Steps to Reproduce:  1. Enable ` Format On Save`. 1. Execute the following extension example. 2. Edit a text file and save it. 3. Cancel the notification`Save Participants`. 4. We cannot even save the text document.   This issue is a little bit different from #90273. What I want to say here is simple. If `provideDocumentFormattingEdits` throws `Error` after  the notification `Save Participants` canceled, we can not save files anymore. The files remain dirty.  ```typescript import * as vscode from 'vscode', import { DocumentFormattingEditProvider } from 'vscode',  class Formatter implements DocumentFormattingEditProvider { 	provideDocumentFormattingEdits(document: vscode.TextDocument): vscode.ProviderResult<vscode.TextEdit[]> { 		return new Promise((resolve) => { 			setTimeout(() => { 				throw new Error('always error') 			}, 5000) 		}) 	} }  export function activate(context: vscode.ExtensionContext) { 	console.log('Congratulations, your extension "helloworld-sample" is now active!'),  	let disposable = vscode.commands.registerCommand('extension.helloWorld', () => { 		vscode.window.showInformationMessage('Hello World!'), 	}),  	vscode.languages.registerDocumentFormattingEditProvider( 		{ scheme: 'file' }, 		new Formatter() 	) 	context.subscriptions.push(disposable), }  export function deactivate() { } ```
---
Título: Cannot untoggle intellisense details when no details exist for entry
Descripcion: Related: https://github.com/microsoft/vscode/issues/90093  Repro:  - Open intellisense on `{ "key": "ctrl+f1", "command": "terminalrename" }` - Press down - Open details (ctrl+space) - Press up - Close details (ctrl+space), it doesn't work.  ![image](https://user-images.githubusercontent.com/2193314/73873189-f921ce00-4805-11ea-87a0-e732622c9d29.png)  Version: 1.42.0-insider (user setup) Commit: 536757f Date: 2020-02-05T16:51:41.553Z Electron: 6.1.6 Chrome: 76.0.3809.146 Node.js: 12.4.0 V8: 7.6.303.31-electron.0 OS: Windows_NT x64 10.0.19041
---
Título: test-be1c42ae3c3a
Descripcion: 
---
Título: Add visual indicator for extension packs in extension search results
Descripcion: <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Today, it's possible to see the extensions that are part of an extension pack, but that requires that I click on the extension then click the "extension pack" header. I'd like to know, without clicking, that an extension is an extension pack via some kind of icon in the header.   It would be nice to link directly to the extension pack details (list of extensions in the pack) if the extension pack icon is clicked.
---
Título: "Cannot apply refactoring because 2 other files have changed in the meantime" but only 1 file open and no apparent change
Descripcion: While verifying https://github.com/microsoft/vscode/issues/89506  Setup as instructed in test plan: #89335. My file content was:  ``` createNewFile createNewFileWithContent deleteThisFile editAndRenameThisFile renameAndEditThisFile ```  I clicked into `renameAndEditThisFile`, hit F2 and added a `2` at the end. Opened preview and accepted the change. It worked the first time, but every other time after (even after reload) I got this:  ![image](https://user-images.githubusercontent.com/38270282/73532866-dd8d8080-441d-11ea-8a14-2038689c3466.png)  I don't actually have 2 files open.
---
Título: Rename preview list is populated from bottom to top
Descripcion: Testing https://github.com/microsoft/vscode/issues/89331  - Trigger a preview for an item with lots of references, such as `IAction#run` - The list of files shows up immediately, then it looks each files results are added top to bottom, slow enough to watch it happen - It might look better if it's done top to bottom  ![Jan-29-2020 16-21-32](https://user-images.githubusercontent.com/323878/73409277-a9964c00-42b3-11ea-923d-b78e171c810a.gif)
---
Título: Sync Settings UI: Quickpick UI comes at its limits...
Descripcion: Refs: #89358  When turning on Settings Sync, I get this QuickPick UI:  ![2020-01-29_11-40-48](https://user-images.githubusercontent.com/1898161/73350181-da16bf80-428c-11ea-84bb-5526c446d2eb.png)  The dominance of the filter text box is a bit confusing since there is no need for it in this 4-option case.
---
Título: Refactor preview wrong diff view
Descripcion: Issue Type: <b>Bug</b>  Issue Type: Bug  Re #89335  ``` createNewFile createNewFileWithContent deleteThisFile editAndRenameThisFile renameAndEditThisFile ```  * Put cursor on the last line * F2 * Modify the content and press shift+enter * Click the item in the panel, which opens a diff view * The diff view doesn't show the right comparison  ![image](https://user-images.githubusercontent.com/876920/73296084-d49e7400-41bd-11ea-872f-4003c7e75034.png)   VS Code version: Code - Insiders 1.42.0-insider (c4b6a6b537de49a734d0eedea06152ea37dfdb6a, 2020-01-28T05:34:51.242Z) OS version: Darwin x64 19.2.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i9-9980HK CPU @ 2.40GHz (16 x 2400)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off<br>surface_control: disabled_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|3, 2, 2| |Memory (System)|32.00GB (1.04GB free)| |Process Argv|-psn_0_7632711| |Screen Reader|no| |VM|0%| </details> <!-- generated by issue reporter -->
---
Título: Sync: Showing offline state
Descripcion: Refs: #89358  Handle following offline states  - User is offline - Server is offline (403, 404)  ----  macOS Catalina Version 10.15.2  I have sync setup between my Windows machine and my Mac -- while the Windows machine seems fine (no errors in the sync logs), the Mac seems to get `Error: Connection refused for the request '<url>'` errors sometimes and then that seems to go into a failure loop for a while (with unauthorized errors) but then will seemingly recover on its own.  During these "outages" the sync still shows that it is on, but settings aren't updated (until the issue resolves itself).  ``` [2020-01-28 10:49:11.443] [userDataSync] [info] Auto sync started [2020-01-28 10:49:11.657] [userDataSync] [info] Settings: Updating remote settings [2020-01-28 10:49:11.904] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 10:49:12.208] [userDataSync] [info] UI State: Updating remote ui state... [2020-01-28 10:49:12.364] [userDataSync] [info] UI State: Updating last synchronised ui state... [2020-01-28 10:49:12.528] [userDataSync] [info] Extensions: Updating remote extensions... [2020-01-28 10:49:12.710] [userDataSync] [info] Extensions: Updating last synchronised extensions... [2020-01-28 10:58:52.775] [userDataSync] [info] Auto sync stopped. [2020-01-28 10:58:53.002] [userDataSync] [info] Completed clearing remote data [2020-01-28 10:58:53.006] [userDataSync] [info] Completed resetting local cache [2020-01-28 11:10:47.711] [userDataSync] [info] Settings: Started pulling settings... [2020-01-28 11:10:47.997] [userDataSync] [info] Settings: Updating local settings [2020-01-28 11:10:48.025] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 11:10:48.041] [userDataSync] [info] Settings: Finished pulling settings. [2020-01-28 11:10:48.044] [userDataSync] [info] Keybindings: Started pulling keybindings... [2020-01-28 11:10:48.339] [userDataSync] [info] Keybindings: Remote keybindings does not exist. [2020-01-28 11:10:48.339] [userDataSync] [info] Keybindings: Finished pulling keybindings. [2020-01-28 11:10:48.340] [userDataSync] [info] UI State: Started pulling ui state... [2020-01-28 11:10:48.508] [userDataSync] [info] UI State: Updating local ui state... [2020-01-28 11:10:48.509] [userDataSync] [info] UI State: Updating last synchronised ui state... [2020-01-28 11:10:48.521] [userDataSync] [info] UI State: Finished pulling UI state. [2020-01-28 11:10:48.521] [userDataSync] [info] Extensions: Started pulling extensions... [2020-01-28 11:10:48.704] [userDataSync] [info] Extensions: Updating local extensions... [2020-01-28 11:10:49.059] [userDataSync] [info] Extensions: Installing local extension. jock.svg 1.1.1 [2020-01-28 11:10:49.062] [userDataSync] [info] Extensions: Installing local extension. bierner.markdown-preview-github-styles 0.1.6 [2020-01-28 11:10:49.063] [userDataSync] [info] Extensions: Installing local extension. ms-vsliveshare.vsliveshare-audio 0.1.80 [2020-01-28 11:10:49.067] [userDataSync] [info] Extensions: Installing local extension. humao.rest-client 0.23.1 [2020-01-28 11:10:49.071] [userDataSync] [info] Extensions: Installing local extension. ms-vscode.azure-account 0.8.8 [2020-01-28 11:10:49.075] [userDataSync] [info] Extensions: Installing local extension. ms-vscode.typescript-javascript-grammar 0.0.53 [2020-01-28 11:10:49.079] [userDataSync] [info] Extensions: Installing local extension. ms-vscode.js-debug-nightly 2020.1.38943 [2020-01-28 11:10:49.248] [userDataSync] [info] Extensions: Installing local extension. mrmlnc.vscode-scss 0.9.0 [2020-01-28 11:10:49.250] [userDataSync] [info] Extensions: Installing local extension. eamodio.tsl-problem-matcher 0.1.0 [2020-01-28 11:10:49.252] [userDataSync] [info] Extensions: Installing local extension. slevesque.vscode-autohotkey 0.2.2 [2020-01-28 11:10:49.254] [userDataSync] [info] Extensions: Installing local extension. ms-vscode.powershell-preview 2020.1.0 [2020-01-28 11:10:49.255] [userDataSync] [info] Extensions: Installing local extension. eamodio.toggle-excluded-files 1.7.0 [2020-01-28 11:10:49.258] [userDataSync] [info] Extensions: Installing local extension. visualstudioexptteam.vscodeintellicode 1.2.4 [2020-01-28 11:10:49.260] [userDataSync] [info] Extensions: Installing local extension. eamodio.find-related 0.9.0 [2020-01-28 11:10:49.262] [userDataSync] [info] Extensions: Installing local extension. eamodio.restore-editors 0.2.1 [2020-01-28 11:10:49.263] [userDataSync] [info] Extensions: Installing local extension. codezombiech.gitignore 0.6.0 [2020-01-28 11:10:49.264] [userDataSync] [info] Extensions: Installing local extension. eamodio.remotehub 0.5.0 [2020-01-28 11:10:49.266] [userDataSync] [info] Extensions: Installing local extension. ryu1kn.partial-diff 1.4.1 [2020-01-28 11:10:49.275] [userDataSync] [info] Extensions: Installing local extension. pflannery.vscode-versionlens 0.24.0 [2020-01-28 11:10:49.278] [userDataSync] [info] Extensions: Installing local extension. ms-vscode-remote.remote-wsl 0.42.1 [2020-01-28 11:10:49.280] [userDataSync] [info] Extensions: Installing local extension. alefragnani.bookmarks 10.7.0 [2020-01-28 11:10:49.289] [userDataSync] [info] Extensions: Installing local extension. codestream.codestream 6.0.0 [2020-01-28 11:10:49.293] [userDataSync] [info] Extensions: Installing local extension. esbenp.prettier-vscode 3.18.0 [2020-01-28 11:10:49.306] [userDataSync] [info] Extensions: Installing local extension. ms-vsliveshare.vsliveshare 1.0.1510 [2020-01-28 11:10:49.314] [userDataSync] [info] Extensions: Installing local extension. github.vscode-pull-request-github-insiders 2020.1.32642 [2020-01-28 11:10:58.024] [userDataSync] [info] Extensions: Updating remote extensions... [2020-01-28 11:10:58.190] [userDataSync] [info] Extensions: Updating last synchronised extensions... [2020-01-28 11:10:58.206] [userDataSync] [info] Extensions: Finished pulling extensions. [2020-01-28 11:10:58.559] [userDataSync] [info] Auto sync started [2020-01-28 11:11:27.768] [userDataSync] [info] Settings: Updating remote settings [2020-01-28 11:11:27.978] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 11:11:36.126] [userDataSync] [info] Settings: Updating remote settings [2020-01-28 11:11:36.286] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 11:11:41.198] [userDataSync] [info] Settings: Updating remote settings [2020-01-28 11:11:41.402] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 11:15:59.825] [userDataSync] [info] Settings: Updating local settings [2020-01-28 11:15:59.851] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 12:11:13.832] [userDataSync] [error] Error: Connection refused for the request '<url>'.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:431:828) [2020-01-28 12:11:30.528] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:11:33.023] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:13:30.953] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:23:49.017] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:25:05.303] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:26:43.580] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:28:10.339] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:28:52.910] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:30:07.239] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:32:09.612] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:35:05.650] [userDataSync] [error] Error: Request '<url>' is not authorized.     at h.request (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:432:33)     at async h.read (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:430:422)     at async w.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:384:337)     at async p.hasRemoteData (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:426:872)     at async l.isTurnedOffEverywhere (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:417:793)     at async l.sync (file:///Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/code/electron-browser/sharedProcess/sharedProcessMain.js:416:845) [2020-01-28 12:45:06.370] [userDataSync] [info] Settings: Updating local settings [2020-01-28 12:45:06.392] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 12:58:29.742] [userDataSync] [info] Settings: Updating remote settings [2020-01-28 12:58:29.917] [userDataSync] [info] Settings: Updating last synchronised settings [2020-01-28 13:05:10.442] [userDataSync] [info] Settings: Updating local settings [2020-01-28 13:05:10.466] [userDataSync] [info] Settings: Updating last synchronised settings ``````
---
Título: Codicon color tokens should be area scoped
Descripcion: https://github.com/microsoft/vscode/issues/89328 and related to https://github.com/microsoft/vscode/pull/89121  This looks kind of odd in the command palette imo. We may want to revisit codicon coloring, I think generally we should default to uncolored.  ![image](https://user-images.githubusercontent.com/2230985/73288769-715a1500-41b0-11ea-9626-f579d06bc53e.png)
---
Título: view message in panels wastes lots of space
Descripcion: * See attach screen capture 👇  * The message "N result in M files" takes up a whole row of which there aren't many * IMO the space between panel-title and actions is the better place for the message   <img width="1120" alt="image" src="https://user-images.githubusercontent.com/1794099/73283130-ee0de300-41f2-11ea-8f35-c3830a8214e1.png">
---
Título: Snippet descriptions are clipped
Descripcion: - VSCode Version: 1.42 Insiders - OS Version: Windows 10  Steps to Reproduce:  1. Bring up an image snippet for Markdown.  Description is clipped with ellipsis (...) but no way to see full text.  ![image](https://user-images.githubusercontent.com/12818376/73277747-7367a800-419f-11ea-9bb2-68aa76015465.png)  If you Ctrl+Space to see more information and the snippet preview, the description is still clipped.  ![image](https://user-images.githubusercontent.com/12818376/73277884-a14cec80-419f-11ea-89e4-4c3cf0f05ca4.png)
---
Título: Refactor preview: rename failed to apply edits
Descripcion: Refs: #89335  Setup as instructed in test plan. My file content was:  ``` createNewFile createNewFileWithContent deleteThisFile editAndRenameThisFile renameAndEditThisFile ```  I clicked into `renameAndEditThisFile`, hit F2 and added a `2` at the end. Opened preview and accepted the change, got this:  ![image](https://user-images.githubusercontent.com/900690/73277417-6e7c1600-41ea-11ea-8515-bc6b6a0fb0e6.png)  ``` /Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.desktop.main.js:2717 Rename failed to apply edits onDidNotificationChange @ /Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.desktop.main.js:2717 /Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.desktop.main.js:1595   ERR Error: Unable to read file '/Users/bpasero/Desktop/test-ts/test-RENAME-EDIT-2ca.refacto' (Error: Unable to resolve non-existing file '/Users/bpasero/Desktop/test-ts/test-RENAME-EDIT-2ca.refacto')     at _.doReadAsFileStream (/Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.desktop.main.js:1615) ```
---
Título: Refactor preview: indicate create/delete/renames better?
Descripcion: Refs: #89335  I am finding this a bit hard to read, why not do something like "<original file name> => <new file name>". There is possibly a good unicode arrow to use. E.g. diff editor does this:  ![image](https://user-images.githubusercontent.com/900690/73277124-fca3cc80-41e9-11ea-9870-915c9ee68595.png)   ![image](https://user-images.githubusercontent.com/900690/73277030-e1d15800-41e9-11ea-8625-4645eedec817.png)
---
Título: Refactor preview: accept button should show disabled when everything unchecked
Descripcion: Refs: #89335  Currently you can still click it even if all checkboxes are unchecked:  ![image](https://user-images.githubusercontent.com/900690/73276912-b9495e00-41e9-11ea-8b19-e3b87e57daba.png)
---
Título: Refactor preview: show creates and deletes still in diff editor?
Descripcion: Refs: #89335  I wonder if refactor preview should always open a diff editor and for: * create: left side is empty * delete: right side is empty  Not sure how git does it, we may want to align the experience.
---
Título: F2 createNewFileWithContent does not check file?
Descripcion: Refs: https://github.com/microsoft/vscode/issues/89335  Is there a reason the file itself is not checked here? I picked the `createNewFileWithContent`  ![image](https://user-images.githubusercontent.com/900690/73276643-4cce5f00-41e9-11ea-82bf-5730ea8c9f1a.png)
---
Título: Rename: Shift+enter to preview appears in monaco editor.
Descripcion: Testing https://github.com/microsoft/vscode/issues/89392  Rename an element in the Monaco editor. Dialog says: `Press Shift+Enter to preview`. No preview appears when doing so.
---
Título: CodeIcon: in documentation hover could get some polish
Descripcion: Refs: https://github.com/microsoft/vscode/issues/89328  I think once a codicon is in the text, we need to adjust the lineheight or some other styling to make it look nicer:  ![image](https://user-images.githubusercontent.com/900690/73275539-8ef6a100-41e7-11ea-8862-7f8df2c33ab9.png)
---
Título: Codicon: offer intellisense for possible entries
Descripcion: Refs: https://github.com/microsoft/vscode/issues/89328  For example in package.json:  ![image](https://user-images.githubusercontent.com/900690/73274298-a3399e80-41e5-11ea-9413-e3691ec4b1e2.png)  Would even be awesome if intellisense could preview the icon as it looks like!
---
Título: Editor inputs have contributed commands in the context menu
Descripcion: re https://github.com/microsoft/vscode/issues/89333  * focus SCM input * show context menu * the is a entry "Command Palette..." which is awkward   <img width="703" alt="image" src="https://user-images.githubusercontent.com/1794099/73266790-e4c34d00-41d7-11ea-9bc0-8fea17017eba.png">
---
Título: Refactor preview ain't behaving "natural"
Descripcion: Testing https://github.com/microsoft/vscode/issues/89331  Really not sure why the GIF is in slow motion, just be patient. :laughing:   ![Peek 2020-01-28 11-39](https://user-images.githubusercontent.com/22350/73256711-b6874280-41c2-11ea-99b3-05891c2c2e1e.gif)  **Steps:**  1. Create both files listed below 1. Rename preview `Animal` to `Beast` in file `a.ts` 2. Uncheck both files in the rename preview view 3. Check the single change in `a.ts` 4. Check the entire `b.ts` file  :bug: The single change in `a.ts` gets unchecked  ---  **`a.ts`**  ```a.ts export interface Animal {} ```  **`b.ts`**  ```b.ts import { Animal } from "./a", export class Dog implements Animal {} ```
---
Título: Refactor preview should have `Open Editor` actions
Descripcion: Testing https://github.com/microsoft/vscode/issues/89331  Should we have a `Open Editor` action at the top of the diff editor of a refactor preview?  Also maybe a context menu action `Open Editor` on each file row?
---
Título: Shift+Enter in editor after previewing refactoring applies refactoring
Descripcion: Testing https://github.com/microsoft/vscode/issues/89331  1. Run rename preview 2. Focus back into any regular editor 3. Press `Shift+Enter` to insert a new line  Refactoring gets applied! :see_no_evil:
---
Título: Refactor preview should confirm when dropping another refactor preview
Descripcion: Testing https://github.com/microsoft/vscode/issues/89331  1. Run refactor preview 2. Run it again  The second overwrites the first and drops whatever checkbox state I may have spend time setting. Should we have a confirmation dialog when we're about to drop a refactor preview?
---
Título: Rename refactoring context actions work on the entire input
Descripcion: Testing https://github.com/microsoft/vscode/issues/89331  ![image](https://user-images.githubusercontent.com/22350/73253459-e16e9800-41bc-11ea-9612-fa36136ab872.png)  1. Right click a refactor row and choose `Apply Refactoring`  All the checked changes will be applied and the view will disappear. I would expect only the refactoring I've right clicked on would be applied.
---
Título: Notifications should always stay in view even if window is outside screen
Descripcion: We saw this happen in a UX study we ran. A user was deploying to Azure Functions and had the VSCode window pulled slightly off screen so the bottom right of the window was off the display. The Azure Functions extension notified the user that Azure Function was finished deploying but the user didn't see it because of how the VSCode window was sitting slightly off screen. This caused some confusion in the user as they waited for a notification to tell them that their app had finished deploying.
---
Título: Don't close suggestion popup when out of bounds occurs
Descripcion: This is a tiny suggestion but I run into it constantly. Often, I instinctively hit the up arrow to scroll through suggestions only for the little dialog/popup to disappear entirely rather than wrapping around to the other side of the list. For instance, if a function has 8+ overloads, I have to hit down arrow 7 times exactly. If I hit more than that, the whole thing closes and I have to start over.  Talking about this popup specifically: https://streamable.com/mx94q  Would be nice if it wrapped around, so I can access the last suggestion just by hitting up arrow, or don't accidentally lose my place by going too far.
---
Título: Expose a dropdown on the sidebar for extensions
Descripcion: <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> Expose a dropdown on the side bar (see screenshot) to extensions to allow users switch between views within a view container. This can allow an extension to scale as the number of views increases, without having the need for an extension to have multiple icons in the activity bar. It also keeps the number of icons in the activity bar manageable for the users. ![image](https://user-images.githubusercontent.com/4393177/73089497-35127600-3e8b-11ea-811c-4f82640df074.png)  @misolori
---
Título: Refactor preview: compress single child nodes
Descripcion: Here I am renaming `identityProvider` of the tree. Note how I had to expand all the File nodes to see my results. And all the folder nodes have only one child in this case.  I would expect a bit smarter rendering: that a file node is rendered only if there are multiple results. If not it would just be rendered together with the result in one node. We do something similar in the debug callstack view where we do not show Threads if there is exactly one thread.  A cheper solution would be to at least expand all the files that have one result.  ![Screenshot 2020-01-13 at 16 35 31](https://user-images.githubusercontent.com/1926584/72268800-c9c2db80-3622-11ea-8af7-cd5fb9891668.png)
---
Título: Refactor preview: Apply changes on Enter
Descripcion: Apply changes should also be triggered on Enter.  Reasoning: enter is already a confirm for the regular rename, and without Enter I have to get ahold of my mouse or to press tab too many times.
---
Título: Refactor preview: elements should have better aria label
Descripcion: Use a screen reader to navigate over the refactor preview elements  1. It reads what is actually written 2. It should be more user friendly and read what is gettign replaced by what where. The Search Find / Replace experience nicely reads out concise understandable sentences. So you can use that as a good example
---
Título: Refactor preview: list rows should have role checkbox
Descripcion: Each list row should have `role = checkbox` so the screen reader would proparly announce to the user that this item is actually a checkbox and that pressing space toggles it. List supports it. Here's how breakpoints is doing this for example https://github.com/Microsoft/vscode/blob/0b134f8c13b4e19574aaa97a37802a32d725ff0a/src/vs/workbench/contrib/debug/browser/breakpointsView.ts#L94
---
Título: Preview rename message polish
Descripcion: I like how you use the space below the rename box to make the Preview discoverable. Some potential improvments: 1) Omit the word "Press", feels like currently there is too much text. Especialy since on Win the alternative shortcut might take more space 2) Consider using opacity or some other way to make sure the message is percieved as a help (like our placeholders texts in our places)  ![Screenshot 2020-01-13 at 16 10 38](https://user-images.githubusercontent.com/1926584/72266753-49e74200-361f-11ea-9fb4-de6ffa754393.png)  fyi @misolori for potential ideas
---
Título: Hard to read overlapping diagnostics
Descripcion: I have 3 errors in this code:  ![image](https://user-images.githubusercontent.com/4033249/72221886-03caa980-355f-11ea-996b-e8f324169537.png)  1. `inc` 2. `coun` 3. The whole `<button></button>` line  The problems:  1. I cannot tell how many errors I have on this line 2. If there are overlapping errors, I cannot tell the inner errors' ranges
---
Título: Show indicator that setting is not synced
Descripcion: https://github.com/microsoft/vscode/issues/84431  I added an action to the setting dropdown to let a user exclude that setting from settings sync. It is checked when it is excluded. But it might be useful to also have some indicator next to the setting name, that it is not synced? I am not sure whether people need this or not but it could be a nice reassurance when someone is editing a setting, that it will stay local.  What do you think? Is there an icon that describes something not being synced? @sandy081 @misolori
---
Título: Improve header(h1/h2/h3) styling in hover markdown
Descripcion: Our LSP server produces markdown for hover, and the way headers are rendered doesn't seem ideal. Two main issues:  # Font sizes are too large  This natural-looking markdown:  `````markdown # function `x`  ---  `void x(),` `````  renders with an extremely large title that's inconsistent with overall VSCode font sizes.  ![image](https://user-images.githubusercontent.com/548993/72149988-bd314f80-33a4-11ea-816e-f032e4837137.png)  There's a fairly easy workaround of using `<h3>` (`###`) instead, but this isn't ideal for language servers that are supposed to be portable across editors.  # Too much spacing  There's a lot of value in popups being unobtrusive, and the default margin of 1em h1/h2/h3 is very high for such a context.  For the following markdown: `````markdown ### function `x`  ---  `void x(),` ````` The current rendering is margin-heavy: ![image](https://user-images.githubusercontent.com/548993/72150443-d5ee3500-33a5-11ea-97a2-4178d6e6d8dd.png)  With top/bottom margin reduced to `0.5em`, IMO this is at least as easy to read: ![image](https://user-images.githubusercontent.com/548993/72150375-b525df80-33a5-11ea-82ed-33be95c9188b.png)
---
Título: Feedback on extension syncing UX
Descripcion: @rebornix gave me feedback that he would have wanted a warning or something when syncing so many extensions. Additionally cancellation and a progress bar would have been good as syncing 100 extensions take quite a long time.  First time experience where a user wants to ignore extensions is also tough.  Some random ideas:  ![image](https://user-images.githubusercontent.com/2193314/72027929-956fa980-3235-11ea-8601-7846c893b8c7.png)  Or after pressing OK and you have selected Extensions present a dialog saying which extensions you want to sync?  > Themes   > blah 1   > blah 2 > Languages   > blah 1   > blah 2
---
Título: Propagate font feature settings from editor to suggest widget
Descripcion: <!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ --> <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.41.1 - OS Version: macOS 10.15.2  Steps to Reproduce:  1. Open a file, such as the `settings.json` document 2. Type something that will make the fill suggestions appear  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  <img width="499" alt="Screenshot 2020-01-02 at 10 24 38 PM" src="https://user-images.githubusercontent.com/48752273/71671702-aee4a180-2dae-11ea-9af2-cf1b3e120571.png">  The text in the editor is correct based on my OpenType settings, but the fill suggestions are still the default. (Note differences in `i` and `l`)
---
Título: Find a way to fit panel headers into the smaller minimum width
Descripcion: Now that the integrated terminal panel cannot be sized smaller than its toolbar (a good thing because the kill button was being shoved off screen), it is however uncomfortably wide on a screen-resolution of 1366x768. With a document of 80-chars wide, the side-bar is far too narrow :(  ![image](https://user-images.githubusercontent.com/142650/71168072-dd5e6a80-224d-11ea-9d03-70d7f448f4d0.png)  Please allow the integrated terminal's toolbar to compact more at its smallest size.
---
Título: Misaligned icon in autocompletion list
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.41.0 - OS Version: macOS 10.15  Steps to Reproduce:  1. Start an HTML file 2. Set the language to HTML 3. Enter the following HTML: ```html <!DOCTYPE html> <html lang="en">  <head>     <meta charset="UTF-8">     <meta name="viewport" content="width=device-width, initial-scale=1.0">     <meta http-equiv="X-UA-Compatible" content="ie=edge">     <title>Document</title> </head>  <body>     <script>         hello = 'hello',     </script> </body>  </html> ``` 4. Create a new line after `hello = 'hello'` and type `h` 5. Misaligned icon shown below: <img width="589" alt="Screen Shot 2019-12-17 at 12 37 23 AM" src="https://user-images.githubusercontent.com/32693057/70968629-b8a89e00-2067-11ea-8314-f43c3876f055.png">  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes.
---
Título: "No quick fixes available" in problem popup is noise
Descripcion: If there was a quick fix, I would see it. It's redundant to explicitly state that there are no quick fixes.  Visual clutter: ![image](https://user-images.githubusercontent.com/302938/70807871-811fc480-1dcf-11ea-8fa3-728e86cde0d9.png)  It would be better like this: ![image](https://user-images.githubusercontent.com/302938/70807884-87ae3c00-1dcf-11ea-9a11-ba1b6b9eb8a1.png)   VSCode Version: 1.41.0
---
Título: Ability to ignore extensions to sync from UI
Descripcion: Ability to ignore extensions to sync from UI
---
Título: Switching language notification only has 1 button?
Descripcion: At least the alternate option should be provided, no?  ![image](https://user-images.githubusercontent.com/900690/70333678-3f79a180-1844-11ea-94c5-bc31c97c5b0f.png)
---
Título: UX to show sync errors
Descripcion: UX to show sync errors  It can happen that sync server may be not reachable or having some other issues. In such a case it would be nice to inform user sync is not happening because of so n so error.
---
Título: Suggest widget has greyscale rendering
Descripcion: Ref #85143   Parameter hints doesn't have this issue, but hover and suggest widget suffer from it.  Top to bottom are parameter hint, suggest and hover:  ![image](https://user-images.githubusercontent.com/4033249/70094049-82364200-15d6-11ea-95a9-a3eac4a81b77.png)  Version: 1.41.0-insider Commit: 97855786a014be2440751b038b373c3726e11fe8 Date: 2019-12-03T05:31:49.954Z Electron: 6.1.5 Chrome: 76.0.3809.146 Node.js: 12.4.0 V8: 7.6.303.31-electron.0 OS: Linux x64 4.15.0-55-generic
---
Título: Sync: Notification after start
Descripcion: Testing #85944  As soon as I chose what to sync I got this notification:  ![image](https://user-images.githubusercontent.com/22350/70060514-fbd42d00-15e2-11ea-8ff9-44b7655e1f2c.png)  Is it really needed? Shouldn't sync have its own status bar contribution where I could click and see its status, instead? As soon as I close that notification, there's nothing in VS Code telling me that I'm all _synced up_.
---
Título: Use different icon for extension methods in intellisense dropdown (.net)
Descripcion: When using the intellisense with .net code, the dropdown does not use a different icon for extension methods.  ![image](https://user-images.githubusercontent.com/2327905/69723265-29caf480-113f-11ea-911c-5daa1aad2bcc.png)  Compare this experience with the Visual Studio IDE which uses a different icon for extension methods.   ![image](https://user-images.githubusercontent.com/2327905/69723244-1c156f00-113f-11ea-8da0-feab6574c428.png)
---
Título: UX to show replace/insert behaviour for extensions
Descripcion: ![image](https://user-images.githubusercontent.com/3372902/69415208-7e700900-0d14-11ea-885f-ab73ee19bc3e.png)  //cc @joaomoreno
---
Título: Use the status bar when Settings Sync is syncing?
Descripcion: I've noticed that the badge on the gear is very distracting as it pops on and off when sync is happening:  ![image](https://user-images.githubusercontent.com/35271042/69397984-1af6c480-0c9d-11ea-85c8-a7960c144f6f.png)  It also took me a while to figure out that it was from the Setting Sync, I clicked into the gear hoping for an entry that would indicate was happening and saw nothing. I then had to hover on the badge to see the tooltip (which I don't think anyone would figure out).   Should we use status bar instead for this? It's less intrusive and easier for it to appear/disappear when syncing is happening. I'd imagine we'd still use the badge for higher priority stuff like merge conflicts.  ![image](https://user-images.githubusercontent.com/35271042/69397889-c3f0ef80-0c9c-11ea-88ee-b97c181483d2.png)  @RMacfarlane @Tyriar thoughts?
---
Título: UX: Start Settings Sync
Descripcion: This issue is to track UX for Initial Settings Sync Set up
---
Título: Ability to ignore settings to sync from UI
Descripcion: Provide a way to ignore settings from Settings editor
---
Título: Debugger icons are not vertically aligned
Descripcion: - VSCode Version: Insiders 3b17b7943842e84912a5507111a6cd790db18a46 - OS Version: Darwin x64 18.0.0  Steps to Reproduce:  1. Set a tall line height 2. Set a breakpoint 3. Icons are misaligned  ![image](https://user-images.githubusercontent.com/2230985/69197433-2784ec80-0ae6-11ea-8245-bb5001015ee2.png)  Does this issue occur when all extensions are disabled?: Yes
---
Título: C# parameter hint not showing total overload count
Descripcion: I have seen animated screenshots around where by pressing CTRL + Shift + Space will open the parameter hint of an existing function. The parameter hint would then display \<hint number\>/\<hint count\> along with its details.  However, it isn't displaying the count, only the number of the current hint I am within. ![2019-11-13_19 41 26_Wednesday](https://user-images.githubusercontent.com/7377351/68760774-988f5480-064d-11ea-89c5-5bda85a54cde.png)  It should be showing 12 / 18 instead. But for whatever reason, it's just showing 12. The 18 is completely missing.  Is this a bug or did I screw up something? Thanks!
---
Título: Improve initial debug / run experience
Descripcion: Currently setting up debugging is not an easy task for new users. Due to that we decided to create this issue where we can discuss how to make it easier for users to start debugging / running their programs.  A first proposal:  1. Replace the debug icon in the activity bar to be the play icon. This should make it easier for users to discover that they can also run their program via the debug flow. It can be either a simple play icon, or a play icon that would somehow show that you can also debug (e.g. small "bug" sitting in the corner of the play icon). 2. CallStack, Variables and Watch Expression view do not really have much value while a user is not debugging. Due to that we will only show them while the user is debugging and we get extra space which we can use for rendering a wizard-like UI, e.g. buttons like the one in the explorer:<br>   ![2019-11-13_13-09-01](https://user-images.githubusercontent.com/1898161/68762627-d8871500-0616-11ea-8f8e-eb452cdc1b82.png)  These "buttons" could cover these use cases: * Run Current File   (or Run Active File) * Debug Current File (or Debug Active File) * Configure  * Install Additional Debuggers (maybe not needed)  While showing the button UI we would not show the launch config drop down and the gear icon (because this duplication would be confusing).  fyi @chrisdias @misolori @fiveisprime
---
Título: Explorer: Improve compressed folder actions
Descripcion: We want to support the following use cases on a compressed folder row:  - [x] Context clicking each folder - [x] Keyboard navigation among compressed folders - [x] Multiple selection should include all the folders in a compressed row - [x] Drag & drop  - [x] Rename
---
Título: Go to definition should highlight the new focus
Descripcion: If the `Go to definition` jumped to a .java source file, there will be a cursor blinking in the new position, that's OK.  But if the `Go to definition` jumped to a .class file, which vscode-java extension used a customized content provider to render the class's source contents, there is only a static cursor hanging in the new place. Sometimes it's hard for me to find the new focus. See the screenshot below. ![goToDefinition](https://user-images.githubusercontent.com/14052197/68644584-68ae5700-0550-11ea-8da6-df150f49c943.gif)  I expect the cursor to blink in the contributed content provider, or highlight the range with the selection because the definition response returns the range info.
---
Título: Activity Bar UI Quirks
Descripcion: The latest VSCode activity element background color makes it easy to redesign the interface in a sidebar-connected to the activity style as shown below:  ![vscode](https://on.ahmda.ws/c922e7/c)  There's a weird looking extra space at the top though. Can we make it better?  ![vscode](https://on.ahmda.ws/9cd84b/c)  You can test this with latest version of my 🦄 [Shades of Purple](https://marketplace.visualstudio.com/items?itemName=ahmadawais.shades-of-purple) theme.   - VSCode Version: 1.40 - OS Version: macOS High Sierra  Does this issue occur when all extensions are disabled?: Yes  Looking forward!
---
Título: style: making colorBox circular & cursor for improving UX
Descripcion: Made the color box to circular so that it will be less dominant while traversing through the code. The default cursor says that color box is neither clickable nor selectable  This PR fixes no issue, it adds some styling to color box
---
Título: Identify design inconsistencies with UI + JSON expriences
Descripcion: ## Overview This issues is to cover the various experiences where we have a rich editing experiences (UI) and a  text based configuration (JSON). Some of these experiences have overlap while others have gaps that we'd like to be covered. Below is a list of areas where we have these experience with a list of features that are either missing or need better coverage.  - [x] Settings - [x] Keybindings - [x] Snippets - [x] Extensions  ## Settings ### UI - Objects   - `files.associations`   - `emmet.includeLanguages`   - `editor.codeActionsOnSave`   - `editor.quickSuggestions`   - `editor.tokenColorCustomizationsExperimental`   - `terminal.integrated.env.linux`   - `terminal.integrated.env.osx`   - `terminal.integrated.env.windows`   - `remote.extensionKind`   - `sync.ignoredSettings`   - `emmet.syntaxProfiles`   - `emmet.variables` - Nested Objects   - `editor.tokenColorCustomizations`   - `workbench.colorCustomizations`   - `workbench.experimental.editorAssociations`   - `launch`   - `extensions.confirmedUriHandlerExtensionIds`   - `workbench.experimental.editorAssociations`   - `remote.extensionKind` - Arrays   - `editor.rulers` - Boolean or Strings   - `editor.fontLigatures` - Inputs   - `terminal.integrated.automationShell.linux`   - `terminal.integrated.automationShell.osx`   - `terminal.integrated.automationShell.windows` - Deprecated settings  <img width="1024" alt="image" src="https://user-images.githubusercontent.com/35271042/68499694-a9cfff80-020e-11ea-8ec4-7d166c9646d5.png">  ### JSON <img width="1024" alt="image" src="https://user-images.githubusercontent.com/35271042/68499698-ae94b380-020e-11ea-9f87-6fbc56925a4a.png">  ## Keybindings ### UI - IntelliSense for `when` clause - Sorting columns - Reset keys recorder  ![image](https://user-images.githubusercontent.com/35271042/74571155-4c94ca00-4f32-11ea-9fd6-af575565c27e.png)  ### JSON ![image](https://user-images.githubusercontent.com/35271042/74571136-47377f80-4f32-11ea-8500-5749eb479843.png)    ## Snippets ### UI - Configuring snippets  ![image](https://user-images.githubusercontent.com/35271042/75199059-f46e7c80-5716-11ea-9bbb-a32e997383eb.png)   ### JSON - Central management of all snippets  ![image](https://user-images.githubusercontent.com/35271042/74571222-60403080-4f32-11ea-96a0-641196bfedd6.png)  ## Extensions ### UI - Bulk install/uninstall  ![image](https://user-images.githubusercontent.com/35271042/74570207-0d19ae00-4f31-11ea-8d87-87d2ef26fd9a.png)   ### CLI `code --install-extension ms-azuretools.vscode-azurefunctions`  ### JSON - No experience  `devcontainers.json` is a configuration file for our remote containers, and in that configuration file you can specify extensions via: ```json {     "extensions": [         "ms-azuretools.vscode-azurefunctions",         "ms-vscode.csharp"     ] } ```  We should look at adopting a similar patter for user extensions, in the same way that you can edit user settings via JSON.
---
Título: Git: Can't commit if commit message starts with `#`
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version:  1.40.0 - OS Version: Darwin x64 19.0.0  Steps to Reproduce:  1. make some changes and open source control  2. input a commit msg starts with '#' then press command + enter, nothing happens  This worked fine in version 1.39   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  ![image](https://user-images.githubusercontent.com/29777079/68451745-e4e02c00-022a-11ea-89ed-5c49769d1bbf.png)
---
Título: Debug: Improve Call Stack UI/UX
Descripcion: Sorry for creating this kitchen sink issue... :cry:   A few UX issues in the current Call Stack view:  - It's hard to differentiate between launch targets and stack frames, since both render with exactly the same font family and style and they all have a grey label on the right hand side. We can maybe explore different font styles and/or icons. - It's hard to understand that `Load More Stack Frames` is an action. We should definitely not use a row's click handler for representing this action. We should instead drop the row click handler and simply render a clickable button in that row, a la Explorer's `Open Folder` button. - The `async` separators should not take the same height as a regular row. They can be much shorter and draw a separator much like what `@:` does in Quick Outline.  ![Screenshot from 2019-11-05 15-16-24](https://user-images.githubusercontent.com/22350/68215316-4e6bfa80-ffdf-11e9-93cc-5b02f09853e8.png)  cc @misolori
---
Título: Create a design toolkit for extension authors
Descripcion: This issue is to track the work of creating a design toolkit for extension authors to use for designing extensions. We already open sourced the [VS Code Icons](https://github.com/microsoft/vscode-icons/) and we are looking to open source this toolkit as well.   We'll be using [Figma](https://www.figma.com) as our design tool since our team already uses it and it allows for team libraries to be synced across various files. Below is a to-do list that covers what will be in this toolkit:  - [X] Color styles - [X] Text styles - [X] Iconography - [x] 🏃 Components   - [x] Inputs   - [x] Sidebar   - [x] List/Trees   - [x] Activity Bar   - [x] Tabs   - [x] Editor   - [X] Panel   - [X] Notifications   - [X] Status bar - [X] Setup GitHub bot automation  👀 [You can follow along in the Figma file](https://www.figma.com/file/AJnTgc00iEI0KTVdyoN997/WIP-VS-Code-Toolkit?node-id=1%3A2) and watch as iterate on this. ⚠️ Please note that this file is work in progress and may change as we finalize it so please don't use it for production work.
---
Título: Increased height of proxy authentication dialog to prevent cutting confirmation buttons
Descripcion: This PR fixes #83899  ![VSCode_ProxyDialogIssueFixed](https://user-images.githubusercontent.com/3085147/68094757-81a57100-fe9b-11e9-8af0-b0202c2c0e4e.png)
---
Título: Proxy authentication dialog cuts confirmation buttons
Descripcion: - VSCode Version: 1.39.2 - OS Version: Windows 10  (10.0.17763)  The dialog that pops up when proxy credentials have to be entered cuts the confirmation buttons (see below):  ![VSCode_ProxyDialogIssue](https://user-images.githubusercontent.com/3085147/68094629-6be37c00-fe9a-11e9-9e96-988cb94090b7.png)
---
Título: Draw custom drop-down picker (Desktop, Web)
Descripcion: Web on the left, electron on the right: ![image](https://user-images.githubusercontent.com/38270282/67950178-817e4a80-fbe9-11e9-8ecb-1321ae0581b2.png)
---
Título: Please add workbench letterspacing
Descripcion: Hi,  I would love to have the opportunity to change the letter spacing in the workbench area. Now I change it in the CSS which works but I would really like to be able to change it in the settings.  Best Regards, Robin
---
Título: Explorer icons show up briefly when resizing down
Descripcion: ![icons](https://user-images.githubusercontent.com/2193314/67915291-c48bdf80-fb4f-11e9-808f-93919a1c2ec7.gif)  Version: 1.40.0-insider (user setup) Commit: 31f577ec88dc96ad2028699fb597b19022224b46 Date: 2019-10-30T05:39:27.063Z Electron: 6.1.2 Chrome: 76.0.3809.146 Node.js: 12.4.0 V8: 7.6.303.31-electron.0 OS: Windows_NT x64 10.0.18362
---
Título: Call hierarchy viewlet
Descripcion: In addition to "Peek Call Hierarchy" we want a call hierarchy viewlet, just like we have it for reference search.
---
Título: Rename "Reveal in Explorer" to "Reveal in Side Bar" on Search result filename context menu
Descripcion: <!-- Thank you for submitting a Pull Request. Please:  * Read our Pull Request guidelines:   https://github.com/Microsoft/vscode/wiki/How-to-Contribute#pull-requests. * Associate an issue with the Pull Request. * Ensure that the code is up-to-date with the `master` branch. * Include a description of the proposed changes and how to test them.  -->  This PR fixes #83139 as discussed there. The context menu option on a Search result filename that was previously captioned 'Reveal in Explorer' is now captioned 'Reveal in Side Bar'
---
Título: UI can get overloaded when extensions add many primary actions
Descripcion: Here is how looks my VSC GUI ![VSC icons menu_](https://user-images.githubusercontent.com/25403861/67374254-37f68580-f581-11e9-8092-03c3d4e29aae.png) ![VSC icons menu other_](https://user-images.githubusercontent.com/25403861/67374268-3b8a0c80-f581-11e9-822b-77045765f9a6.png)  I have not enough place for file cards and problems to find them, easy managment.  The cards are in conflit with `open editors` from `Explorer` https://github.com/microsoft/vscode/issues/83127  In related problem I sugested changes to turn on horizontal menu for icons, and for this type maybe we need `menu toolbar` with normal icons, shortcut to hide this toolbar and icons https://github.com/microsoft/vscode/issues/20485 (https://cloud.githubusercontent.com/assets/25403861/22858261/07e83abc-f0b8-11e6-99f5-0617d8852cf9.png)  There is other problem with VSC and cognitive thinking/mindset. The all menu in top don't have icons. Try understand that "Reading" is "Observing" proces, thats mind any sign of word is graphical and visual efect and tranlated to database of sense, thats mind that we "working" to recognize functions many times..waste "human resoureces" - thats why icons are more friendly, thats shortcuts icons are "nice". VSC need some `kansei` thinkig and mindset.. UX specialist?
---
Título: Do not encode URIs when asking to open?
Descripcion: ![image](https://user-images.githubusercontent.com/900690/67269252-a7ec0980-f4b6-11e9-84d8-7e7923940906.png)  Maybe use `toString(false)` in https://github.com/microsoft/vscode/blob/c58aaab8a1cc22a7139b761166a0d4f37d41e998/src/vs/workbench/services/extensions/browser/extensionUrlHandler.ts#L145
---
Título: Decrease Activity Bar size
Descripcion: I always have the activity bar turned off, because it just feels very large and it bothers me.  However, many extensions often add useful buttons and items there.   Currently, it looks like this for me:  ![Snipaste_2019-10-21_13-49-51](https://user-images.githubusercontent.com/2473545/67225516-c811bf00-f409-11e9-9ffb-cb3009dc1fb4.png)  But I would like to have it a little bit smaller. That would bother me a bit less. And that's considering that I already have ```     "window.zoomLevel": -1,     "editor.fontSize": 16, ```  Also, the icons look a little bit misaligned.
---
Título: Extension update and platform update are inconsistent when no updates available
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.40.0-insider - OS Version: macOS Mojave  Steps to Reproduce:  1. In the Extensions pane run the "Check for Extension Updates" command 2. From the gear icon choose "Check for Updates..."  One uses a notification while the other displays a modal:  ![Zrzut ekranu 2019-10-16 o 11 52 36](https://user-images.githubusercontent.com/81205/66908907-2a368280-f00c-11e9-94a1-c7f90f4c5574.png)  ![Zrzut ekranu 2019-10-16 o 11 53 07](https://user-images.githubusercontent.com/81205/66908919-2e62a000-f00c-11e9-837e-9e4ca9eedd45.png)  Does this issue occur when all extensions are disabled?: Yes
---
Título: Web: Workbench layout/styling adjustments for browser and PWA
Descripcion: This is to track the work to adjust the workbench layout/styling on the web (browsers and PWA):  - [x] Move menu bar into a custom menu for the web - [x] Update title attributes on the Mac to include dirty states (only works on Win)  # Custom web menu We'll start by using a custom menu above the activity that will match the styling of the sidebar title:  ## Web <img width="1261" alt="image" src="https://user-images.githubusercontent.com/35271042/64638405-83cae200-d3ba-11e9-8a50-71b386484fcf.png">  <img width="1262" alt="image" src="https://user-images.githubusercontent.com/35271042/64638418-8af1f000-d3ba-11e9-8b56-ceb69106d886.png">   ## PWA  <img width="1273" alt="image" src="https://user-images.githubusercontent.com/35271042/64638298-541bda00-d3ba-11e9-9f22-9903188aedea.png">  <img width="1259" alt="image" src="https://user-images.githubusercontent.com/35271042/64638321-5d0cab80-d3ba-11e9-8800-505b6ad0a009.png">
---
Título: Focus border cropped
Descripcion: See attached screenshot, the lhs border/focus frame isn't visible  <img width="232" alt="Screenshot 2019-10-04 at 15 26 47" src="https://user-images.githubusercontent.com/1794099/66211006-663c2000-e6bb-11e9-9733-f4ee97861c42.png">
---
Título: What should happen when a new file is saved with a filename pattern that should open in a webview editor?
Descripcion: Testing https://github.com/microsoft/vscode/issues/81698  Scenario: Have a webview editor extension installed that contributes for *.txt. Create a new file. Enter something in it so it isn't empty. Save it as something.txt What should happen next?  Currently, nothing happens. It stays in the default VS Code editor. It might make sense to have the choose editor quick pick open.
---
Título: Compact menu: make hiding more discoverable
Descripcion: Should maybe show an entry in the menu to hide the compact menu:  ![image](https://user-images.githubusercontent.com/900690/65668958-fbe40980-e042-11e9-91b6-7c373bcbcedd.png)
---
Título: Unified remote port forwarding UX
Descripcion: ## Problem Remote extensions current each implement their own version of port forwarding, including their own configuration and UI related to port forwarding (see the ssh and containers extensions for example). Even with just two extensions supporting port forwarding, the UX around port forwarding is not consistent and we have duplicated development effort. This problem will  become worse as more extensions / scenarios add support for port forwarding  Additionally, VS Code has a built-in tunneling mechanism that can be used to implement a limited version of port forwarding even if the remote extension doesn't directly support it. There is currently no UI for managing these tunnels. Managing these will become important if we allow extensions to open new tunnels, as #81131 proposes  ## Proposal Build a unified port forwarding user experience that the remote extensions can contribute to. This would act somewhat like the existing `Remote Explorer` contribution  **High level UX Needs** - List ports currently being forwarded     - Include human readable names     - Maybe include type (through VS Code's built-in tunnel service, through remote, external, ...) - Let user close one of these ports - Let user open a new port forwarding  **High level extension API needs** - A way for VS Code to call out to the remote extension to create a new port forwarding. We also need to be able to tear down this connection (probably just make the result of the api call disposable) - A way for a remote extension to tell us about port forwardings managed outside of VS Code (see [ssh's `LocalFoward` support](https://code.visualstudio.com/docs/remote/ssh#_always-forwarding-a-port) for an example of this)     - We likely also need a way so that the extension can signal that its external port forwardings have changed - Possible: provide a list of candidate ports for forwarding but that require user action to establish? (see the [containers port forwarding ux](https://code.visualstudio.com/docs/remote/containers#_temporarily-forwarding-a-port) for an example of this)     /cc @Chuxel for general feedback, @roblourens and @kieferrm for ssh, and @chrmarti for containers
---
Título: Some breakpoint icons too small and not clear
Descripcion: The log point icon looks a bit smaller than the breakpoint icon  ![Screenshot 2019-09-17 at 16 18 44](https://user-images.githubusercontent.com/1926584/65231777-54118d80-dad0-11e9-8774-3e72fc0a7684.png)    The unsported breakpoint icon is also very small and more looks like a glitch than something meaningful Can we somehow make them a bit larger (more clear)?  ![Screenshot 2019-09-19 at 11 24 40](https://user-images.githubusercontent.com/1926584/65231745-45c37180-dad0-11e9-8c5e-c9640992a08a.png)     fyi @weinand
---
Título: Change --monoco-monospace-font on macOS to start with SF Mono
Descripcion: We use `-apple-system` throughout the workbench. In latest macOS this is SF Text. We should update our font stack to include `SF Mono` that matches it.
---
Título: Snippet descriptions are hardly readable due to bad word break handling
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.38.1 - OS Version: Windows 10 Pro 1809  Steps to Reproduce:  1. Open a longer snipper with description. 2. Try to read the text. It is unconfortable for me.  ![image](https://user-images.githubusercontent.com/11540828/64873389-9dd22200-d651-11e9-9cff-9222ad8821c0.png)  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: New context menu Reopen With is rendered at the bottom
Descripcion: I use an extension that helps me copy relative paths. Since many years, `Copy Relative Path` was at the bottom of the context menu. After today's update, it is the one behind last and that is annoying to me because I click the wrong action:  ![image](https://user-images.githubusercontent.com/5047891/64865480-a74f9000-d639-11e9-9f6d-2676768c7169.png)  fyi @bpasero
---
Título: Show Fixes off screen
Descripcion: Issue Type: <b>Bug</b>  I think this is a vscode issue, I'm using Latex-Workshop (extension) with cspell (extension) to write documentation. If I mispell a word it's underlined, and the "Show Fixes" lightbuld is displayed in the left margin. However unless word-wrap is on if the current line is longer than the viewport width then "Show Fixes" appears off-screen.  This wouldn't be as much of an issue if "Toggle Word Wrap" remembered it's last setting   VS Code version: Code 1.37.1 (f06011ac164ae4dc8e753a3fe7f9549844d15e35, 2019-08-15T16:17:25.463Z) OS version: Linux x64 4.15.0-60-generic  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz (12 x 4363)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: disabled_software<br>skia_deferred_display_list: disabled_off<br>skia_renderer: disabled_off<br>surface_synchronization: enabled_on<br>video_decode: unavailable_off<br>viz_display_compositor: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 1| |Memory (System)|31.33GB (14.61GB free)| |Process Argv|--unity-launch| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (20)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-postgres|cko|1.1.11 vscode-markdownlint|Dav|0.30.2 gitlens|eam|9.9.3 flatbuffers|gab|0.1.0 vscode-pull-request-github|Git|0.10.0 pgsql-html|hub|0.0.7 rest-client|hum|0.22.0 latex-workshop|Jam|8.1.0 vscode-cudacpp|kri|0.1.1 restructuredtext|lex|114.0.0 rainbow-csv|mec|1.3.1 vscode-docker|ms-|0.7.0 python|ms-|2019.8.30787 cpptools|ms-|0.25.1 code-spell-checker|str|1.7.18 latex-utilities|tec|0.2.2 cmake|twx|0.0.17 vscode-lldb|vad|1.3.0 vscode-icons|vsc|9.3.0 debug|web|0.23.1  (2 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Hint bulb icon position
Descripcion: Issue Type: <b>Bug</b>  The hint bulb icon needs to be in the gutter as the current position is in the way and looks odd, it makes it look more like there is an issue with the UI or theme.  VS Code version: Code 1.37.1 (f06011ac164ae4dc8e753a3fe7f9549844d15e35, 2019-08-15T16:16:34.800Z) OS version: Darwin x64 17.6.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-2400S CPU @ 2.50GHz (4 x 2500)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>oop_rasterization: unavailable_off<br>protected_video_decode: unavailable_off<br>rasterization: unavailable_off<br>skia_deferred_display_list: disabled_off<br>skia_renderer: disabled_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>viz_display_compositor: disabled_off<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 2| |Memory (System)|8.00GB (0.02GB free)| |Process Argv|| |Screen Reader|no| |VM|0%| </details><details><summary>Extensions (16)</summary>  Extension|Author (truncated)|Version ---|---|--- bracket-pair-colorizer|Coe|1.0.61 supersharp|cra|0.1.4 vscode-html-css|ecm|0.2.3 eppz-code|epp|1.2.41 auto-using|Fud|0.7.9 csharpextensions|jch|1.3.0 roslynator|jos|2.1.4 vscodeilviewer|jos|0.0.1 unity-code-snippets|kle|1.3.0 csharpfixformat|Leo|0.0.84 unity-snippets-modified|lio|0.4.0 csharp|ms-|1.21.1 unity-tools|Tob|1.1.1 unity-debug|Uni|2.7.2 vscode-icons|vsc|9.3.0 html-css-class-completion|Zig|1.19.0  (3 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Comment buttons/actions too far away on a wide screen
Descripcion: Thread-/comment-level commands and context buttons appear on the far right side of the comment. On a wide screen, this puts the buttons very far away from the context, making it difficult to use / inaccessible. Some kind of max-width or being resizable would be nice.  <img width="1878" alt="comment_api_too_wide" src="https://user-images.githubusercontent.com/1762690/64196814-81f0a400-ce39-11e9-9712-a955b6650efe.png"> Notice that "Reply" and "Unresolve" are very far to the right. This is from a laptop, but the effect can be much worse depending on your monitor.
---
Título: Hover / Suggest inconsistency: Plaintext Linkifying
Descripcion: Split from #78718:  ### Plaintext Linkifying  ```ts const markupContent: MarkupContent =  { 	kind: 'plaintext', 	value: 'https://code.visualstudio.com' }, ```  ![image](https://user-images.githubusercontent.com/4033249/62720345-b5691b80-b9be-11e9-9fa9-4b4c935663ec.png)
---
Título: Hover / Suggest inconsistency: Markdown `li` List Rendering
Descripcion: Split from #78718:  ### Bad spacing for ordered list  ```ts const markupContent: MarkupContent =  { 	kind: 'markdown', 	value: `1. foo\n2. bar` }, ```  ![image](https://user-images.githubusercontent.com/4033249/62721232-ab481c80-b9c0-11e9-8c57-f2b028f25407.png)
---
Título: Hover / Suggest inconsistency: Markdown difference between inline code and code block font family
Descripcion: Split from #78718:  ### Markdown difference between inline code and code block font family  #69970  ```ts const markupContent: MarkupContent =  { 	kind: 'markdown', 	value: 'I\'m using fallback from `--monaco-monospace-font`, which is `Courier New`\n\n```ts\nconsole.log("my font"),\n```' }, ```  ![image](https://user-images.githubusercontent.com/4033249/62721049-37a60f80-b9c0-11e9-8cc5-a97fce13c2d0.png)
---
Título: Allow settings UI TOC to be resized
Descripcion: The TOC in settings is rather narrow, and frequently truncates extension names. This feels especially unnecessary when using a wider display. ![Screen Shot 2019-08-21 at 9 11 34 AM](https://user-images.githubusercontent.com/1166263/63448853-b9039600-c3f3-11e9-9333-446b8dbaa86e.png)  This is not only triggered by extension names, but also affects built-in settings in non-English languages: ![Screen Shot 2019-08-21 at 9 14 16 AM](https://user-images.githubusercontent.com/1166263/63449045-20b9e100-c3f4-11e9-92a3-07d1a52d9a99.png)  Ideas: - Change the balance between the TOC and Settings Pane to give TOC more room - Increase the max-width and allow both TOC and Settings Pane to grow proportionally. - ...?
---
Título: Inconsistent spacing between breadcrumbs navigation and its dropdown
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.37.0 - OS Version: macOS Mojave 10.14.6  **Steps to Reproduce:** 1. Open any file 2. Check the spacing between icon and text in the breadcrumbs navigation, and compare with its dropdown  <!-- Launch with `code --disable-extensions` to check. --> **Does this issue occur when all extensions are disabled?** Yes  **Screenshot**  <img width="254" alt="Screen Shot 2019-08-13 at 11 14 48 AM" src="https://user-images.githubusercontent.com/25715018/62915076-42481680-bdbd-11e9-91ed-e129a6767df6.png">
---
Título: Use icon fonts for product icons
Descripcion: ## Summary This is to track updating our icons to use our new icon font (`codicons`) in the workbench. This will allow us to:  - Style icons dynamically (themeable) - Allow theme authors to provide color tokens for icons - Unify Octicons + VS Code icons into a single icon library  This would allows to do something like below where icons inherit the foreground color of their element:  <img width="313" alt="image" src="https://user-images.githubusercontent.com/35271042/65706632-b7a33a00-e03f-11e9-8c07-b8d2ebc32fc6.png">  _Notice how the icons in the selected element are different a color than the rest state_   ## Related Issues - Provide library of icons for extension authors #74974 - Twistie/Progress/Octicons/Actions hard to see in light theme when selected #55857  ## Out of scope - Allow extensions to define icon name via contribution points (requires API changes) https://github.com/microsoft/vscode/issues/31466  ## Adoption areas - [x] Activity Bar - [x] Sidebar   - [x] Explorer   - [x] Search   - [x] SCM   - [x] Debug   - [x] Extensions   - [x] Outline - [x] Panel   - [x] Problems   - [x] Output   - [x] Debug Console   - [x] Terminal - [x] Notifications - [x] Find widget (editor, terminal) - [x] Editor   - [x] Folding   - [x] Lighbulb   - [x] IntelliSense   - [x] Breadcrumbs   - [x] Breakpoints   - [x] Diff   - [x] Peek   - [x] Actions - [x] Tabs - [x] Settings - [x] Keybindings - [x] Dialog  ## Verify it works in - [x] Monaco standalone editor - [x] Custom views (extensions)
---
Título: Explore settings sync UX
Descripcion: ## Summary This exploration will aim to support syncing you settings, extensions, keybindings, and snippets across multiple machines (local and remote) using a sign in service (account). The problem being addressed is that users don't have an easy way to sync these settings and have to rely on third party extensions. The primary scenarios we're looking to address are:  - Support syncing settings/extensions/keybindings/snippets automatically or manually - Support for overwriting local/remote settings - Resolving merge conflicts between local/remote settings - Support for having machine only settings (OS specific) - Support for removing extensions from your "account"  ## Related Issues - Provide support to synchronize settings across machines #2743 - Syncing local and remote https://github.com/microsoft/vscode-remote-release/issues/196 - Allow to scope settings by platform #5595  ## Current Experience Users have to rely on third-party extensions (like [Settings Sync](https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync)) to have syncing across machines. For remote scenarios, users have to manually install extensions on those machines (see below).  <img width="440" alt="image" src="https://user-images.githubusercontent.com/35271042/62823005-bde95f80-bb40-11e9-85cb-6982e7a80476.png">
---
Título: Keybindings: provide some guidance on when-clause support
Descripcion: I find `when` clauses are one of the most powerful features in VSCode keybinding story, but we have only very limited support for understanding it from the product itself.   We very likely have duplicates already for supporting intellisense etc. for contexts, but at the very minimum can we at least somehow link to https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts from the keybindings editor?   ![image](https://user-images.githubusercontent.com/900690/62773448-78765500-baa2-11e9-814c-635a79131580.png)  ![image](https://user-images.githubusercontent.com/900690/62773459-7dd39f80-baa2-11e9-8ce9-7cfbb16ba9bd.png)  Maybe with some link in the table and maybe with an extra menu item close to the entry for "Change when expression"?  //cc @misolori @alexandrudima
---
Título: compressed autocompletion box
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.37.0 - OS Version: Windows 10 Home (latest update)  Device: Razer Blade 15 2018 Advanced Model Nvidia GTX 1070 MaxQ Graphics 15 inch UHD Touch Display  As shown in the screenshot, all autocompletion boxes are compressed, so that they are unusable. Clicking inside such a small box works, but of course, no useful selection can be done.  The issue occures both on UHD and FHD resolution on my device. I tried starting VSCode with the GTX 1070 or the included Intel graphics with no difference.   ![screenshot](https://i.ibb.co/TMY6jHR/screenshot-error.png)  If I setup a Ubuntu KDE Plasma VBox with enabled hardware support and scale it to FHD or UHD resolution, VSCode works just fine inside.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Hover / Suggest widget inconsistencies
Descripcion: Meta issue to track inconsistencies between hover / suggest, in the way they handle and present plaintext / markdown contents.  **Update: Split into multiple issues to track progress easily**  - [x] Markdown `ul` List Rendering #79817 - [x] Markdown `li` List Rendering #79839 - [x] Markdown difference between inline code and code block font family #79818 - [x] Allow completion details to be selected #55853 - [x] Plaintext Linebreak #79840 - [ ] ~~MarkupContent: Link not rendered when space exists on line start #78717~~  ---  ### Deferred  - [ ] Plaintext Linkifying #79841
---
Título: Link preview text on hover are inconsistent
Descripcion: Our link preview text on hover are inconsistent across various views, we should work to make all of them consistent.  ## Terminal <img width="350" alt="image" src="https://user-images.githubusercontent.com/35271042/62640657-ed0c9080-b8f6-11e9-8e05-e51a86eda80c.png">  ## Markdown <img width="558" alt="image" src="https://user-images.githubusercontent.com/35271042/62640826-42e13880-b8f7-11e9-9b9d-822fa860d58e.png">  ## Webviews <img width="614" alt="image" src="https://user-images.githubusercontent.com/35271042/62640973-8b98f180-b8f7-11e9-9ec8-fcddff180479.png">
---
Título: Deprecated Tag shows now indication in the Problems panel
Descripcion: Testing #78096  Diagnostics tags as deprecated don't show any indication in the Problems panel. Maybe they should?
---
Título: Editor area resized to 0px
Descripcion: re #78137  * no activity bar * panel right * resize explorer to max * :bug: editor area goes to 0px  ![Jul-30-2019 11-39-34](https://user-images.githubusercontent.com/1794099/62118886-c9c25f80-b2be-11e9-8624-e0af099e4516.gif)
---
Título: Typing "string," sometimes inserts "strings,"
Descripcion: Issue Type: <b>Bug</b>  VS Code version: Code - Insiders 1.37.0-insider (36e08fed41272d1ff0d73d9b3a540b0a052ecef4, 2019-07-24T19:58:35.647Z) OS version: Windows_NT ia32 10.0.17763  - type `string,` very quickly. (ask @octref to type if you cannot repro :) ) - embrace the rage of seeing `strings,` typed  ![intellisense](https://user-images.githubusercontent.com/5047891/61869379-c7858d00-aedb-11e9-8017-4dfc1989a443.gif)  If you type `string,` slowly, then this does not reproduce... :/  fyi @jrieken
---
Título: Terminal search UX improvements
Descripcion: Right now the vscode terminal searches by starting at the top of the viewport, find next (enter) will search down and then wrap around to the top and keep search. This complicates a lot and causes obscure issues like https://github.com/xtermjs/xterm.js/issues/2325. I also find when using search that I always use shift+enter as I want find previous.  Turns out this is how a lot of terminals work, they bind find previous to enter and will start from the bottom of the terminal buffer. shift+enter will start from the very top and search down.
---
Título: Increase line length in snippet preview
Descripcion: Surely if I have this much space, the snippet wouldn't have to wrap so early so I can properly read the code I'm inserting. ![image](https://user-images.githubusercontent.com/5097067/61482475-0460f980-a99b-11e9-8cb5-de6b85669d4c.png)
---
Título: Error peek view triangle not correct color
Descripcion: When using the error peek view, the triangle tip does not respect the correct error color and is always yellow:  <img width="260" alt="image" src="https://user-images.githubusercontent.com/35271042/61478157-ceddf100-a945-11e9-86eb-7b313d070672.png">  <img width="133" alt="image" src="https://user-images.githubusercontent.com/35271042/61478174-d8ffef80-a945-11e9-8855-6d759b1bdaa6.png">
---
Título: All extensions have tooltip "Extension is enabled locally"
Descripcion: - VSCode Version: 1.36.1 - OS Version: Windows 10 1903 and Ubuntu 19.04  Steps to Reproduce:  1. Install a random extension 2. See that the extension has a tooltip "Extension is enabled locally" 3. Disable the extension 4. Enable the extension for that workspace 5. See that the extension has a tooltip "Extension is enabled locally"  I would expect that in step 2 the tooltip would say something like "Extension is enabled globally".  Additional:  And could you please update the wording for the tooltip? The text is now confusing and not in line with the label of the menu item to enable or disable the extension. "Extension is enabled for this workspace" makes much more sense.
---
Título: High contrast theme has a UX issue with the cursor.
Descripcion: - VSCode Version: 1.35.1 - OS Version: macOS latest  Steps to Reproduce:  1. Use the high contrast theme 2. Wish yourself luck trying to figure out where the cursor *actually is*  3. Cry a little  When using the high-contrast theme, one cannot easily determine where the cursor actually is because the box around certain stuff obscures it, and a bolded left, or right side hardly points to where the cursor actually is because the old portions weight is not enough to easily determine in a sub-second like outside of high contrast themes (actually if we were highly technical the same applies to non-high contrast as well because the cursor is often too thin)  ![image](https://user-images.githubusercontent.com/99763/61187584-d1d09d00-a638-11e9-9806-62000558486a.png)
---
Título: Why INFO level is green by default?
Descripcion: ![demo](https://user-images.githubusercontent.com/9638156/61124455-9bb3e180-a4af-11e9-8a1b-3664a34dcfee.png)  Now that warning colors are matching with the corresponding icon, wouldn't it make sense to change INFO decoration color (squiggly & peek & overviewRuler) to match blue info icon?
---
Título: Confusing behavior when collapsing/expanding comment threads if several exist on the same line
Descripcion: - VSCode Version: 1.36.0 - OS Version: Windows 10  **Repro steps:** 1. With Live Share extension 1.0.488, start a collaboration session 2. Get two comment threads on a single line.      * Comment on a line, 3 for example      * Comment on a second line, 4 for example      * Delete line 3     Now there are two comment threads on line 3 (the line that moved up from 4) 3. Expand/Collapse the comments with the marker   Collapsing/opening such comments might need a rework. Currently I can collapse each individually, and if all are collapsed (or all open), the box on the gray line opens (or closes) all threads. However, if only some of the threads are collapsed, the gray box toggles between the set of open threads and the threads which were collapsed. It never collapses all threads to return to code, and requires each remaining thread to be collapsed individually.  Originally reported in Live Share issue https://github.com/MicrosoftDocs/live-share/issues/2472
---
Título: For long completion items, truncate the start of the string instead of the end
Descripcion: Raised at https://github.com/Dart-Code/Dart-Code/issues/1837, if the completion items are really long, VS Code truncates them at the end:  <img width="648" alt="Screenshot 2019-07-07 at 20 31 34" src="https://user-images.githubusercontent.com/3372058/60771916-29ca4980-a0f7-11e9-8240-21c34c790229.png">  I'll see if we can change this completion so it doesn't include the full path, but it seems like VS Code could maybe be smart here - the visible characters of all the completions here are the same thing as is visible in the document (which is being used to filter) so it would be much better to truncate from the start than the end (for ex., if the label starts with the text being used to filter, then truncate from the start).
---
Título: Allow to customise IntelliSense font
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> Opened as a suggestion from this issue: https://github.com/microsoft/vscode/issues/76280#issuecomment-507587535  <!-- Describe the feature you'd like. --> I'm using the Iosevka font (https://typeof.net/Iosevka/) as the editor font. The full list of editor fonts is:  ``` "Iosevka SS07", "Fira Code", "Source Code Pro", 'Courier New', monospace ```  Since the font was slightly slimmer than my liking, I'd set the editor font family to be **bold**. The UI elements in VSCode are in a non-configurable font (Segoe) which inherit the Editor font weight from settings, but not the font family. This creates peculiar issues on these UI elements which use Segoe instead of the configured editor font.  Some screenshots illustrating the issue: ![image](https://user-images.githubusercontent.com/760112/60419992-3b49b800-9c04-11e9-91f1-0540fcd78312.png)  ![image](https://user-images.githubusercontent.com/760112/60322625-8d3cd480-999d-11e9-823c-3bccffbe23c2.png)  My suggestion is to add another setting: `UI font weight` which applies to the UI, and the `Editor font weight` applies to code elements.
---
Título: The "Read More..." help text font is ugly
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> Version: 1.36.0-insider (user setup) Commit: b7265738444f1eee05762341b4361ee6452a4154 Date: 2019-06-27T05:22:06.378Z Electron: 4.2.5 Chrome: 69.0.3497.128 Node.js: 10.11.0 V8: 6.9.427.31-electron.0 OS: Windows_NT x64 10.0.18362  Steps to Reproduce:  1. Go to the Settings page, and into the JSON editing mode 2. Type something to bring up the autocomplete suggestions, and then press <kbd>Ctrl</kbd>+<kbd>Space</kbd>  ![image](https://user-images.githubusercontent.com/760112/60322625-8d3cd480-999d-11e9-823c-3bccffbe23c2.png)  This documentation should have the same font as the usual workbench text (Segoe or whatever), but it's too bold  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Improve Split View UI
Descripcion: ![image](https://user-images.githubusercontent.com/4319522/60310987-2549a800-9923-11e9-87ec-e7decf3e0439.png)  Is there anyway we can improve the explorer UI. It doesn't feel all that great. For example the headings are squished together.   I'm not sure what exactly should change, but I'm also not a big fan of the animations that appear when you click a section heading like `outline` or `Open Editors`. I would also add the option to remove  the drop down icon from folder and section headers.  Maybe others can chime in.
---
Título: You get a lot of dialogs when moving multiple TS files to another folder
Descripcion: <img width="270" alt="Screen Shot 2019-06-27 at 4 28 50 PM" src="https://user-images.githubusercontent.com/2193314/60307274-c7a06600-98f8-11e9-8b7e-b8e52889591b.png">  I moved those 2 files from `renderer` to `dom` and got 3 dialogs  <img width="390" alt="Screen Shot 2019-06-27 at 4 32 09 PM" src="https://user-images.githubusercontent.com/2193314/60307366-27970c80-98f9-11e9-9ccf-916d67a4278c.png"> <img width="834" alt="Screen Shot 2019-06-27 at 4 32 15 PM" src="https://user-images.githubusercontent.com/2193314/60307369-2a91fd00-98f9-11e9-84c1-3d5b48e44b1a.png"> <img width="834" alt="Screen Shot 2019-06-27 at 4 32 18 PM" src="https://user-images.githubusercontent.com/2193314/60307371-2cf45700-98f9-11e9-921a-7005a07a3183.png">  Each additional file selected is one more dialog.
---
Título: Add border around image in image preview
Descripcion: See https://github.com/microsoft/vscode/issues/74710 for context
---
Título: Add "open JSON file" to UI settings
Descripcion: A lot of official and unofficial tutorials (as well as answers provided in Stack Overflow) reference settings to be added in the settings.json file, and on user studies we've seen people struggling to try to find where the settings.json file is stored. It'd be nice to have a "open JSON file" link in the UI settings page to improve discoverability.
---
Título: Breadcrumbs enhancement: Pin each header to the top of the window
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> See the GIF in this tweet: https://twitter.com/jckarter/status/1140131108564062213  Basically, a setting to be able to toggle whether all the header lines for code sections would become "pinned" to the top of the code pane as you scrolled down, and becoming automatically unpinned when you leave that section.  Bit like breadcrumbs, only a more intuitive and accessible display, I think?   /cc @TylerLeonhardt
---
Título: Allow ctr+click/ctrl+hover in other places
Descripcion: allow `ctrl+click/ctrl+hover` here ![image](https://user-images.githubusercontent.com/36124472/59453676-70db5c80-8e21-11e9-857d-988bb1829fed.png) here ![image](https://user-images.githubusercontent.com/36124472/59453812-c7e13180-8e21-11e9-8582-38476338202d.png) and here ![image](https://user-images.githubusercontent.com/36124472/59453862-e6472d00-8e21-11e9-94bc-f3890a373fad.png) (where showing definition)
---
Título: [Feature] Highlight current activity in activity bar more explicitly
Descripcion: I am partially color blind and I have trouble differentiating between the shades of color in the activity bar.  For example, in my current workflow I have the activity bar layout as follows:  ![VS Code Current Tab Highlight](https://user-images.githubusercontent.com/25514145/59449008-41eac980-8dd4-11e9-866c-07ca46c915e2.png) Might be clear to some of you that it is the icon after the *Source Control* activity (Git Lens) but I cannot tell without serious concentration.  It would be nice to see a more explicit highlight of the current activity.  For example, here is a screen shot from Microsoft Teams: ![Teams Current Tab Highlight](https://user-images.githubusercontent.com/25514145/59449292-c89fa680-8dd4-11e9-99f3-0a61954cb790.png)  Suggested labels: `feature-request`, `accessibility`  Thank you very much for your time and effort. I am deeply grateful.
---
Título: Add clickable button to dismiss QuickPick
Descripcion: Clicking outside a QuickPick only dismisses it if ignoreFocusOut hasn't been set true. If it has been set true the user must reach for the keyboard and press Esc.  Consider adding an [X] button on the QuickPick so it can be dismissed using the mouse or touchscreen.  For UX stability I suggest the [X] button always shows, even if ignoreFocusOut is false.  Also do this for the workspace folder pick UI, where ignoreFocusOut is an option too.  Not sure about InputBox. An [X] button could appear ambiguous. Does it clear the content of the field, or dismiss the field entirely?  Suggestion prompted by #75174
---
Título: Allow quickpick to be dismissed via mouse
Descripcion: - VSCode Version: 1.35.0 - OS Version: OS X Yosemite (Version 10.10.5)  Steps to Reproduce: 1. Open up Visual Studio Code and open up a folder that has been initialized to be a Git repository. 2. Click on the branch checkout button at the very bottom left of the window ![vscode-checkout-btn ](https://user-images.githubusercontent.com/15806388/59172436-e8ee0d80-8b15-11e9-9ab1-ea306d11257c.png) 3. A dropdown list of branches will appear, you cannot click on any other part of the application to try to close the dropdown list. It can only be closed by hitting the esc key. ![vscode-branch-list](https://user-images.githubusercontent.com/15806388/59172441-eb506780-8b15-11e9-8dc2-954f6f882fcd.png) If I remember correctly, I encountered this issue with the command palate dropdown as well with a previous version of Visual Studio Code. It has been fixed and I can exit the command palate dropdown now by clicking away from the dropdown. I hoped to find an issue report for the past issue as it could be helper for the developers,  unfortunately, I could not find an issue report on this topic.  Does this issue occur when all extensions are disabled?: Yes
---
Título: Can't tell when error and warning and both present
Descripcion: With the new warning color, the error blends into the warning, and it's hard to tell at a glance that they are both there:  ![image](https://user-images.githubusercontent.com/323878/59054460-9af0b580-8848-11e9-9991-b8f72bf39781.png)  vs  ![image](https://user-images.githubusercontent.com/323878/59054453-94623e00-8848-11e9-9f5f-6972b7952254.png)
---
Título: Intellisense Window Resizable
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> I have searched and haven't found what I'm specifically asking for. I'm also unsure the name of the window/item in question.  <!-- Describe the feature you'd like. --> In the screenshot I have circled what I'm calling the Intellisense Window. It seems quite small sometimes and I'd like to be able to adjust it's size within maybe settings. Just seems like I'm always cut short when I'd like it to be a little wider.  ![Screenshot (5)_LI](https://user-images.githubusercontent.com/16159685/58969974-88ae4300-8786-11e9-8bb3-a6a69f6e3a26.jpg)
---
Título: Add more spacing between branch and sync icons in SCM viewlet
Descripcion: The spacing between the branch and sync icons in the SCM viewlet appears too crammed and does not match the spacing in the status bar. We should at the minimum increase the margins a big:  ![image](https://user-images.githubusercontent.com/35271042/58718438-59f92c80-8382-11e9-871c-136fdbae92c6.png)  FYI @joaomoreno @bpasero. This also came up in the icon user study.
---
Título: Make `editor.gotoLocation.multiple: "goto"` state UX more discoverable
Descripcion: **Steps to Reproduce:** 1. Set `"editor.gotoLocation.multiple": "goto"` 2. `f12` on `IFileService` in https://github.com/microsoft/vscode/blob/87d3f3e77b5c7108babf8e86f70eedac5820bba2/src/vs/platform/files/common/files.ts#L20  **Request** We currently show the navigation state in the status bar:  ![Screen Shot 2019-05-29 at 2 28 22 PM](https://user-images.githubusercontent.com/12821956/58592762-0b328200-821e-11e9-999a-53eea621d961.png)  This is not very discoverable the first time you use this feature. It can also be hidden if you have terrible status bar cramping:  ![Screen Shot 2019-05-29 at 2 29 15 PM](https://user-images.githubusercontent.com/12821956/58592841-35843f80-821e-11e9-87ab-fffd00e968c3.png)     <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Warning color is inconsistent in peek
Descripcion: I've never understood why there was an inconsistency in our warning colors. Yellow is typically used for warning, and we use a yellow icon but use green in the editor/decoration/peek error view:  <img width="453" alt="image" src="https://user-images.githubusercontent.com/35271042/58587150-7f1a5d80-8211-11e9-8c78-82ec44b99bd4.png">  My proposal is to make it all consistently yellow or green (I prefer yellow since it's more common):  <img width="453" alt="image" src="https://user-images.githubusercontent.com/35271042/58587026-3662a480-8211-11e9-8a42-cc92971af621.png">
---
Título: Exploration icons: Focus on icons is invisible
Descripcion: Testing https://github.com/microsoft/vscode/issues/74320  With the X not selected: ![image](https://user-images.githubusercontent.com/38270282/58552789-88a4c500-8213-11e9-836d-baad0ce64e77.png) Focus on X: ![image](https://user-images.githubusercontent.com/38270282/58552831-9eb28580-8213-11e9-91eb-c136322d6f6d.png)  This is what focus on the X looks like in insiders: ![image](https://user-images.githubusercontent.com/38270282/58552864-b1c55580-8213-11e9-9241-e50b1d02cc50.png)
---
Título: broken icons in exploration build
Descripcion: * use exploration build * open error peek * :bug: icons are bust  <img width="1052" alt="Screenshot 2019-05-29 at 12 01 20" src="https://user-images.githubusercontent.com/1794099/58548395-850c4080-8209-11e9-8b48-35fa38cf198d.png">
---
Título: Octicons: ensure size is proper relative to others
Descripcion: Noticed that some of the icons in the octicon set seem to appear larger, e.g.:  ![image](https://user-images.githubusercontent.com/900690/58487478-ee3b7780-8167-11e9-8e43-d244f045cb6e.png)  I suggest to: * fake a status entry that shows all icons next to each other * tweak those that appear relatively larger/smaller  With the end result that all icons are relatively the same size to each other 👍
---
Título: UX: switch to octicons for all icons in the status bar
Descripcion: This ensures that everything in the status bar is nicely aligned. Currently I always feel like the problems entry as well as the "Send Feedback" smiley are not aligned properly:  ![image](https://user-images.githubusercontent.com/900690/58332521-b36dd280-7e3b-11e9-8333-3ee2f039dd18.png)  Steps: * add required icons to our font * adopt in everywhere we use a SVG icon  PR: https://github.com/microsoft/vscode/commit/350708a11f68a836e2196ce8a8239d6a76344325
---
Título: Files owned by root in $HOME/.vscode/extensions causes error "We cannot connect to the Extensions Marketplace"
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.34.0 - OS Version: macOS 10.14.5  Steps to Reproduce:  I am not certain what caused this, but symptomes were:  * Listing `@installed` in Extensions would show error `We cannot connect to the Extensions Marketplace at this time, please try again later.` * Already installed extensions would show an _Install_ button next to it in the extensions list * Files owned by root in `$HOME/.vscode/extensions`:           ls -la /Users/kristofferb/.vscode/extensions/         total 8         drwxr-xr-x  49 kristofferb  staff  1568 May  7 10:56 .         drwxr-xr-x   4 kristofferb  staff   128 Apr  5  2018 ..         -rw-r--r--   1 root         staff   231 May  7 12:43 .obsolete         drwxr-xr-x   9 kristofferb  staff   288 Oct 20  2018 adamhartford.vscode-base64-0.1.0         drwxr-xr-x  11 kristofferb  staff   352 Feb 16 19:13 akamud.vscode-theme-onelight-2.1.0         drwxr-xr-x   7 kristofferb  staff   224 Jul  9  2018 bibhasdn.unique-lines-1.0.0         drwxr-xr-x  16 kristofferb  staff   512 Dec  7 13:26 bungcip.better-toml-0.3.2         drwxr-xr-x  12 kristofferb  staff   384 Apr  7 08:10 castwide.solargraph-0.19.6         drwxr-xr-x  10 kristofferb  staff   320 Mar 12 09:36 cstuder.gitlab-ci-validator-1.0.0         drwxr-xr-x  12 kristofferb  staff   384 Apr  8 09:23 davidanson.vscode-markdownlint-0.26.0         drwxr-xr-x  11 kristofferb  staff   352 Mar  8 14:20 dbaeumer.vscode-eslint-1.8.2         drwxr-xr-x  26 kristofferb  staff   832 Feb 19 14:29 donjayamanne.githistory-0.4.6         drwxr-xr-x  16 kristofferb  staff   512 Dec 17 11:43 dotjoshjohnson.xml-2.4.0         drwxr-xr-x  10 kristofferb  staff   320 Apr 23 13:58 eamodio.gitlens-9.6.3         drwxr-xr-x  10 root         staff   320 May  7 10:56 eamodio.gitlens-9.7.1  The reason files are owned by root is probably that VS Code has been launched as root at some point (May 7th apparently), and updated extensions.   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Not able to reproduce, can't check  Workaround:  I was able to fix this by running  ```sh sudo find $HOME/.vscode/extensions -user root -exec chown $USERNAME {} \, ```
---
Título: Add shortcut to Collapse All Trees in Outline View
Descripcion: ___ Fixes #70369. ___ **Summary**: It has been suggested to add a keybind for collapsing all trees in the Outline View. A command has been created to handle collapsing the trees and has been registered so that a user may assign their own keyboard shortcut to it via Preferences. ___ ![Demonstrates all the tree nodes of the Outline view being collapsed via keyboard shortcut.](https://user-images.githubusercontent.com/4957200/58061209-dbf38500-7b3a-11e9-9d38-fec5504a705b.gif)
---
Título: Windows installer icon is blurry
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.34.0 - OS Version: Windows 10  The installer icon (on the right) is blurry when installing VSCode in Windows 10 with a high DPI screen (3000x2000, scaling set to 200%):  ![image](https://user-images.githubusercontent.com/199648/57916575-6619c000-7893-11e9-94bd-d73cbf0701ba.png)
---
Título: Make the activitybar thinner with smaller icons
Descripcion: Issue Type: <b>Feature Request</b>  Please reduce width of activity bar, and reduce icons size as well :). Also provide options in theme to change color of sidebar so that we don't miss sublume theme ,)  VS Code version: Code 1.33.1 (51b0b28134d51361cf996d2f0a1c698247aeabd8, 2019-04-11T08:27:14.102Z) OS version: Windows_NT x64 10.0.17763   <!-- generated by issue reporter -->
---
Título: A similar approach of hiding Title bar like in Chrome & Firefox. Space matter a lot.
Descripcion: For those people who want to bypass this issue by offering other option, I have a very good screenshot of this condition which every newbie and sometimes even advance developer go through. ![Screenshot from 2019-05-14 06-57-56](https://user-images.githubusercontent.com/32763112/57664290-4d04db00-7617-11e9-9996-9d657480431d.png) _P.S: We need more space. VS is not offering much. Meanwhile, Chrome & Firefox, solved this very nicely, Probably because of "VScode" name of the top bar which VScode want to force people to show everywhere & everyone. Like a promotion._  Note: If a product is sexy it doesn't need a promotion. VS code is a sexy concept. So give us a "hide title bar" option. It doesn't need promotion.
---
Título: Proposal: Visual Spatial Focus Selection
Descripcion: I often find myself using the mouse to get around the workspace. There are just way too many keyboard shortcuts to have to memorize to be able to do it. It would be great if there were a way to do it spatially. I would've taken a shot at just doing this in code but I know UI changes should go through the UX team so I just faked a video quick instead:  ![small](https://user-images.githubusercontent.com/126263/57571738-8e527c00-73c6-11e9-8601-25bd939df5a8.gif)  A summary:  - While a certain key or combination is held down, the arrows (or wasd) can be used to select the item to focus. Once the modifier key is released, the focus is given to the selected item. - Editors, sidebar views, panel views, terminals, and tabs (or analogous navigation buttons in the sidebar and panel cases) are all available via this method. In the case of a tab-like being selected, the item it represents receives the focus. - When navigating, tab containers are skipped if there's only one tab in them. - Tab containers can only be entered via a direction perpendicular to their orientation (e.g. you can't → from the sidebar and wind up selecting a tab). - When the selection moves to a tab container (or analogous in the case of the sidebar and panel), the tab representing the currently active view is always selected first. - The selection opens the sidebar and panel but, if you change the selection to something outside of them without releasing the modifier, they're closed again.  Just to drive the point home: I made the video using a script of keyboard shortcuts (and then overlayed the focus border and key indicators) and it took 10 different shortcuts! (And that's counting `⌘K ⌘<arrow>` as one.)  h/t @wbinnssmith and @captbaritone. I can't remember which of us had this idea originally 🤣
---
Título: UI suggestion for the Composite Title's font weight
Descripcion: Can we have the "explore" text to be bold?. Almost everything in VS Code is bold around Explore, but itself, which makes it weird...  So this is the normal version (font-weight: 400)  <img width="451" alt="Screen Shot 1398-02-21 at 11 36 58 AM" src="https://user-images.githubusercontent.com/2157285/57566396-3ecd7980-73e1-11e9-9866-c923564fa617.png">  And this is the very bold version (font-weight: bold)  <img width="560" alt="Screen Shot 1398-02-21 at 11 42 04 AM" src="https://user-images.githubusercontent.com/2157285/57566469-290c8400-73e2-11e9-9fad-730fcdd25eec.png">  Both of which are weird. But if you go for a weight between, it becomes very nice on (font-weight: 550)  <img width="589" alt="Screen Shot 1398-02-21 at 11 42 56 AM" src="https://user-images.githubusercontent.com/2157285/57566478-43466200-73e2-11e9-89dd-547e842af916.png">   <br><br>  And it's just so easy to spot the difference it makes: Full-screen on 400:  <img width="1280" alt="Screen Shot 1398-02-21 at 11 49 19 AM" src="https://user-images.githubusercontent.com/2157285/57566554-fd3dce00-73e2-11e9-8ea2-f77c3652e064.png">  Full-screen on 550:  <img width="1280" alt="Screen Shot 1398-02-21 at 11 50 03 AM" src="https://user-images.githubusercontent.com/2157285/57566575-64f41900-73e3-11e9-8b76-6f4bd1157ee7.png">  And it's also true on dark themes:  <img width="1280" alt="Screen Shot 1398-02-21 at 11 52 47 AM" src="https://user-images.githubusercontent.com/2157285/57566577-6b829080-73e3-11e9-9127-e56aff9a7a07.png">
---
Título: Resizing peek window lost code preview.
Descripcion: On resizing peek code window, the code preview disappears. Changing to other reference in listing files on the right does not retrieve the code  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.33.1 - OS Version:  ``` Version: 1.33.1 Commit: 51b0b28134d51361cf996d2f0a1c698247aeabd8 Date: 2019-04-11T08:20:22.771Z Electron: 3.1.6 Chrome: 66.0.3359.181 Node.js: 10.2.0 V8: 6.6.346.32 OS: Linux x64 4.18.0-18-generic snap ```  Steps to Reproduce:  1. Click on code reference to show peek window 2. Resize peek preview code window  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: [Feature] An option to move the activity bar to the top
Descripcion: Currently you have the activity bar on the left side, would an option to have it at the top be good?  For example VS for mac has a menu bar like so:  <img src="https://i.imgur.com/42laKxz.png">  Vscode top menu bar would look similar (better than this screenshot)  <img src="https://i.imgur.com/nNvXPaS.png">
---
Título: Allow clickable links in completion pop-up inside snippet description
Descripcion: It would be nice if links (for example to documentation or other references) inside the description field of a snippet was click-able when presented to the user via the completions pop-up.  "Ctrl + click to follow link" as with links in text/source files would be fine.
---
Título: Tree: filter is not discoverable
Descripcion: I think that the tree filtering is not discoverable, especially in trees where people do not expect it to work. Like Call Stack, Watch... Here's what I propose:  1. Render the orange filter widget with a minimal width when the tree has focus 2. Hovering over the minimal width filter widget we show a message "Start typing to filter" 3. When the user hides the minimal width widget, we no longer show it when empty for that tree.
---
Título: increase file path display list length
Descripcion: In some cases, the path list width of the files is too small and you can not see the full file name. In Brackets this view is much larger.  Em alguns casos, a largura da lista de caminho dos arquivos é muito pequena, não sendo possível ver o nome completo do arquivo. No Brackets esta exibição é bem maior. ![codigo](https://user-images.githubusercontent.com/46497964/55724725-67c5ad80-59e2-11e9-852b-e6a2e1ffc393.jpg)
---
Título: Option to completely hide titlebar and menubar in Windows
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> Since all menu commands are available from command palette it would be nice to add an option to hide titlebar and menubar completely. This suggestion is like https://github.com/Microsoft/vscode/issues/43154 and https://github.com/Microsoft/vscode/issues/12377, but for Windows. It might look something like this: ![vscode](https://user-images.githubusercontent.com/22733346/55616056-a4eb2f00-5799-11e9-8aec-fc62f7c5b128.png) <!-- Describe the feature you'd like. -->
---
Título: Add touch mode
Descripcion: Issue Type: <b>Feature Request</b>  I use touch a lot an no external mouse, so it would be great if VS Code has a touch mode that optimizes the UI for touch (more spacing between items in the Welcome page, for example). One way to achieve this is to add a mouse/touch mode toggle similar to the one in MS Office apps.  VS Code version: Code 1.32.3 (a3db5be9b5c6ba46bb7555ec5d60178ecc2eaae4, 2019-03-14T23:43:35.476Z) OS version: Windows_NT x64 10.0.17134   <!-- generated by issue reporter -->
---
Título: Show progress bar when copying files to custom FileSystemProvider
Descripcion: From https://github.com/Microsoft/vscode/issues/67590  - Create a custom FileSystemProvider - Open a workspace with one disk-based folder, and one custom uri root. - Copy a large folder from the disk-based folder to the custom uri folder - The custom FileSystemProvider may be slow to copy a large file, we should show a progress bar while the operation is running
---
Título: Improve checkout branch visibility
Descripcion: Searching around the git tab and and the command palette I couldn't easily find how to switch branches. I propose two changes to increase the visibility of checking out branches.   1) Add something about checking out or switching branches in the 3 dots dropdown on the git tab. Or even an option to show all branches in the git tab. 2) In the command palette change 'Git: Checkout to...' to 'Git: Checkout to branch' so that this command will appear when the user searches for 'branch' in the command palette.  I'm just comparing this to GitHub Desktop where searching for 'branch' under the Help menu shows 'Show Branches List' which then lets you checkout a branch.
---
Título: Single dot accept completion and re-trigger completion
Descripcion: Version: 1.33.0-insider Commit: 9474154f133dbbb793ca3c128c9fcfdca39f5b26 Date: 2019-03-22T06:15:30.293Z Electron: 3.1.6 Chrome: 66.0.3359.181 Node.js: 10.2.0 V8: 6.6.346.32 OS: Darwin x64 18.2.0  Started to happen since 2 versions ago.  From the rough look of it, if when I type `.` before screen finishing updating `this`, it seems to accept the first completion item.  ![fast-type](https://user-images.githubusercontent.com/4033249/54843388-75b0ca00-4c91-11e9-98ab-cf22c16b66fb.gif)  If I disable all extensions (including Vim, which hijacks to the `type` command and makes typing slower), this can still happen, although I need to type `this.` way faster:  ![normal](https://user-images.githubusercontent.com/4033249/54843585-f53e9900-4c91-11e9-95ba-f02292dc0c39.gif)
---
Título: Tree does not highlight item under context menu if tree does not have focus
Descripcion: Issue Type: <b>Bug</b>  1. Try to invoke context menu on Explorer item 2. The item in Explorer is not highlighted  VS Code version: Code - Insiders 1.33.0-insider (9474154f133dbbb793ca3c128c9fcfdca39f5b26, 2019-03-22T06:18:30.063Z) OS version: Windows_NT x64 10.0.17763   <!-- generated by issue reporter -->
---
Título: A bunch of typescript commands end in full stops
Descripcion: <img width="281" alt="Screen Shot 2019-03-22 at 7 44 50 AM" src="https://user-images.githubusercontent.com/2193314/54830794-6a9c7080-4c76-11e9-890b-0def378a2169.png">
---
Título: Splitview: support scrolling when all views are at a minimum
Descripcion: The absence of a vertical scrollbar on the side bar impedes discoverability of some of the sections when operating with limited overall window height. For example in Debug view: ![junk](https://user-images.githubusercontent.com/6726799/54743806-1ed9c080-4bbd-11e9-8437-6b8c9240169b.gif)  If you don't want to add a vertical scrollbar, how about a visual cue at the bottom of the sidebar to hint that there's more below? User could then resize the window or collapse visible panels to discover what else is available.  - VSCode Version: 1.32.3 - OS Version: Windows_NT x64 10.0.16299
---
Título: Improve Create Branch usability
Descripcion: Users are used to just creating a branch from HEAD. They are getting confused about choosing a ref as a target after choosing the new branch name.  Let's create separate `Create Branch` and `Create Branch from...` commands. Also, split those two actions in the `Checkout...` quick input.
---
Título: 2d quick menu
Descripcion: The idea is to create an overlay similar to the `workbench.action.quickOpenView`, only to display a matrix of icons, similar to many games (and probably some software):  ![demo](https://user-images.githubusercontent.com/9638156/54038439-a09b1880-41d1-11e9-94d4-1859d455d40a.jpg)  It should be shown immediately while holding a modifier key, then hovering mouse over an icon and releasing the modifier to execute an action.  Yes, it is slower than keybinding and nobody in vscode likes icons or mouse, so I might as well write this into `/dev/null`.
---
Título: Indicate keyboard shortcut and preferred modifier when hovering on lightbulb
Descripcion: **Repo** For the js:  ```js //@ts-check const foo = 1, food ```   1. Place cursor on `food` to trigger lightbulb  **Request**  When hovering on the lightbulb for a preferred quick fix, we should indicate what the little blue badge means in the hover message and show the keyboard shortcut for auto fix.
---
Título: Improve display of inline code segments in completion/hover
Descripcion: Currently we are using `monospace` for inline `<code>`. That can fallback to a random font that doesn't go with the rest of the UI. In the below gif, it's `Courier New`. It looks totally out of the place.  ![bad-font](https://user-images.githubusercontent.com/4033249/53980455-3dbc5b00-40c5-11e9-8d25-5a80864195b7.gif)  On macOS, we are using `-apple-system` which resolves to SF Next for text, so we should use SF Mono for the inline code. Here's how it would look like:  ![system-font](https://user-images.githubusercontent.com/4033249/53980460-401eb500-40c5-11e9-9166-6071c7b37257.gif)  We should look at Windows and Linux and find a monospace font that matches the UI font.
---
Título: Code Line Counting Column is too wide
Descripcion: I suggest that we can adjust it **by ourselves**!!!!!!! ![image](https://user-images.githubusercontent.com/20971355/53690352-d55b3a00-3da3-11e9-9418-08407c7afbeb.png)
---
Título: [bug][file icon] Path intellisence shows the wrong icon
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> Version: 1.32.0-insider Commit: 0a4a3b98282175a82a819b70d2bbe46475e1ebd0 Date: 2019-02-28T21:15:52.439Z Electron: 3.1.3 Chrome: 66.0.3359.181 Node.js: 10.2.0 V8: 6.6.346.32 OS: Linux x64 4.15.0-29deepin-generic   ![image](https://user-images.githubusercontent.com/7843281/53620798-33b2dc00-3c2f-11e9-97b6-bd565ac40f25.png)  But in the Explorer is correct  ![image](https://user-images.githubusercontent.com/7843281/53621077-44178680-3c30-11e9-9b9d-d6bc4580306a.png)   May be the file extension is ignored when calculating the file icon  https://github.com/Microsoft/vscode/blob/master/extensions/theme-seti/icons/vs-seti-icon-theme.json#L1428  Steps to Reproduce:  1. create a file called `Mix.tsx` 2. import `Mix.tsx` in another file     <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Only show keybindings when you hover the hover
Descripcion: #69204  Version: 1.32.0-insider (user setup) Commit: [393b48d](https://github.com/Microsoft/vscode/commit/393b48d4a5de85b6fa1d2ad0a59588d6715e12ea) Date: 2019-02-25T01:34:48.785Z Electron: 3.1.3 Chrome: 66.0.3359.181 Node.js: 10.2.0 V8: 6.6.346.32 OS: Windows_NT x64 10.0.18841  We don't show hotkeys anywhere except for in the title bar unless hovering, we should follow that here as well and use the `title` attribute:  ![image](https://user-images.githubusercontent.com/2193314/53356213-bcecaa80-38df-11e9-86e7-d41a7dbae345.png)  It looks especially ugly when on Linux or Windows because modifiers don't have icons
---
Título: Make the documentation of completionItem larger
Descripcion: This is a PR to make the documentation of completionItem larger, which solves #14165 along with commits by @sandy081 solving #67076.  Before:  ![2019-02-25 21 32 17](https://user-images.githubusercontent.com/10665499/53337474-dd028500-3944-11e9-84f3-06eaf3340b32.png)   After:  ![2019-02-25 21 28 23](https://user-images.githubusercontent.com/10665499/53337425-b7757b80-3944-11e9-8a97-c231a2c8bb9f.png)  At various positions:  ![feb-25-2019 21-34-55](https://user-images.githubusercontent.com/10665499/53337631-4a161a80-3945-11e9-8ba6-493196306efb.gif)
---
Título: Add horizontal line to problem hover
Descripcion: testing #69204:  I suggest to separate the hover's status bar with the `Peek Problem` and `Quick Fixes` actions from the "contents area" by another horizontal line:  ![2019-02-25_12-47-25](https://user-images.githubusercontent.com/1898161/53335511-f03d3280-38fb-11e9-970a-5dbff257f3b6.png)
---
Título: Enable Hover: sticky on RGB Color picker only
Descripcion: Issue Type: <b>Feature Request</b>  As of right now if you disable Hover: Sticky in the preferences, you lose the ability to select a color on the RGBA color picker pop-up.  Please enable Hover: sticky by default on the color picker pop up or let us click on the small colored square for a color selector window pop-up.  This is a must, because by default, Hover: sticky makes for some annoying tooltips and must be disabled.  Thank you, I really hope you consider this.  VS Code version: Code 1.31.1 (1b8e8302e405050205e69b59abb3559592bb9e60, 2019-02-12T02:20:54.427Z) OS version: Windows_NT x64 6.1.7601   <!-- generated by issue reporter -->
---
Título: Focus is lost when inserting snippets with mouse click
Descripcion: Issue Type: <b>Bug</b>  ![focus](https://user-images.githubusercontent.com/9638156/52969268-cac29d00-33c0-11e9-87fa-72d847979a83.gif)  VS Code version: Code - Insiders 1.32.0-insider (bbe40c8cb0901c439b3b61221a0197fb6723783e, 2019-02-18T10:48:37.179Z) OS version: Windows_NT x64 10.0.17763   <!-- generated by issue reporter -->
---
Título: Place editor groups side-by-side with The Panel
Descripcion: I want to be able to split the window more freely. Specifically when using a small screen it gets hard to follow the output of some extension or task, or something in the terminal while editing a file and having  another file split open for reference. Here's what that can look like on a small screen:  ![image](https://user-images.githubusercontent.com/30010/52904508-bbf7b100-322d-11e9-9d91-1f127402e0a2.png)  Moving the panel to the right does not really help:  ![image](https://user-images.githubusercontent.com/30010/52911600-29472880-32a6-11e9-891a-dacc636caaa6.png)  If I could move an editor group down side by side with the panel (or below or under it when it is placed to the right) this would save me a lot of moving around between tabs and groups.  This gets extra important with some extensions that contribute WebViews with much of their UI. They are sometimes more panel-like than editor-like.  With this feature added screen real estate could be used like so:  ![bitmap](https://user-images.githubusercontent.com/30010/52904570-08db8780-322e-11e9-96da-b3e0cffacce0.png)  Or with the panel to the right:  ![bitmap](https://user-images.githubusercontent.com/30010/52904578-1bee5780-322e-11e9-8ecb-11f6c21c6d5f.png)  I think that it could be made general so that also the explorer pane could participate in this sharing.  Let me know if my suggestion is not clear enough, and I'll try to improve on it.
---
Título: Explore Extensions Management UX
Descripcion: Explore Extensions Management UX  Extensions Management include:  - Managing installed extensions   - Enabled   - Disabled   - All installed   - Built in   - Outdated  - Browsing Marketplace   - Searching   - Categories   - Order of viewing  - Show Recommendations   - Workspace   - General (file)  Over the time this viewlet has become a single place for all of the above which made it   - Flooded with views and making them hard to manage - Hard to distinguish among installed, recommendations and market place  - Missing prominent information on installed extensions   - Active   - Running   - Activation time - Viewlet is lacking space to provide necessary information like    - Why reload is required   - Due to this fact, we have a different page for running extensions - There is no nice landing page - Hard to browse extensions in market place with categories   This seems like Extensions viewlet is overloaded with too many features and used for managing/browsing/customising extensions instead of just using like an explorer.   Goal of this issue is to explore some ideas considering all above use cases and come with a good design which gets aligned with current VS Code UX.  Following are some issues that are kinda related to current viewlet  - https://github.com/Microsoft/vscode/issues/68456 - https://github.com/Microsoft/vscode/issues/68529 - https://github.com/Microsoft/vscode/issues/68584 - https://github.com/Microsoft/vscode/issues/68590 - https://github.com/Microsoft/vscode/issues/68711 - https://github.com/Microsoft/vscode/issues/68702 - https://github.com/Microsoft/vscode/issues/67369 - https://github.com/microsoft/vscode/issues/84390
---
Título: Sometimes it's hard to quickly tell which section is active in the main panel
Descripcion: Since the only way to tell is a slight color difference, I've found myself several times not being sure which section is active, usually to close it. Perhaps this could be implemented in a more effective way, maybe apart from a color difference have some other subtle artifact on the active one.
---
Título: Blurry icons (zoom on click)
Descripcion: Issue Type: <b>Bug</b>  ![blurry](https://user-images.githubusercontent.com/9638156/52522059-841ec580-2c91-11e9-9880-bf4d81dd6ca9.gif)  They are svg and easily could be rendered in max workbench zoom with sharp edges. But zoom on clicking is using something that makes them extremely blurry. Not a regression.  Maybe related #8017.  VS Code version: Code 1.31.0 (7c66f58312b48ed8ca4e387ebd9ffe9605332caa, 2019-02-05T22:35:56.624Z) OS version: Windows_NT x64 10.0.17763   <!-- generated by issue reporter -->
---
Título: Allow panel to be minimized
Descripcion: It's relatively easy to toggle the bottom panel with a keyboard shortcut, but once the panel is hidden, it's not obvious how to bring it back via the UI (the answer is to click the errors/warnings count in the status bar, but that doesn't really make sense if my goal is to bring back my terminal).  Additionally, this is inconsistent with the sidebar, which expands and minimizes, whereas the panel shows and hides.  Could we perhaps allow the panel to be minimized in addition to being hidden? In this mode it would look similar to the minimized panels in Visual Studio. A mock of what I'm envisioning is attached.  ![mock](https://user-images.githubusercontent.com/96068/52452608-944f6d00-2af8-11e9-9935-305acb71c385.png)
---
Título: Mouse middle click: open editor pinned
Descripcion: While looking at https://github.com/Microsoft/vscode/pull/68092 I noticed that other trees/lists do not open editors pinned on mouse middle click. I think for consistency it would be good if they would, e.g. in search, debug and problems.  As for consistency I think we already established that files open to the side on Alt+click. But should verify that this is still the case after new tree adoption.
---
Título: Clicking links in CompletionItem do not open in browser
Descripcion: Version 1.31.0-insider (1.31.0-insider)  b313db6c58f8c02181a33cd3b5b4b17c64a5b85d  Reviving https://github.com/Microsoft/vscode/issues/61754.  I have the following extension:  ```ts import * as vscode from 'vscode',  export function activate(context: vscode.ExtensionContext) {   vscode.languages.registerCompletionItemProvider('plaintext', {     provideCompletionItems() {       return [         {           label: 'foo',           documentation: new vscode.MarkdownString('[VS Code](https://github.com/microsoft/vscode)')         }       ]     }   }) }  export function deactivate() {} ```  Clicking on the link does nothing.  ![click](https://user-images.githubusercontent.com/4033249/52310810-87484780-2959-11e9-920f-7e054e436dac.gif)  This would block me from using Markdown in HTML Language Features for various links:  ![image](https://user-images.githubusercontent.com/4033249/52310841-a7780680-2959-11e9-8523-1484dab02b99.png)
---
Título: Markdown base64 not displayed entirely in the documentation panel
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ --> **Description**  We are developing the 'AL language' extension in VS Code and we are using MarkupContent in order to display our intellisense/on hover documentation as specified on the Language Server Protocol [specifications](https://github.com/Microsoft/language-server-protocol/blob/gh-pages/specification.md).  As part of our documentation, we also display some images. We are using Markdown and base64 images (ex: `![MyImage](data:image/png,base64,myImageValueInBase64)`). This works, but, the size of the documentation panel is not correct when displaying the image the first time (when visiting the second time, this is fixed).   ![image](https://user-images.githubusercontent.com/31541422/52174569-05f48780-2796-11e9-8e01-12bc9e62c14f.gif)  <!-- Use Help > Report Issue to prefill these. --> **Version** - VS Code Version: 1.31.0-insider (system setup) - Commit: 8f56013e8f66650c1b0b65cc5c502691e307db21 - Date: 2019-02-01T18:34:04.940Z - Electron: 3.1.2 - Chrome: 66.0.3359.181 - Node.js: 10.2.0 - V8: 6.6.346.32 - OS: Windows_NT x64 10.0.17763  **Steps to Reproduce:**  1. Download the 'AL Language' extension from the marketplace.  Name: AL Language Id: ms-dynamics-smb.al Description: AL development tools for Dynamics 365 Business Central Version: 2.1.79379 Publisher: Microsoft VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=ms-dynamics-smb.al  2. Create a new AL project. - Ctrl + Shift + P - to open the command bar - Select 'AL:Go' - to create a new AL project  3. When asked to choose a server or do enter user credentials, just skip it, this is not needed in order to reproduce the issue.  4. Open the HelloWorld.al that was auto-generated, and replace it by the following code: (the character ^ represent the cursor location for the next step). ``` page 50120 MyPage {     actions     {         area(Processing)         {             action(ActionName)             {                 Image = ^             }         }     } } ```  5. Remove ^ and trigger intellisense at this location.  **Expected**: The image (sent as base64 image) should appear. **Actual**: The image is only partially displayed as the display window is too small. This gets fixed the second time the image is displayed (see gif above).     <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: I have no other extension installed than the AL one.  **Related issue in our repository**: [Image preview of action Image property not fully visible](https://github.com/Microsoft/AL/issues/4413)
---
Título: Grid: toggling editor area should have some kind of indication
Descripcion: I feel like there should be an indication when the editor area is toggled to be hidden. Since we are building everything around the editor it seems weird to end up in a state where the editor is not visible at all.   //cc @misolori
---
Título: Monaco API Request: Settable display length of the Suggestions list
Descripcion: The display length of the suggestions list is hard-coded to 12 in the maxSuggestionsToShow variable in the src/vs/editor/contrib/suggest/suggestWidget.ts file. We generally want a longer list than this.  ### Feature Requested  Make the display length of the suggestions list dynamically settable in configuration.
---
Título: Automatic task notification shows up before I've selected a task to run
Descripcion: Testing #67262 I expected the notification to appear after I've successfully run my task, but the notification appeared after I selected `Run Task` in the command palette. There are still 2 steps involved running a task so I won't be ready to respond to that notification.
---
Título: Explorer filter box style issues
Descripcion: #66485  ![image](https://user-images.githubusercontent.com/2193314/51930902-72dfda00-23b0-11e9-8226-437c61260771.png)  ![image](https://user-images.githubusercontent.com/2193314/51930970-9a36a700-23b0-11e9-84eb-5b15c16706f1.png)  ![image](https://user-images.githubusercontent.com/2193314/51931631-30b79800-23b2-11e9-8b71-e6a1ea7c8cdc.png)  ![image](https://user-images.githubusercontent.com/2193314/51931642-37dea600-23b2-11e9-9f86-954876dcb9f2.png)  ![image](https://user-images.githubusercontent.com/2193314/51931734-6d838f00-23b2-11e9-85b6-1dcbd96a572b.png)  ![image](https://user-images.githubusercontent.com/2193314/51931748-74aa9d00-23b2-11e9-84ec-67bdc70d2291.png)  Some observations:  - Both the list highlight and the filter box in the top-right are based on `editor.findMatchHighlightBackground`, but the filter box is far darker - The filter box has a 45 degree drop shadow, I don't think we do this anywhere - The filter box has rounded edges - The icons are very blurry and not vertically aligned - The filter options were very difficult to discover, I would not have come across them if I wasn't testing the feature  This is a similar UI component we have which maybe we should copy some style from?  ![image](https://user-images.githubusercontent.com/2193314/51931185-10d3a480-23b1-11e9-9163-1cc94adf1d7c.png)  ![image](https://user-images.githubusercontent.com/2193314/51931208-19c47600-23b1-11e9-917b-d996a7684441.png)
---
Título: Filter highlights overlap with search highlights
Descripcion: Testing #67274  ![image](https://user-images.githubusercontent.com/10746682/51910125-931e9180-23ce-11e9-99c1-47b55f09d210.png)   IMO in Search view, simple and filter options only makes sense.
---
Título: Breadrumbs: alignment of text vs icons vs twistie is off
Descripcion: I find that the alignment of breadcrumbs is weird. I am on Linux with zoom level 1 (though I also see it without zooming). To emphasize the box around breadcrumbs I added a green background:  ![image](https://user-images.githubusercontent.com/900690/51900275-32368f80-23b5-11e9-9dd8-d01cf0a2d8ad.png)  Somehow the alignment of text, twistie and icon is not really vertically centered.
---
Título: List horizontal scrolling
Descripcion: Fixes #63684  - [x] Implement horizontal scrolling in the list - [x] Respect workbench setting - [x] Rename workbench setting to mention lists as well - [x] Disable horizontal scrolling on specific lists/trees  ---  The following trees need to be verified.  **AsyncDataTree**  - [x] References widget - [x] Loaded scripts - [x] Call stack - [x] Debug hover **always enabled** - [x] Repl **always disabled** - [x] Variables - [x] Watch expressions - [x] Explorer  **ObjectTree**  - [x] Markers panel - [x] Search view  **List**  - [x] Notifications **always disabled** - [x] Quick Input **always disabled** - [x] Breakpoints - [x] Runtime Extensions **always disabled** - [x] Open Editors - [x] Keybindings Editor **always disabled** - [x] SCM Viewlet  **PagedList**  - [x] Extensions View
---
Título: Improve hover presentation for complex errors
Descripcion: Error hover is good in representing simple errors. But when it comes to complex and descriptive errors, inline error widget can represent them well. But inline error widget is not discoverable.   - Ability to navigate to inline error widget from hover. - Make hover look good with consistent font for the complete message.
---
Título: File Explorer: `Shift`+arrows not always removes selection
Descripcion: * Go <kbd>Shift</kbd>+<kbd>↓</kbd> * Then go up <kbd>Shift</kbd>+<kbd>↑</kbd> * Stable toggles selection, Insiders keeps it  |   Stable      | Insiders          | | ------------- |-------------| | ![stable](https://user-images.githubusercontent.com/9638156/51624759-963bfc80-1f4c-11e9-99c7-bce0af939e48.gif) | ![insiders](https://user-images.githubusercontent.com/9638156/51624779-9fc56480-1f4c-11e9-9ecf-8403db857688.gif) |  VS Code version: Code - Insiders 1.31.0-insider (2d79ffe0cd84515a4c771fcbd7294c2448d97826, 2019-01-23T06:20:52.488Z) OS version: Windows_NT x64 10.0.17763   <!-- generated by issue reporter -->
---
Título: Update touch bar icons
Descripcion: Fixes #66689  Based on [Apple's guidelines](https://developer.apple.com/design/human-interface-guidelines/macos/touch-bar/touch-bar-icons-and-images/) for touch bar icons, they should not be taller than 44x44:  <img width="786" alt="image" src="https://user-images.githubusercontent.com/35271042/51585411-1d766b00-1e8e-11e9-8674-c18edf872d7f.png">  So I went through and cleaned up all of our icons to match those sizes:  ![image](https://user-images.githubusercontent.com/35271042/51585361-e86a1880-1e8d-11e9-875b-bc6f0cb50e2a.png)  ![image](https://user-images.githubusercontent.com/35271042/51585447-40088400-1e8e-11e9-8353-9e876b223856.png)  ![image](https://user-images.githubusercontent.com/35271042/51585863-dc7f5600-1e8f-11e9-9693-befa4dfb031a.png)
---
Título: Improve UX  for Post extension install/uninstall/enable/disable
Descripcion: Issue Type: <b>Bug</b>  When disabling/enabling extensions, not every item shows the `Reload` button in the viewlet. See the gif below as an example, `Debugger for Chrome` and `Nunjucks` do not get this button for reload. In some instances, the `Reload` button flashes for a few seconds and disappears.  <img width="50%" src="https://user-images.githubusercontent.com/35271042/51549891-1284f180-1e20-11e9-80ce-d3675fafba44.gif">   VS Code version: Code - Insiders 1.31.0-insider (23f534b7b7f439fc39755821ff99ac50fcc10765, 2019-01-22T06:13:01.312Z) OS version: Darwin x64 18.2.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7920HQ CPU @ 3.10GHz (8 x 3100)| |GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|3, 4, 5| |Memory (System)|16.00GB (0.63GB free)| |Process Argv|-psn_0_1290555| |Screen Reader|no| |VM|22%|  </details><details><summary>Extensions (4)</summary>  Extension|Author (truncated)|Version ---|---|--- vscode-svgviewer|css|1.4.7 prettier-vscode|esb|1.7.3 python|ms-|2018.12.1 code-settings-sync|Sha|3.2.4  (3 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: List filter widget should be dragged only in top row
Descripcion: I think allowing to drag the widget only on the top but not only in the corners is the way to ge here. So top all the way,  like the debug toolbar does it so we also get some consistency.  The reason I say this is because putting it in the bottom feels really disconnected and I think more users would like to put it top middle, than bottom corner.
---
Título: List filter: Drag handle should be a drag hand, not a XY coordinate icon
Descripcion: I can not take a screen shot of my mouse sorry. But the drag hand is an coordinate cross. It should be a drag hand like in the debug toolbar.
---
Título: context menu (intellisense): increase height/number of lines
Descripcion: I would like to request the option for a bigger context-menu, to settings like - max. number of lines, or - max. ratio (% of window-height)  ![image](https://user-images.githubusercontent.com/42785945/51396776-0c50f580-1b40-11e9-8ec4-55e4619c1dd6.png)  Mostly, there are a lot more than 12 entrys - it would be very nice to extend it's height. Didn't find any option for this.  Position of window can get an option like - start top - center - start bottom  relativ to cursor and window or anything else.  Thank you ☺️
---
Título: Update listActiveSelectionBackground
Descripcion: Fixes #66612  This updates `listActiveSelectionBackground` to use our `darken()` function so that it doesn't use the same color as`listFocusAndSelectionBackground`.  ![gif](https://user-images.githubusercontent.com/35271042/51349713-fd444780-1a5a-11e9-895b-3a64027d74b4.gif)  ![gif](https://user-images.githubusercontent.com/35271042/51349734-0c2afa00-1a5b-11e9-9504-897438bb521e.gif)
---
Título: FuzzyScore: createMatches should coalesce ranges
Descripcion: The `createMatches` function isn't coalescing consecutive ranges, potentially creating lots of dom nodes:  ![screenshot from 2019-01-17 17-52-39](https://user-images.githubusercontent.com/22350/51334723-b2d5c180-1a80-11e9-8b4d-46b85a5fa525.png)  Actually saw this in HC theme, because highlights have borders in that theme, so each character gets a border:  ![screenshot from 2019-01-17 17-54-19](https://user-images.githubusercontent.com/22350/51334822-ec0e3180-1a80-11e9-9dab-ba061b5e7b81.png)
---
Título: Fancy list/tree navigation
Descripcion: - [x] Implement scoped focus navigation - [x] Support tree options   - [x] Fancy keyboard navigation (boolean) `simpleKeyboardNavigation`   - [x] Filter on type (boolean) `filterOnType` - [x] Introduce workbench settings   - [x] Introduce `workbench.tree.keyboardNavigation`: `simple`, `highlight`, `filter` - [x] Tweak label indicator   - [x] Style it (light, dark, hc)   - [x] Figure out label overflow   - [x] Add runtime option switcher   - [x] Remove border   - [x] Empty filter affordance   - [ ] Toggle filter mode keybinding - [ ] Lists - [ ] Cleanup   - [ ] Go through all trees and use highlighting label   - [ ] `TODO@joao`
---
Título: 'Allow extension to open' dialog is huge
Descripcion: Elementary OS Use github pull request extension and log in to github:  ![image](https://user-images.githubusercontent.com/6461412/51280423-e1e82680-19df-11e9-9177-28de9a184f04.png)
---
Título: git: several hints and dialogs don't appear when using keyboard shortcut commit
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.30.2, 1.31.0-insider - OS Version: Ubuntu 18.04.1  Steps to Reproduce:  1. Open the source control panel in a project with git enabled 2. Click on the message text input and leave it blank. 3. Use the keyboard short to make a commit (on my machine Ctrl+Enter) 4. Notice that no message appears. 5. With the text input still empty, instead click the commit button (it looks like a checkmark). 6. A message saying something like "Please provide a commit message (Press 'Enter' to confirm or 'Escape' to cancel)" should appear.  A similar problem occurs when using the keyboard shortcut when trying to commit when there are no changes in the working tree ("There are no changes to commit" does not appear) and also when there are no staged changes to commit ("There are no staged changes to commit. Would you like to automatically staged all your changes and commit them directly?").  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Expose some more commands in the 'Go' menu
Descripcion: To improve discoverability of some of our navigation commands we should promote them from the Command palette into the 'Go' menu:  - [ ] Add 'Go to last edit location'   - [ ] Add Go to next/previous problem/error - [ ] Add Go to next/previous change - [ ] Add Go to bracket
---
Título: Hyperlinks cannot be navigated in autocomplete documentation
Descripcion: <!-- Do you have a question? Please ask it on https://stackoverflow.com/questions/tagged/monaco-editor --> **monaco-editor version:** v0.15.6 **Browser:** Chrome **OS:** Linux  Also repros in VSCode on Linux  ## Steps to Reproduce:  1.  In VsCode or Monaco, create a function with a comment like `/** [Link](http://link.com) */` 2.  Make the documentation show up via auto-complete (Ctrl-Space Ctrl-Space) 3.  Click the "Link" hyperlink in the autocomplete documentation  ### Alt steps:  Open https://microsoft.github.io/monaco-editor/playground.html  Paste in: ```javascript /** [Link](http://link.com) */ function hello() {} ```  ## Result  The documentation closes.  ## Expected Result  The hyperlink is opened in a new tab (or default browser in the case of VS Code).  ## Note  Clicking links in documentation shown on hovering over a symbol works as expected for VS Code and Monaco.   ## Potentially related issues:  https://github.com/Microsoft/vscode/issues/8223 https://github.com/Microsoft/vscode/issues/65659
---
Título: Intellisense details cannot scroll vertically the first time it's shown
Descripcion: This only appears to happen the first time it shows up, successive times work fine.  ![image](https://user-images.githubusercontent.com/2193314/50800363-c325b980-1294-11e9-84b5-c5bb1a289c93.png)  Using the setting in https://github.com/Microsoft/vscode/pull/66179
---
Título: Update Octicons
Descripcion: Fixes #65508 and fixes #36053  This updates our version of Octicons, while still having backward compatibility with icons that have been removed in the newer versions. I've [created this tool](https://github.com/Microsoft/vscode-octicons-font) that generates the new icon from the [Octicon npm module](https://github.com/primer/octicons/tree/master/lib/octicons_node).  The only minor changes are that `organization` and `person` are now filled versions instead of outlines.  ## Additions <img width="50%" alt="image" src="https://user-images.githubusercontent.com/35271042/50705339-5d74cb80-100f-11e9-97cb-6b9b8c2a092a.png">  - `arrow-both` - `bold` - `eye-closed` - `fold-down` - `fold-up` - `grabber` - `italic` - `kebab-horizontal` - `kebab-vertical` - ~`logo-gist`~ - `note` - ~`plus-small`~ - `project` - `screen-full` - `screen-normal` - `smiley` - `tasklist` - `text-size` - `unverified` - `verified`  ## Updated <img width="82" alt="image" src="https://user-images.githubusercontent.com/35271042/50705423-a3319400-100f-11e9-8327-8d5f104bce92.png">  - `color-mode` is persisted - `organization-filled` is for the new version of the icon - `person-filled`  is for the new version of the icon  ## Comparison After installing a few extensions that use octicons in the statusbar (vscode-spotify, live share, github pull request), you can compare the differences.  ![image](https://user-images.githubusercontent.com/35271042/50651661-e4a34000-0f38-11e9-8800-1dbbe11d92c1.png)
---
Título: assistive technology won't always read the intelly sense suggestions
Descripcion: When using assistive technology, and you alt tab out of VS code for something, the screen readers don’t read IN telly sense  suggestions. This happens with all screen readers.  To fix the issue you have to close VS code frequently because the screen reader stops reading suggestions.
---
Título: Update Octicons
Descripcion: Related to #36053 #10455 #8017  This issue is to track the progress of updating our version of [Octicons](https://octicons.github.com/) (3.1.0) to the latest version (8.2.0). We'll need to create the work to convert the latest versions (svg) back into an icon font. Below are the requirements for this work:  - [x] Convert svgs into icon font - [x] Include backward compatibility - [x] Map old unicodes to new icons - [x] Remove unnecessary font files - [x] Add/update proper licenses - [x] Test new icon font  Working branch can be found under [misolori/octicon-update](https://github.com/Microsoft/vscode/tree/misolori/octicon-update). Below is a list of the new additions:  - `arrow-both` - `bold` - `eye-closed` - `fold-down` - `fold-up` - `grabber` - `italic` - `kebab-horizontal` - `kebab-vertical` - `logo-gist` - `note` - `plus-small` - `project` - `screen-full` - `screen-normal` - `smiley` - `tasklist` - `text-size` - `unverified` - `verified`  Please refer to [Octicon's Changelog](https://github.com/primer/octicons/blob/master/CHANGELOG.md) for a full list of updates.  :octocat: :heart:
---
Título: Intelisense suggestion widget is too verbose with screen readers
Descripcion: I would like to propose certain changes to screen reader mode behavior.   Right now the suggestion alert is very verbose to the point of  interrupting the flow when coding. The message posted to the alert div contains:  (Current item), suggestion, has details, item label  I know that those messages differ based on the fact if there are item details or not. The message read aloud by the screen reader can contain a summary or more details besides the function / object / property name etc.  Unfortunately, the screen reader is reading the "suggestion, has details" suffix and so on which is too detailed, and I guess very annoying when you get to hear it after every refresh of a suggestion list. The desired behavior should be announcing just the current item having focus - as the basic behavior. The reason is that it allows for quick listening and completing code. Another usability comes from the fact that Visual Studio Code is alerting the following string:  Accepting 'current item' did insert ... and so on. This is a usability bug, for I get to hear it after hitting enter on every desireable selection... Once the item is inserted it is in the code window content and can / should be easily read / navigable with regular screen reader review functions - just like simple text. I've spent some time with the suggestion widget code, and understand the design, but there are parts, which are not so easy to deal with such as the alert after accepting code suggestions. What would be the best way to provide fixes or configuration settings what would control the verbosity level?
---
Título: Make it more obvious when "Use Exclude Settings and Ignore Files" is not applied
Descripcion: This keeps coming up, so I want to keep an issue open to think about it some more.  https://github.com/Microsoft/vscode/issues/46353  > It took me 10 minutes just now to figure out why it was ignoring my exclude settings. The displayed message ("exclude settings and ignore files are disabled") didn't help at all in how to turn it back on, it made it sound like a setting needed to be set true or false. The "do not enter" badge is small and honestly looked like an ellipsis to my eyes. Perhaps instead of dimming the entire glyph, the badge could toggle between a check when exclude is in effect and the "do not enter" when it's disabled. I'm not sure the best solution here but the current implementation is certainly problematic.  Things we could do off the top of my head  - Change the message to make the action to fix it more obvious ("... are toggled off"?) - Change the icon to a large "do not enter" with a small gear - Change the icon as suggested above to toggle between two icons
---
Título: enable a signature help result to also provide completions.
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> VSCode 1.30.1 Signature help working as well.  Also I am using c++ plugin. I noticed, that signature help can not be applied by pressing enter, tab or other key, so I created the issue for c++ plugin: https://github.com/Microsoft/vscode-cpptools/issues/2924 But then I got reply that applying signature by enter is the VSCode feature which is not implemented now: https://github.com/Microsoft/vscode-cpptools/issues/2924#issuecomment-447976847  I did not find any feature request about it so creating new one. Thank you.
---
Título: minor stylistic bug
Descripcion: Issue Type: <b>Bug</b>  HI! There are inconsistent behaviors when find toolbar is open in editor. with different scenarios:   - When I open an empty file, and I press Ctrl+F, the editor is shifted below the find toolbar, and line 1 starts from an inappropriate place, like the find toolbar is shifting what is under it: ![screenshot 16](https://user-images.githubusercontent.com/5755214/50052572-53139000-013b-11e9-91b3-d8cb33d6ab84.png)     and when I start typing something, a more shifting happens, which (seems) is caused by that little git annotation.  - also there is some inconsistent behavior with this find toolbar on non-empty files. If I have the find toolbar open and then open a non-empty line, git-annotation on first line is not shown. But if I first open the non-empty file and then press Ctrl+F, everything looks fine: ![screenshot 18](https://user-images.githubusercontent.com/5755214/50052620-01b7d080-013c-11e9-8da7-6f44e09d8a04.png) ![screenshot 21](https://user-images.githubusercontent.com/5755214/50052622-03819400-013c-11e9-8f5b-ab65ed990346.png) ![screenshot 19](https://user-images.githubusercontent.com/5755214/50052625-0ed4bf80-013c-11e9-9f54-65ef3b03465f.png)  THANKS! Keep up the good work +1   VS Code version: Code - Insiders 1.31.0-insider (ece3a90fb58986570d8afdfb16530c4dd8c743af, 2018-12-14T06:19:42.976Z) OS version: Windows_NT x64 10.0.17134  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2808)| |GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: enabled<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Memory (System)|15.88GB (3.41GB free)| |Process Argv|| |Screen Reader|no| |VM|0%|  </details><details><summary>Extensions (20)</summary>  Extension|Author (truncated)|Version ---|---|--- swagger-viewer|Arj|2.1.0 npm-intellisense|chr|1.3.0 path-intellisense|chr|1.4.2 vscode-markdownlint|Dav|0.22.0 vscode-eslint|dba|1.7.2 githistory|don|0.4.4 gitlens|eam|9.2.0 tslint|eg2|1.0.41 vscode-npm-script|eg2|0.3.5 prettier-vscode|esb|1.7.2 vscode-nginx-conf-hint|han|0.1.0 Angular2|joh|7.0.1 camelcasenavigation|map|0.3.51 Angular-BeastCode|Mik|7.0.20 vsliveshare|ms-|0.3.1071 vscode-icons|rob|8.0.0 sass-indented|rob|1.4.9 vscode-nginx|sha|0.6.0 move-ts|str|1.11.3 html-css-class-completion|Zig|1.17.1   </details> <!-- generated by issue reporter -->
---
Título: Hope to have a plugin manager
Descripcion: For users who have lots of plugins, it's difficult for them to manage different  language's plugins.Especially when they want to remove one plugin.So I hope in next version we can have a plugin manager to divide plugins into different groups. eg. C/C++: C++ Intellisense C++ Clang Web: HTML CSS Support HTML Snippets thanks:)
---
Título: Autocomplete widget customization
Descripcion: Would be great if the autocomplete widget could be customized.  Late coders for web based apps wont likely notice, but programmers coming from more conventional IDEs (Visual Studio, MonoDevelop/Xamarin, Rider, Eclipse, etc) find the suggestions widget very ugly looking (no offense).  Could we have tools for customizing the autocomplete rendering? Icons, font family and background color (font size, and line height are already there it seems, but wont affect the signature help box sadly). Also a layout template would be ideal awesome.
---
Título: Welcome: Improve "keyboard tips" visual presentation
Descripcion: I find our display of keybinding tips not looking very modern:  ![image](https://user-images.githubusercontent.com/900690/49886204-4e986000-fe39-11e8-968d-aade88a9ac1d.png)  Since we have a menu for all these things, I suggest we remove the "tips" section entirely.  This is how cool it looks without it:  ![image](https://user-images.githubusercontent.com/900690/49886323-a1721780-fe39-11e8-8084-8c0be2acd5dd.png)   @Microsoft/vscode thoughts?
---
Título: Extension Pack: Enabled/Disabled list: Show depending extensions as subitems
Descripcion: It would be great to distinguish top-level extensions such as Extension Pack and "flat" extension, which is not included in any pack. The idea is to have list grouped by features. e.g.:  Enabled [V] + "Java language Pack"    - "Debuger for Java" + "Python language Pack" - "Some small extention"  Disabled [V] + "Java language Pack"    - "Maven for Java" - "Fortran support"  There are some possible solutions: 1. Show extensions list as tree. 2. Add possibility to hide dependent extensions
---
Título: Search view layout in panel can be improved
Descripcion: ![screenshot 2018-12-05 at 11 36 14](https://user-images.githubusercontent.com/1926584/49508294-9f7ce700-f882-11e8-97a1-83b546155f47.png)  1. Notice the search and replace inline buttons all the way to the right. They look disconnected and far away 2. Notice all the empty space on the right. This space feels unused, and I feel like we could have a better layout / presentation of results in this case 3. Notice how the hover actions jump at the end of each line. Thus their position is not consistent. This was done so they would not be at the very end disconnected. However this does not feel like a real solution for me 4. Notice how the snippet of each result is cropped at the same length as in the sidebar. Even though here we have much more space and could show more context of each result  I think we could give more thought to improving this experience. Though before we do anything crazy I suggest we wait for the workbench layout using the grid - as we might need a more general story for views. fyi @bpasero @sbatten
---
Título: Tree view markdown message may be too powerful
Descripcion: We discussed this during the api call, I'm not sure whether there was any more discussion about it. Do we really want to let extensions render any markdown in the tree? If they can render lists, tables, images, etc, then some extensions will probably go all-out. But the tree view message isn't a good place for heavy fancy content so it could result in a bad experience.  ![image](https://user-images.githubusercontent.com/323878/49486594-eb347f80-f7f3-11e8-9f68-e4d2779251a3.png)  I would propose not allowing markdown. But as a compromise you could post-process the rendered markdown to remove certain features. For example in the settings editor, we disallow images:  https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/preferences/browser/settingsTree.ts#L1309
---
Título: Consider automatic tasks prompt to be a silent notification
Descripcion: Currently if I open a workspace with an automatic task I will be asked via a notification if it is ok to run the task automatically. This will be done for every workspace that I open that has an automatic task.  SInce I am personally very senstive to us adding new notifications and since this does not seem user critical (e.g if the user does not answer he can still use vscode). I suggest that we make this notification silent (collapsed by default).  Not a lot of workspaces will have automatic tasks so in the end not a lot of users will get spammed by it, but still I think using a silent notification might be the way to go here. Ideally this should be a notification badge in the tasks viewlet, however since we do not have Task ux I understand why we are using a global notification here.  @misolori @bpasero I think we should revisit all our current notifications and figure out if some should be moved to silent notifications.  @microsoft/vscode for thoughts
---
Título: Running extensions view needs UX love
Descripcion: Refs: #64222  F1 > Show running extensions  You see a view which was done by @alexandrudima @jrieken and me in one afternoon without a lot of UX thinking. If we are going to navigate users to this view (which we now do - check #64222 for details) I believe it needs more UX thinking and love. First we should figure out if this should be integreted in the extensions viewlet or it deserves to be a seperate view. After we figure that out we should design this with some more love.
---
Título: Wasted space in the multiline search input
Descripcion: Testing #64270  <img width="216" alt="screenshot 2018-12-04 at 13 42 34" src="https://user-images.githubusercontent.com/5047891/49442689-8fa1cc00-f7ca-11e8-9664-e774e7a2f424.png">
---
Título: add functionality to hide open context menu
Descripcion: fix toggling of ... menu on windows fix toggling of global activity bar menu on windows fix position of global activity bar menu on windows fixes #62413 fixes #61766
---
Título: Modify "open changes" button icon
Descripcion: Issue Type: <b>Feature Request</b>  To see the changes i made to a source controlled checked-in file, a user clicks on the "Open Changes" icon on the top right.   I would like to see a better looking icon that represents git and changes.  The current one looks like a **search button**.   VS Code version: Code 1.29.1 (bc24f98b5f70467bc689abf41cc5550ca637088e, 2018-11-15T19:13:36.375Z) OS version: Windows_NT x64 10.0.14393   <!-- generated by issue reporter -->
---
Título: IntelliSense config option to disable click to accept
Descripcion: I would like to be able to click on an IntelliSense suggestion to select it without it being accepted. The primary use case is for viewing pop-up documentation without having to arrow to the desired member.  In the pic, it would be nice to select and read the documentation for `relative` without having to arrow to it.  ![image](https://user-images.githubusercontent.com/797824/49078018-e0358a00-f20a-11e8-8d84-3b21dc5fa4db.png)  Apologies if I've missed how to do this.  ### Version Info Version: 1.29.1 Commit: bc24f98b5f70467bc689abf41cc5550ca637088e Date: 2018-11-15T19:07:43.495Z Electron: 2.0.12 Chrome: 61.0.3163.100 Node.js: 8.9.3 V8: 6.1.534.41 Architecture: x64  Ubuntu 18.10
---
Título: Suggestion: Move "Open Settings (JSON)" button to lower gutter
Descripcion: Moving from 1.29 to 1.30 Insiders build, I had difficulty figuring out how to view the settings as a JSON file. In 1.29 the functionality is accessed through the `...` on the lower gutter where the **User Settings** and **Workspace Settings** tabs are.  #### 1.29 (Split View) <img width="1215" alt="screen shot 2018-11-26 at 3 58 42 pm" src="https://user-images.githubusercontent.com/9157833/49041840-564ada00-f194-11e8-941b-afa19ce5c3b2.png">  #### 1.30 (Split View) When I first accessed the Settings view on 1.30 I noticed the `...` button was gone from the lower gutter, so I thought to access the JSON file it must be through the `...` in the top gutter, but it wasn't there. I didn't realize it was in the `{}` button until a while later. This will probably cause some confusion for users when they upgrade from 1.29 to 1.30.  <img width="1087" alt="screen shot 2018-11-26 at 4 01 28 pm" src="https://user-images.githubusercontent.com/9157833/49041953-b6da1700-f194-11e8-9801-550e6a154953.png">  I agree that having a separate button to view the JSON is the way to go, but I want to suggest moving that button from the top gutter to the lower gutter would avoid some confusion. Here is my suggestion (split view): <img width="1087" alt="screen shot 2018-11-26 at 3 46 30 pm" src="https://user-images.githubusercontent.com/9157833/49041744-108e1180-f194-11e8-8511-5efe25008ff0.png">  On the other hand if it is left as is, there may be some confusion when first discovering the new button but after that there shouldn't be any more confusion. Just some feedback I had for this change.
---
Título: Add "TypeAlias" CompletionItemKind/SymbolKind
Descripcion: "Type alias" is whenever an identifier is used to reference another type by a different name, aka "typedef" or "using alias" (see https://en.cppreference.com/w/cpp/language/type_alias ).  Applies to the following languages: C, C++, Objective-C, D, C#, Go, Rust, Swift, and probably other languages.  Our C/C++ workaround is to use the "Interface" icon with the text "(typedef)" or "(type alias)" appended.  For Visual Studio with C++ it shows: ![image](https://user-images.githubusercontent.com/19859882/48880491-917c9000-edc5-11e8-9b35-3e19842aaeb8.png)
---
Título: Add more types to CompletionItemKind/SymbolKind
Descripcion: This would allow our C/C++ extension to show a different icon. Also applies to Objective-C and D. Our workaround is to use the "Struct" icon with additional text "(union)" at the end of the symbol.  This is what Visual Studio shows: ![image](https://user-images.githubusercontent.com/19859882/48880516-b96bf380-edc5-11e8-8723-1d6266671b4e.png)
---
Título: Allow to theme modal dialog boxes to match overall theme
Descripcion: Since the main menu bar was recently migrated to be fully self-made and skinned, the "normal" message boxes seems to be the last area that needs to be integrated:  ![image](https://user-images.githubusercontent.com/415439/48977212-ae031b80-f096-11e8-8099-64ab70fc5431.png)  Having a dark skin selected, the message boxes look "unnatural" and distracting, compared to the rest of the UI (which looks great!).  **Therefore my suggestion is:**  Please make all message box dialogs look like the rest of the application in terms of skin, color, font, etc.
---
Título: [Suggestion] Add option for displaying in panel
Descripcion: Search has this option (`search.location`). It would be great if this view could also be shown in the panel.
---
Título: javascript selected words highlight bug ?
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.29 - OS Version: windows 10  Hi to all, in javascript and typescript files we have strange bug with incorrect highlighting selected and matched words. After selection we can see right color about 1 second, after this highlight colors will change to default. Issue doesn't reproduce with other file extensions, like c++, json, etc.  Steps to Reproduce:  1.  set next options: "editor.selectionHighlightBorder": "#ff0000", "editorOverviewRuler.selectionHighlightForeground":"#ff0000", 2. reload vs code to apply these options 3.  open javascript or typescript file and select any word  ![main js - client - visual studio code 2018-11-20 15 02 36](https://user-images.githubusercontent.com/4902870/48772492-9c57f780-ecd5-11e8-81e7-fba07aaad238.jpg)   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: [BUG] Jerky screen transition when sidebar is closed
Descripcion: <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.29.1 - OS Version: Win 10  Steps to Reproduce:  1. Set (user) settings.json to the following: ``` {     "breadcrumbs.enabled": true,     "workbench.sideBar.location": "right", } ``` 2. Open any file in an editor. Example `test.ts`: ``` class MyClass {      constructor(private myProp: string) {      }      myMethod() {         console.log("test"),     }      myMethod2() {         console.log("test"),     }      myMethod3() {         console.log("test"),     }  } ``` 3. Toggle (open and close) the sidebar <kbd>ctrl</kbd>+ <kbd>B</kbd>.  You notice a bad looking jerky movement / motion juddering of the text for a short period of time after the sidebar closes (don't know if thats the correct word for the behavior in english). I think, it has to do with the setting `"breadcrumbs.enabled": true` that takes some screen space in the editor and not optimal render timings of the editor view. It gets more apparant, if you have the sidebar on the right side with ` "workbench.sideBar.location": "right"`.    <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No yes
---
Título: Retry as administrator - Retry with sudo
Descripcion: Issue Type: <b>Bug</b>  When editing a file that can't be saved without elevation, a notification pops up, prompting to try and save as administrator. On Linux, perhaps this should say "Retry with sudo"  ![screenshot](https://user-images.githubusercontent.com/6452991/48618811-c8ecd600-e99a-11e8-88ef-92bbb827048e.png)  VS Code version: Code 1.29.0 (5f24c93878bd4bc645a4a17c620e2487b11005f9, 2018-11-12T07:42:27.562Z) OS version: Linux x64 4.15.0-39-generic  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 3495)| |GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: unavailable_software<br>video_encode: unavailable_software<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|1, 2, 1| |Memory (System)|15.42GB (4.51GB free)| |Process Argv|--unity-launch| |Screen Reader|no| |VM|0%|  </details> <!-- generated by issue reporter -->
---
Título: Explore improving UX for Welcome Page
Descripcion: This exploration will aim to modernize the look and feel of the Welcome page while also improving the layout for new and current users. Items we're looking to explore:  - Add "privacy" section to page for better visibility - Add "recently update" section for app and extension updates - Add underline for text links on hover (consistency)  ## Related issues - Ability to remove recent item #22489 - Ability to pin projects #63057 - Don't open browser on first launch without user's action #14934 - Revisit "Interface Overview" page #19491  ## Current Design  ![image](https://user-images.githubusercontent.com/35271042/48791391-7a934c00-eca6-11e8-9cb5-abaa01645d78.png)   ## Research Our research shows that new users install language & keyboard shortcut extensions the most, while current users go to recent projects or open folders. Below is a visualization of the top actions.  ### Top actions for new users ![new users](https://user-images.githubusercontent.com/35271042/48498898-12e38980-e7ec-11e8-88f8-8b1c85b3a62b.png)   ### Top actions for current users ![current users](https://user-images.githubusercontent.com/35271042/48499353-1cb9bc80-e7ed-11e8-80d7-1a543a88659f.png)   I will be updating this issue with explorations as they're developed.
---
Título: Explore improving UX for IntelliSense
Descripcion: This exploration will aim to unify the IntelliSense features (hovers, completions/suggest, parameter hints) in style and content. Additionally, we will explore to address the positioning of parameter hints  (currently shown above the cursor).  ## Related Issues - Shorten method signatures https://github.com/Microsoft/TypeScript/issues/14662 - Better structure for IntelliSense #50813 - Add opacity setting for IntelliSense #22439 - Better positioning of popup #60534 - Add syntax highlighting to suggest widget #60651  ## Current Design ![image](https://user-images.githubusercontent.com/35271042/48501136-5391d180-e7f1-11e8-998e-9b2a0ef1a08f.png)   ## Explorations  ### Exploration A - Moves parameter hints below cursor - Combines parameter + suggest widget - Reduces opacity of entire widget to 95%  ![image](https://user-images.githubusercontent.com/35271042/48495934-d1e87680-e7e5-11e8-9638-3fd79fc02dde.png)   ### Exploration B - Same as Exploration A - Increases width of widget to show single line - Aligns widgets based on cursor  ![image](https://user-images.githubusercontent.com/35271042/48496104-20961080-e7e6-11e8-912b-86985d6b2265.png)  ### Exploration C - Same as Exploration A - Aligns widgets based on cursor - Adds parameter hints inline as shadow completions  ![image](https://user-images.githubusercontent.com/35271042/48496161-44f1ed00-e7e6-11e8-8183-a59deb6d47df.png)  **GIF Example**  ![gif](https://user-images.githubusercontent.com/35271042/48496382-bc278100-e7e6-11e8-9df6-8eb4fb0b6aca.gif)
---
Título: Screen cheese for suggest widget
Descripcion: Have the following code sample  ```javascript var filewalker = require('filewalker'),  filewalker('.').on('file', function (p, s) { 	if (s. 	console.log('file: %s, %d bytes', p, s.size), }).walk(), ``` On s. trigger suggest widget. Press cmd + space again to get the docs one. Screen cheese ![screenshot 2018-11-14 at 12 57 54](https://user-images.githubusercontent.com/1926584/48481182-ee4bd980-e80c-11e8-9ba4-8355159bff12.png)
---
Título: Add config option to always show vertical scrollbars
Descripcion: Requesting this again because it was never implemnted although it was supposed to be done as part of horizontal scroll..  https://github.com/Microsoft/vscode/issues/40202  https://github.com/Microsoft/vscode/issues/24755  Add the ability/setting to have the vertical scrollbar always on (as opposed to only show up when hover over with a mouse) in panes (for instance, open files pane).
---
Título: reload option in main file menu
Descripcion: It sort of baffles me why this is not already available in the main menu:  ![screenshot from 2018-11-03 20-03-33](https://user-images.githubusercontent.com/11139560/47959526-98bd3480-dfa3-11e8-9a25-080aaffdf832.png)   in the file menu, I have to select exit and then manually re-open vscode.  in the file menu there should be a "reload" option in the dropdown so that I can restart vscode upon some setting change without having to manually open the app after it's closed/exited.  Basically what I want is the "reload" button in the screenshot available from the file menu, thx.
---
Título: Improve localization extension installation message
Descripcion: ![screenshot from 2018-11-02 15-12-26](https://user-images.githubusercontent.com/22350/47920777-34bb4300-deb3-11e8-84a7-87f24a695420.png)  Rephrase this to something like:  > In order to use VS Code in German, VS Code needs to restart.  Have a single button:  > Restart Now  We don't need a `No` button, since the notification can be dismissed.
---
Título: Error hover semantic information should be rendered separate of error message
Descripcion: From @octref in #62159  > This is a regression on the diagnostics display. >  > 1.28: >  > ![image](https://user-images.githubusercontent.com/4033249/47816972-b83d2e80-dd11-11e8-92ea-97763e51688e.png) >  > Insiders: >  > ![image](https://user-images.githubusercontent.com/4033249/47817088-00f4e780-dd12-11e8-8b0c-2d45c561fbf4.png) >  > In both case, the diagnostics returned are: >  > ```js > const diagnostics = { >   code: "unknownProperties", >   source: "css.lint.unknownProperties", >   message: "Unknown property: 'foo1'" > } > ```  If we have access to semantic information we should render it much better. The message should come first. Then the source on a separate line, with a `Source:` label preceding it and in non-monospace font (since source should be a user-readable string like `CSS Lint`). Then, the code with the same style, but with monospace, since code is often a library/OS error code. Something like:  > `Unknown property: 'foo1'` > > **Source:** CSS Lint > **Code:** `unknownProperties`  cc @sandy081  @ramya-rao-a @misolori
---
Título: search count badge jumps
Descripcion: * have a search result * resize the sidebar * 🐛 the count badge jumps at one point  ![oct-29-2018 12-11-08](https://user-images.githubusercontent.com/1794099/47646337-eb49bb80-db73-11e8-952c-5ac349d1d84d.gif)
---
Título: Can not open URL in MarkupContent in CompletionItem's documentation
Descripcion: I was playing with the idea of providing links to MDN for each CSS property.  Currently clicking the URL does not open the webpage:  ![image](https://user-images.githubusercontent.com/4033249/47459979-510fff00-d792-11e8-8039-08a00388e506.png)
---
Título: Make Settings and Keybindings editor consistent in showing editor actions
Descripcion: @sandy081 and me find it weird that we have a custom place in settings where we keep secondary actions and we do not use editor secondary actions. Why is that, what is the reasoning behind this design choice? This way we are inconsistent with out other settings experiences, for example Keybinginds Editor.  fyi @misolori   ![screen shot 2018-10-23 at 12 08 11](https://user-images.githubusercontent.com/1926584/47353830-7848cc80-d6bd-11e8-9202-2427fa007432.png)
---
Título: Please add 'Open keybindings.json' to the secondary actions
Descripcion: Now these are not well connected, I suggest to add "Open keybindings.json" to the context menu. This way it would also be aligned with the settings and settings.json relationship fyi @alexandrudima   ![screen shot 2018-10-23 at 11 23 20](https://user-images.githubusercontent.com/1926584/47350411-205a9780-d6b6-11e8-93f1-9a384a1a20ba.png)
---
Título: Windows: submenu indicator rendered very large
Descripcion: See:   ![image](https://user-images.githubusercontent.com/900690/47339890-e9c45300-d69c-11e8-9e75-fa2a6668a738.png)  Compared to native:  ![image](https://user-images.githubusercontent.com/900690/47339905-f2b52480-d69c-11e8-84d6-75569938f089.png)  /cc @misolori
---
Título: Menu horizontal alignment
Descripcion: This PR would improve toolbar menu horizontal alignment. From: ![image](https://user-images.githubusercontent.com/8168391/47276493-dc9a5c00-d5e9-11e8-95f4-60e8fb19df13.png)  To: ![image](https://user-images.githubusercontent.com/8168391/47276472-c5f40500-d5e9-11e8-9192-c2e1d610e94b.png)
---
Título: Settings tabs are jumpy between selection
Descripcion: Issue Type: <b>Bug</b>  With at least one folder loaded in Code:  1. Go to Code > Preferences > Settings 2. Click on either "User Settings" or "Workspace Settings"  Notice tab spacing is jumpy when changing active selection.  It should NOT be as jumpy.  I believe it's caused by the text being bolded on active selection.  <i>Desired</i>  ![Not jumpy tabs](https://i.imgur.com/ZmmBOpk.gif)  <i>Actual</i>  ![Jumpy tabs](https://imgur.com/2KDWhzS.gif)  VS Code version: Code 1.28.2 (7f3ce96ff4729c91352ae6def877e59c561f4850, 2018-10-17T00:18:43.347Z) OS version: Darwin x64 18.0.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz (4 x 3500)| |GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|3, 3, 4| |Memory (System)|16.00GB (0.30GB free)| |Process Argv|.| |Screen Reader|no| |VM|0%|  </details> <!-- generated by issue reporter -->
---
Título: Default text color for non-current tabs in light themes does not pass the color contrast ratio check.
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. --> ![image](https://user-images.githubusercontent.com/8168391/47058409-85fedd80-d1f7-11e8-8769-4dfca139cbd9.png) Text color on tabs that are not the current tab have a contrast ratio of only 2.70:1 against its background in light themes such as Visual Studio Light. The corresponding color in the dark theme does pass the check.  Considering that those tabs are clickable, they should not be considered “inactive” items.
---
Título: UX improvement for find decoration for line starts
Descripcion: - VSCode Version: Version: 1.29.0-insider Commit: cc5e2b41c3add18a31e87f84b5d6162566a38d6e Date: 2018-10-10T05:19:52.883Z Electron: 2.0.11 Chrome: 61.0.3163.100 Node.js: 8.9.3 V8: 6.1.534.41 Architecture: x64  - OS Version: Win 10  Steps to Reproduce:  1. Create some text and search (or search and replace) with regex turned on. For example, fill in as below image: ![image](https://user-images.githubusercontent.com/39968/47028082-2f63b600-d19b-11e8-88c9-55a0d305bdf7.png)  2. As you can see, `^` in regex is an anchor, not a character. So the first character of each line should not be selected. Instead, it's better to create a list of cursors at the beginning of each line like this: ![image](https://user-images.githubusercontent.com/39968/47028252-908b8980-d19b-11e8-80ec-9a786aefb097.png)  Now sure how hard to fix this, but just to mention it so that we can discuss.   <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: add preview icon to upper right of extension in extensions list
Descripcion: It would be helpful to show the preview icon in the extensions list itself. You've already got the icon and show it in the details pane.
---
Título: Add  julia `.jl` icons
Descripcion: https://github.com/Microsoft/vscode/pull/60674 added icons for various file extensions. It would be great to also add julia `.jl` to that list.
---
Título: The signature in suggestion widget should have syntax highlighting
Descripcion: - VSCode Version: 1.28.0 - OS Version: win 7   Steps to Reproduce:  1. invoke symbol signature popup via mouseover, and contrast with the one invoked via `ctrl+space` (or through suggestion).  When invoked or displayed as part of suggestion, the symbol signature doesn't have CSS applied, nor is properly indented:  ![image](https://user-images.githubusercontent.com/5153846/46817245-0c8e6780-cd7f-11e8-95ee-6a73d3a18425.png)  Does this issue occur when all extensions are disabled?: Yes
---
Título: #42382 Preserve case while search and replace
Descripcion: Ex JetBrains IntelliJ user, I was looking for a "preserve case" option in the "search and replace" box.  ![capture d ecran 2018-10-09 a 14 20 04](https://user-images.githubusercontent.com/3756105/46669138-d8744480-cbce-11e8-8f2d-5ac67bc020a0.png)  #42382, #9798 are linked to my use case.  Replacing with case preservation can uses different strategies. I chose the Emacs one :   > replaces a lower case ‘foo’ with a lower case ‘bar’, an all-caps ‘FOO’ with ‘BAR’, and a capitalized ‘Foo’ with ‘Bar’.   https://www.gnu.org/software/emacs/manual/html_node/emacs/Replacement-and-Lax-Matches.html#Replacement-and-Lax-Matches  ____  There is no test regression but it's still a WIP :    - [ ] add a new test suite    - [ ] add a keyboard shortcut (can be a next PR)   - [ ] add to global search (can be a next PR)
---
Título: Custom icons should be allowed for all icon sizes
Descripcion: Thanks for adding custom icon support, but why can't we have custom file icons for all the sizes? Right now this feature is almost useless since the file icon size has to be *massive* (**at a size I never use**) to be visible.   See how large the icons have to be, to become visible ![f](https://user-images.githubusercontent.com/4319522/46627440-7f41dd80-cb08-11e8-8976-6c9302acd5a5.gif)  The current rational is that the custom icons do not look good at small sizes, which means that different icons should be used  for different sizes, which is the standard approach and is just a technical issue.
---
Título: Add selectionBackground defaults
Descripcion: The selectionBackground color token controls the background color of text selection outside of the editor. So this affects text in native input elements like search, selecting text in the debug console, settings editor, other places. If one isn't defined, it comes from the OS and is different between macOS and windows. Maybe the OS picks different colors in some scenarios, like for different windows themes.  e.g. in Dark+  MacOS  ![image](https://user-images.githubusercontent.com/323878/46511718-08a19900-c805-11e8-8452-f6789b3e4fc2.png)  Windows  ![image](https://user-images.githubusercontent.com/323878/46511726-1820e200-c805-11e8-9322-94f11dd12115.png)  I think that adding defaults for this token would be a good idea just so it looks consistent. It's also an issue for editor instances pretending to be input boxes - the settings and extensions input boxes that use the suggest widget. If selectionBackground isn't configured, they don't know the native selection color and fall back on the editor selection background which doesn't always look good in that context, so setting a default selectionBackground will make those input consistent with the native inputs. But maybe people like the native text selection look?  @misolori  @Tyriar  ?
---
Título: Open Editors shouldn't be toggleable if no editors are open
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ --> Issue Type: Bug  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.28.0-insiders - OS Version: Windows 10 1803 17134.320  Steps to Reproduce:  1. Close all editors (doesn't matter if in a workspace) 2. Click on "Open Editors" in file explorer 3. See toggle switch, but nothing shows  As per this screenshot: ![image](https://user-images.githubusercontent.com/30497573/46303543-08569300-c5a4-11e8-849a-45d5a8df329d.png)  If it is meant to be toggleable, perhaps show a message such as `There are no editors` similar to Outline view, otherwise disable toggle  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Animated Editor Switching
Descripcion: Continuation of #56021 but to meet guidelines for feature-requests.  This would be a replica of how the Microsoft Office ribbon and how it transitions the content within it.  Let's say you click on a tab to the right of the active editor, all things in the current editof (gutter, decorations, code etc.) would slide to the left and fade out. Then the new editor from the right would slide in from the right and fade in all the items.  This would also adapt to the size of the editor window too. If it was from right to left, the animations would just reverse.
---
Título: Animated Dropdown Menus
Descripcion: Continuation of #56021 to meet guidelines for feature-requests.  In light of new custom controls, I feel that the small fades dropdowns have could have some additions. To detail them individually :  1. Sub Dropdowns   - Sub dropdowns (ones indicated with an arrow), when hovered on, could have the menu shoot out from the side and exalnd down to full height, where the items would then fade in. This is actually similar to some Microsoft Apps that I've used also.  2. Menu Uncollapsing   - Similar to No. 1, when menus are toggled, they could exapnd to max width and then max-height with the items appearing afterwards.  3. Covering the individual menu items and menu dividers    - They should slide in and fade from translarent to opaque. The distance for slide can be small but large enough so that it is opaque when sliding stops, and vice versa.   Possibly? Transition betweem adjacent dropdowns   Similarly to Office 2016, when a tab is clicked, it transitions the ribbon to have the new items. This could possibly be done in VSCode but may be hard since all dropdowns have separate instances, rather than re-rendering the same element  Let's say a dropdown such as File is active, then Edit is clicked: it would fade out the menu items and slide to them left, move the box over and fade in the new items and slide them in from the right. It would go the opposite way if it was from Edit to File.  These are purely suggestions and it doesn't matter if they aren't considered. Thanks for reading
---
Título: Animated Sidebars
Descripcion: Continuation of #56021 to meet guidelines for feature-requests  The sidebars in VSCode could have an animation such that they slide in when they are toggled. If this is considered, I would suggest an ease-out animation for a good UX. For a detailed process:  1. Click on, let's say File Explorer 2. Assuming it isn't active, it would slide out to the right 3. This would size it to whatever the user last sized the Sidebar 4. It would also push the editor to the right too. Of course keeping Viewport in mind 5. If the sidebars were active, the animation would just reverse too  This would bring a more interactive editor to users. Whilst I understand VSCode isn't about aesthetics and whatnot, it would be nice to see.  @misolori Hope this is better!
---
Título: Icons should have consistent states
Descripcion: Issue Type: UI No relevant found   In VSCode, different icons have different states applied to them. For example, the gear in the activity bar has a hover state, whereas icons in the top right such as split view have a clicked state. Others such asin the Find sidebar have a blue border to denote toggle, but not a real hover state.  In my opinion, all icons in VSCode should have a hover state and/or active state.
---
Título: Read CompletionItemKind for suggestions
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  Testing #40597  **Repo** 1. Using VoiceOver on a mac 1. Trigger suggestions in a js file 1. use arrow keys to navigate suggestions  **Feature request** Currently all suggestions are read as `LABEL, suggestion`:  <img width="526" alt="screen shot 2018-09-27 at 1 46 01 pm" src="https://user-images.githubusercontent.com/12821956/46173641-ba682500-c25b-11e8-9f66-a8cdfed12caf.png">  I think we should read the suggestion kind as well, perhaps: `LABEL, snippet` or `LABEL, method`
---
Título: Accessibility: Intellisense/autocomplete alerts contains superfluous words when using a screenreader
Descripcion: Reported by Rob Gallo:  The text of intellisense/autocomplete needs to be much shorter, perhaps containing only the suggestion and insertion.   In a typescript file in VS Code, using jaws as my screen reader, when I type the letter ‘c’, I hear “’console’ suggestion”. And when I then press enter, I hear, “accepting ‘console’ did insert the following text.”   Every word in both strings is superfluous except for the two instances of ‘console’. The meaning would be perfectly clear if ‘console’ were the only word spoken. In fact, as it stands, the verbosity of these strings is so long that it actually slows me down.   I understand the urge to provide context. However, the distraction and speed bump caused by the repetition of these strings vastly outweighs the benefits of the extra context over time.   I have used intellisense for many years in VisualStudio where it only reads the names of the symbols. I probably know as many blind developers as anyone out there. And I can tell you that this will drive us all crazy.
---
Título: Possible to have the custom checkboxes global
Descripcion: Issue Type: UI  In light of the new Settings GUI, the beautiful custom checkboxes appear. This is a small issue so, I don't mind if it's closed, however in the Debug panel, Welcome screen etc., I was wondering if you could replace the default checkboxes with the new ones.
---
Título: Fade in settings UI gear buttons
Descripcion: https://github.com/Microsoft/vscode/issues/57362#issuecomment-424407799  Experiment with transition options to see what looks good
---
Título: Terminal Find widget doesn't search in split panes
Descripcion: Ref #59267  * Open Terminal Find Widget, search * Split the pane * Search again, it searches in the second pane * Move focus to the left side pane, now searches will happen in the first pane but never the second  Probably we should allow searching in all split panes as there is only one find widget for one panel.
---
Título: Why the flashing when option change in find widget?
Descripcion: Refs: #59265  1. Open find widget 2. Use shortcut to change state, for example alt + r or (cmd + alt + r on mac) 3. Notice the find widget flashing  The find widget does not flash if I change state when I click. I guess the idea is to draw attention that the state changed, however this just looks bad to me and we do not do this sort of ux in other parts of the product. IMHO we should remove the flashing and just not treat this case specialy Also we do not flash in the find widget in the terminal which I think is correct @alexr00   fyi @misolori   ![flashing](https://user-images.githubusercontent.com/1926584/46006583-26aa2380-c0b8-11e8-86f2-f2668422c20b.gif)
---
Título: Installation notification feedback
Descripcion: Testing #59244  ![image](https://user-images.githubusercontent.com/900690/46006002-c8c90c00-c0b6-11e8-9269-868c698c8c66.png)  Maybe better "Installing extension '`<name>`'"
---
Título: Dialog for opening URI looks weird
Descripcion: Testing https://github.com/Microsoft/vscode/issues/59244  ![image](https://user-images.githubusercontent.com/900690/46005748-40e30200-c0b6-11e8-9d39-108801a18a81.png)  Compared to a confirmation dialog when deleting a file:  ![image](https://user-images.githubusercontent.com/900690/46005775-4e988780-c0b6-11e8-87e4-ca3e6d9d7083.png)  I would: - use the same dialog style (question) - change the button to "Open"
---
Título: UX Backlog
Descripcion: # Intro This backlog is a collection of items related to the user experience of the product. Design will use this list as a discussion point for iteration planning as well as discussions with the team during our weekly ux sync. Additionally, we will use our [design principles](https://github.com/Microsoft/vscode/wiki/%5BWIP%5D-Design-Principles) and [design checklist](https://github.com/Microsoft/vscode/wiki/%5BWIP%5D-Design-Checklist) to guide the process for designing and implementing this work.  The backlog is split up into three parts: **Existing users**, **New users**, and **Not yet incorporated**.   # Backlog ## Existing users - [x] Review code at your finger tips: hover, completion items, completion item details https://github.com/Microsoft/vscode/issues/63144    - `css` completions showing MDN info    - fonts, colors, etc. in completion items and completion details, hovers - [x] Update Octicons https://github.com/Microsoft/vscode/issues/65508 - [x] Iconography re-design https://github.com/Microsoft/vscode/issues/8017, https://github.com/Microsoft/vscode/issues/44594 - [x] Explore settings sync UX https://github.com/microsoft/vscode/issues/78869 - [x] :running_man: Explore Extensions Management UX #68527     - Improve the `Show Running Extensions` experience     - Explore the best way to show additional meta information (running, start time)     - Show this information on the extension detail view https://github.com/Microsoft/vscode/issues/64344 - [x] Improve Find All References https://github.com/Microsoft/vscode/issues/22261    - Implications for the monaco editor   - Can this be done in the search viewlet instead?   - Better empty selection state - [x] Overflow and customization for status bar https://github.com/Microsoft/vscode/issues/6651, https://github.com/Microsoft/vscode/issues/35744, https://github.com/Microsoft/vscode/issues/3874 - [x] Make hover/suggest presentation consistent https://github.com/microsoft/vscode/issues/78718 - [ ] Revisit extension recommendation end-to-end experience (on file load, ext. viewlet, etc.) - [x] :runner: Improve Search when position is moved to panel https://github.com/Microsoft/vscode/issues/64418   - The search icon is gone, making it harder to remember to use the keyboard shortcut   - The over layout panel is not a good user of space - [x] Ability to move views into separate viewlets/panels (universal layout)   - Ability to minimize panels - [x] Ability to pin tabs https://github.com/Microsoft/vscode/issues/12622 - [ ] Improve creating a new file/folder when explorer has content and when hidden   - We should show a quickpick that has the path pre-populated  - [ ] Add touch support https://github.com/microsoft/vscode/issues/70764 - [x] Better experience for dynamic views/viewlets   - Find all references   - Hiding an activity bar item & accessing it - [ ] Explore Hiding titlebar on Mac https://github.com/Microsoft/vscode/issues/12377 - [ ] Explore Fluent Design https://github.com/Microsoft/vscode/issues/26572, https://github.com/Microsoft/vscode/issues/17060, https://github.com/Microsoft/vscode/issues/12578, https://github.com/Microsoft/vscode/pull/52707 - [ ] Extension welcome pages and release notes   - Potentially show an area on the welcome page for release notes and recently updates     - Add "Recently updated" as a keyword option in the extension viewlet     - Show diagnostics tab when in this view     - Default tab would go to changelog from this view - [x] Explore ways for the community to contribute to designs in the same way as code is contributed https://github.com/microsoft/vscode-figma-toolkit - [x] Identify design inconsistencies with UI + JSON expriences #84309 - [x] Add guidelines for extension authors https://github.com/microsoft/vscode/issues/104006 ------ ## New users - [ ] First user onboarding experience    - [x] :runner: Welcome page https://github.com/Microsoft/vscode/issues/63152    - [ ] :runner: Stacking of notifications (particularly when on non-English locales)    - [ ] Playground    - [ ] UI overview    - [x] Loading of webpage on first launch    - [ ] Guidance to install extensions - [x] :runner: Website re-design   - roadmap outlining incremental steps to a friendlier, more modern website   - Internationalization   - Reducing visual noise   - Use web-worker - [x] Improve discoverability for regular expression (boolean operators) in search and find widget (Ref: https://github.com/Microsoft/vscode/issues/66206) - [ ] Discoverability: How do we raise awareness of functionality?   - Using web worker to show functionality on website   - Use tool as to learn t - [ ] Update default theme colors with modern color palette (Fluent?) - [ ] Define a color system for color tokens
---
Título: dismiss context menus on window focus lost
Descripcion: fixes #57736
---
Título: Allow list widget icons to inherit foreground color
Descripcion: Fixes #55857. This only addresses the twisties/loading indicator.  ![image](https://user-images.githubusercontent.com/35271042/45720532-78532b00-bb59-11e8-955a-275ca0a29aa4.png)  ![image](https://user-images.githubusercontent.com/35271042/45720526-75583a80-bb59-11e8-9cb2-78e12fc50876.png)  ![image](https://user-images.githubusercontent.com/35271042/45720601-ad5f7d80-bb59-11e8-8928-6858463df178.png)  ![image](https://user-images.githubusercontent.com/35271042/45720523-738e7700-bb59-11e8-9336-38cfdc0d575f.png)
---
Título: Make File Icon Per File Types Optional
Descripcion: I really like them, but I already see part of the people complaining about it and as I don't want vscode to revert the commit that introduced them, can we make them optional during setup?  @bpasero
---
Título: Menus: submenu arrow is huge on Linux
Descripcion: Compared to other menus, the submenu arrow is quite large on Linux.  /cc @misolori
---
Título: Make extension ui similar to the settings ui
Descripcion: The extension preview doesn't seem as well organized as the new settings preview. Here are my suggestions for improving consistency:  ### Hide "Scroll Back to Top" button  Is there any telemetry data on how often this button is used? Neither the markdown nor the settings preview show this button, so displaying here doesn't make much sense. Also, I don't think it's themable so it just sits there looking de<i>press</i>ed.  ![screenshot_20180914_183244](https://user-images.githubusercontent.com/36805289/45578683-0b861b00-b851-11e8-92cd-f41a96521ba2.png)  ### Use same nav style  ![screenshot_20180914_190225](https://user-images.githubusercontent.com/36805289/45578644-bfd37180-b850-11e8-8eaf-df293f714ec6.png)  ![screenshot_20180914_190301](https://user-images.githubusercontent.com/36805289/45578655-d11c7e00-b850-11e8-8ecc-e0bc3db4ac7a.png)  The first image shows how the settings ui styles its nav headers and I personally find it more modern.  ### Make navbar more condensed  ![screenshot_20180914_184019](https://user-images.githubusercontent.com/36805289/45578950-6f5d1380-b852-11e8-980a-dff98d377922.png)  The current navbar is pretty verboose and it covers 1/3 of my screen while I'm reading the details or contributions. Maybe it could benefit from being sticky or even redesigned?
---
Título: First PR: Adding jump to nth autocomplete suggestion via keyboard shortcut
Descripcion: Link to issue: https://github.com/Microsoft/vscode/issues/52549  Hi! This is my first PR and I'd like to get feedback on my general approach before I dig any deeper.   I know that the particular configurations of my key bindings can be improved and I don't know what `case State.Details` represents. Feedback and help appreciated here!   More generally, is the new function `selectNthSuggestion` ok? What about the for loop to go through and add the bindings? How's the id for the key binding?   Please be as honest as possible as it's my first PR and I'd like to learn quickly!
---
Título: Feature Request: Debug view as explorer sub-view or right-pane view.
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Describe the feature you'd like. -->  During debugging session it's nice to have access to the explorer at the same time without switching views. Currently if you want to open another file to put a breakpoint I have to switch to explorer, find file, put breakpoint and again switch view to debug view to see variables, stack trace etc.  So the idea is to put debug view as subview of explorer (like outline view) or create another sidebar where debugger view can be open.  Example of the feature: As debug view in a separate sidebar ![debugview](https://user-images.githubusercontent.com/8107129/45484478-ea440280-b75c-11e8-9667-90a48770395b.png)  As subview ![debugsubview](https://user-images.githubusercontent.com/8107129/45485358-009f8d80-b760-11e8-81e3-176b8bbb25f1.png)
---
Título: Panel: remove the "toggle location" action in the panel header and move it to menu
Descripcion: I would like us to clean up the amount of actions in the panel:  ![image](https://user-images.githubusercontent.com/900690/45470252-5c045800-b72d-11e8-8e0b-d78ac7bcc3ff.png)  The action to move the panel to the right is quite prominent imho. I know we probably added it for discoverability of this feature, but how often is it actually being used from there?  I suggest to check with telemetry and maybe remove it in favour of our command palette and menu. Turns out this command is actually currently not in the "Appearance" menu, where it should probably be added.  /cc @misolori @stevencl
---
Título: Padding and Searchboxes Polishes
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> Issue Type: Polish Continuation of #58445 except to meet the guidelines.  <!-- Describe the feature you'd like. --> In every sidebar view, the margin of searchboxes is off. In the majority of cases, the right side of the input has less space than the left side. Additionally (and most apparent in the Extensions view), bottom margin is also too small compared to the rest of the spacing. The solution would simply be to increase the margin on the right-hand side of searchboxes by about 5px? And on the bottom about the same.
---
Título: Don't show rename UI if you cannot actually rename something in js/ts
Descripcion: 1. In a js file:  ```js class Foo {} ```  1. Trigger a rename on `class`   **Bug** See the rename input box and you can enter text. Only upon pressing enter do you see the `You cannot rename this element` message
---
Título: excess padding on problem items when docked vertically
Descripcion: There is 32px of left-padding on each problem which takes up valuable space when the problems panel is docked vertically.  Would it be possible to remove this padding so more actual content is visible when the problems panel is narrower?
---
Título: Active workspace detection for launch.json
Descripcion: I have a very large web application with 21 multi root folders, one is a server side app, another is for the client side code and the others are libraries that I use. I like to have them all visible like this as it is very easy to switch over to a lib and check something out.   ![biglist4](https://user-images.githubusercontent.com/11023398/44950236-c5b37500-ae96-11e8-8cea-77ce1512d513.JPG)  Initially I had a launch.json file for each folder and each launch.json contained 6-7 configurations for launching chrome, firefox, edge and node and for each of the browsers I had a testing launch and a main app launch. This results in a very large drop down when trying to debug and hard to make sure the right one is selected sometimes. The image below shows what it looks like after I've removed all of the launch.json files from my libs and just kept the client side and server side launch files. Can you see the node launch? Because I then removed all the launch files you also get lots of 'Add Config' menu items.  ![biglist2](https://user-images.githubusercontent.com/11023398/44950231-98ff5d80-ae96-11e8-9da1-fab8bf7213d4.jpg)  Unless I've done something wrong it would be nice to have an option to select the active workspace root, this could either be done manually i.e. a dropdown to select which workspace-root is active and then only the launch configs from that workspace-root would show. You could also allow automatically selecting the active workspace-root by seeing which file currently has focus?   This initially could just apply to the debug launch but could be extended to the search so it would only look in the active and are sure it could be useful in other places like creating a new terminal.  Kind Regards
---
Título: Show other matching extensions button looks mis-aligned
Descripcion: Testing #57306  ![image](https://user-images.githubusercontent.com/10746682/44710329-2b28ef80-aaac-11e8-81f8-319deac3259c.png)  - Not sure if it has to be that prominent. It can be rendered as link next to `No Settings Message` - Now you can have more descriptive label - Show extensions from Marketplace with this setting.   Eg:  ![image](https://user-images.githubusercontent.com/10746682/44710407-63303280-aaac-11e8-96ac-592cc24080db.png)
---
Título: Add a better chevron [feature request]
Descripcion: I think  ![image](https://user-images.githubusercontent.com/40662484/44632642-3cc8a500-a98f-11e8-9700-943e4db522e0.png) is not looking very beautiful and since it's so ubiquitous in vscode, I think it should be promptly replaced with a better looking one.  Example picture with current chevron: ![image](https://user-images.githubusercontent.com/40662484/44632717-99788f80-a990-11e8-8267-8ce06b89d41e.png)  Here's a simple chevron that imho looks better than the current one.  ![image](https://user-images.githubusercontent.com/40662484/44632657-7bf6f600-a98f-11e8-9669-c95b506b1b48.png)   cc @misolori
---
Título: Settings: Allow description to toggle checkbox Fixes: #54053
Descripcion: @roblourens   - Added disposable listener for clicking on description label - Programmatically toggle checkbox - Ignore clicks on link elements  Note:  I realized we have to choose which cursor type we want when over description . You recently made the text selectable with the text cursor also.   So right now the text does not look clickable.
---
Título: Trouble clicking first character in line
Descripcion: Issue Type: <b>Bug</b>  When trying to drag-select from the beginning of a line, clicking when the cursor goes from a pointer to a text cursor and dragging does not select anything. In order to start a selection, the cursor must be at least a few pixels into the first character of the line. This can be quite difficult at times. Sometimes I cannot select the first character at all and have tro make the selection right-to-left. Other times it is doable but difficult. No matter what though, a selection cannot begin to the left of the first character (though most editors allow this). And usually not anywhere within the first few pixels of that character.  VS Code version: Code 1.26.1 (493869ee8e8a846b0855873886fc79d480d342de, 2018-08-16T18:38:57.434Z) OS version: Windows_NT x64 10.0.16299  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz (4 x 2808)| |GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled| |Memory (System)|7.41GB (1.47GB free)| |Process Argv|C:\Program Files\Microsoft VS Code\Code.exe| |Screen Reader|no| |VM|0%|  </details><details><summary>Extensions (22)</summary>  Extension|Author (truncated)|Version ---|---|--- code-gnu-global|aus|0.2.2 unique-lines|bib|1.0.0 vscode-astyle|chi|0.9.0 bracket-pair-colorizer|Coe|1.0.59 toggle-excluded-files|eam|1.6.0 base-converter|hoo|0.0.1 auto-comment-blocks|kev|1.0.1 vscode-smart-column-indenter|lmc|0.0.13 cppcheck|mat|0.2.2 vscode-devskim|MS-|0.2.2 python|ms-|2018.7.1 cpptools|ms-|0.18.1 sublime-keybindings|ms-|4.0.0 highlight-dodgy-characters|nac|1.0.0 preview-control-characters|nes|0.0.1 vscode-systemd|Neu|0.1.0 material-icon-theme|PKi|3.5.3 psi-header|psi|1.5.0 reloaded-cpp|rel|0.1.6 vscode-coverage-gutters|rya|2.1.1 perforce|sle|3.1.0 rewrap|stk|1.9.1  (1 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Provide a way to kill a task or terminal from the main menu
Descripcion: Now that both "Terminal" and "Tasks" are under the same menu (via https://github.com/Microsoft/vscode/issues/56836), @Tyriar suggested to somehow preserve an action in the menu to kill a terminal. Since we already have "Terminate Task..." which in most cases is just a terminal, one idea would be to show a combined picker of tasks and terminals to kill.   ![image](https://user-images.githubusercontent.com/900690/44354511-527b2d80-a4aa-11e8-8de0-c39ef7f3ad28.png)  ![image](https://user-images.githubusercontent.com/900690/44354529-5f981c80-a4aa-11e8-95ff-ed5ce6188c82.png)
---
Título: Merge "Terminal" and "Task" menu
Descripcion: Into one.
---
Título: Make breadcrumbs picker styling consistent with menus
Descripcion: Since the breadcrumb picker is essentially a menu popup, I think it should follow the overall menu styling in VS Code. Currently the situation is rather inconsistent : - it has it's own coloring settings for background in "workbench.colorCustomizations" - this is "breadcrumbPicker.background" - it does not have a selected/hover foreground customization at all - the selection foreground does not currently match the menu selection/hover foreground and it looks sort of a hardcoded color.  To avoid those inconsistencies, I believe the breadcrumbs picker should just follow the menus styling and customizations, including eventual shadows, borders, background, foreground, highlight colors etc.
---
Título: Better empty state for Debug sidebar
Descripcion: We currently provide empty state text for all of our sidebar panels except for Debug. My suggestion is to hide the content and use a similar message:  |Current|Suggestion| |---|---| |<img src="https://user-images.githubusercontent.com/35271042/44109210-4ec14c86-9fb1-11e8-95ff-071eedd94f73.png">| <img src="https://user-images.githubusercontent.com/35271042/44110456-9505980c-9fb4-11e8-970e-aecf1ded4999.png"> |  Here are the empty states for our sidebars:  **Explorer** <img width="50%" src="https://user-images.githubusercontent.com/35271042/44110267-20c8231a-9fb4-11e8-92c1-f5a71df4ca19.png">  **Search** <img width="50%" src="https://user-images.githubusercontent.com/35271042/44108831-5603c4fc-9fb0-11e8-907d-fbac7198cbaa.png">  **Git** <img width="50%" src="https://user-images.githubusercontent.com/35271042/44108886-7f2c01f0-9fb0-11e8-80fc-e5070d205fef.png">
---
Título: Should there be 1 style for keys?
Descripcion: Example of keys in `keybindings GUI`: ![keybindings_gui](https://user-images.githubusercontent.com/9638156/43989457-03810dca-9d53-11e8-9b2f-49f29af4a6eb.png)  Example of keys in `watermark` & `context menu`: ![others](https://user-images.githubusercontent.com/9638156/43989803-93d11dc4-9d59-11e8-926c-54ac00bf44b9.png)
---
Título: Automatically show and hide explorer, search, etc. pane on mouseover
Descripcion: It would be nice if the left pane could be hidden but be revealed on mouseover, and then hide again when the mouse left the left pane. So instead of having the pane always visible or always hidden as it is now, moving your mouse over one of the icons would reveal the corresponding pane (e.g., mouseover the explorer icon would reveal the explorer pane), which would remain visible until your mouse was no longer over the pane. This way, the pane would be immediately visible when desired and would immediately hide when no longer desired, which would be superior to the current method of clicking to toggle.
---
Título: UX suggestions for the quick pick control
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> Issue Type: Feature Request/UI/UX I haven't found any particular issues <!-- Describe the feature you'd like. --> The trusty activity bar. Down at the bottom of the window. VSCode couldn't live without it (probably). It also opens up a few buttons that open up panels, as I'll refer them to.  In this issue, I'd like to outline my suggestions for them, and these will probably apply to similar panels. The panels I'll be talking about are outlined in this paint document: ![panels](https://user-images.githubusercontent.com/30497573/43895419-26b1fba6-9bcd-11e8-9328-738b85d6d78f.png) > I'm also using One Dark Pro theme  - End of Line Sequence: As there is nothing special about this, I can expand more on my idea for how these panels should look:   - First of all, I believe everything should be bigger, in order to keep VSCode's, bigger on top and smaller on the bottom like Sublime, I propose the first box containing the search bar should be bigger and fatter,as it is the main item after all. (or at least the first one)   - Secondly, the padding of items in the list should be increased. This makes it seem more user-friendly and will allow for more stuff to be added (as will be seen later on). I only seem to see line-height modifying it (from file explorer anyways), how about a general padding of let's say 10px? (I always like padding in multiples of 5).   - Thirdly, font-size should increase. I'm not sure of the actual font-size, but it seems to me about around 13px, I can't developer tools it since it'll just close when I try it, so I took it from file explorer instead. Perhaps bumping it a bit to 14px or 16px could do something.   - Fourthly, Just like Atom and Sublime, it looks nice when the max width is the same as the searchbar, but really this is more of an opinion, I don't mind how it looks right now being full-width   - I also do understand that in order to look nice, line height has to increase too, but looking at the padding that would be added, a boost wouldn't really need to be that high   - With regards to a talk about File Explorer and similar menus, could it be possible that these changes reflect it? I'm sure this would break the look of many other menus which have a similar style, such as the Settings GUI and just about everything on the sidebar. The title tags would have to rescale too.  - Next up is the Language Mode Panel!   - Changes included above, but of course the icons would have to be bigger. (Unless the font-size stays the same, and padding isn't too much) and definitely will be a burden to icon theme devs, especially huge ones such as the popular ```vscode-icons``` which I use. If the files uses SVG (like vscode-icons), it wouldn't be that much of a problem since it scales. But if not.. well I'm sorry :) - Now, the Select Action Panel:   - Above changes in no. 1, plus the blue text could be under the main title, maybe similar to the Settings GUI Layout perhaps? I,m sure these blue text are like mini descriptors of that it will do. Perhaps take inspiration from that?    - If it definitely is an individual sub-action, then perhaps consider leaving it where it is, but turn it into a visible  button of some sort - Finally, the File Encoding panel   - All of no. 1 plus, again taking inspiration from Settings GUI, making it more faded in colour. This could be applied to the subscripted/smaller text in the Language Mode panel too  Basically it, I wanted to give my thoughts. I can probably imagine the disagreements too. Have a great day!
---
Título: Settings GUI Polish
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> Issue Type: Polish <!-- Describe the feature you'd like. --> In terms of maybe polishing the GUI a bit: - Make font sizes more consistent:   - Looking at developer tools, I can see titles such as "Commonly Used" at 24px, then subtitles such as "Cursor" at 20px, but the normal text is only 13px, this could probably be at font size 16px.   - This would also let people distinguish between setting name and setting description better, rather than having to rely on the slight change on font-weight and the structure.   - Small text such as "Modified" can remain as is, since it isn't really part of the title, it's just a mini info textbox really.   - Description text could probably remain as is, maybe increase it to 14px since brackets sometimes looks a bit squished - Layout   - First of all, the way settings are separated are by large padding spaces. Whilst personally, I would prefer it how Atom does it (rendering certain settings based on the active tab), I can't really argue with that, so here are my propositions:     - How about just a ```<hr>``` to denote changes in categories, say from Text Editor to Workbench.     - Titles should definitely have underlines     - Instead of constant ```padding-top``` or bottom, just halve the current figure, and split that between top and bottom. It makes it look much nicer, especially when a setting is elected and that box comes about, it looks really off. - Some other stuff   - That box that appears when selecting something in the GUI, perhaps make it themable, and make it respond to whether its a dark or light theme. The box could just be the opposite, so a dark theme would have a light box etc. If unfocused, just make it change again   - Allow showing of the equivalent ```json``` setting. Whilst present in some areas for explanation, you might as well make it show throughout. Be consistent, and can still help people too (though from what I've heard, most people will stick to JSON) - From what I've seen, when the GUI edits the ```settings.json```, it just tacks it onto the end. I've seen this when I edit the file. I use both the GUI and JSON, you can guess for which reason. Anyways, since the GUI organises it, could it not organise the settings.json? I have my one split into different blocks relating to what section it belongs to. - If you click a dropdown (maybe textbox too?) of an uncollapsed setting, it should collapse too in my opinion. It would be helpful to newer people (since that's what I've heard this GUI is for, right?)  Feel free to disagree, add your ideas whatever. These are just suggestions for polish. Thanks!
---
Título: VSCode Animations
Descripcion: <!-- Please search existing issues to avoid creating duplicates. --> Issue Type: Feature Request I have not been able to find any closed or current issue that is relevant/is my issue  <!-- Describe the feature you'd like. --> > VSCode is still my fav Editor, nothing will take me away... :)  When I was comparing Atom to VSCode recently, i found that Atom had an interesting UX which made it feel more smooth and involved with the user, at least personally. For example, they had animated hover icons and a bunch of other stuff. It was small but it was definitely somewhere VSCode could capitalize and improve on, especially considering the amount of icons, buttons/hyperlinks and menus VSCode has. I would like to demonstrate some of these aspects:  - Hover Icons   - For example, the aforementioned close icon appearing in a smooth expanding animation   - Possibly slightly wider tabs to fit this in?   - It could be applied elsewhere in which some icons are just there on volatile (ie, they can disappear and reappear, such as editor tabs)  - Menus! This one is a big advancement should it be implemented. In fact, the new Settings editor actually has some   - Fade-in/out animation like in the Settings GUI for menus in the menubar (at least on custom mode)   - Maybe a slide down/up?   - Is it possible for these tabs (again, at least on custom mode?) to have an animation similar to Microsoft Office, where clicking tabs slides the menus and their content over?   - Sub-menus could also possibly "slide-out" of their root menus. Maybe ones longer than the root menu can slide out and then "un-collapse" to a certain max-height?   - This can also apply to creating new editor tabs, they slide out from the previous one,a nd collapse in when exited - Panels/Sidebar etc.   - Panels from the sidebar could slide in and out, shifting the editor too (which would also be animated right?)     - > I have my own suggestions for these UI, but that's an issue for another time :)   - Panels such as the language selector could fade in from invisibility and translate up slightly      - Native VSCode icons   - Instead of just changing the cursor, how about animating a background transition and making the enlarging that happens a bit less "poppy"? (Won't apply to all native icons tho)   - Some icons also implement an icon colour change, maybe that could be applied more globally?  That's basically it, also a thing I'd like to point out: Animations as such can have a performance impact, since stuff has to be consistently rendered, even if it's small and can have little impact, such as icons, large menus can, so if this were to be implemented, probably have an option to enable animations, maybe even select which ones to be animated for finer tuning.  Feel free to share your ideas if you want to, thanks! > Also, I know that there are subtle and some not so subtle animations in VSCode, these were my ideas to extend them throughout, have a great day!  EDIT: A few extras now! - In Extensions panel, when clicking on an extension and the thing loads up, there will usually be buttons such as "Details", "Contributions", "Changelog" etc, would be cool to see them slide like in Microsoft Office when switching tabs, as mentioned in the main issue - Switching editors does the same thing? > Damn, I'm going way too far now!
---
Título: Move Extensions activity bar icon to the bottom with the gear menu
Descripcion: I think it would be great to separate the extensions view icon from the others at the top of the activity bar and instead have it at the bottom above the gear menu. To me the extensions are part of vscode like the gear menu, while the other icons are about what I'm working on (or helping along those lines).
---
Título: Allow completion details to be selected
Descripcion: Issue Type: <b>Feature Request</b>  Currently when clicking or dragging on the completion details, it'll go away, making it impossible to select text inside it.  VS Code version: Code - Insiders 1.26.0-insider (4fa62b246c4305b4ca00507551f77c58135ce928, 2018-08-03T12:25:19.888Z) OS version: Darwin x64 17.7.0  ![un](https://user-images.githubusercontent.com/4033249/43702978-439568da-9910-11e8-9585-cc71381956d3.png)   <!-- generated by issue reporter -->
---
Título: Submodules with the same folder name are indistinguishable in the source control view
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.25.1 - OS Version: Windows 10.0.17134.165 x64  Steps to Reproduce: 1. Execute: ```sh #!/bin/bash set -xe  git init submod-a cd submod-a echo "Hello, World!" > hello.txt git add hello.txt git commit -m "Initial Commit" cd ..  git init submod-b cd submod-b echo "Hello, World!" > hello.txt git add hello.txt git commit -m "Initial Commit" cd ..  git init main cd main mkdir a b git submodule add ../submod-a a/submod git submodule add ../submod-b b/submod ``` 2. Open in VS Code and look at the Source Control view, you will see two entries named "submod" indistinguishable from one another.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes  Screenshot: ![image](https://user-images.githubusercontent.com/24731903/43688593-54704330-98f4-11e8-896a-077b4f0535ec.png)
---
Título: Hand Cursor should not be used *everywhere*
Descripcion: I have searched around using keywords "hand cursor" but seems no one has raised the same issue.  Proposal --------  I propose that, the "Hand Cursor" should not be used everywhere, e.g. over a button, over a tab, etc.  Instead,   1. the UI elements (e.g. a button) should be more affordable, and 2. a normal "Arrow" cursor should be used.  Reason --------  Because it violates both [Microsoft's Windows Desktop Apps Design Guidelines](https://docs.microsoft.com/en-us/windows/desktop/uxguide/inter-mouse) and [Apple's macOS Human Interface Guidelines](https://developer.apple.com/design/human-interface-guidelines/macos/user-interaction/mouse-and-trackpad/). Though VSCode is built on top of Web stack, it's still a Desktop App I believe.  #### Violation 1: Buttons/Tabs should be affordable  In [Microsoft's Windows Desktop Apps Design Guidelines](https://docs.microsoft.com/en-us/windows/desktop/uxguide/inter-mouse), it states that: > Well-designed user interface (UI) objects are said to have affordance, which are visual and behavioral properties of an object that suggest how it is used.   Apparently, most buttons in VSCode (think of the NewFile/NewFolder buttons in Explorer sidebar, as well as the buttons in Debug sidebar) are not affordable enough. They don't look like a button, and also doesn't have a hover effect.  #### Violation 2: "Arrow Cursor" should be used the most commonly  In [Microsoft's Windows Desktop Apps Design Guidelines](https://docs.microsoft.com/en-us/windows/desktop/uxguide/inter-mouse): > Normal select - Used for most objects. Link select - Used for text and graphics links because of their weak affordance.  In [Apple's macOS Human Interface Guidelines](https://developer.apple.com/design/human-interface-guidelines/macos/user-interaction/mouse-and-trackpad/): >  Arrow - This is the standard pointer that’s used to select and interact with content and interface elements. Pointing hand - The content beneath the pointer is a URL link to a webpage, document, or other item.  In both guidelines, the usage of "Hand" cursor is very limited. Only when we are pointing to a URL/Text Link/Graphics Link, it should be used.  People are trying to be "Native" when using Web stack to build Mobile Apps. We should do the same on Desktop Apps.  Electron Apps that follows these guidance -------- [GitHub Desktop](https://desktop.github.com/). It uses Arrow cursor for buttons, tabs, dropdowns etc. which is coincident with how native apps do.  [Azure Storage Explorer](https://azure.microsoft.com/en-us/features/storage-explorer/). Not fully follows the guidance, but many parts (listbox, tabs, toolbar , etc) do.
---
Título: Meta settings icon
Descripcion: As already mentioned in the UX call I do not like the new settings icon inside settings. I feel like this should be elipses instead and this would align better with other places in vscode where we use elipses and this settings wrench.  fyi @roblourens   ![screen shot 2018-07-25 at 12 33 02](https://user-images.githubusercontent.com/1926584/43195988-e311aa08-9006-11e8-9c2b-3b5a3de9e6e7.png)
---
Título: Problems: light bulb and error should be two icons
Descripcion: Refs: #54861  The current light bulb next to the red error is practicaly invisible. I suggest to increase the size of the light bulb such that it can actualy be seen. I like that the red error is the main thing in this icon, but the light bulb should be more distunigishable, either by size or by some border lines or contrast. An alternative is to render two icons next to one another.  ![screen shot 2018-07-25 at 11 41 47](https://user-images.githubusercontent.com/1926584/43193303-f75f4d3c-8fff-11e8-8a0f-3ab1c72b5be4.png)
---
Título: Submenu arrows too large
Descripcion: Opening the view menu I only see them screaming at me due to their size. Can we somehow decrease their size.  The native mac arrows are slightly smaller. While visual studio on windows uses a much smaller version  ![screen shot 2018-07-20 at 17 33 40](https://user-images.githubusercontent.com/1926584/43011252-2d3ef0e4-8c43-11e8-84a8-46dee445bdec.png)  ![screen shot 2018-07-20 at 17 35 22](https://user-images.githubusercontent.com/1926584/43011295-4b7be792-8c43-11e8-9a7d-7d2ecdb7ad1f.png)
---
Título: Search stop button needs ux love
Descripcion: Start a long running search, notice the ugly stop icon I feel like somebody took the debug stop and stripped it of its color. Notice how it is too bright compared to the other icons. Also it feels a bit too large / too strong  ![screen shot 2018-07-20 at 15 53 14](https://user-images.githubusercontent.com/1926584/43006076-1529fe58-8c35-11e8-9a49-1aa47eea1d07.png)
---
Título: Add ability to access commands without typing
Descripcion: AFAIK the only way to access commands from different extensions is through the use of command palette. This works like a big bag of commands that we filter to the commands we want.   It would be better to be able to access the commands through some other more structured way, instead of having to type them every time or use history. Having to remember the wording for the concepts extension developers made is a pain point. Also, the commands are not discoverable in this way. Currently the team has refused to add a basic toolbar, which I consider a common sense feature. https://github.com/Microsoft/vscode/issues/41309 To achieve this basic functionality people put commands in the status bar, which is a hacky inconvenient way. https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-commands   Irrespective of the toolbar feature, I propose another menu "Commands" where commands from different extensions are automatically added and grouped by extension name. This would aid in discoverability and also users wouldn't have to waste time typing command names.
---
Título: Change `Match Whole Word` button to only contain lowercase letters
Descripcion: Currently, the `Match Whole Word` looks very similar to the `Match Case` button - both contain a small sample of mixed-case letters. This means users (or at least this user!) often has to think about which button does what each time the button is clicked.  It would be clearer if the `Match Whole Word` button only had lowercase (or uppercase) letters because then case sensitivity wouldn't be implied by the fact that multiple cases are present in the image.  ![image](https://user-images.githubusercontent.com/15920350/42710807-71fb587a-869a-11e8-99b3-a27eafee4bbb.png)
---
Título: Make extension details view more responsive
Descripcion: When using grid view (2 columns and the extension viewlet, I was at zoomLevel 2 at the time):  <img width="498" alt="screen shot 2018-07-11 at 7 42 33 am" src="https://user-images.githubusercontent.com/2193314/42579880-180905be-84de-11e8-8c68-95737287b601.png">  The reason I need it is to check the download count/stars to see if this was "the one", also those details are hidden in the viewlet so I couldn't check there:  <img width="396" alt="screen shot 2018-07-11 at 7 43 43 am" src="https://user-images.githubusercontent.com/2193314/42579943-37e85e34-84de-11e8-98df-e5e9f6f02936.png">
---
Título: Setting checkbox label should be clickable
Descripcion: ![screenshot from 2018-07-11 15-43-12](https://user-images.githubusercontent.com/22350/42575637-53179cea-8521-11e8-88bd-feda025fee24.png)  Like this codepen: https://codepen.io/anon/pen/QBwOGj
---
Título: Breadcrumbs need hover feedback
Descripcion: We need to figure out a better hover feedback for the breadcrumbs widget.
---
Título: Settings UI list should be focusless
Descripcion: I find the current settings editor very weird because I can select "rows" within:  ![screenshot from 2018-07-11 13-59-46](https://user-images.githubusercontent.com/22350/42569998-b01c654c-8512-11e8-94e5-5ecef5a50bdb.png)  ![screenshot from 2018-07-11 13-57-35](https://user-images.githubusercontent.com/22350/42569895-618ae886-8512-11e8-9360-9626fbed0a97.png)  It is also an accessibility nightmare, because a blind user will lose time focusing that list and its elements when what he should be focusing are the actual controls, just like a form in a HTML page.  We're currently using the focus to "expand" the description. This adds to the confusion because by selecting a row, the list relays out and other items move down. What we should do instead is present a `Read more` link, which would do that expansion, for each element.
---
Título: SCM: Add option to always show inline actions
Descripcion: Currently I always need to hover with the mouse across all changed files to see their commit status:  ![don t auto hide](https://user-images.githubusercontent.com/9283914/42274964-d940af66-7f8e-11e8-89c0-7c06dcee7644.gif)  Can we please get an option to stop status icons/buttons from auto-hiding?
---
Título: Explore files.exclude control for the new settings editor
Descripcion: `files.exclude` is a common setting, and is part of the "Commonly Used" settings, but we have to send users to the .json editor to use it.  A couple months ago, we explored some options for UI controls for this setting.  The question is still, do we support every possible `files.exclude` scenario, or just the most common ones? There is a gradient from "just exclude certain folders or file types" to "exclude using sibling clauses, arbitrary globs, etc."
---
Título: Render setting descriptions as markdown
Descripcion: In the new settings editor, setting descriptions should be rendered as markdown. We should decide when to use quotes, backticks, and links, then make a pass through all settings to make them consistent.  - Links   - We can allow arbitrary links in description markdown, or add a `documentation` field to the settings schema which would be a URL to some docs. Then we can show a "See also" link in a standard location to settings that have this in the settings editor.   - References to other settings should be links. Clicking the link could search for that setting, and filter the list to just that setting, or scroll to it. (Is that a good experience? How do you go back?) How do we specify a "reference to a setting"? If we scroll to that setting, what happens if the referenced setting is not in the current view (search, scope, "modified only" etc)?  - Enum descriptions   - We currently don't show `enumDescriptions` anywhere. These have useful info but settings are inconsistent. Some settings duplicate this info in their description, some don't. Example of setting with duplicated info: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/config/commonEditorConfig.ts#L678   - We should add the enums and enumDescriptions to the bottom of the setting description, and audit all setting descriptions to remove the duplicated info. It should be displayed like this for the new and old settings editors.   - Some settings have tons of enums and descriptions for all, e.g. `files.encoding`. We can't show all of them because the description will be very long. The enumDescriptions for `files.encoding` are very short, just human-readable names for the encodings. For cases like this, I propose a new setting schema property, `inlineEnumDescriptions`, which will cause us to, in the GUI editor, display the enumDescriptions in the dropdown along with the enum values. Example:  ![image](https://user-images.githubusercontent.com/323878/42546366-f7cdb2a2-8471-11e8-8307-2468d794cca8.png)    - The reason I won't do this for every setting is that some enumDescriptions have lots of text, and reading it in a dropdown is not a good experience. Example:  ![image](https://user-images.githubusercontent.com/323878/42546396-17d54628-8472-11e8-8ea5-1c045211dd2e.png)    - We have to just handle these case-by-case   - Quotes/backticks   - I think that all setting names, enum values, keyboard key names, command names, etc should be surrounded by backticks and rendered as code.
---
Título: Settings editor theming
Descripcion: The settings editor needs some new color tokens to be properly themeable. Currently, I use a couple hacks to ensure that the input controls look ok on the default themes. Here I'm documenting and discussing changes to make the editor look nice.  Besides the settings editor, the controls only show up in the sidebar and the panel, so they are only optimized for those backgrounds. The settings editor uses the editor background color, so we need to add separate color tokens for this scenario.  - TOC tree   - This uses the common list styles that other tree/lists use. This should be safe because the same colors are used on the keybindings editor, on the same editor bg color  ![image](https://user-images.githubusercontent.com/323878/42605546-59a93d32-852d-11e8-982b-9d9a6381c28f.png)  - Settings tree   - Text: I override the list styles to use editorForeground and editorBackground for all states.    - Border: Currently it uses `listActiveSelectionBackground` but for some themes, this is the same as the editor background color. This is for themes like "Monokai Pro" that are trying to disable the highlight bg on selected list items and just highlight the text.    - There is a problem here. I don't use the selected item background as a background because it's too intense for some themes on large expanded settings. And I don't use the selected item text because it's designed to go with the selected item background. So for some themes like "Monokai Pro", it's impossible to tell which setting is selected.   - The easiest way out of this is to add new tokens for the selected setting border. I propose to add:     - `settings.settingItemActiveSelectionBorder`     - `settings.settingItemInactiveSelectionBorder`   - But I'm interested in any other creative suggestions. It's also possible to do something like, compute the distance between two colors (background and selected setting border) to decide whether the border is visible, and if not, fall back on some other color. Not sure we want to get into that.  - "Modified" label   - I've already added `settings.modifiedItemForeground` ![image](https://user-images.githubusercontent.com/323878/42605543-533652c8-852d-11e8-89df-9c60901063c6.png)   - Controls   - Currently I steal the select element bg/border for input boxes and checkboxes, just because it looks better in most themes, probably since they also show up in the panel   - We can either use the same colors for all control types, or provide different tokens for each control type. I think it would be helpful to distinguish controls by color, so I would lean towards different tokens for each type.    - We need these colors:     - Foreground     - Background     - Border     - Placeholder? (If we use input placeholders to show the default value)     - Validation? (We could be showing validation errors at some point but I haven't worked on that yet)   - For these control types     - Text     - Enum     - Number/Integer     - Boolean   - So either 3-5 new colors if all types share colors, or at least 12 if we allow different colors. Another option, they could share all colors except for the background, then I can tweak the background colors to make types look slightly different.   ![image](https://user-images.githubusercontent.com/323878/42542598-679151b8-845c-11e8-9725-df7c95105a76.png)  FYI  @bpasero  @Tyriar   Anyone else interested in theming.
---
Título: not possible to use autocomplete feature with screen-reader when Visual studio code loses focus and gains it again.
Descripcion: <!-- Please search existing issues to avoid creating duplicates. -->  <!-- Also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.25.0 - OS Version: windows 10  Steps to Reproduce:  1. Launch a screen reader in this case NVDA, 2. Open other files or apps, 3. Launch Visual Studio Code, 4. Open the file to edit, 5. Start editing and try to use autocomplete feature, 6. Switch to other window with keyboard shortcut Alt+Tab, 7. Return to Visual Studio Code window, 8. Continue editing and try to use autocomplete feature.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Add options for positioning tool tips
Descripcion: I feel that tool tips in VS Code are hiding important information.  I rather find myself hitting &lt,ESC&gt, than actually reading a tool tip because the tool tip is constantly hiding information from a previous line which I need to refer to in order to complete my current line of code: <br/>  ![vs code tooltip](https://user-images.githubusercontent.com/9283914/42234673-92a58a34-7ef5-11e8-8748-e4f6d22aff0f.png)  <br/> Can you please add options to have tool tips preferably displayed ...  - _below_ the current line - with a custom x and y offset  NB: x and y offset values may be given in CSS "em" units. <br/>  So for example, corresponding configuration settings might look like: ``` {  // Determines tool tip position, relative to current caret. Either "left" or "right" (default).   editor.toolTip.xPosition: "left"    // Determines tool tip position, relative to current caret. Either "above" (default) or "below". ,  editor.toolTip.yPosition: "below"    // Tool tip frame's horizontal margin in regard to current caret position (in CSS "em" unit). , editor.toolTip.xOffset: 2     // Tool tip frame's vertical margin in regard to current caret position (in CSS "em" unit). , editor.toolTip.yOffset: .5   } ```  If an editor's viewport doesn't provide enough space to show the tool tip at the desired position, the corresponding setting should (temporarily) be reversed for that tool tip, so it will fit the viewport again. (E.g. if there is not enough space below the current caret for showing the tooltip if `editor.toolTip.position: "below"`, then the tooltip should be displayed using `editor.toolTip.position: "above"`).
---
Título: Hide settings editor toc when editor is too narrow
Descripcion: Issue Type: <b>Bug</b>  At small widths, the settings editor can looks quite busy/cramped.     ![screen shot 2018-06-26 at 6 21 10 pm](https://user-images.githubusercontent.com/12821956/41947675-cd87c3e8-796d-11e8-853f-07637ee14041.png)   I think we should consider hiding the TOC when the editor is under a certain width  VS Code version: code-oss-dev 1.25.0 (Commit unknown, Date unknown) OS version: Darwin x64 17.5.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz (8 x 2200)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 2| |Memory (System)|16.00GB (1.14GB free)| |Process Argv|/Users/matb/projects/vscode/.build/electron/Code - OSS.app/Contents/MacOS/Electron .| |Screen Reader|no| |VM|17%|  </details><details><summary>Extensions (1)</summary>  Extension|Author (truncated)|Version ---|---|--- cat-coding|ms-|0.0.1   </details> <!-- generated by issue reporter -->
---
Título: Suggestion: append a "Read-only" label in the editor tabs for files that are read only
Descripcion: Issue Type: <b>Bug</b>  Testing #52573  When you have multiple workspaces (including a read-only one), it's hard to tell which files opened are the read-only ones. Wondering if it's worth appending a `Read-only` label so it's easier to see when you're in other tabs.  ![image](https://user-images.githubusercontent.com/35271042/41930177-1e95c5a8-792f-11e8-971e-91efda708a5d.png)   VS Code version: Code - Insiders 1.25.0-insider (923e9ccb3fc44bfaaf4b4049015c84e42bc40f95, 2018-06-26T13:00:22.932Z) OS version: Darwin x64 17.6.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz (8 x 2200)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|2, 2, 2| |Memory (System)|16.00GB (0.38GB free)| |Process Argv|/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron -psn_0_4183037| |Screen Reader|no| |VM|0%|  </details><details><summary>Extensions (4)</summary>  Extension|Author (truncated)|Version ---|---|--- svgo|100|0.8.0 vscode-svgo|ajh|0.1.0 gitlens|eam|8.4.1 python|ms-|2018.6.0  (4 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Menu: revisit spacing between menu items
Descripcion: Refs: #52854  I feel like we could have a bit more space between menu items compared to native menus:  ![image](https://user-images.githubusercontent.com/900690/41906134-601467c4-793d-11e8-97dc-8d1cc245669f.png)
---
Título: Tab titles in settings editor seem too small
Descripcion: Issue Type: <b>Bug</b>  See screen shot. The tab titles in the settings editor seem too small in comparision to the rest of the font sizes used. Also, it seems that the spacing between the text above the tabs and the tabs is too small.   <img width="1074" alt="screen shot 2018-06-25 at 4 03 29 pm" src="https://user-images.githubusercontent.com/4674940/41854771-53661cfe-7891-11e8-953c-ea621035d0b5.png">   VS Code version: Code - Insiders 1.25.0-insider (5d6156a0f8b68fe7e9429facbcfaa7c061a8b3e3, 2018-06-25T09:32:08.937Z) OS version: Darwin x64 16.7.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz (8 x 2500)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|1, 2, 2| |Memory (System)|16.00GB (1.30GB free)| |Process Argv|/Users/kmaetzel/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron -psn_0_17449123| |Screen Reader|no| |VM|0%|  </details> <!-- generated by issue reporter -->
---
Título: Button focus is not clearly visible (blue on blue)
Descripcion: **Environment Details:** VSCode Version : 1.24.0 OS Version : Win10  **Additional Details:** MAS Violated : MAS 2.4.7  **Repro Steps:** 1. Navigate to Status Bar at the bottom and move to notifications. 2. Move to any notification that appears at the screen. 3. Navigate to any button inside the notification.  **Actual:** The focus is not marked using dotted-lines/rectangle to indicate the focus on the buttons. Only color changes to mark the focus on the buttons.  **Expected:** The focus should be visible using dotted-lines/rectangle to indicate the focus on the buttons.   **Recommendations:** Refer below link which is repository of bug fixes code snippets: https://microsoft.sharepoint.com/teams/msenable/mas/Pages/browse-fixes.aspx  **User Impact:** Low vision/visually impaired users should be able to distinguish the focused element.  **MAS Reference:** MAS2.4.7 - https://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={3b98b04f-4fab-4d3e-81af-a0906a34849c}  **Attachment For Reference:** [A11y_VSCode_StatusBar_Keyboard_NotificationButtonsFocusVisibility.pptx](https://github.com/Microsoft/vscode/files/2127505/A11y_VSCode_StatusBar_Keyboard_NotificationButtonsFocusVisibility.pptx)  Does this issue occur when all extensions are disabled?: Yes
---
Título: Settings editor layout issues
Descripcion: Issue Type: <b>Bug</b>  Pls see attached screenshot. There are several issues that make it hard to visually track the various settings. I use for this description the "Files: Auto Save Delay" setting.  - The distance between the value and the reset link is too large (the issue actually is that the input fields don't have borders and so the only visual indication I have is the actuall settings value.  - The distance between the value 500 and the description text is too large (same border issue).  The distance is visually the same as the one to "Editor: Font Size". So, it hard to tell where I should focus on.  Overall, I don't have the visual impression of 7 rows corresponding to the  settings on the page. I have the impression of  some text rows and some number rows.  ![capture](https://user-images.githubusercontent.com/4674940/41666097-85fdc86a-745e-11e8-8d51-2d13f4d76f7f.PNG)   VS Code version: Code - Insiders 1.25.0-insider (e585e4bf008a50e5b1f4fde71cf6d255e25381bf, 2018-06-20T08:08:46.972Z) OS version: Windows_NT x64 10.0.17134  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz (4 x 2808)| |GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled| |Memory (System)|15.93GB (9.01GB free)| |Process Argv|C:\Program Files\Microsoft VS Code Insiders\Code - Insiders.exe| |Screen Reader|no| |VM|0%|  </details><details><summary>Extensions (23)</summary>  Extension|Author (truncated)|Version ---|---|--- markdown-preview-github-styles|bie|0.1.2 solargraph|cas|0.17.4 regex|chr|0.2.0 githistory|don|0.4.1 gitlens|eam|8.4.1 tslint|eg2|1.0.32 vscode-npm-script|eg2|0.3.4 vsc-material-theme|Equ|2.1.0 git-project-manager|fel|1.6.1 mdmath|goe|2.2.1 svgpreview|kis|0.2.0 vscode-azurestorage|ms-|0.3.1 mssql|ms-|1.3.1 python|ms-|2018.5.0 azure-account|ms-|0.4.0 azurecli|ms-|0.4.2 Go|ms-|0.6.83 printcode|nob|2.3.0 vscode-docker|Pet|0.0.27 material-icon-theme|PKi|3.5.0 Ruby|reb|0.18.0 code-settings-sync|Sha|2.9.2 vscode-open-in-github|ziy|1.3.3  (3 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Show some views like diff, settings etc. in dedicated dialog/window
Descripcion: I often work in an horizontal split layout with 2 editor groups. Also I prefer to use the `side by side` diff view instead of the `inline` one.  When opening the `diff` view to revisit my changes before committing them, the diff view is placed into my currently active editor group. In this situation each side of the `diff` effectively only occupies a third of my available horizontal space which makes it very hard to review the changes.  I therefore started to close all files within my second editor group before reviewing my changes which is very inconvenient since I often forget about it in the first place & I have to "restore" my workspace (editor groups) when continuing to code after my pre-commit review...  The same problem applies to some other editors as well like the settings or keybindings editor which are also a split view "in themselves".  Even though I see and in many places appreciate the applied concept of "everything is an editor", I'd sometimes prefer to have a more classical (modal) dialog which can always occupy the full horizontal space regardless of the current "overall layout"...
---
Título: Gear button has a border in search
Descripcion: <img width="266" alt="screen shot 2018-06-18 at 10 03 10" src="https://user-images.githubusercontent.com/15870134/41524781-e10a3dfa-72de-11e8-9848-3ca2b36aa55e.png">  Issue Type: <b>Bug</b>  -  Search in Folder - Click on the gear of "files to exclude" - Focus on editor - Border stays  VS Code version: Code 1.24.1 (24f62626b222e9a8313213fb64b10d741a326288, 2018-06-13T17:41:50.128Z) OS version: Darwin x64 17.6.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-7267U CPU @ 3.10GHz (4 x 3100)| |GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled| |Load (avg)|4, 3, 2| |Memory (System)|16.00GB (0.86GB free)| |Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron| |Screen Reader|no| |VM|0%|  </details><details><summary>Extensions (20)</summary>  Extension|Author (truncated)|Version ---|---|--- gc-excelviewer|Gra|2.0.21 vscode-docker|Pet|0.0.27 gitignore|cod|0.5.0 systemd-unit-file|coo|1.0.0 vscode-eslint|dba|1.4.12 ansible-vault|dho|0.1.3 tslint|eg2|1.0.32 vscode-npm-script|eg2|0.3.4 terraform-autocomplete|erd|0.0.8 flow-for-vscode|flo|0.8.1 terraform|mau|1.1.2 dotenv|mik|1.0.1 python|ms-|2018.5.0 cpptools|ms-|0.17.4 Go|ms-|0.6.83 jenkinsfile-support|sec|0.1.0 vscode-nginx|sha|0.5.0 cmake|twx|0.0.17 vscode-react-native|vsm|0.6.11 jinja|who|0.0.8  (1 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Not clear what the cog wheel notification means
Descripcion: Issue Type: <b>Bug</b>  The cog wheel in the bottom-left of my VS Code screen has a notification icon on it, containing the number 1. It is not clear what this actually means. I'm reporting it as a bug, because it is a user-experience issue.  My *guess* after looking at the list is that it's notifying me about an update. But I shouldn't need to make a guess here. If it is for the update, then perhaps the "Restart to Update..." option should be highlighted in some way, or have a marker next to it, so we know that's what the number 1 refers to?  ![screen shot 2018-06-14 at 12 16 10 pm](https://user-images.githubusercontent.com/943942/41388886-363106a2-6fcd-11e8-94fa-3f3812dc3c16.png)   VS Code version: Code 1.24.0 (6a6e02cef0f2122ee1469765b704faf5d0e0d859, 2018-06-06T17:30:30.113Z) OS version: Darwin x64 17.5.0
---
Título: Accessibility: Not clear how to get to extension details when using a screenreader
Descripcion: **Learnings from NVAccess testing:**  I'm not sure how to get to the "details".  **Steps:**  1. Open   Visual studio code editor. 2. Using   "Ctrl+Shift+X" key navigate to the extension side view bar option. 3. Using Tab key navigate to the "More" option and   select different options( "Show installed Extension, Show outdated   extension, Show popular Extension,Etc") 4. Select an extension and using "Tab" and   "Arrow" keys navigate through the extension details window on the  RHS
---
Título: option to display parameter info tooltip in a separate pannel
Descripcion: Instead of displaying the parameter info tooltip next to cursor, I would like to have an option to display it in a separate panel, maybe a "documentation" panel next to Problems / Output / Debug Console / Terminal.  Some of us disable these tooltips because we find them annoying. However, we find them useful and it would be a good compromise to have them available somewhere.  This idea is from https://github.com/Microsoft/vscode/issues/33752#issuecomment-340151000
---
Título: Recommended badge on disabled extensions should have a different color/opacity
Descripcion: The first 2 extensions are recommended below with the second one disabled. But the recommendation badge appears the same for both.  ![image](https://user-images.githubusercontent.com/16890566/40940228-ff45320e-67fb-11e8-86b9-4b8cc1765c97.png)
---
Título: Hide notifications (info, warning) even when showing buttons
Descripcion: Currently there is no way to have a notification offer actions but also have it go away after a timeout. I would love the ability to specify that the actions provided to the notification api (`showInformationMessage`, etc) should only be shown (and cause the notification to "stick") if the user interacts (i.e. clicks) on the notification itself.  That way the notification would appear & behave the same as a notification without actions, unless the user clicks on the notification, and then it would expand to show the action buttons (in which case it would also turn off the hide timeout). And maybe these type of notifications are shown a bit longer than normal ones to give the user more time to interact if desired  /cc @bpasero
---
Título: Visual noise -- do not show icons on Errors & Warnings status bar when there are no problems
Descripcion: The error / warning icon keeps catching my attention even though there are 0 errors/warnings. I don't know if users would want to hide the problem count entirely if it's zero (that could be an option), but I would prefer if it read "No Problems" without any icon.
---
Título: Allow to hide the settings icon in the sidebar
Descripcion: How to hide wrench on sidebar? I hate this icon. Is there any way to hide it? ![aw6xt](https://user-images.githubusercontent.com/33215968/40857971-034f0100-6607-11e8-9a1d-136c7354cbde.png)
---
Título: Add some margins around the notification toolbar to separate better from message
Descripcion: - run code with `code-insiders --locale=pt-br` dialog shows  ![image](https://user-images.githubusercontent.com/6461412/40836708-02740826-6598-11e8-9a79-09d8fb877b99.png)  To me it looks like the gear image is part of the text. Some margins would be good.
---
Título: Add a link from the original settings editor to the new one
Descripcion: To encourage users in stable to try the new editor.
---
Título: Accessibility issues in Extensions view
Descripcion: I shouldn't have to touch my mouse to install an extension (clicking install).
---
Título: Find in selection toggle is different to use regex toggle
Descripcion: Dark+:  ![image](https://user-images.githubusercontent.com/2193314/40740701-5c37b8b2-63fe-11e8-9fab-c90d6534a5e3.png)
---
Título: Completion details should have syntax highlighting
Descripcion: This is a big annoyance I've just come to accept in Visual Studio and VS Code and I suspect many other developers have too. The pop-up windows that explain function arguments and various other situations are very difficult to parse because they just wrap text wherever and no keywords are highlighted. In other words, the pop-up windows show code in a way that we would never accept in our source files. Here is an example showing what is [expected for javascript array reduce](https://1drv.ms/u/s!AjaZ-t3uLVN_zrsG0S24tGUA-UUIUA). From this pop-up it is extremely difficult to tell how many arguments the function takes and of what kind. I'd really like to see each argument on its own line. If an argument is a function, then show each of the arguments to that function indented on its own line. Maybe have some highlighting too. I'm not sure what the right solution is, but I do know the current behavior makes it really tough to figure out what is going on.
---
Título: Settings: Make form controls consistent in shapes and alignment
Descripcion: #50496  Currently we have the sharp-cornered input boxes and round cornered `<select>`s  Would be better to apply a `border-radius: 5px` to match, or remove all rounded corners.  ![slice](https://user-images.githubusercontent.com/4033249/40674798-b105642c-632a-11e8-934a-876bf605b601.png)  ---  Another issue is the checkboxes look really out of the place. `chrome://flags` made all yes/no into `<select>` so everything look clean & consistent. You can say it's one more click, however by making all controls the same `<select>`, Chrome is able to use the filled select box as an indication for "modified".  ![image](https://user-images.githubusercontent.com/4033249/40674812-be61ed66-632a-11e8-93b6-af92168c069f.png)  An alternative approach, still from Chrome, is to have all form controls right-aligned.  ![image](https://user-images.githubusercontent.com/4033249/40675026-6329196e-632b-11e8-93a3-f188782b2044.png)
---
Título: Settings: continue to invest in UX
Descripcion: Refs: https://github.com/Microsoft/vscode/issues/50496  This is a meta issue about the general UX of the settings editor. I think where we are at currently is a one-to-one transformation of our old settings experience to a new experience that shows UX controls for changing values instead of having to type into the editor. The next logical step for me would be to improve this experience to fix some of the shortcomings we have with the classic settings editor.  **Settings Inheritance** This to me is the biggest source of confusion for new users. Settings can be defined globally, per workspace, per folder and even some can be defined per language in all of these levels. Instead of doing full context switches between these categories, can we maybe just show the various configurations per setting when this applies? I would think that most often only few settings are configured on the other levels. This area seems to be something where we should just explore and throw ideas in to see if they work.  ![image](https://user-images.githubusercontent.com/900690/40653527-c0d29d00-633b-11e8-9e81-7170c4c81976.png)  **Readability** The translation of our JSON schema to a settings description imho does not work well and needs a revisit. There are several issues: * we often use formatting to show the available options that only works well in a monospace font of the editor * the text is quite long in many cases making the visual appearance of some settings quite heavy  ![image](https://user-images.githubusercontent.com/900690/40653563-e310ceaa-633b-11e8-9ad4-0a20eb9523a6.png)  Maybe we should only ever show a single line of the settings description to balance the visual appearance when many settings are showing?  ![image](https://user-images.githubusercontent.com/900690/40653470-907fc6d2-633b-11e8-9e03-d47670015d25.png)  I feel like all our settings need some general authoring to be easier to understand. This is not primarily an issue with the new settings editor, you could argue we had this issue before already. But now the description is much more prominent compared to before imho. We also seem to generate a description out of the setting ID actually:  ![image](https://user-images.githubusercontent.com/900690/40654205-e4c82e8a-633d-11e8-9107-76e7d7aad859.png)  **Table of Contents** I also feel like the tree structure for all settings could be improved. I like the idea of showing a table of contents to the left (master/detail) and then clicking on an entry filters only to these settings. When typing and searching I would simply show all settings but not allow to expand/collapse any.  **Separation** I feel like the header with all the controls should be more clearly separated from the settings, it currently collides with the UX of individual settings imho:  ![image](https://user-images.githubusercontent.com/900690/40653143-89293694-633a-11e8-85af-4ba0ea4b071a.png)  **Balance** I also feel like the settings show up quite unbalanced in cases like this:  ![image](https://user-images.githubusercontent.com/900690/40653314-08ca0540-633b-11e8-8037-55adc72a4dba.png)  **Usability** Some settings like `files.exclude` could really benefit from a UX control to put in the values. I know that work has already started on that, but wanted to add this for completeness.   /cc @stevencl @misolori @joaomoreno
---
Título: Source Control selector interferes with Git provider options
Descripcion: ![image](https://user-images.githubusercontent.com/12298985/40558836-d84d8328-6011-11e8-9c01-8fe85fee2eb1.png)  The ellipsis that appears on the SOURCE CONTROL: GIT line is always visible and appears just above the ellipsis that appears when hovered over on the header immediately below. This is confusing and leads to misclicking when attempting to interact with the git options 'commit, sync, more'. It seems to me that it's much less common for someone to install multiple SCM providers on a regular basis than to work with the git options, so the Source Control ellipsis should be removed from the UI here and placed somewhere less common.   - VSCode Version: 1.23.1 - OS Version: OSX 10.12.6  Steps to Reproduce:  1. Open a project. 2. Go to the Source Control tab. 3. Hover mouse over PROJECT NAME GIT. Notice two ellipsis next to each other, as in the image above. 4. Accidentally click on the wrong one and have to click away before re-accessing the menu.  Does this issue occur when all extensions are disabled?: Yes
---
Título: Add theme key for the "alternating" row color in keybindings editor/settings UI and change default
Descripcion: @roblourens pointed out this color https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/preferences/browser/media/keybindingsEditor.css#L74, this makes the alt row overly grey in mine and other themes. We should add a key for this.  <img width="103" alt="screen shot 2018-05-10 at 4 50 11 pm" src="https://user-images.githubusercontent.com/2193314/39899719-5b38aa02-5472-11e8-8012-125c7d0d1831.png">  Also I think the default should be `rgba(255,255,255,0.2)` for dark themes and `rgba(0,0,0,0.2)` for light themes. This will just lighten or darken the color as opposed to moving it closer towards grey.
---
Título: Decorations: Show decorations in tabs
Descripcion: Hi there  I come from IntelliJ where the status of Git (uncommitted changes, staged, modified, etc) is highlighted in the tab like this:   ![screen shot 2018-05-07 at 9 56 17 am](https://user-images.githubusercontent.com/4315746/39713796-e8edb164-51dc-11e8-9a05-9c0436ae857d.png)  In some ways VS Code does that too by highlighting changes in the File Browser column on the left  ![screen shot 2018-05-07 at 9 54 51 am](https://user-images.githubusercontent.com/4315746/39713740-b96427c0-51dc-11e8-8516-8ca6f04b9677.png)  Which is great! But I would love if I could have these highlighted file names displayed on the Tab as well. Is there a certain CSS or setting I could change to enable this?   I did variations of Google of "VS Code highlight tab git" and the sorts, but nothing really comes up. I would appreciate if you could give me some guidance on this issue.
---
Título: Add setting to control UI tooltip delay
Descripcion: When hovering over UI elements such as icons, and filenames in Explorer, the associated tooltip takes approximately 1 second to display, which can be annoyingly sluggish whilst learning the UI. As the ideal delay is subjective, it would be nice to be able to control this value in user settings.
---
Título: Show disabled feedback when dragging views to other viewlets
Descripcion: It is possible to visually drag an explorer to another viewlet, but when you drop it, nothing happens.  open the debug viewlet click, hold, and drag the `watch` explorer sash to the search viewlet icon on the activity bar and hold it there for a couple of seconds the search viewlet will appear drop the explorer on the search viewlet  result: nothing happens expected: the explorer should be in the search viewlet  This is a little more interesting when dragging/dropping custom explorers. for example, dragging the docker explorer to another viewlet.
---
Título: Language Pack Icon
Descripcion: Can we get an icon for language packs?  ![image](https://user-images.githubusercontent.com/1487073/39136157-6fa41810-46cf-11e8-8e78-43f99d06ee39.png)
---
Título: On-hover button-icons for Source Control "changes" can be easily mis-clicked
Descripcion: Issue Type: <b>Bug</b>  The buttons that appear on the changes list (Source Control panel), are shifted to the right by other decorations, this makes it very easy to miss-click on Stage or Discard buttons.  ![image](https://user-images.githubusercontent.com/142650/39063031-806d79bc-44c1-11e8-8b0a-9b005537f3a5.png)   VS Code version: Code - Insiders 1.23.0-insider (1fdf60b882f0edc6753fc964b253783eb46d56ef, 2018-04-19T13:37:07.476Z) OS version: Windows_NT x64 10.0.16299  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-4200U CPU @ 1.60GHz (4 x 2295)| |GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled| |Memory (System)|3.91GB (0.86GB free)| |Process Argv|C:\Program Files\Microsoft VS Code Insiders\Code - Insiders.exe| |Screen Reader|no| |VM|50%|  </details><details><summary>Extensions (11)</summary>  Extension|Author (truncated)|Version ---|---|--- spellright|ban|2.2.16 vscode-icontheme-nomo-dark|be5|1.3.5 unique-lines|bib|1.0.0 gitignore|cod|0.5.0 vscode-markdownlint|Dav|0.14.1 EditorConfig|Edi|0.12.1 vscode-apache|mrm|1.1.1 material-icon-theme|PKi|3.3.0 gitconfig|sid|1.0.1 ignore-gitignore|stu|1.0.1 ayu|tea|0.14.0  (4 theme extensions excluded)  </details> <!-- generated by issue reporter -->
---
Título: Option to add logo / icon to activity bar based on workspace
Descripcion: I have multiple projects that I shuffle between, so I have noticed that adding different colors to activity bar (the vertical column with files, search, extensions etc. views) is good way to identify the right window of VS code windows. I would like to have a little more customisation though. Since most my projects are angular / web projects they all have favicons. I was thinking that adding that favicon as logo on top of the activity bar would tell me instantly what project I'm working with. Making this more universal it could be just option to add path to any image you like.  This is maybe more an extension idea than thing to add default editor.  Shorter: 1. add option to specify icon to represent workspace / project 2. add that icon above other icons in activity bar. or replaces files icon with it.
---
Título: Checkboxes in Search Panel instead dissmis "x" buttons
Descripcion: I propose add checkboxes in Search Panel instead dissmis "x" buttons.  When you click "x" there is no return, just a slight mistake. Checkboxes would give much more control.  Alternatively, you can give both: "checkboxes" and "x" buttons.
---
Título: Underscores not showing up in completions or rename in Linux mint
Descripcion: Issue Type: <b>Bug</b>  Open an empty TypeScript file and type: ```ts const a_b_c_d_e_f_g = 0, a_b_c_d ``` and see completions.  ![underscores](https://user-images.githubusercontent.com/19274678/38056275-ee852a82-3290-11e8-981e-0b8cd605fa0d.jpg)  VS Code version: Code - Insiders 1.22.0-insider (95b0cffe72a9d32e6ef3780dcc050a336e7b2968, 2018-03-28T15:42:46.044Z) OS version: Linux x64 4.13.0-37-generic  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (8 x 2600)| |Load (avg)|2, 1, 1| |Memory (System)|7.63GB (0.38GB free)| |Process Argv|/usr/share/code-insiders/code-insiders .| |Screen Reader|no| |VM|0%|  </details>Extensions: none <!-- generated by issue reporter -->
---
Título: Selected terminal output not visible
Descripcion: Testing #46594.  1) Ensure there is a couple of commands that have been out of the view port 2) Move to the top command using <kbd>Cmd+ArrowUp</kbd> 3) Select the output of this command using <kbd>Cmd+Shift+ArrowDown</kbd> -> Terminal scroll so that the top of the next command is the top of the viewport. What I just selected is not visible.
---
Título: Allow hiding the buttons in the tab bar line and in the panel title bar
Descripcion: A small change related to the buttons in the tab bar line:  * Open Changes * Split Editor * Close  and to the buttons in the panel title bar:  * New Terminal * Split Terminal * Kill Terminal * Maximize Panel Size * Move to Bottom * Close Panel  For users who have already memorized the keyboard shortcuts for these commands (and considering the existence of Ctrl-p and Ctrl-Shift-p), the buttons are kind of redundant. It would be nice to have an option to hide them as almost everything in the UI already can be hidden. I know about Zen mode, but Zen mode also centers the text in the editor, hides the panel/terminals, makes Visual Studio Code full screen and all sort of other things which might not be desirable.  As a note related to this, Vim and Emacs users generally tend to hide the UI. Funnily enough, even the beast that is IntelliJ IDEA allows it 😆
---
Título: On Dark Themes, "editor.matchBrackets": true, causes distracting 'outlined box' highlighting.
Descripcion: Issue Type: <b>Bug</b>  On Dark Themes (my prefered coding environment. and i've tried a few), 	"editor.matchBrackets": true causes distracting 'outlined box' highlighting.   I found someone else with the same issue on Stack Overflow (https://stackoverflow.com/questions/31576860/how-do-i-turn-off-brace-highlighing-in-visual-studio) but this solve doesn't work on my Mac because there are no menu items for 'Tools' or 'Environment' or 'Brace Matching'.   I would like to keep the match Brackets highlighting without each '<' and '>' having an bordered outline.  VS Code version: Code 1.21.1 (79b44aa704ce542d8ca4a3cc44cfca566e7720f1, 2018-03-14T14:39:09.335Z) OS version: Darwin x64 16.7.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-4650U CPU @ 1.70GHz (4 x 1700)| |Load (avg)|2, 2, 2| |Memory (System)|8.00GB (0.02GB free)| |Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron -psn_0_663714| |Screen Reader|no| |VM|0%|  </details><details><summary>Extensions (6)</summary>  Extension|Author (truncated)|Version ---|---|--- ng-template|Ang|0.1.9 EditorConfig|Edi|0.12.1 vscode-simple-icons|Lau|1.8.2 vscode-eslint|dba|1.4.7 sublime-babel-vscode|jos|0.2.9 sublime-keybindings|ms-|3.0.3  (4 theme extensions excluded)  </details> Reproduces without extensions <!-- generated by issue reporter -->
---
Título: Notification expand/collapse arrow should be reversed
Descripcion: When the new notifications are too long, there is an arrow button to extend it. This arrow is upside down: When the notifications are anchored to the bottom of the window, I expect an arrow pointing **up** on the first image (the button will expand the notification) and pointing **down** on the second image.  ![image](https://user-images.githubusercontent.com/2979478/37457472-0322cf0a-283a-11e8-94d9-c95a0f1562e9.png) ![image](https://user-images.githubusercontent.com/2979478/37457519-2299490e-283a-11e8-9666-c4510199fbbf.png)  The current way would be correct if notifications were anchored to the top of the window.
---
Título: Limit splitting terminals to a max value
Descripcion: With latest release (1.21) you can split terminal infinitely. This breaks badly the terminal area.  Probably the IDE should limit this to a defined maximum or something?
---
Título: SelectBox: height of 20px crops text (Windows)
Descripcion: Now: ![image](https://user-images.githubusercontent.com/900690/37299022-6850e228-2622-11e8-87ed-a239225bc3eb.png)  Ideal: ![image](https://user-images.githubusercontent.com/900690/37299032-6fdba29e-2622-11e8-8d4c-169596ac79ac.png)  I am not sure why, but I think this came in via https://github.com/Microsoft/vscode/commit/82b87c760d8cc79bdd93d4e7259310124882fe4d
---
Título: Remove `editor.findMatchHighlightBorder` border from search panel
Descripcion: - VSCode Version: 1.21 - OS Version: macOS  <img width="1024" alt="image" src="https://user-images.githubusercontent.com/10441177/37244801-c3314a12-2496-11e8-836d-2de212a9a058.png">  My suggestion is to remove border from search panel (left) and keep it only in editor (right) because it's really hard to read text when it gets bordered in search panel. But this feature is very good when you get bordered text in editor.  `editor.findMatchHighlightBorder`
---
Título: Debug icon polish
Descripcion: After merging in the new icons here is still things left to be done: - [x] Breakpoint hint decoration takes priority over regular breakpoint decoration. If a user hover over breakpoint it should show that decoration, not the transaparent one. For this we would need the breakpoint-hint icon back, since otherwise it is hard for me to prioritize css rules usch that this one is not respected - [x] Start icon in select box looks too big - compare it to debug toolbar - [x] Breakpoints have increased in size, let's decrease their size a bit - [x] Restart icon looks too large  ![screen shot 2018-03-09 at 14 11 52](https://user-images.githubusercontent.com/1926584/37209012-d4c65f5e-23a3-11e8-978c-78d24e6a5e82.png)   fyi @chryw
---
Título: Distinguish 0 msgs versus 0 new msgs in status bar
Descripcion: Version 1.21.0-insider Commit b76a4a71434d6cdee69fa1d8bdc7533d09598d53 Date 2018-03-02T13:48:32.486Z   The status bar notification icon is white and empty with no numbers beside it if there are no new messages. The icon will look identical in the case that the user has read but not deleted messages.  I think there should be some indication that messages exist but are not new.    Possible solutions: - grayed out icon - Typical but bad idea due to themes potential conflicts/clarity - icon with a couple of horizontal lines indicating messages, no lines when empty - may be tricky to be clear - icon with X if no messages - may or may not look good - icon disappears when there are no notifications new or old - best in my opinion
---
Título: Unable to clear the contents of the query
Descripcion: ### Issue Type Bug  ### Description  - Ctrl+F, search 'error' - Delete error, quit the search - Highlight all 'e' in the current file - Press 'Esc', the cursor jumps to the position of the first 'e' ![search](https://user-images.githubusercontent.com/24318019/37097998-bcdd8a22-2257-11e8-9813-72dce2293438.gif)   ### VS Code Info  VS Code version: Code 1.20.1 (f88bbf9137d24d36d968ea6b2911786bfe103002, 2018-02-13T15:34:36.336Z) OS version: Windows_NT x64 6.3.9600  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i5-4210H CPU @ 2.90GHz (4 x 2893)| |Memory (System)|7.89GB (1.33GB free)| |Process Argv|C:\Program Files\Microsoft VS Code\Code.exe .| |Screen Reader|no| |VM|0%|  </details>Extensions: none Reproduces without extensions
---
Título: Feature request: popup a menu list to chose cmd/powershell/bash when click "new terminal"
Descripcion: <!-- Do you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version:1.20.1 - OS Version:10.0.16299.248  Steps to Reproduce:  1. open terminal 2. click New terminal ![image](https://user-images.githubusercontent.com/10177690/37077303-5775b958-2215-11e8-837f-6c77c18d55f9.png) Here, I hope a menu list popup, then I can chose which terminal to open: **cmd, powershell or bash**. <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes/No Yes
---
Título: Feature Request - Match case popup window must be more visible
Descripcion: <!-- Do you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.21.0-ins - OS Version: win7x64  How about to make this "Match Case" popup window more visible? I don't have problems with my vision, but this super tiny popup window is a sorry sight.  ![match case popup](https://user-images.githubusercontent.com/24613274/36971977-2b3bbe96-2076-11e8-96d4-ab95382aaefa.gif)  And it's not only the size problem. You almost wouldn't say - which button is active and which is not.  **Active action on all three buttons is absolutely unnoticeable.**  Take a look at text color of button, when you click on it (enabling) and click again (disabling) - text color will still be brightened, like it's active, but it's already disabled.  So, there is a work for total redesign.
---
Título: Git: weird overflow behaviour in repositories view
Descripcion: See video:  ![before](https://user-images.githubusercontent.com/900690/36903510-38a0f2b2-1e2e-11e8-84c6-af2cf3ec3ed7.gif)  I think I would expect everything no the right hand side to take space away from the left hand side without ever shrinking.
---
Título: Terminal: Add button acts on terminal group but Delete button acts on each terminal
Descripcion: Testing #44446  - The plus action on the panel adds new terminal group - Alt+Plus button on the panel splits the terminal i.e adds to current group - Delete button deletes current terminal in the current group  The context on these 2 buttons should be consistent Either both act on the group and the alt acts on individual terminals or the other way around
---
Título: Icons in notifications are used differently to the panel
Descripcion: VS Code version: Code - Insiders 1.21.0-insider (1a84a882737184488d965426747a05474f54a759, 2018-02-27T06:17:53.785Z) OS version: Linux x64 4.13.0-36-generic  ---  #44319  ![image](https://user-images.githubusercontent.com/2193314/36735883-17a7a8b6-1b8c-11e8-8af1-e0ba06ec0fea.png)  - `x` icon   - In the panel it means close/minimize (non-destructive)   - In the notification center it means delete (destructive) - bin icon   - In the panel it means kill/delete (destructive) - `v` icon   - In the panel it means restore (non-destructive)   - In the notification center header it means close/minimize (non-destructive)   - In individual notifications it means expand (destructive) - this is the *opposite* of how it's used in the panel - `^` icon   - In the panel it means maximize   - In individual notification it means minimize
---
Título: Pin/Autohide option in panes
Descripcion: I'll appreciate it if you add a option to pin/autohide panes. e.g. By debugging I use the debug console en de code pane. so if i'm searching in the code, i want to autohide the debug console and vice versa. In summary: the same autohide functionality in visual Studio but then implemented in Visual Studio Code.
---
Título: Unimportant notifications should not need to draw attention from status bar
Descripcion: _Feedback to Improved notification UX #22388_  If I ignore non-important notifications and they go away after some time, I'd prefer if they didn't draw my attention from the status bar. For example, I invoke Check for Updates and get this notification:  ![image](https://user-images.githubusercontent.com/101152/36527292-a0d75d5e-17b1-11e8-9d02-2cb34b6297b0.png)  Ok, nothing new, I continue working and the toast goes away after a while. However, I still see the notification notification (sic!) in the status bar:  ![image](https://user-images.githubusercontent.com/101152/36527524-5eb8662e-17b2-11e8-9f6a-e7206a15568e.png)  To get rid of this, I need to click the icon and manually dismiss the info message. Maybe these unimportant notifications could go away entirely, or be in the notification center but without the alert in the status bar?  ## Version info  Version 1.21.0-insider Commit efa33330fb0ab23b022bdff125311bdb21494b71 Date 2018-02-21T09:22:14.399Z Shell 1.7.9 Renderer 58.0.3029.110 Node 7.9.0 Architecture x64
---
Título: Customizable Tooltip Position
Descripcion: Feature Request!  Perhaps this isn't the best idea - but maybe it would help find a better one.  Tooltips and intellisense tend to get in the way, and take up a lot of real estate. While they are features no one should want to remove, it would be nice to have an option to set the tooltips and intellisense to appear in a different location. Perhaps the top right corner (or somewhere so it isn't always over your code). A less appealing option would be to allow tooltips to become transparent after a few seconds.  Thanks!
---
Título: On macOS the behavior for Cmd+E is incorrect
Descripcion: ### Issue Type Bug  ### Description  On most macOS applications (for example TextEdit or Xcode), Cmd+E sets the find clipboard to what is selected *without changing the focus* (in fact it doesn't even make the search bar appear). VS Code makes the search bar appear and set the focus to it.  Having the search bar appearing is minor, but if you are used to the standard behavior, not having the editor keep the focus on the editor is pretty disturbing.  ### VS Code Info  VS Code version: Code 1.20.1 (f88bbf9137d24d36d968ea6b2911786bfe103002, 2018-02-13T15:23:28.607Z) OS version: Darwin x64 17.4.0  <details> <summary>System Info</summary>  |Item|Value| |---|---| |CPUs|Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz (8 x 2300)| |Load (avg)|3, 2, 2| |Memory (System)|16.00GB (0.81GB free)| |Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron ./te| |Screen Reader|no| |VM|0%|  </details><details><summary>Extensions (3)</summary>  Extension|Author (truncated)|Version ---|---|--- cpptools|ms-|0.15.0 Ruby|reb|0.16.0 rust|rus|0.3.2   </details> Reproduces without extensions
---
Título: Change color to problem/warning count labels
Descripcion: This is a small request, but it would be useful to see these labels with a different color (maybe red?) when the problem or warning counts are greater than zero:  [![image.png](https://s17.postimg.org/x3e53lmv3/image.png)](https://postimg.org/image/i7flw0bgb/)  this way the eye will catch more rapidly when there's an error/warning (people like me, with a small monitor, hate to have the problems tab opened)
---
Título: Add default icons for explorer panels with option to customize icon for enhanced UX
Descripcion: That's feature request.  TL,DR  The icon in explorer panel, especially where there is a lot of explorer panels, can help to navigate and locate important stuff. Add default icon and allow to customize it.  Can we have an option to customize explorer section headers? Or at least let the workspace/editor explorer comes with some visual hint. Now when extensions can add sections to explorer, there is a visual clutter there, the most importatn (file explorer) not always comes expanded and focused.  Here is my current setup. I just cannot see where is the workspace (that's vscode-editorconfig btw):  ![image](https://user-images.githubusercontent.com/14539/36397531-814fa8d2-15c3-11e8-868a-18d188cfb454.png)  Compare that to Rider:  ![image](https://user-images.githubusercontent.com/14539/36397598-b6557016-15c3-11e8-8478-a62f916d31dd.png)   or Xcode:  ![image](https://user-images.githubusercontent.com/14539/36397618-c8e05638-15c3-11e8-99bb-71cfd66a8939.png)   I'm always able to see what the explorer section is showing in Rider/Xcode. VSCode could ship with default icons for explorer and allow users to use extension icon in extension explorer section.  For example: I know that my blue book icon is for my opened workspace - constantly:  ![image](https://user-images.githubusercontent.com/14539/36397868-a646bb20-15c4-11e8-9300-807bad1792df.png)  It could be the other icon, that's not the point here.  Thanks for the editor!
---
Título: Workspace ... scrollbar area is totally invisible
Descripcion: <!-- Do you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.21.0-ins - OS Version: win7x64  How about to make scrollbar area a little bit visible? Cause you don't even see where to click, when you want to scroll some hundreds of folders instantly.  For now it's totally invisible:  ![scrollbar area is invisible](https://user-images.githubusercontent.com/24613274/36354190-0e5a1078-14d9-11e8-8e5a-5b55d328fdc2.gif)
---
Título: Expose git diff functions outside of overflow menu
Descripcion: ![screen shot 2018-02-16 at 2 00 08 pm](https://user-images.githubusercontent.com/156888/36331197-b6a5c006-1321-11e8-9c89-7cc24560c82f.png)  These commands like revert selected ranges etc are pretty commonly useful commands. Would make sense to extract them into buttons to the left of the overflow menu.  Consider git tools like SourceTree  ![screen shot 2018-02-16 at 2 01 23 pm](https://user-images.githubusercontent.com/156888/36331252-ed167630-1321-11e8-8b62-7449e69d3d20.png)
---
Título: Replace dialog is not intuitive
Descripcion: <!-- Do you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issue to prefill these. --> - VSCode Version: 1.20.1 - OS Version: Any  Steps to Reproduce:  1. Activate the Replace dialog 2. Replace in selection, replace and replace all icons are small and not intuitive, requiring hover overs to read the meaning of the said icons.  Suggestion: Have buttons with text instead of icon-only, eg. having "Replace" and "Replace All"  buttons instead of the current icon. Would be great to have a checkbox with associated "In selection" text instead of the icon as well.  <!-- Launch with `code --disable-extensions` to check. --> Does this issue occur when all extensions are disabled?: Yes
---
Título: Clicking under area under suggest docs results in cursor disappearing
Descripcion: Clicking in the area outlined below results in cursor disappearing Hovering in this area has the wrong cursor  ![image](https://user-images.githubusercontent.com/16890566/35948248-8b4d609c-0c20-11e8-82f2-cf214c5dac30.png)
---
Título: Improve dnd drop feedback in open editors
Descripcion: Testing #41688  When dragging a file from a group to another, the entire drop group should be highlighted, not just the element under the mouse cursor. Similar to how in an explorer you can drag a file onto an expanded folder, the entire subfolder structure is highlighted.
---
Título: Image zoom: Wording feedback
Descripcion: Testing: https://github.com/Microsoft/vscode/issues/42130  I find the "Whole Image" a bit weird, and liked the "Fit Image" better that we had before. Any reasons for the change?
---
Título: Visualize breakpoint types in breakpoints viewlet
Descripcion: This is a part of a series of requests to enable "custom breakpoints" support in VS Code. See Microsoft/vscode#38568  **Scenario:** Today I can set breakpoint and conditional breakpoints, but as we expand beyond those the importance of being able to disintquish between them grows too.  We have different gutter icons for the breakpoint types, but in the breakpoint viewlet we don't show the icon, as illustrated in:  <img width="1552" alt="screen shot 2018-01-27 at 6 09 35 pm" src="https://user-images.githubusercontent.com/173559/35478959-99f5c46a-039f-11e8-9e91-050e4395002c.png">  **Proposal:**  1. Show breakpoint gutter icon in viewlet list  @stevencl We should probably spend some UX time to discuss how we best can solve this.
---
Título: Debug: replace notification about "errors in workspace" with a modal dialog
Descripcion: I find this flow very weird: * I F5 to start debug * I have errors in my workspace * a non-modal message pops up asking me if I want to debug anyway  Imho it would be tolerable to show a modal confirmation dialog in this case that asks me to proceed. Clicking on proceed would continue to debug.  /cc @weinand
---
Título: Badge loading color doesn't use badge foreground
Descripcion: 1.20 60440c72461e96893766bce73d7bdf1f5136a19f 2018-01-23T07:19:15.823Z  ![dark_text_for_badge](https://user-images.githubusercontent.com/9638156/35290197-83ee93c2-007a-11e8-926d-f7b864374b96.png) ![white_text_when_loading](https://user-images.githubusercontent.com/9638156/35290202-88f1fcba-007a-11e8-9e78-395578e16e48.png)
---
Título: Blur the not-settings-contents in workspace configuration file only when opened in settings editor
Descripcion: Blur the not-settings-contents in workspace configuration file only when opened in settings editor.  @isidorn FYI
---
Título: SCM: blue border around entire view when clicking on viewlet
Descripcion: Seeing this today running out of sources:  ![before](https://user-images.githubusercontent.com/900690/34600481-0615ec92-f1f8-11e7-8d82-fa6400cb6230.gif)
---
Título: Search: sometimes the search text changes at random
Descripcion: I am recently seeing an issue where my search text randomly changes to something else. Steps I did (not reproducible): * copy something in the editor * paste into search viewlet * toggle one search option (match case) * toggle another search option (match words)  => when I clicked on "match words", my initial search word ("prepareActions") changed to "prepare"  /cc @rebornix if this could be related to the macOS search buffer clipboard support that we added in 1.19
---
Título: Ignore trim whitespace icon really out of place
Descripcion: The trim whitespace icon is really out of place because: * Larger than surrounding icons * Lines are bolder than surrounding icons * Not very clear what it means * When it is disabled it looks like the equality sign  I am also not convinced if an icon is needed for this since it is very hard to describe visually what this action is supposed to do. Why not put it under the elipses where you can have text so it is much clearer?  fyi @chryw @joaomoreno for ux feedback  ![screen shot 2018-01-04 at 12 17 41](https://user-images.githubusercontent.com/1926584/34561227-49ce3c0a-f149-11e7-82f4-792035dbc5df.png)
---
Título: Do not close panel when last terminal instance is killed
Descripcion: This has been requested a few times, consider the following:  1. Open terminal panel 2. Kill terminal, the panel is closed  No other panels work like this but it has been like this since the beginning as the terminal panel cannot current exist without an active terminal instance. Not sure if this should be a setting or the default as it's a change in behavior.
---
Título: Running Extensions: Alternate rows eat up the border
Descripcion: - VSCode Version: Latest Insiders - OS Version: Any  Steps to Reproduce:  1. Run the "Running Extensions", click anywhere inside the editor 2. A Focus border appears on the editor with the alternate rows eating it up  <img width="871" alt="screen shot 2017-12-07 at 9 01 31 am" src="https://user-images.githubusercontent.com/16890566/33727614-673a625a-db2d-11e7-8745-87aa418b4159.png">
---
Título: Missing padding in Running Extensions editor
Descripcion: While testing #39568.  Note how the `Report Issue` button is all the way to the right.  <img width="262" alt="screen shot 2017-12-05 at 11 28 37 am" src="https://user-images.githubusercontent.com/4674940/33627297-effdc97e-d9b1-11e7-8d27-9f9575aee39c.png">
---
Título: Improve UI that prevents user from starting debug session multiple times
Descripcion: While verifying #37507:  Trying to launch the same session twice through the statusbar results in a Quickpick drop down where I can still select the same launch config but nothing happens.  Trying to do the same with the debug drop down gives no feedback either (but at least there is no selection feedback).  I suggest to show an alert in both cases.  In the future we could even consider to have an option to allow multiple sessions for the same config.
---
Título: Layout issues in Running Extensions view
Descripcion: Testing #39568   - Notice the flex glitches - Notice how the three textual labels are all vertically misaligned  - The only UX indication that the three textual labels are actually related to one another becomes evident only when the user hovers a row with the mouse  <img width="647" alt="image" src="https://user-images.githubusercontent.com/22350/33598350-b5010282-d9a2-11e7-82df-acd5e0a38431.png">
---
Título: Fix running extensions view in High Contrast theme
Descripcion: Testing #39568  <img width="1057" alt="image" src="https://user-images.githubusercontent.com/22350/33598269-636c4c2e-d9a2-11e7-8539-7dc1d9df19b0.png">  The report issue button is especially problematic. It is also a brand new UX button... why not re-purposing the extension actions button?  <img width="160" alt="image" src="https://user-images.githubusercontent.com/22350/33598325-a02befde-d9a2-11e7-8bc7-11357a242c23.png">
---
Título: Search term should not be retained when closing and reopening Settings/keybindings editor
Descripcion: Steps to reproduce  Keyboard Shortcuts - Second Situation:  - Open Keyboard Shortcuts / Settings editor and provide a filter - Close the editor and reopen it  Expected: Filter is not retained Observed: Filter is retained
---
Título: Consider showing completion item detail if available for all list items
Descripcion: Take the following completion list.  ![screenshot from 2017-12-02 09-22-52](https://user-images.githubusercontent.com/5885195/33506169-c31c764c-d742-11e7-8a8d-4def058470f7.png)  Each `Client` item belongs to a different namespace. If the completion item detail was shown immediately for each item then users could, at a glance, easily identify the relevant item out of a list of similarly labeled items. I suppose the argument against is that this can be done by modifying the label to include this, but then what is the role of the detail property?
---
Título: Show line number on search
Descripcion: Hi, I would like to request the feature of showing the archive line number next to the code found when I search some piece of code. I think it could be added as a setting such as `"search.lineNumbers: "on"||"off"` just like `"editor.lineNumbers"` setting. Do you guys think that is possible?  Just an example below: ![image](https://user-images.githubusercontent.com/18277197/33296176-0665e364-d3c1-11e7-80da-c43d4340e725.png)
---
Título: Add controls in tab stripe to access tabs that are out of view
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issues to prefill these. --> - VSCode Version: 1.17 - OS Version: win7, 64 bit  Here are my tabs with a reasonably sized window. ![good](https://user-images.githubusercontent.com/13305268/33188747-169e9082-d051-11e7-9480-6244fec7a848.PNG)  And here is half sized window.  ![bad](https://user-images.githubusercontent.com/13305268/33188748-186e61b2-d051-11e7-8763-831cc124393c.PNG)  There needs to be some notepad++-like functionaly where there is an over arrow to access these inaccessable tabs. If this already exists I would be happy to delete this post, but I have yet to find any solution.   <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes
---
Título: Feature Request: Add an API event to indicate when the sidebar viewlet changes
Descripcion: This would be useful to decide when to display other views and also so my own extension can keep track of which view is currently open 8-)
---
Título: Left-click on statusBar debugButton to launch selected debug and Right-click to select debug config
Descripcion: First, thanks for the status bar update ! really helpful to avoid switching tabs every minute !! :+1:   Current Behaviour :  Left-click => show command palette with debug pre-typed Right-click => does nothing  Desired Behaviour :  Left-click => start debugging with selected debug configuration Right-click => show command palette with debug pre-typed || even better, show a little selectbox with all the configs to select the one we want to use
---
Título: SCM: opening view for the first time shows weird focus in repository list
Descripcion: Steps to Reproduce:  1. reload window 2. open SCM view for the first time  => the repositories list shows both a selected repository as well as focus (thin blue border):  ![image](https://user-images.githubusercontent.com/900690/32712657-0da6caac-c846-11e7-9f52-cc996d505843.png)
---
Título: [Proposal] Add Debugger Controls to the sidebar
Descripcion: Currently the debugger controls are in the file's tab menu on the top.  Personally I find that disturbing!  So I thought about it where you could put it instead.   Add it in here: ![image](https://user-images.githubusercontent.com/22343587/32690771-641b4b7e-c6fc-11e7-9991-152350889b18.png)
---
Título: Bad visibility of auto imported paths in completion popup
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issues to prefill these. --> - VSCode Version: 1.18 - OS Version: Windows 10  See these 2 screenshots - if i have some big type, it's not possible to see from which place it will be imported until i have to scroll the doc to the bottom:  ![pic1](https://user-images.githubusercontent.com/8881674/32686769-21175340-c6ac-11e7-8f81-d5d3ec30303c.png) ![pic2](https://user-images.githubusercontent.com/8881674/32686770-212ed916-c6ac-11e7-83f8-8d52497af385.png)  Suggestion: Move ```Auto import from ....``` to the top  <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes
---
Título: Border on the maximize panel size button is different from the others
Descripcion: Testing #36571  Only when the panel is on the right  ![image](https://user-images.githubusercontent.com/16890566/32242642-8c58d1b2-be30-11e7-8fa0-0b05c1f5de51.png)
---
Título: Decorators: decide on consistent label coloring or not
Descripcion: Today we use a color for file labels in the explorer, but not in the SCM view, resulting in the same information showing up differently:  ![image](https://user-images.githubusercontent.com/900690/32218916-c070aaf0-be2c-11e7-921a-7bf979a3d97c.png)  ![image](https://user-images.githubusercontent.com/900690/32218917-c359c5bc-be2c-11e7-9605-dd36d0bbcb24.png)  I think out of the box I would prefer us to not color the file labels at all to keep the UI impact to a minimum and only show badges. This would mean the SCM view is not changing a lot (just the change of badges we did) and the explorer would show the badges, but no colors in the labels.
---
Título: No help to setup cloud shell on azure
Descripcion: Refs: #37180  If I do not have a cloud shell setup on azure, upon running the action Azure: Open Cloud Shell vscode will give me the following msg `The first time the Cloud Shell requires set up in the Azure Portal (https://portal.azure.com).` I can open the portal and there I search for cloud shell - I find nothing. Not sure what to do next and if we can somehow improve this experience to the user. Potentially adding another action in the message mox (more info) which could take the user to some cloud shell azure tutorial.
---
Título: Open workspace from Open File
Descripcion: It seems when users open a workspace file from the Open File dialog they in most but rare cases want to open the workspace, not the file. Doing so would also allow us to remove the 'Open Workspace' action.  In the rare case where a user wants to open the workspace file, there could still be workarounds like opening the settings editor that currently shows the entire workspace file.  @stevencl Assigning to you for feedback. /cc @bpasero
---
Título: File explorer horizontal scroll #15539
Descripcion: ## Add horizontal scroll to file explorer  This PR adds the horizontal scroll to the file explorer and the open editor views.   **Note:** it removes the ellipsis on the file name when it's too long.  ### Related issues  - https://github.com/Microsoft/vscode/issues/15539 - https://github.com/Microsoft/vscode/issues/35282  ### Demo  ![vscode-horizontal-scroll](https://user-images.githubusercontent.com/12745899/32148163-9b7463c4-bcea-11e7-9994-ea04d1fbeaa0.gif)
---
Título: 请把vscode的logo换回以前的，新logo太烂，无法接受
Descripcion: - VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:57:00.652Z) - OS Version: Linux x64 4.9.0-deepin12-amd64 - Extensions:   Extension|Author (truncated)|Version ---|---|--- vscode-css-formatter|aes|0.0.2 python|don|0.7.0 Go|luk|0.6.66    ---  Steps to Reproduce:  1. 2.  <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes/No
---
Título: Paths in the file label get cut off at the end, in the middle of folder names, instead of at the beginning
Descripcion: | SCM viewlet | Git | |---|---| | ![image](https://user-images.githubusercontent.com/5047891/32038715-80e43938-ba2b-11e7-9c7d-34c15c76e5e0.png) | ![image](https://user-images.githubusercontent.com/5047891/32040257-76c45d7a-ba30-11e7-861c-03c4cee65305.png) |  Notice how the paths in Git get cut-off at the beginning, and full folder names are removed (folder names are not cut-off in the middle)
---
Título: In narrow view of source control viewlet, neither the file name or folder path is readable
Descripcion: When in the narrow view of the source control viewlet, neither the file name or the folder path is readable. Why not have just the file name when the view is so narrow?  ![image](https://user-images.githubusercontent.com/16890566/32017484-b9b30902-b97b-11e7-9c88-0c762106fa97.png)
---
Título: Open to the side, actually opens to the bottom
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issues to prefill these. --> - VSCode Version:1.17.2 - OS Version: Win 10  Steps to Reproduce:  1. Right click a markdown file 2. Select Open to the Side  This also affects open preview to the side.  I don't want to view top to bottom and there appears no way to customize the interface now.  <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes/No
---
Título: Truncated text in Error message pop-over bar blocks user from reading full error text
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --> User Story: - As a VSCode user, I would like to have the ability to read the full text of error messages generated by the IDE.  System Info: - VSCode Version: 2.6.1-insiders.20171019 - OS Version: macOS 10.11.6 El Capitan  Steps to Reproduce: 1. Run F5/Debug on any TypeScript file _without_ any run profile configured 2. Error message pop-over contains truncated text and is impossible to read full error text ![vscode truncated error text 2017 10 23 at 14 39 22 png 2078x118](https://user-images.githubusercontent.com/3075047/31914990-b989b726-b801-11e7-8d98-cbca56da28e0.png)   <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Unable to confirm. `code` shortcut not found on system. ```bash > $ code --disable-extensions                                                                                                                                                  zsh: command not found: code ```
---
Título: Terminal pane closes after hitting enter on a "task" terminal without any other terminals open
Descripcion: - VSCode Version: Code - Insiders 1.18.0-insider (4b01451cea60f32412098735709fddcac567b33d, 2017-10-19T08:29:07.096Z) - OS Version: Windows_NT x64 10.0.17017 ---  This is not really a bug in so much as it is behaving as designed, but the usability of it drives me a bit nuts 😄   Steps to Reproduce:  1. Open a project and start debugging (or run a task) before you have opened a terminal 2. Terminal pane will open with the task which at the end will allow `enter` to close the terminal 3. Pressing `enter` closes the terminal, and since there are no other terminals, it closes the terminal pane -- where if there were other terminals it would instead switch to the previous terminal  This behavior difference (while objectively makes perfect sense) is the crux of my issue. I find myself never actually wanting to close the terminal pane, but instead I'm just trying to close that task terminal. I would MUCH prefer (maybe an option if needed) if a new terminal was opened (if there isn't an already opened terminal to switch to) instead of hiding the terminal pane in this case. That way the behavior to me, is very similar whether or not I've opened a terminal before the task ran or not.  <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes
---
Título: Toggle button focus is difficult to determine
Descripcion: - VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:57:00.652Z) - OS Version: Linux x64 4.10.0-35-generic - Extensions:   Extension|Author (truncated)|Version ---|---|--- terminal-tabs|Tyr|0.1.1    ---  Active + not focused:  ![image](https://user-images.githubusercontent.com/2193314/31680572-904cb30e-b329-11e7-99e0-febcda4ffe03.png)  Active + focused:  ![image](https://user-images.githubusercontent.com/2193314/31680583-9d8e22c8-b329-11e7-9085-d1c934af33c8.png)
---
Título: Autocomplete dropdown width limit makes differentiating long member names impossible
Descripcion: Even in the latest VSCode, the autocomplete dropdown is too narrow to display full member names.  I know this case is pretty specific and looks a little weird, but it is a legitimate case (wrapping and naming rest operations by route template rather than some identifierization of the name):  ![image](https://user-images.githubusercontent.com/17498172/31674982-5e9fd86a-b331-11e7-941e-a3fe1258af48.png)  Can it auto-grow or show tooltips or some other thing in the dropdown for long member names?  Thanks!
---
Título: Show default value inside (at the bottom) description when completing settings.json
Descripcion: ![image](https://user-images.githubusercontent.com/1499188/31662272-1dbfcdac-b357-11e7-89ed-8dcc12523cd9.png)
---
Título: code-insiders: select a file, git-status-color Invalid
Descripcion: - VSCode Version: 1.18.0-insider (1.18.0-insider) - OS Version: macOS High Sierra 10.13  Steps to Reproduce:  1. not select the file and it will be green ![image](https://user-images.githubusercontent.com/17971291/31594609-96f66ce2-b1fb-11e7-8083-b05f64220214.png) 2. select the file, it becomes white ![image](https://user-images.githubusercontent.com/17971291/31594619-aaa87438-b1fb-11e7-9bf9-9706a2877b06.png)
---
Título: Allow to set git badges foreground
Descripcion: Hi, what color key is used for the git badge foreground in the explorer tree?  <img width="317" alt="screen shot 2017-10-13 at 19 44 54" src="https://user-images.githubusercontent.com/10454741/31559016-6afbd3d2-b04f-11e7-9e35-e0c8034a7622.png">
---
Título: Git "modified" badge not using "badge.background" token
Descripcion: - VSCode Version: Code - Insiders 1.18.0-insider (c098b394b07afbb58975ab609117a0e115c5a3fa, 2017-10-12T05:11:23.795Z) - OS Version: Darwin x64 16.7.0 - Extensions:   Extension|Author (truncated)|Version ---|---|--- code-settings-sync|Sha|2.8.3 sort-lines|Tyr|1.3.0 html-snippets|abu|0.1.0 Bookmarks|ale|0.16.0 project-manager|ale|0.21.1 vscode-eslint|dba|1.3.2 tslint|eg2|1.0.11 vscode-console-wrapper|fab|0.4.0 auto-rename-tag|for|0.0.14 Angular2|joh|2.7.0 ecdc|mit|0.10.3 HTMLHint|mka|0.4.0 vscode-autoprefixer|mrm|2.1.2 vscode-stylefmt|mrm|2.5.0 angular2-inline|nat|0.0.17 vscode-versionlens|pfl|0.19.1 stylelint|shi|0.29.1 Align|ste|0.2.0 ayu|tea|0.8.0 change-case|wma|1.0.0  (2 theme extensions excluded)   ---  Steps to Reproduce:  1. Modified file in file tree in a Git-managed project now has a small "M" badge 2. This is using the default blue badge color, not the color defined in the workbench as `badge.background` 3. Either it should, or please provide a new workbench key to hook into workbench theme.  <img width="332" alt="screen shot 2017-10-12 at 9 20 33 am" src="https://user-images.githubusercontent.com/835148/31498529-22d9133c-af30-11e7-92b5-6860dbcbc3fa.png">
---
Título: Please update octicons from 3.1.0 to 6.0.1
Descripcion: 
---
Título: Extensions: Do not prompt to reload when the user just pressed the 'reload' button
Descripcion: See the screenshot below. I've just pressed 'reload' in the Extensions Viewlet and I'm getting prompted whether I want to reload? Is there  a reason why we guard the 'reload', can anything be lost? If there isn't anything then I suggest to not show the prompt.  ![image](https://user-images.githubusercontent.com/172399/31331180-ac2bc75c-ace1-11e7-9e0f-23c1723d905a.png)
---
Título: Typing into readonly settings editor should show affordance
Descripcion: People that are not aware of the left hand settings editor being readonly should maybe get some hint how our settings work. We should explore what we can do here with the editor API (e.g. show a tooltip?).
---
Título: Settings: context menu on setting in readonly editor should offer same actions as edit icon
Descripcion: This would make it easier to copy a setting over to the right hand side by just showing the same entries we show when you click on the edit "pencil" icon on the left.
---
Título: Make "Workspace" and "Folder" settings more discoverable
Descripcion: We should bring back entries to the File menu for accessing workspace and folder settings.
---
Título: Open full settings editor when clicking on settings.json in explorer
Descripcion: To help people that are struggling with defining workspace level settings by using the explorer. This probably needs a setting to disable for people that know what they are doing.
---
Título: Focus terminal actions are spamming the command pallete
Descripcion: There are too many focus terminal actions in the command palette. This way then an accessibility user is searching for focus actions he can not find the appropraite one due to all the clutter imho  Could we somehow reduce this number, by having a focus active one, focus previous, next?  ![screen shot 2017-10-03 at 12 37 59](https://user-images.githubusercontent.com/1926584/31121254-be818c4c-a837-11e7-9d19-096ab3663116.png)
---
Título: There is no way to add a custom icon to the inltellisense window
Descripcion: It would be really helpful if we could add custom icons to the suggestion window. For now, the only solutions I came up with, is to override an existing icon. I am using one of the icons, and overriding the background-image in my css.  Thanks, Violet.
---
Título: Webview findwidget: floating gray with no border or shadow does not work
Descripcion: Refs: #33296  Notice that the current web view find widget uses gray color with no border or shadow. This way it seems to be floating/ This works in the editor since it has a shadow and since it is docked to the top of the editor. The current web view solution simply does not aestheticaly work for me  fyi @stevencl   ![screen shot 2017-09-26 at 12 55 54](https://user-images.githubusercontent.com/1926584/30856881-157eea4a-a2ba-11e7-8dc7-53b59581cf28.png)
---
Título: Keybindings input not remembered
Descripcion: 1. Preferences > keyboard shortucts > type something 2. Open some other editor, go back to keyboard shortucts -> input is cleared 3. This does not align with our general UX story where we try to preserve as much UX state as possible
---
Título: gray'ish workspace folders
Descripcion: #34775  * on mac * have a workspace with a few folders * open the workspace file and change the path of a few folder to non existing files/folders * 🐛 the folders show gray'ish, I'd expect them to disappear, optionally to see a squiggle in the config file  <img width="1032" alt="screen shot 2017-09-26 at 12 47 36" src="https://user-images.githubusercontent.com/1794099/30856512-e4010e86-a2b8-11e7-94f2-721abfff1eff.png">
---
Título: Empty workspace is a little too empty
Descripcion: * open a new, empty, window * trigger "save workspace as" * 🐛 explorer should show an affordance to add folders  <img width="472" alt="screen shot 2017-09-26 at 11 02 51" src="https://user-images.githubusercontent.com/1794099/30851984-9de6e794-a2aa-11e7-9c51-591af95f1d83.png">
---
Título: Compound debugging sessions doesn't seem to allow jumping between sessions
Descripcion: When using Compound debugging sessions we no longer allow users to seamlessly jump between the two debugging sessions, which limits the experience, as it's not clear that you manually have to switch to the other debugging session to continue debugging.  See this video https://youtu.be/zdKFecmI8Ko  The issue is that when breaking on a Chrome breakpoint after execution is resumed, then a breakpoint on the Node debug session is hit, but this isn't clear in the UI, as you manually have to switch to the Node debug session to see this.  It didn't use to be this way, as we automatically jumped between debugging sessions to create a seamless experience in earlier builds.  - VSCode Version: Version 1.16.1 (1.16.1) + insiders  Steps to Reproduce:  1. Clone https://github.com/glimpse/stickerapp 2. Checkout chrisdias/ignite2017 branch 3. Start compoun debug session
---
Título: Lightbulb is only visible when you can see the first column
Descripcion: This means you cannot see that code actions are available when authoring relatively long lines on a narrow monitor.  <img width="634" alt="screen shot 2017-09-19 at 8 00 55 am" src="https://user-images.githubusercontent.com/2193314/30568566-d5d08f42-9d10-11e7-9490-ec2759ba2200.png">
---
Título: 不区分大小写
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issues to prefill these. --> - VSCode Version:1.16.0 - OS Version: win 10   Steps to Reproduce: 1.驼峰命名的单词和不是驼峰命名的单词双击都会同时高亮  <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes/No
---
Título: New Integrated Terminal and multi-root
Descripcion: The only way I see to control which root a new terminal will open in is through opening a file under that root. That is not very convenient when I don't have such a file open and don't need to open one for other reasons.  Maybe the '+' could be changed to a drop-down button with a click on the button itself would have the same behavior as now and the drop-down would show the list of roots to choose from.
---
Título: Suggestion Lightbulb Icon Incorrectly positioned
Descripcion: - VSCode Version: Code - Insiders 1.17.0-insider (be71eecef0bff8ad4a84ce06cd54b9185bc8c306, 2017-09-06T05:15:43.568Z) - OS Version: Linux x64 4.10.0-33-generic - Extensions:   Extension|Author (truncated)|Version ---|---|--- ng-template|Ang|0.1.7 erb|Cra|0.0.1 html-leaf|Fra|0.1.3 json-to-ts|Mar|1.5.3 path-intellisense|chr|1.4.2 gitignore|cod|0.5.0 angular2-snippets|dan|1.0.16 githistory|don|0.2.3 tslint|eg2|0.17.0 vscode-ember|emb|0.1.0 prettier-vscode|esb|0.23.1 auto-rename-tag|for|0.0.14 search-node-modules|jas|1.1.1 Angular2|joh|2.7.0 csharp|ms-|1.12.1 typescript-javascript-grammar|ms-|0.0.23 debugger-for-chrome|msj|3.2.1 EmberES6Snippets|pha|2.1.2 typescript-hero|rbb|1.4.0 vscode-icons|rob|7.12.0 git-merger|sha|0.3.6  (2 theme extensions excluded)   ---  The lightbulb icon for suggested fixes is positioned incorrectly. It is not in the left margin - it is right against the test. And in some cases it is positioned on the wrong line.  ![screenshot at 2017-09-06 09-47-56](https://user-images.githubusercontent.com/13488/30115406-9d59a946-92e8-11e7-9b5e-b026b28cebc8.png)
---
Título: show lightbulb inline
Descripcion: - [x] place lightbulb into the (usually) free space right of the line numbers, overflow top/bottom if the current line starts at a low offset - [x] change the trigger logic to be just the selection, unless it is in whitespace only - [x] change marker selection from range on exthost-side - [x] keep the trigger logic to for markers if enclosed
---
Título: SCM menu is getting out of control
Descripcion: IMHO you overdid it on the actions, there are simply too many now to make this a pleasent experience. Consider removing some, if you need suggestions which I would be happy to help  ![screen shot 2017-09-01 at 15 02 40](https://user-images.githubusercontent.com/1926584/29970896-b4f3fb30-8f26-11e7-9b3f-0d3f29b20546.png)
---
Título: Prompting for user permission, but console is run
Descripcion: verifying #21635 1.16-insiders Ubuntu 14.04 & Windows 64 - create a Node app `app.js` - create a launch config that uses the integratedTerminal as console: ``` {     "version": "0.2.0",     "configurations": [         {             "type": "node",             "request": "launch",             "name": "Launch Program",             "program": "${workspaceRoot}/app.js",             "console": "integratedTerminal"         }     ] } ``` - in the workspace settings, have `"terminal.integrated.shell.linux": "/bin/zsh"` - launch the programm - dialog pops up 'Do you allow shell: "/bin/zsh" (defined as a workspace setting) to be launched in the terminal?' - observe that the shell is started and the programm is launched without waiting for the user to allow or disallow.
---
Título: Explore improving UX / API for refactorings
Descripcion: Refactoring like `extract method` don't seem like a great fit for the code actions or any other API that VSCode offers. This issue tracks an investigation of what a better ux/api for refactorings could look like  **Problems / Background Info**  - @Gama11 makes some very good points about why refactorings don't seem to fit well with the current code action model: https://github.com/Microsoft/vscode/issues/33241#issuecomment-326003385  - No way to configure a keybinding for specific code actions / refactoring: #33049  - No feedback on why a refactoring is not available: #33501   Any other problems you've noticed or thoughts on refactoring support?
---
Título: Caps for emphasis doesn't look right in folder settings (and small font size)
Descripcion: ![image](https://user-images.githubusercontent.com/2193314/29889270-71b5563e-8d78-11e7-89bd-f9818bcbf242.png)  Why not just "Folder Settings - xterm.js" or "xterm.js - Folder Settings"? The small font on "Folder Settings" may also be smaller than any other text in the UI.
---
Título: Jump to extracted method
Descripcion: Windows Testing #33282   On extraction to global scope expected to jump to extracted method (in global scope) but did not.  So it was hard to know what happened.  The gutter indicator did help.
---
Título: SCM: Explore master-detail view
Descripcion: From @sqs  > Would you be interested in a PR that implemented a UI like this? I just hacked this together tonight. >  > The Open Repositories section works like the Open Editors section, it grows (to a point) based on the number of open repositories. Selecting a repository shows that repository's (and only that repository's) SourceControlView in the rest of the viewlet. Focus is in the Open Repositories list initially. >  > It would be fairly easy to make it possible to show multiple repositories' SourceControlViews if you multi-selected them. That would of course be duplicating some functionality of a viewlet's subviews (e.g., you could make it so right-clicking on the Source Control header would let you check/uncheck each repo, as in the extensions viewlet), but it seems quite convenient to make this always visible. >  > ![image](https://user-images.githubusercontent.com/1976/29813975-99e7a454-8c60-11e7-8de8-3502a4f6fbd1.png)
---
Título: SCM: Need a better "no repositories" view
Descripcion: 
---
Título: [Feature] Mark opened files in file explorer
Descripcion: It would be nice if opened files would somehow be recognizable in the standard file explorer.
---
Título: Limit resource size to ensure resource inline
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issues to prefill these. --> - VSCode Version: Insider - OS Version: macOS  Our editor compile pipeline will merge CSS and inline resources (images) and the size limit is 5kb. As we added two large files, Monaco Editor shipped with a new contrib folder with two images which are over size limit.  ![image](https://user-images.githubusercontent.com/876920/29754184-0c3ad53a-8b35-11e7-915b-6a4377414b8a.png)  All other icons are merged into `editor.main.css`, let's optimize `String_16x.svg`.  <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes/No
---
Título: New icon looks bad / scaled in Windows installer.
Descripcion: <img width="72" alt="capture" src="https://user-images.githubusercontent.com/1931590/29668606-1c5a8ff6-88e1-11e7-8d71-4388c52d520a.png">
---
Título: focus opened file when opened from Explorer Side Bar
Descripcion: Steps to Reproduce:  1. Ctrl+Shift+E to open Explorer Side Bar 2. Click on a file in the Explorer Side Bar, thus opening it or a preview of it 3. press some letter keys. the typed keys do not appear in the opened file, because the opened file isn't focused 4. Ctrl+1 to focus the file, and then type again, now text will appear.  Expected behavior: file should be focused without needing Ctrl+1
---
Título: Fast open file from explorer without put focus on it
Descripcion: Steps to Reproduce:  Open multiple files with command+enter (MacOs) :  ![openfile](https://user-images.githubusercontent.com/5599375/29563083-5adbf482-873c-11e7-9376-16be32c1acdd.gif)  Each time a file open i automaticly switch into the editor. This is the only behaviour forcing me to use a mouse in vscode when i want to open multiples files.  Expected behaviour: - I can open 3 files in a row, without focus each file once open.  We definitly need a way to fast open multiple file (and save then to opened files) without focusing each file.  I did not find an option or a key binding allowing that, and macro (with extensions) are not working.
---
Título: allow to pin find references pop so it stays on the screen
Descripcion: allow to pin find references pop so it stays on the screen
---
Título: UI: Wrong tab look selected in editor when extension info is open with dark theme
Descripcion: - VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:06:21.685Z) - OS Version: Darwin x64 16.5.0 - Extensions: Built-in dark theme  **Steps to Reproduce:**  1. Open new file tab. 2. Open details for an extension, and stay on that tab  Actual: Looks like the regular tab is selected due to the extension color header is clashing.  ![extension tslint weblight 2017-08-15 17-00-08](https://user-images.githubusercontent.com/173559/29341779-8550dcde-81db-11e7-858b-9a46074a23ed.png)
---
Título: signature and suggestion window layout
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issues to prefill these. --> - VSCode Version: 1.16-Insider - OS Version: macOS  Steps to Reproduce:  This is a duplication of https://github.com/Microsoft/monaco-editor/issues/524 actually but I'd like to raise it here for more feedback. A fixed signature help and a floating suggestion window makes typing pretty hard.  ![paramater-suggestion](https://user-images.githubusercontent.com/876920/29298302-a7132a4a-811b-11e7-87a1-4049da279775.gif)   <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes/No  cc @ramya-rao-a
---
Título: Allow for transparent / vibrant window theme
Descripcion: ![image](https://user-images.githubusercontent.com/5620073/29191214-a775c87e-7e25-11e7-83e1-39eadbce7851.png)  Maybe it can be enabled with `{ transparent: true, vibrancy: 'dark' }` ?  https://github.com/electron/electron/pull/7898 — Vibrancy PR https://electron.atom.io/docs/api/frameless-window/#transparent-window
---
Título: Search box is transparent on uncuaght exception
Descripcion: Search box is transparent, makes it hard to see. ![screen shot 2017-08-07 at 11 03 37](https://user-images.githubusercontent.com/1493018/29035261-83a6057a-7b60-11e7-9a4f-b2a5d9e21c8d.png)   <!-- Use Help > Report Issues to prefill these. --> - VSCode Version: 1.15.0 Insiders - OS Version: MacOS 10.12.5  Steps to Reproduce:  1. Start debugging 2. Provoke a uncaught exceptions 3. Open search box   <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes
---
Título: Clicking on LR / CRLF on the bottom brings up the menu at the top
Descripcion: When clicking on LF or CRLF on the bottom of the screen in the blue line, the menu to change it to the other line end type comes up all the way at the top of the screen.  That doesn't make any sense if I'm clicking on the bottom and looking at the bottom, the menu should come up next to the area I clicked on, not in a completely different area of the screen.
---
Título: Files list layout in Ctrl+P menu is not user friendly
Descripcion: <!-- Use Help > Report Issues to prefill these. --> - VSCode Version: 1.14.2  Steps to Reproduce:  1. Search for a file using Ctrl+P 2. The search files menu shows up 3. The way the file name is displayed first and then the path is a little hard to scan. 4. If this order is reversed, it will be very easy to scan the list   http://i.imgur.com/kYD5X1u.png
---
Título: Themed Title Bar
Descripcion: The current title bar does not match VS Code, I suggest a themed title bar, just like in Visual Studio 201x.
---
Título: Request: Allow switching activity bar to minimalist layout
Descripcion: The activity bar is by default very wide, despite only providing a place for a few icons to click on.   It would be nice if it was possible to switch the activity bar to some kind of a "minimalist mode", meaning that the width would shrink to accommodate the also scaled down (eg. 16×16) icons (Git, Explorer, Search...)
---
Título: Display overflow indicator in keybinding editor for long command names
Descripcion: - VSCode Version: Code - Insiders 1.15.0-insider (f39385b8326671dc6389f21f8c2e2f6afdb352a1, 2017-08-01T05:16:44.254Z) - OS Version: Windows_NT x64 10.0.15063 - Extensions:   ---  **Bug**  ![image](https://user-images.githubusercontent.com/12821956/28840536-2152c2d6-76ac-11e7-997b-fef1807acc5c.png)  There is no indication that long command names are being clipped
---
Título: Can we present multiple search results on the same line more effectively?
Descripcion: - VSCode Version: Code - Insiders 1.15.0-insider (f39385b8326671dc6389f21f8c2e2f6afdb352a1, 2017-08-01T05:16:44.254Z) - OS Version: Windows_NT x64 10.0.14393 - Extensions:   Extension|Author (truncated)|Version ---|---|--- git-project-manager|fel|1.3.2 seti-icons|qin|0.1.3  (1 theme extensions excluded)  ---  Testing #31480  (I may have created an issue similar to this before)  It's always annoyed me the same line shows up multiple times in the search results, even when the line is really small and would fit in the viewlet just fine. Consider this example where the first line is complete:  ![image](https://user-images.githubusercontent.com/2193314/28835792-7c2ecd1e-769b-11e7-8283-d6ec46cb9ece.png)  This would be better ideal in this case (I modified the DOM):  ![image](https://user-images.githubusercontent.com/2193314/28835931-f4940c74-769b-11e7-87ef-17e9044ab191.png)  I understand the argument against this, where really long lines cannot show multiple results like this. Maybe we can size the search results to suit the width of the search viewlet, re-laying out the results when the viewlet is resized?  ---  Here's the extreme case illustrating the issue:  ![image](https://user-images.githubusercontent.com/2193314/28836054-59be6df6-769c-11e7-8414-44cb2c240cd1.png)
---
Título: Suggestions for improving the "Find All References" window
Descripcion: In its current state, it is really tedious to browse all references via this window.   ![rr](https://user-images.githubusercontent.com/11874914/28750773-d4d38782-74f4-11e7-98a0-a6d4b041e59c.png)  I need to expand each file in order to view the source, even if the file only contains one reference. Imagine putting each file on your desktop in its own folder. That's what this feels like^^  Here are some suggestions for customizations I would like:  Make an option to completely disable grouping references a collapsed folder. So instead of having the list look like this: ``` File1.cs                               (1)    some reference File2.cs                               (1)    another reference    third reference ``` I would prefer it if it looked like this: ``` some reference                  File1.cs (19) another reference               File2.cs (13) third reference                 File2.cs (47) ``` Then I would be able to just browse using only the arrow up and down keys, without thinking about what files to expand first.  I also wish there was a non-inline mode for it.   There are many cases where I'm not interested in seeing or browsing the code of all the references. I just want to know, does x file have references to it or not.  And the window shows up, in line. pushing the code down I'm looking at, and showing new code which I'm not interested in seeing is super annoying.  A mode where it would casually show up to the right as a list would be great. And instead of drawing the preview in line, it would open a new tab as soon as I've clicked the arrow down/up key, and use that tab as the preview window as I browse the list. Hitting escape would then close it, and take me back to where I came from. And hitting return open the tab for real.  The list showing up to the right would also improve the overview a great deal as you would be able to view take up all the space vertically and view more of the list at once.
---
Título: webview search results highlights too bright
Descripcion: - VSCode Version: 1.15 Insiders - OS Version: Windows 10  Steps to Reproduce:  1.Bring up release notes (Help > Release Notes) 2.Ctrl+F to open the new search and type "bugs"  The first selection is bright orange and the second is yellow. They look very bright on Dark+ theme.  We should use the same search selection colors as the editor and be theme aware.  Reproduces without extensions: Yes
---
Título: Weird selection color of setting on margin hover
Descripcion: Refs: #31448  Hover over the margin in the settings, notice we use a weird color to decorate the settings line. In light theme it is banana yellow and in dark it is gray. I do not think we use these colors in other places. Could we instead use a well known color?  Maybe the debug top stack frame decoration color?  ![screen shot 2017-07-27 at 15 10 49](https://user-images.githubusercontent.com/1926584/28671749-0ec70ffe-72de-11e7-9e48-6440b9566439.png)
---
Título: Panel actions are cropped when window is narrow
Descripcion: ![image](https://user-images.githubusercontent.com/10746682/28659190-2350a3f2-72cc-11e7-8a49-d89b7f4ff4c4.png)
---
Título: Boxes shown for missing multiroot file icons
Descripcion: ![image](https://user-images.githubusercontent.com/323878/28655422-b70d2d8a-7250-11e7-9d1c-8c62ddc385d6.png)  This is using the Seti UI theme (from the extension) which has a folder icon available.
---
Título: Support workspace projects / folders under different colors in sidebar and tabs
Descripcion: - VSCode Version: Nightly - OS Version: Any  Workspace feature is really useful as it is today, but could themes API be extended so to display different projects with different colors/nuances?   See:  ![projects_with_colors_in_vsc_workspace](https://user-images.githubusercontent.com/11835025/28514861-dd1a39b0-705b-11e7-9ed3-fca12a8cefe3.png)   It would be even better if tabs could have different colors, to resemble the project they belong to:  ![projects_and_tabs_with_colors_in_vsc_workspace](https://user-images.githubusercontent.com/11835025/28514909-062f4fca-705c-11e7-8376-17fbcd1a4130.png)  Thanks for all the beautiful code and the effort you put in this superb project.  Roberto.
---
Título: Tab close icon's usability can be improved
Descripcion: Currently the active appearance of a tab close icon scales it by a small amount.  ![close](https://user-images.githubusercontent.com/4211302/28482024-75747e78-6e5e-11e7-9339-4fe8e8c2c828.gif)  To me this has always felt a bit off, as it goes against a lot of clicking affordance that we see on most UIs, which is generally an altered background. Scaling or elevation works with material design because each element is usually its own card which can transform by itself.  I made a change in devtools using the `filter()` function for the active state, and I think it feels a lot more natural  ![close-alt](https://user-images.githubusercontent.com/4211302/28482163-1cdc1c48-6e5f-11e7-8387-eefa9c521413.gif)  Also, since both the cursor is set to `pointer` on the entire tab, *and* there isn't hover state for the close icon, there's no hover affordance to the user to tell them that they are on something clickable. Probably either `cursor: pointer` should only be set on the icon .. or there should be a distinct hover state on the icon (like Atom)  >![close-atom 1](https://user-images.githubusercontent.com/4211302/28482529-ae2a1744-6e60-11e7-8fb4-9c2e94e92322.gif) >--Atom example
---
Título: Educate users about workspaces once they are in multi-root workspace
Descripcion: **Ideas:** 	•	show something first time a workspace is opened 	•	make sure the release notes are catchy enough to promote multi root workspaces 	•	add more actions to welcome to enter multi root workspace
---
Título: Unite all the open menu items
Descripcion: Refs: #30722  Currently we have Open File, Open Folder, Workspaces > Open Worksace Can't we just have one Open which if the user chooses a file opens a file, same for folder and workspace.  This seems more natural and easier to use and it seems to be what sublime is doing  ![screen shot 2017-07-19 at 12 06 13](https://user-images.githubusercontent.com/1926584/28361921-bbf6c31e-6c7a-11e7-82ce-921bbe8790cb.png)
---
Título: Add border options to `selectionBackground`
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. -->  <!-- Use Help > Report Issues to prefill these. --> - VSCode Version: 1.14.1:  - OS Version: Windows 10 build 15063  Add border options to `selectionBackground` and `findMatchBackground`. They would be called like `selectionBorder` and `findMatchBorder`. You cannot find them on:  1. https://code.visualstudio.com/docs/getstarted/theme-color-reference  Currently the selection has no border:  ![image](https://user-images.githubusercontent.com/5332158/28245458-8281e9aa-69dd-11e7-8952-ad69839e7cd4.png)   Would be awesome if it has borders like Sublime Text selections:  ![image](https://user-images.githubusercontent.com/5332158/28245453-66aa5410-69dd-11e7-912b-868638cb7ffa.png)   <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Yes  ___   Related issues:  1. https://github.com/Microsoft/vscode/issues/8050 additional options for `editor.selectionHighlight`
---
Título: Explicit "Check for update" from top menu should still show message
Descripcion: I find this flow a bit weird (Windows): * explicitly ask for updates from the help menu * updates are available, so the little badge shows up in the lower left corner  As a user I would expect an explicit message to show up. I suggest showing a modal dialog (not our message service) that simply asks to apply the update. It is very likely that I want the update when I explicitly checked for it. I am also fine using a modal dialog to indicate no updates are available, since I asked for it.
---
Título: SCM and extensions viewlet - uneven margins
Descripcion: From https://github.com/Microsoft/vscode/issues/30250#issuecomment-314949017  The input boxes at the top of these two viewlets have much larger margins on the left than the right. The extensions box kind of lines up with the extension item text below, which maybe is the goal. In the SCM viewlet, it doesn't seem to line up with anything. Never noticed it before, but I think they would look better centered.  <img width="1032" alt="gutter" src="https://user-images.githubusercontent.com/1812093/28147371-41ee18d2-6780-11e7-86da-529fa59d7175.png">
---
Título: Dim or otherwise indicate "inactive" editor/terminal
Descripcion: One of the best features of VS Code is the built-in terminal. However, I often begin typing in the editor when in fact I think I'm in the terminal - and vice versa. To alleviate this issue, it would be helpful to visually indicate which portion of the IDE is "active" vs. "inactive". A subtle dimming effect might just do the trick.
---
Título: Search panel -- annoying "toggle replace button"
Descripcion: The "toggle replace button" (inside the yellow rectangle in the screenshot below) is broken in so many ways, let me enumerate them:  1. It's whole purpose, I guess, is to hide a rarely used input in order to barely show a couple more lines of results. But why even hiding the "replace" input? I don't know about you but I've never found a use for the "files excluded through settings" input, it's not even editable, why not hiding it instead? maybe "files to exclude" as well? It seems like a more logic approach to me. 2. We are wasting a whole bunch of pixels (in the red rectangle below) just because of it. 3. Even if you open it, you'll probably find it closed anyway pretty soon. Just switch to another panel and come back to the search panel, it's closed again. I can't even count how many time I wrote inside the "files to include" input by mistake. 4. It can't be opened with the keyboard, it needs to be clicked. Do you want to check the explorer or git while using it? Sorry, click it again.  The best solution to me is getting rid of it all together, but I guess a reasonable solution is to add the ability to hide it via a `search.alwaysOnInputs` setting or something. I wouldn't mind an analogous setting for the floating search widget.  What do you think?  <img width="264" alt="screen shot 2017-07-07 at 14 47 56" src="https://user-images.githubusercontent.com/1812093/27958674-82b42862-6324-11e7-948f-a2cd177ae921.png">
---
Título: Integrated Terminal: add "Clear Console" button
Descripcion: - VSCode Version: 1.14.0-insider  Currently, the buttons in the integrated terminal panel are just `add`(+) and `kill`(trash can). The only two way to clear terminal output is using the shortcut or using the context menu.  (Using 'clear' command in terminals seems like "cleared", but when we scroll to top later after some outputs, the previous output reveals again. -> it may seem to another bug I think)  However, I can see "Clear Console" (`clearRepl` in i18n resource id) buttons in vscode's **problems**, **output** and **debug console**.  Why don't we have "Clear Console" button in vscode's integrated terminal? Would it be a PR-welcomed feature?
---
Título: Review the Keybinding UI in Command Palette
Descripcion: - VSCode Version: 1.14 Insider - OS Version: Windows 10  In this insider release, you have introduced a new UI for keybindings in Command Palette, presenting each key as a separate element, instead of a simple label. I know this is a _personal taste_, but the new UI is taking too much atention while looking for commands.   Personally, I prefer the original UI (just a label) but I understand the new UI (apply the same UI from the Keyboard Shortcut editor). I didn't find any `User Setting` to choose the UI, but it would be great to have that, or maybe make some changes in the new UI to keep focus in the commands, not the keybindings.  Here is a quick compare:  ![command-palette-keybinding-july-insiders](https://user-images.githubusercontent.com/3781424/27799812-099ad244-5fed-11e7-9a55-d6057b9f84fc.png)  Thanks in advance
---
Título: Title Bar should adapt to theme
Descripcion: - VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z) - OS Version: Windows_NT ia32 10.0.15063 - Extensions:   |Extension|Author|Version| |---|---|---| |jupyter|donjayamanne|1.1.3| |python|donjayamanne|0.6.5| |code-runner|formulahendry|0.6.24| |beautify|HookyQR|1.1.1| |Go|lukehoban|0.6.62| |vscode-icons|robertohuertasm|7.10.1|,   ---  Steps to Reproduce:  1.The title bar stays white even the theme is switched to dark 2.
---
Título: Search viewlet multiroot UI
Descripcion: We need to determine what the UI for multiroot searches in the search viewlet will look like, and experiment with different possibilities. This will be influenced in part by multiroot UI decisions elsewhere in the product.  Separate issue for functionality and include/exclude behavior in multi and single root workspaces: #27226  A few initial options: - Group results under a new node per root folder where the list still scrolls together (mostly implemented here: https://github.com/Microsoft/vscode/pull/29964#issuecomment-312380260) - Group results in subviews that scroll independently (git viewlet?) - Leave them in a flat list, but make the folder name stand out somehow
---
Título: optimize activity bar
Descripcion: I like having the activity bar, but it creates a lot of wasted space within the IDE.   - would be nice to decrease the size of the icons, thus decreasing its size - A minimalistic approach could be to allow it on the status bar
---
Título: layout suggestion
Descripcion: ![image](https://user-images.githubusercontent.com/24952457/27717304-ce1d3112-5d76-11e7-9399-37462a27898f.png)  Can you put some of the red frame free on the left?  能否把 红色相框的 部分自由的放在左边呢？
---
Título: Intellisense suggestions should display an horizontal scrollbar if needed
Descripcion: - VSCode Version: 1.13.0 - OS Version: macOS Sierra 10.12.5  Steps to Reproduce:  1. install java extension 2. open java file 3. type `import o`, wait for suggestions to show up suggestions are truncated because the package names don't fit in the suggestion window, there's no way to scroll horizontally  See https://github.com/redhat-developer/vscode-java/issues/249 [![https://gyazo.com/9f0b536a9f71d72a4939ffbb4834340d](https://i.gyazo.com/9f0b536a9f71d72a4939ffbb4834340d.png)](https://gyazo.com/9f0b536a9f71d72a4939ffbb4834340d)  <!-- Launch with `code --disable-extensions` to check. --> Reproduces without extensions: Maybe
---
Título: UX: finalize multi root SCM design
Descripcion: We need to make SCM UX fit for multi root and should agree on the visual solution.
---
Título: Icon change
Descripcion: - VSCode Version: 1.13.1 - OS Version: Windows 7 SP1  Can we change the icon so that the middle of the symbol is not filled with white, and is instead see-through? I've attached some files I drew up of the new icon. One is actually a PNG the other is a .ico file disguised as a PNG because GitHub doesn't allow for the uploading of ICO files. Just change the extension and it should be fine.  ![vs icon](https://user-images.githubusercontent.com/29654835/27530003-e78876b8-5a13-11e7-8863-83fbdb900f72.png) ![vs icon - ico format](https://user-images.githubusercontent.com/29654835/27530004-e789a11e-5a13-11e7-8a34-870da7e678ac.PNG)
---
Título: Stop the Misuse of the Pointing Hand Cursor
Descripcion: The UI of Code always gives me a uncomfortable feeling. I finally realized this is because of the faulty cursor. **All the buttons, as well as the tabs and the list items**, use the **pointing hand cursor**![](https://docs.microsoft.com/en-us/windows/uwp/input-and-devices/images/cursor-pointinghand.png), which shouldn't be used. [A guideline of Windows](https://msdn.microsoft.com/en-us/library/windows/desktop/dn742466.aspx#hand) states that this cursor is **used for text and graphics links because of their weak affordance**. [Another one](https://docs.microsoft.com/en-us/windows/uwp/input-and-devices/mouse-interactions#cursors) recommends us to **use hover effects** for clickable elements instead (currently we have hover effects for list items and some of the buttons, but not for tabs). It's the same [for other platforms](https://developer.apple.com/macos/human-interface-guidelines/input-and-output/mouse-and-trackpad#pointers). I hope we can change them into the default arrow cursor ![](https://docs.microsoft.com/en-us/windows/uwp/input-and-devices/images/cursor-arrow.png) and get a fix on this soon.
---
Título: Show a message in Default settings how to overwrite
Descripcion: Show a message in Default settings how to overwrite
---
Título: Add filtering option on warnings and errors in Problems Output tab
Descripcion: Similar to Unity engine console logger..  While we may be able to filter by problems we are not able to filter by errors or warnings instead I am presented with huge list and have to scroll through it! I would like to have option to quickly hide and unhide warnings instead seeing them all in list.. As well as having option to hide and unhide specific errors... Thank you!
---
Título: Show picker closer to status bar when invoked from there
Descripcion: Investigate to open the picker at the status bar and not in the top center when clicking into the status bar. In that model, the input box should show to the bottom and quick open grow to the top.
---
Título: VS Code wants to create a desktop icon by default
Descripcion: Do you have a question? Please ask it on [Stack Overflow with `vscode` tag](http://stackoverflow.com/questions/tagged/vscode)  (Use Help > Report Issues to prefill these) - VSCode Version: 1.14 - OS Version: Windows 10  Steps to Reproduce:  1. Start to install VS Code  ![image](https://user-images.githubusercontent.com/1658949/27372878-54ffe9d0-5666-11e7-8df7-8936ea0a0a12.png)  [You are not supposed to mess with the user's desktop](https://msdn.microsoft.com/en-us/library/windows/desktop/dn742493(v=vs.85).aspx).  ![image](https://user-images.githubusercontent.com/1658949/27372947-a1de8946-5666-11e7-8d69-ac6a98345479.png)
---
Título: feature-request: possibility to change the size of description popup
Descripcion: Hello, I am creating a snippet for VS Code with long descriptions. I have noticed that the description popup window in VS Code has a scrollbar, but it would be greater if I can enlarge the window. This seems not to be possible in the current version (1.13.1). It would be better if one can either set the height and width in the preferences or change the size of the popup with mouse dynamically.  Regards steff
---
Título: Inconsistencies between find widget and find viewlet
Descripcion: If you have no search term in the find in current file widget and the find viewlet why do the replace commands behave differently?  ctrl+h will open the find widget and focus the **find** textbox  ![image](https://user-images.githubusercontent.com/2193314/27319190-18f417bc-5545-11e7-82dd-c96609eade35.png)  ctrl+shift+h will open the find viewlet and focus the **replace** textbox  ![image](https://user-images.githubusercontent.com/2193314/27319204-27aed3aa-5545-11e7-90e5-18b945cd9994.png)  Also the different wording of Find/Search seems easy to fix.
---
Título: Improve editor history navigation: merge locations
Descripcion: There are some scenarios where our editor history navigation is not ideal.  Example: Goto definition  1. go to definition to jump somewhere else and produce a history entry  2. from the place where you end up, click around a little bit (not more than 5 lines away) 3. jump back 4. jump forward  => you end up at the original place (the definition) instead of the last location you were before going back  Example: Exploring code  1. click into a line 2. click 3 lines below 3. click 3 lines below 4. jump back  => you end up not in the original line from 1. but in the one from 2.  Both issues can be solved by smartly merging a history entry with the current position if it does not qualify for a new location.  /cc @egamma
---
Título: Windows: Investigate custom menu implementation
Descripcion: To fix 35+ menu issues: https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Amenu
---
Título: Toolbar like the one in Visual Studio for most used commands
Descripcion: I know, the spirit behind VS Code is to be an editor more than an IDE, and what makes different one of the other is mostly the tool bar. Other products like Atom and Sublime use the command bar for calling commands in the app, however, the convenience of having a customizable toolbar where you can add and remove buttons for the commands you use the most is enormous and helps productivity. I know many developers will not like this, others will love it (like me), you could make it optional (like the minimap was before) maybe include it as a plugin to see what the acceptance rate is among developers.  I would certainly love it, and I think that many others coming from IDEs like Eclipse and VS will love it.  ![captura de pantalla 2017-06-18 a la s 08 35 29](https://user-images.githubusercontent.com/3942218/27261066-25d3e984-5401-11e7-997a-3e9887b2b3b0.png) (something like this but where you can assign commands to buttons). Even using some generic icon if there is none available for the command would be great. Just having the ability to have a favorite command (indent this file using 4 spaces, for example) handy in that way would be awesome.
---
Título: TS Difficult to distinguish between parameter hints and method description.
Descripcion: - VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:41:25.571Z) - OS Version: Linux x64 4.10.8-100.fc24.x86_64 - Extensions:   |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.9.3| |sort-lines|Tyriar|1.3.0| |npm-intellisense|christian-kohler|1.3.0| |vscode-eslint|dbaeumer|1.2.11| |python|donjayamanne|0.6.5| |pgsql|doublefint|0.0.8| |vscode-npm-script|eg2|0.2.0| |vue|jcbuisson|0.1.5| |VBScript|luggage66|0.0.1| |csharp|ms-vscode|1.10.0| |debugger-for-chrome|msjsdiag|3.1.4| |addDocComments|stevencl|0.0.8| |better-align|wwm|1.1.5|,  ---  **Expected:**  I am able to easily distinguish between the parameter description and the method description itself.  ---  **Actual:**  I am not able to:  ![download 1](https://user-images.githubusercontent.com/5995080/27250389-21f5919a-5326-11e7-84c2-1f55e2bf5ef2.png)
---
Título: Support for custom toolbars
Descripcion: This is a feature that is provided in Atom through an extension. https://atom.io/packages/tool-bar  As far as I understand, it is not possible in vscode currently any more than a custom debug toolbar is supported. This can be useful for things other than debugging, such as a toolbar to add resource types, as in GameMaker's IDE.  ![GameMaker](http://gamemaker.info/library/manual/images/form_main.jpg)
---
Título: I want put the window of find reference result inset the sidebar, but now it's a float window. Float window is hard to watch in long time.
Descripcion: - VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z) - OS Version: Windows_NT ia32 6.1.7601 - Extensions:   |Extension|Author|Version| |---|---|---| |rainbow-brackets|2gua|0.0.6| |html-snippets|abusaidm|0.1.0| |python|donjayamanne|0.6.5| |vs-color-picker|lihui|0.6.0| |bash-debug|rogalmic|0.0.7| |code-settings-sync|Shan|2.8.1| |vscode-multiclip|slevesque|0.1.2| |JavaScriptSnippets|xabikos|1.4.0| |ReactSnippets|xabikos|1.3.0| |Material-theme|zhuangtongfa|2.8.6|,   ---  Steps to Reproduce:  1. 2.
---
Título: my suggest for making the file icon better
Descripcion: Now we have different kind of icon for c++/java/json with different kinds of file can we make this feature into explorer of windows or something else for example a c++ user now have a paper and a vscode icon on it But I think we can put c++(like what you designed in vscode) in the icon. This can help us distinguish different kinds of file.(currently vscode is my main reader)
---
Título: Code font in "Find References" does not work for me
Descripcion: I see we now use the editor font in the "Find References" tree:  ![image](https://user-images.githubusercontent.com/900690/27077268-c26c5856-502f-11e7-93a9-02a8573d19cf.png)  First of all, if we start to use this we should also use it in the search results view to be consistent (the results already look very similar).   I suggest to have a setting for this though, I prefer the workbench font for search results in lists like that.  //cc @Microsoft/vscode for more UX input
---
Título: Different icons from procedure and function in Symbol list
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.13.0 - OS Version: Windows 7  Hi, is possible to have differe icons from functions and proceures? ![1](https://user-images.githubusercontent.com/22749175/27070886-18e91d0a-501b-11e7-839f-8bb62a712c75.png)
---
Título: change added filetype images so that typescript and javascript files have differentiating colors
Descripcion: without this, the mini js and ts thumbnail in front of files in blue doesn't add anything valuable since they look so alike. Even shifting one of them to a similar shade of green would help. VS code version 1.13.0 <img width="158" alt="screen shot 2017-06-12 at 10 13 58 am" src="https://user-images.githubusercontent.com/28740267/27046045-df0326e4-4f57-11e7-85a3-e3b47dc35c38.png">
---
Título: How to change settings/available values should be more obvious
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.13.0 - OS Version: macOS Sierra 10.12.5  First: thanks for making `window.titleBarStyle` an option, a non-native title bar is pretty annoying to me, and unnecessary in Code. (Proxy icons! Real right-click path menu! Consistency!)  But even though I discovered that great setting, I wasn’t sure *what* to set it to. Since the default settings view just shows `// Place your settings in this file to overwrite the default settings` without much explanation, I expected that I had to manually copy-paste settings. I didn’t notice the pencil icon, hiding somewhere in the gutter.  Perhaps that line in default config files should mention the pencil icon? Also, if the `window.titleBarStyle` option description mentioned what you can put there, it’d be even better (some options already do)
---
Título: Improve usability on portrait monitors
Descripcion: I prefer to use a monitor in portrait mode for editing code. (Or one portrait and one landscape.) Currently there are some issues when using this configuration: - The sidebar has a minimum width is not changeable and should be able to change the font size seperatly - The sidebar is used for search results - there should be an option to put search results on the bottom panel with the other tabs (Problems, Output, etc.) - No tear-off editors movable to other monitors
---
Título: Editor area has an extra space on the top when opening find/replace panel (ctrl+F)
Descripcion: - VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z) - OS Version: Windows_NT ia32 6.3.9600 - Extensions:   |Extension|Author|Version| |---|---|---| |githistory|donjayamanne|0.2.0| |docthis|joelday|0.4.4| |vscode-icons|robertohuertasm|7.9.0| |bootstrap-3-snippets|wcwhitehead|0.0.9|,  --- ![image](https://user-images.githubusercontent.com/10230290/26996168-61d98df8-4da3-11e7-80bf-2cc2b2ca150e.png)  Steps to Reproduce:  1. Open any file on the editor 2. Scroll to the top 3. Press Ctrl+F or Ctrl+H, or Edit > Find or Replace 4. Scroll editor to top again
---
Título: Request - Find in path preview window like in WebStorm
Descripcion: Screenshot: ![image](https://user-images.githubusercontent.com/13297000/26966816-5fe5266e-4d04-11e7-9c18-7a9a26309276.png)
---
Título: Provide Task Runner viewlet
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  We did a Task 2.0 deep dive today and this issue collects the combined feedback received.   ### Task Properties  - echo should be true by default so that users get a better idea of the task executed - we should support flattening the JSON properties as we do with other settings (e.g `"terminal.echo": true` instead of `"terminal": { "echo": true }` - we should better separate task declaration from task customization. Currently both happens in the tasks array property and the differentiating element is the `customize` property.  ### Task Picker  The task picker should support a decription / detail message to better explain what the task does. We also discussed whether the task picker should support MRU which would automatically move the most used tasks up to the top without customization. If we provide a task panel (see below) such a MRU list could be useful there as well.  ### Task Customization  The task customization is currently instance based where the task instance is identified by a task id, which can be quite 'cryptic'. An alternative way would be to identify a task based on a type and a key that is defined by the type and therefore can vary from task runner to task runner. So instead of having something like: ```json 	{ 		"customize": "vscode.npm.run build",	 		"taskName": "npm: run build" 	} ```  a customization would look like this  ```json 	{ 		"customize": { 			"type": "npm", 			"file": "${workspaceRoot}/package.json", 			"script": "build" 		}, 		"problemMatcher": ["$tsc"] 	} ```  where the structure of the identifying attribute is defined by the extension providing the runner support. In the example above the fact that a npm script is identified by the location of the package.json file and the script name comes from the npm extension. This might look different for task contributed by gulp of TypeScript  ### Problem Matchers  For task that execute a target of a task runner (e.g. gulp, npm, grunt) VS Code can't decide which problem matchers to attach. Since picking the right problem matcher currently requires editing the tasks.json file we should better support the user with this. We discussed the following ideas:  - always attach all known problem matchers if a task has no problem matchers. This might result in false positives and might require us to support removing problem matchers via a configuration mechanism. - we could help the user attaching a problem matcher by generically scanning the output for problems and suggest problem matchers that exactly match these. If selected we update the tasks.json file for the user.  ### Task panel  It was suggested to run tasks in its own panel instead of reusing the terminal panel. They should still be executed using the terminal to get ANSI control character support and other nice terminal features (e.g. Ctrl+C). The panel could offer additional features like:  - a task summary (execution time, exit code, ...) - the output of a task could be folded (like travis does for example) - allow for in place customization of a task (for example attach a problem matcher) without the user being forced to edit a tasks.json file.  We also discussed the need of a task viewlet but decided that this will not add any big additional value over the task picker and a separate panel.  ### Top Level Menu  We were also discussing whether the tasks deserve a top level menu. In general this was consider a good idea. However such a menu should be semantically not technical. So instead of naming it Tools or Tasks it would be better to offer top level menus like Build, Rebuild All, Clean, Run Tests. The downside of such an approach is that such a menu looks out of place if none of these entries trigger any meaningful action in the workspace (e.g. if a simple JS project is open at lease Build, Rebuild All and Clean don't make any sense)   ### Better Selfhosting  Would be great if we can improve the self hosting coverage of tasks. This is currently hard to do due to the fact how we build. But @dbaeumer will tweak our tasks.json to support more tasks currently run in the terminal (e.g run tests, linting, ...)
---
Título: Include announcement section for extension authors
Descripcion: Sometimes extension authors like me at `settings-sync` need to announce something, which may large chunk of users wont care but some users though. Hence allow authors to interact with users by showing announcements.  Currently there is not way other then that I am showing the message upon the code start and users takes it as spam or whatever. When they click on the message, link should be opened, or the message can have multiple buttons.  If there is announcement section in the extension with a notification badge in the extensions will allow users to view them anytime, unlike they are doing right now to close the information message box every time.     // cc @Tyriar (https://github.com/shanalikhan/code-settings-sync/issues/335#issuecomment-305996633)
---
Título: Allow custom icons for reference/IntelliSense components
Descripcion: - VSCode Version: 1.12.2 - OS Version: Windows 10 x64 Pro  Allow customization of icons when you import a new module OR use the IntelliSense autocompletion.  Example with *TypeScript*:  ```typescript export const Const = 2, export class Class {} export interface Interface {} export let Let = '23', export type Type = {} export function Function() {} ``` ... And then when you import: ![VSCode import Demonstration](http://i.imgur.com/Q1iPnw3.png)  So, there are these default IntelliSense Icons ![VSCode Default IntelliSense Icons](http://i.imgur.com/YpELVhO.png)  I wanted to use the `class` and `interface` icons more like Eclipse's icons for Java components.  ![Eclipse Class Icon](https://help.eclipse.org/neon/topic/org.eclipse.jdt.doc.user/gettingStarted/images/view_typehierarchy_testcase_small.png)  Another thing to notice: `type` and `class` have the same icon, and it can be really confusing sometimes.  PS: I don't know how it's supposed to be on other languages, I've only noticed this on TS (And JS).
---
Título: Suggestion list jumps between below and above position
Descripcion: - VSCode Version: Code - Insiders 1.13.0-insider (afe47dc84467b487ce0079ff72f55e7ef4f7ebca, 2017-05-30T10:34:18.253Z) - OS Version: Darwin x64 15.6.0 - Extensions: none ---  Testing #27315  It seems to be triggered by an entry with a long doc: ![may-30-2017 14-39-47](https://cloud.githubusercontent.com/assets/9205389/26606272/2bcf83b2-4546-11e7-9a21-fcee83f26b87.gif)
---
Título: Emmet uses the "references" icon
Descripcion: - VSCode Version: Code - Insiders 1.13.0-insider (c2a17a7929259d3d2643cb3f98478e994a39605b, 2017-05-30T05:12:15.312Z) - OS Version: Linux x64 4.10.0-21-generic - Extensions:   |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.9.3| |lorem-ipsum|Tyriar|1.0.0| |sort-lines|Tyriar|1.3.0| |theme-sapphire|Tyriar|0.2.1| |vscode-svgviewer|cssho|1.4.1| |tslint|eg2|0.15.0| |git-project-manager|felipecaputo|1.3.2| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.2| |seti-icons|qinjia|0.1.3|,   ---  #27316  The icon has semantic meaning already that doesn't match when emmet is trying to do:  ![image](https://cloud.githubusercontent.com/assets/2193314/26599256/ccbab270-452c-11e7-83bf-8c4cba2c66dd.png)  https://code.visualstudio.com/docs/editor/intellisense#_types-of-completions
---
Título: When launching settings, the search is focused instead of json file
Descripcion: - VSCode Version: Code - Insiders 1.13.0-insider (c2a17a7929259d3d2643cb3f98478e994a39605b, 2017-05-30T05:12:15.312Z) - OS Version: Linux x64 4.10.0-21-generic - Extensions:   |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.9.3| |lorem-ipsum|Tyriar|1.0.0| |sort-lines|Tyriar|1.3.0| |theme-sapphire|Tyriar|0.2.1| |vscode-svgviewer|cssho|1.4.1| |tslint|eg2|0.15.0| |git-project-manager|felipecaputo|1.3.2| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.2| |seti-icons|qinjia|0.1.3|,   ---  This seems to make it much more difficult to change settings and really interrupts my flow personally. Before I would do the following:  1. ctrl+, 2. ctrl+end 3. Add a new setting  Now I need to:  1. ctrl+, 1. tab 1. tab 1. tab 1. tab 1. tab 1. tab 1. ctrl+end 1. Add the setting  I notice there is `workbench.settings.openDefaultSettings` which kind of works around the issue, but I like the defaults there to still search for reference so I would not want to use this setting.
---
Título: Too Many Buttons on Tab Bar
Descripcion: <img width="231" alt="screen shot 2017-05-30 at 9 33 03 am" src="https://cloud.githubusercontent.com/assets/104980/26585933/a8f9f1b8-451b-11e7-96a8-eb8b646e2fae.png">  ## Expected Behavior  Use the single, stationary "..." button to house all dynamic buttons, searches, and files without changing the "Tabs" width and size.   ## Actual Behavior  Too many buttons disappear and reappear depending on what has focus.  This creates a jarring experience with multiple files open in each pane.  If focused on the RIGHT pane, and clicking on the LEFT Pane, the Tabs all shift and squish to the left to make room for the buttons.  They should instead be listed under the "..." button, because they are infrequently used.  ## Setup  - VSCode Version: Version 1.12.2 (1.12.2) 2017-05-10T13:10:24.631Z - OS Version: macOS 10.12.5  ## Steps to Reproduce:  1. Split Vertical 1. Open several files in each split
---
Título: Global activity action does not trigger on space
Descripcion: **Steps:** * tab through the activity actions until the global one is highlighted and press Space or Enter.  This is because `GlobalActivityAction` does not implement the `run` method. This can probably be fixed by means of https://github.com/Microsoft/vscode/issues/27461 where the idea would be to contribute an `IAction` and in its run method we open the context menu.
---
Título: 'Press any key to close the terminal' should be visually more distinct
Descripcion: The 'meta' output 'Press any key to close the terminal' should be visually distinct from the process output (see image below). I suggest to use a grey foreground color for the text, try a grey background color, or decorate the text with a prefix/suffix character `<Press any...>`.  ![image](https://cloud.githubusercontent.com/assets/172399/26529824/fb583a32-43c7-11e7-9170-5454a990e3de.png)  // fyi @dbaeumer
---
Título: UX: align file names when renaming
Descripcion: When renaming a file or a folder in the explorer sidebar, you can see that its name has an offset of 1px because of the border of the input box. Although that's trivial, it is something interrupting for me. May we make the input box move left 1px so that the names will be aligned?
---
Título: [Feature Request] Toggle sidebar when double clicking on tab
Descripcion: I've seen this behavior in jetbrains IDEs and I think it's very convenient feature. As I see now there is no action attached to double click event on tabs. So it can be used to hide the sidebar if it's shown and show if it's hidden.
---
Título: Better editor titles for generic file names
Descripcion: - VSCode Version: 1.12.2  When working with generically named files (such as index.js/ts on a node project), it's unhelpful for that to be the main text displayed on the editor tab/Open Editors section.   At present, the folder name is hinted subtly if more than one editor with the generic name is open, but a better solution for generics would be to highlight the folder name, with the title hinted instead. ![image](https://cloud.githubusercontent.com/assets/5188481/26492003/e8af44b2-4209-11e7-93b5-d3ea2032a899.png) suggestion along lines of:  ![image](https://cloud.githubusercontent.com/assets/5188481/26492312/4c5cf9cc-420b-11e7-9fa7-e8abe10ee5e1.png)  (apologies for inconsistent slashes and folder names, I got distracted!)
---
Título: UI: Odd scroll bar design makes it unseeable
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.12.2 - OS Version: Windows 10  Steps to Reproduce:  1. Open enough editor tabs till the scroll bar appears  The scroll bar that appears is incredibly thin vertically making it quite difficult to get a hold of with the cursor and extremely long horizontally making it difficult to notice that it's there, it took me a while to realize that it existed and it was actually a mean to scroll across the tabs, I had been only closing editor tabs every time the pan overflowed.   ![vscodeoddscrollbar](https://cloud.githubusercontent.com/assets/8478946/26476953/21483b32-4190-11e7-8ac4-56456db1809e.png)  ![vscodeoddscrollbar](https://cloud.githubusercontent.com/assets/8478946/26477011/821799e4-4190-11e7-9f69-07db237a306e.png)
---
Título: Hard to see if cursor is on column 1
Descripcion: - VSCode Version: Version 1.12.2 (1.12.2) - OS Version: MacOS 10.12.5 (16F73)  It's hard to tell visually whether the cursor is on column 1:  ![screen shot 2017-05-25 at 11 49 46 am](https://cloud.githubusercontent.com/assets/63830/26468068/fa26e828-4149-11e7-868c-7950fd3aec39.png)  Compare that to TextMate 2:  ![screen shot 2017-05-25 at 12 57 48 pm](https://cloud.githubusercontent.com/assets/63830/26468069/fa3564a2-4149-11e7-9598-1dd4e569014a.png)
---
Título: Open in zen mode if file is opened directly from finder
Descripcion: As a user, I would like to get VS Code in zen mode automatically if the app is opened due to me clicking on a file in the finder.  At the moment, the normal VS Code mode is displayed, but it will show a lot of "useless" panels, for instance, the sidebar isn't useful if I opened a single file, since it will not be part of any project/folder. The same is valid for the git/debug/search in project and more generically all the Activity Bar. Plus, the bottom terminal/output/debug console etc.  In practice, when I directly open a single file, I would love to have VS Code as a simple text editor just like TextEdit or Notepad. Doing so, it would make sense to use VS Code as default editor for a lot of file formats that at the moment gets opened with Textedit/Notepad because of the basic needs of the user while he's editing them.  Possibly, the zen mode shouldn't be in "full screen" mode, to reduce the change of context.
---
Título: Explorer tree is a little compact
Descripcion: - VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z) - OS Version: Windows_NT ia32 10.0.14393  I think the explorer tree is a little compact, make it a little harder to know a file is in which folder..  VSCode: ![1](https://cloud.githubusercontent.com/assets/11925432/26445186/cfce5372-4171-11e7-8767-ca54b8c1579c.png) Atom: ![2](https://cloud.githubusercontent.com/assets/11925432/26445194/d905aba2-4171-11e7-9a95-1e462dab8b75.png) VS: ![3](https://cloud.githubusercontent.com/assets/11925432/26445198/df0f9968-4171-11e7-979d-2a93dc5b035c.png)  It's not too important, just a suggestion..
---
Título: Add support to making the window transparent
Descripcion: Right now you can't make the window transparent
---
Título: Use the same width for activity bar and Windows 10 start menu button
Descripcion: _VS Code 1.12.2 Default theme_  Hello, It's a very small detail, but there is a gap of 2px between the width of the activity bar and the width of the Windows 10 start menu button.  It's easy to see that without the status bar:  ![image](https://cloud.githubusercontent.com/assets/7969502/26400682/853272f2-4082-11e7-9ada-77164811c709.png)  The left bar of UWP application and the start menu button have the same width:  ![image](https://cloud.githubusercontent.com/assets/7969502/26400858/59e4b2ee-4083-11e7-9217-c8fc5f0f7cd6.png)
---
Título: Add Command: Copy All - Current panel output (no focus needed)
Descripcion: As a continuation of the newly added "Copy All" ContextMenu option @isidorn added it would also be very useful to have a pure keyboard access for this and other output windows.  As far as I can tell from experimentation and looking at all the commands, I cannot seem to copy terminal output using only the keyboard . if one word is clicked on with the mouse the Terminal: Copy Selected would apply. There does not seem to be a way to enlarge the selection with the keyboard. It would also be helpful with moving output.  A Copy All for any output would be highly useful and much easier for keyboard only users. I looked at the extension API and I don't think this can be done with an extension , but I may have missed something. It still makes sense to me as a built-in command, .
---
Título: UX: Revisit font sizes in the workbench (explorer for example)
Descripcion: Code : 13px Windows : 12px Result : The text looks very dense, lack of space.  Code sample (200% scale):  ![image](https://cloud.githubusercontent.com/assets/240091/26218230/d969a7cc-3c3c-11e7-94a1-fb34bb9d2d40.png)  Windows sample (200% scale): ![snipaste20170519_024919.png](https://ooo.0o0.ooo/2017/05/19/591ded00dc106.png)
---
Título: Show a count badge for Problems panel
Descripcion: It would be really helpful to make the developer more aware of errors, even when the "Problems" tab is not selected:  ![bildschirmfoto 2017-05-18 um 17 06 10](https://cloud.githubusercontent.com/assets/2146436/26209275/a17c8bcc-3bec-11e7-840d-6a9568dcd53b.png)
---
Título: UX Suggestion: add an animation when clicking bottom-right status bar buttons
Descripcion: - VSCode Version: Version 1.12.2 (1.12.2) - OS Version: MAC OS X EL Capitan 10.11.6  For new users of VSCode (I'm of cause a loyal VSCode user), some of them may find it confusing when clicking bottom-right status bar buttons (Spaces: 2, UTF-8, etc.), they may think nothing happens on the clicking if they don't notice that a Command Palette drops down from top of the screen, the problem is the click point is far away from the position of visual feedbacks.   Will it help if it adds an animation when clicking those buttons, e.g. a box shape slides from bottom-right to top-middle? So that user's attention would be guided to the Command Palette.  Thanks.
---
Título: Missing the 'Expand Problems' option
Descripcion: - VSCode Version: 1.12.2 - OS Version: Server 2016 DataCenter  Steps to Reproduce:  1. Create some problems 2. Collapse all problems 3. It's unable to expand them again  ![image](https://cloud.githubusercontent.com/assets/28626283/26102184/38642c4e-3a34-11e7-90c3-167d3502d4cb.png)
---
Título: [Feature Request] Quick Navigation as WebStorm
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.12.1  - OS Version: Mac  Steps to Reproduce:  1. Type at slidebar could navigation file tree, just like WebStorm  ![untitled](https://cloud.githubusercontent.com/assets/227713/26038953/4e8efb28-3946-11e7-9a0b-5082af868e30.gif)
---
Título: [themes] theme colors of overview ruler
Descripcion: Steps to Reproduce:  1. Click on symbol in code. 2. Mark the places of use of the symbol on the scrollbar. 3. Place the declaration of the symbol should be marked with a brighter color: ![marked-symbol-declaration-brighter-color](https://cloud.githubusercontent.com/assets/16800535/26029117/936b5ecc-382d-11e7-9b26-ff86bebb72eb.png)   This will allow you to find the symbol declaration.
---
Título: Marked brackets range on scrollbar
Descripcion: - VSCode Version:1.12.1 - OS Version:Linux  Steps to Reproduce:  1. Click on the code, inside the brackets. 2. Marked brackets range on scrollbar. Internal bracket marked with a main color. External brackets in gray (all). Same with more nesting brackets. ![brackets-range-on-scrollbar](https://cloud.githubusercontent.com/assets/16800535/26028968/9dececb0-382a-11e7-814b-fff32eecd0be.png) 3. As soon as one brackets, it's just the main color. ![brackets-range-on-scrollbar2](https://cloud.githubusercontent.com/assets/16800535/26028965/97c3ada6-382a-11e7-81fa-c72370054c10.png)   This will be very useful. Particularly for longer code blocks, so that you can easily see where it ends and where it starts.
---
Título: Fluent Design
Descripcion: I love VS Code. I love it so much that I have made like 12+ extensions for it and reported 20+ issues and gave talks about it. In Emacs vs Vim fights, I always talk about vscode and  I find everything about it amazing and better than any other editor. It has exactly all that is needed and has removed exactly all that is junk. So it's awesome, but when it comes to design it's not the best UI on the planet and so many people just use Atom because it's cute:  <img width="989" alt="screen shot 2017-05-13 at 1 01 42 am" src="https://cloud.githubusercontent.com/assets/2157285/26016088/d5ddd0e2-3778-11e7-95ea-205618f95b4a.png">  If you look at them they have round corners in the tabs, they have multi-layers of borders and shadows and sci-fi like coloring and huge paddings. This makes it very cute  Ever since the first leak photos of Microsoft's new design language, I thought what if VS Code be redesigned in it and just as I heard that Microsoft finally announced it I felt like talking about it here.  I know that UI is one of the biggest parts of VS Code. Just recently #3112: "Support to theme the entire workbench" issue was closed that was one of the biggest features and I get it that it's really a huge task but I feel like a pretty and cute editor can be the final act.  Issues like #12377 show that this is not only my request. I know how the tiniest of details can sometimes be hard to implement (#26113) and I know how much of a big request this is. However, I think is so much worth it if a cuter prettier VSCode is out there.  For example. Look at the auto-complete in Atom vs VS Code:  <img width="336" alt="screen shot 2017-05-13 at 1 21 21 am" src="https://cloud.githubusercontent.com/assets/2157285/26016514/a27f9f80-377a-11e7-9674-b93bb29defac.png">  <img width="533" alt="screen shot 2017-05-13 at 1 21 43 am" src="https://cloud.githubusercontent.com/assets/2157285/26016521/aa90bcea-377a-11e7-9002-6da863fb3372.png">  Atom actually has very bad icons and VS Code has some of the best, cutest best-colored icons that could be in the application. However, just because of better shadows, round corners and no border design in the Atom, it looks better there. If only some basic design concepts are changed within VS Code and if it is implemented in the way of Fluent Design Language it could be much better than any other editor/IDE.
---
Título: 'Go to Implementation' is missing from the `Go` menu
Descripcion: Go To Implementation should be added to the `Go` menu in the menubar  ![image](https://cloud.githubusercontent.com/assets/172399/25947864/88fa32ca-3651-11e7-97a3-183a15604154.png)
---
Título: Show file (and position) of workspace symbols
Descripcion: Since workspace symbol search has a high chance of returning many items with duplicate names we should show the file and position where they are defined. Also, this information should be searchable.   TypeScript has [ghetto fix](https://github.com/Microsoft/vscode/commit/c94789c509a8d85400d3d94bc70c8456af1b0a09 ) this which is bad because  * it breaks with the paradigm that extensions provide data and that we provide the presentation/ui by abusing todays rendering/layout * it assumes only TypeScript developers are interested in this information and sets a bad sample  * it messes with folks that use this information via the complex api command (`vscode.executeWorkspaceSymbolProvider`)
---
Título: SignatureHelp Displays Multiline Documentation Differently Than Completion Item Provider
Descripcion: For the code:  ```js /**  * a  * b  * c  */ function foo(x, y) {}  foo ```  The completion item for `foo` preserves the newlines:  <img width="780" alt="screen shot 2017-05-09 at 9 24 42 pm" src="https://cloud.githubusercontent.com/assets/12821956/25883265/097075e0-34fe-11e7-88dd-a0685bafea81.png">   The signature help display does not:  <img width="371" alt="screen shot 2017-05-09 at 9 25 57 pm" src="https://cloud.githubusercontent.com/assets/12821956/25883280/20fc6412-34fe-11e7-814a-61c698e2fd56.png">   We should be consistent in these cases. This impacts #26290
---
Título: Double border between completion and docs
Descripcion: - VSCode Version: Code - Insiders 1.13.0-insider (ae5c28306b8db90d0b9d7c4af976c2fa76237bb5, 2017-05-08T15:28:02.591Z) - OS Version: Darwin x64 16.5.0  With the documentation being displayed to the right:  ![screen shot 2017-05-08 at 1 52 54 pm](https://cloud.githubusercontent.com/assets/4674940/25824938/e534bb86-33f5-11e7-9f48-75d4a4426ad3.png)  The two boarders add-up to a strong line between the list and the documentation. It should only display as a single border.
---
Título: TypeScript switcher -> show current version on the same line
Descripcion: Today the current version label is shown below. I find it difficult to read: ![image](https://cloud.githubusercontent.com/assets/172399/25581096/df5f5e0c-2e85-11e7-952a-1e239dc1dc11.png)  I suggest to show the current version indicator on the same line ![image](https://cloud.githubusercontent.com/assets/172399/25581123/17140ab4-2e86-11e7-9ba0-3f65af8f9a30.png)  // CC @kieferrm
---
Título: 'Split Editor' Command Does Nothing In Diff View
Descripcion: - VSCode Version: 1.12 - OS Version: Mac OS 10.11.6  **Steps to Reproduce**  1. Open diff view of a files with a single editor group open 2. Run the `Split Editor` Command  **Bug** Nothing happens
---
Título: Same experience for SCM repository init as in Explorer view with no folder
Descripcion: I'd love to see it as a user.  Ref: https://github.com/Microsoft/vscode/issues/21103#issuecomment-281756149, https://github.com/Microsoft/vscode/issues/21103#issuecomment-297950803
---
Título: Drop cursor missing if drop location === current cursor location
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  Refs: #25338  IMO the current cursor location is less important that the drop indication. So the cursor should show the drop location style.  ![cast](https://cloud.githubusercontent.com/assets/1931590/25428184/5e0f94d4-2a75-11e7-9d52-fdbd3a533e72.gif)
---
Título: Editor drag and drop mouse feedback missing
Descripcion: Refs: #25338  OS X, insider  1. Enable editor drag and drop and select some text 2. Drag that text 3. Notice that the editor cursor nicely updates however the mouse cursor does not update to reflect that I am dropping something. This leaves me puzzled as the user what is going on as there is no prominent feedback that I am actually dragging the text in the editor  It would be great if we could fix this as it would greatly increase the experinece imho Notice in the gif that I am dragging the text all the time while the mouse is unchanged  ![dnd](https://cloud.githubusercontent.com/assets/1926584/25426320/03ffde14-2a6f-11e7-9482-9e3274d2df66.gif)
---
Título: Problem saving keybindings
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.11.2 and 1.12.0 - insiders - OS Version: Windows 10  -- Sorry for the English, I used Google Translator --  When I set a shortcut, if you press <kbd>Ctrl</kbd> + <kbd>k</kbd>, the VSCode is waiting for a second combination. Which works great.   But if I press any keyboard and then <kbd>Ctrl</kbd> + <kbd>k</kbd>, this key takes the function of <kbd>Ctrl</kbd> + <kbd>K</kbd> and always waits for a second combination.  Example: <kbd>n</kbd> <kbd>Ctrl</kbd> + <kbd>k</kbd>  If you type a text and press <kbd>n</kbd> it is waiting for the second combination.  I know the same open multiple ports for shortcuts, but maybe one maybe a setting where I only limit use to <kbd>Ctrl</kbd> + <kbd>k</kbd> to receive a second combination.  My suggestion is (I do not know if it's possible):  1- Limit second combination only to <kbd>Ctrl</kbd> + <kbd>k</kbd>, or until the user changes. 2- Whenever you have this situation, reverse the shortcuts automatically, either on the new screen or manually. If you typed <kbd>n</kbd> <kbd>Ctrl</kbd> + <kbd>k</kbd> it should interpret or edit the file for <kbd>Ctrl</kbd> + <kbd>k</kbd> <kbd>n</kbd> 3 - Prevent saving the shortcut key if it is wrong or prevents it from working.
---
Título: Odd Green Right Border in High Contrast Search Results
Descripcion: Steps to Reproduce:  1. Enable high contrast mode 2. Search for a common string in the vscode codebase   **bug**  <img width="409" alt="screen shot 2017-04-25 at 1 06 10 pm" src="https://cloud.githubusercontent.com/assets/12821956/25405403/115dd4ec-29b8-11e7-8968-e8675eeaa2f5.png">   There's an odd green border on the right in the find results. I believe the green should only be shown when using replace
---
Título: Persistent result view for Find All References
Descripcion: - VSCode Version: 1.11.2 - OS Version: Windows 10.0.14393  I'm trying to explore the code in a large (~25000 LOC) TypeScript file, and it gets a little confusing when you're only able to look at the find references result for a single function at a time. I had two feature requests:   - Would it be possible to give users the option to disable the code-attached Find References result window and simply display it as a fixed pane somewhere?  - Would it be possible to display a history of Find References searches and their results? Something similar to Notepad++'s find results:  ![Notepad++ find results](https://ldzfpw.by3302.livefilestore.com/y4mqGe8s5zgmKkAVaIZgSe7QPIdPU1Lc_G9GUWbSOxKg_Dh2LC_iYXfxI88ZyfmbrA6Ptcya2OTsTolCUn7gxFj7NS0N4cvImTr6IDf0fTfRpqwKUMXeXS9BiIcGK0PbXiWLAxnl7LQZpyISjioeU-gWBGrclX4xG_XCM2xRVWgRHpgAAqv4tLt-PDW5Z0hZda_LGCmGhOtWnNaSYljKgYUlg/2017-04-23_19-20-34.gif?psid=1)  A more general solution to the problem would be some kind of symbol explorer that lets you inspect the complete reference graph of any symbol, however this might be prohibitively expensive given how the language server protocol works.
---
Título: Check for Updates should be on the Help Menu
Descripcion: For consistency with Office for Mac the "Check for Updates" should be under the Help menu not the App Name menu.  - VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z) - OS Version: Darwin x64 16.5.0 - Extensions:   |Extension|Author|Version| |---|---|---| |vscode-markdownlint|DavidAnson|0.7.1| |beautify|HookyQR|1.0.2| |npm-intellisense|christian-kohler|1.3.0| |gitignore|codezombiech|0.5.0| |jshint|dbaeumer|0.10.15| |vscode-eslint|dbaeumer|1.0.7| |githistory|donjayamanne|0.1.0| |python|donjayamanne|0.4.2| |tslint|eg2|0.5.39| |vscode-npm-script|eg2|0.1.8| |git-project-manager|felipecaputo|1.2.1| |vscode-npm|fknop|3.3.0| |vscode-JS-CSS-HTML-formatter|lonefy|0.2.3| |Go|lukehoban|0.6.44| |mssql|ms-mssql|0.3.0| |Theme-MarkdownKit|ms-vscode|0.1.4| |csharp|ms-vscode|1.4.1| |mono-debug|ms-vscode|0.11.0| |debugger-for-chrome|msjsdiag|1.2.0| |Ruby|rebornix|0.9.0| |yo|samverschueren|0.8.5| |Spell|seanmcbreen|0.8.6| |gitblame|waderyan|1.3.0|,
---
Título: Prominently indicate whether an editor or the panel has focus
Descripcion: This is a feature request.  I keep catching myself starting to type a terminal command while it's the editor that currently has focus. When the focus is on the sidebar, this is easy to see — for example, selected file is white-on-blue, or the search box has blue border. I think there should be a similarly prominent visual indication of focus being on an editor or on the bottom panel.  PS To anyone having the same issue — I think setting      "terminal.integrated.cursorBlinking": true,     "terminal.integrated.cursorStyle": "block"   should mitigate this a bit.
---
Título: can't create breakpoint on current line because light bulb is in the way
Descripcion: - VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z) - OS Version: Darwin x64 16.5.0 - Extensions:   |Extension|Author|Version| |---|---|---| |uncrustify|LaurentTreguier|1.5.1| |unity-debug|Unity|1.2.0| |vscode-nuget-package-manager|jmrog|0.0.2| |cpptools|ms-vscode|0.10.3| |csharp|ms-vscode|1.9.0| |vscode-icons|robertohuertasm|7.3.0|,   ---  There has to be a better way. Make room for both? Don't give me the option to extract a method unless I actually have text selected? 9 times out of 10, when I go to set a breakpoint, it's on the current line. so I nearly always have to move the cursor before I can.
---
Título: Suggestion: Don't center justify 'label' call stack frames
Descripcion: - VSCode Version: 1.12.0 insiders - OS Version: Windows 10  On the C# extension we have stack frames that should really have the `presentationHint` of `label`. So I went to add this, but I found the results somewhat visually jarring. I conducted a rather unscientific survey by asking my coworkers what they thought of it, and everyone seemed to have a similar reaction. So I am opening this bug as a suggestion to stop center-justifying 'label' frames.  Here is a screen capture of what this looks like:  ![callstackwithlabelframes](https://cloud.githubusercontent.com/assets/11078489/25296926/7b9c8acc-269f-11e7-95be-99ac021f548e.png)
---
Título: Faced problem with dangerous Git COMMAND
Descripcion: I have deleted my entire project accidentally by pressing "Discard All Changes" option on Git. This type of **DANGEROUS** command should not be in GUI.   I know it's my mistake, why I didn't know about it. But it should be in consider that all user/developer are not same.  - VSCode Version: 1.11.1 - OS Version: Windows 10
---
Título: Missing button for deleting individual watches
Descripcion: VSCode: 1.11.2  What has happened to the "X" button in watches?  Previously (I'm not sure exactly what versions, but at least v1.7), it was possible to click a cross button to the right of each individual watch expression to remove it. Now it seems the only way to delete an individual watch is to edit it to a blank string - this is a bit tedious.  Was this removed on purpose? If not, could you put them back please.
---
Título: document text search box located over found result on long first string
Descripcion: - VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z) - OS Version: Darwin x64 16.5.0 - Extensions:   |Extension|Author|Version| |---|---|---| |terminal-tabs|Tyriar|0.1.1| |npm-intellisense|christian-kohler|1.3.0| |gitlens|eamodio|3.4.5| |tslint|eg2|0.12.0| |TypeScriptImport|kevinmcgowan|1.17.0| |quicktask|lkytal|2.6.0| |vscode-extension-auto-import|moppitz|1.3.3| |debugger-for-chrome|msjsdiag|3.0.1| |vscode-versionlens|pflannery|0.12.2| |autoimport|steoates|1.2.2| |vscode-react-native|vsmobile|0.3.2| |ReactSnippets|xabikos|1.2.1| |local-history|xyz|1.1.1|,   ---  Steps to Reproduce:  1. add to new html file: ``` <div class="input-group">   <input class="form-control" id="search" ng-change="onChange($ctrl.query)" ng-model="$ctrl.query" ng-model-options="{debounce:750}" placeholder="Query" />   <div class="input-group-btn"> ``` 2. find query "(" 3. can't see first result if screen not wide enough  Expected: move query box if result located under it.  Screenshot illustrating the problem: https://cl.ly/2H1W3i1j011H
---
Título: Can't tap list widget
Descripcion: From #9338  cc @juliannojungle
---
Título: Clean All Icon and Message should be DIFFERENT and STAND OUT
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: latest - OS Version: macOS  Steps to Reproduce:  1. wants to revert one file (at the top) 2. accidentally clicks "Clean All" instead because icon and confirm message are basically the same 3. curse endlessly after losing hours of work....
---
Título: Make the currently active editor more distinguishable from others
Descripcion: As a user of a large screen space (two monitors) I keep my editor in one side and several terminal windows on the other side.  When my eyes swift from the editor the the terminals and back again, I would like a "very obvious" visual hint of which was the tab I was working on.  Currently all tabs look equally important, but I would greatly appreciate a clear visualization of the active tab  Some random thoughts:  - only the active tab should highlight the current line  - syntax in the active tab should "stronger" than in the non active tabs. Non active tabs should have a "weaker" visual, but maybe not to the point of making them blurry  - The active tab should look very - more different than tabs in the same group (and other groups too)
---
Título: Debugging UI gets crowded
Descripcion: - VSCode Version: Insiders - OS Version: macOS  Steps to Reproduce:  1. Start a debugging session 2. Add a bunch of breakpoints  ![breakpoints](https://cloud.githubusercontent.com/assets/2449568/24818566/e111a0d2-1b95-11e7-912c-a1d3b17e378a.gif)  A couple ideas on how to handle this better.  - There seems to be a lot of wasted space for the variables section. We could move watchers up as breakpoints moves up.  - I wonder how often watchers are used compared to breakpoints. My gut says breakpoints are much more. Maybe we switch those two UI elements.
---
Título: Extension Names in Extension Browser Should Display an  ... For Long Names
Descripcion: ![screen shot 2017-04-07 at 9 46 25 am](https://cloud.githubusercontent.com/assets/12821956/24810413/391f0036-1b77-11e7-97fb-535c9c1f2b73.png)  1. Search for `angular`  in the extension explorer  **Bug** Note that extension names that are too long have a hard cutoff  **Suggested Fix** Add a `...` overflow to the name, similar to the extension description
---
Título: Markdown Preview Current Element Hover Indicator on Blockquote Shows Extra Bar
Descripcion: ![screen shot 2017-04-07 at 9 38 17 am](https://cloud.githubusercontent.com/assets/12821956/24810112/fe19906a-1b75-11e7-8a69-a317b3783b1f.png)  Note the extra bar the right of the blue block quote bar
---
Título: Confusing References code lens
Descripcion: Testing in this setup https://github.com/Microsoft/vscode/issues/23895  Get this Code lense with '0 References' in `src\app\app.component.ts` ![image](https://cloud.githubusercontent.com/assets/172399/24795370/6bc4e5e8-1b89-11e7-9ce6-68f89ba7272b.png)  Clicking the references link just shows an empty peek, it is not clear what is being search for. ![image](https://cloud.githubusercontent.com/assets/172399/24795458/b288dcf0-1b89-11e7-9866-3a6c359605f2.png)
---
Título: File icons for default languages outside of VS Code (icons in Finder)
Descripcion: ## Description  I would like to be able to distinguish my Objective-C .h, .m, Markdown, and Swift (and any other programming/markup language) files from one another in the Finder when VS Code is set to be the default app for opening these files. Currently all the files show the same VS Code document icon. When files are set to be opened by Xcode by default the file icons are different based on their type. Additionally it would be nice if external packages could dictate different images for different file types.  ## Steps to Reproduce  Set VS Code to be the default app for opening Objective-C and Swift files. View file icons in Finder #### Expected behavior: [What you expected to happen]  File icons are different based on the file type.  #### Actual behavior: [What actually happened]  File icons are all the same VS Code document icon.
---
Título: Use different badge colors for modified and renamed files in git sidebar
Descripcion: Please use different badge colors for modified and renamed files in the git sidebar to provide better visual distinction, which is important if there are lots of changes - especially upon merging. Right now both use blue color and visually hardly distinguishable.  I'd suggest orange color for some of them. :)  ![capture](https://cloud.githubusercontent.com/assets/4777512/24709285/121821da-1a22-11e7-8dac-489948ae4eb2.PNG)
---
Título: Go to Implementation should be 'Find All Implementations'
Descripcion: Similar to how we have "Find All References" we should have "Find All Implementation". Today it's aligned with "Go to Definition" but I think its much more likely that I have one definitions of something but many implementations of something. For the same reasons it's called "Find All Referenced" and not "Go to Reference"
---
Título: Go to Implementation highlights everything
Descripcion: * run 'go to implementation' on something that triggers peek/preview * 🐛 the whole things is highlighted not just the name  <img width="837" alt="screen shot 2017-04-05 at 11 02 18" src="https://cloud.githubusercontent.com/assets/1794099/24698084/c046c12c-19ef-11e7-8e51-8e4610495fef.png">
---
Título: Go to Implementation talks about definitions
Descripcion: * trigger 'Go to Implementation' on something that has multiple implementations * :bug: the title of the embedded editor shows "definitions"  <img width="981" alt="screen shot 2017-04-05 at 11 02 11" src="https://cloud.githubusercontent.com/assets/1794099/24698003/726e95d8-19ef-11e7-881a-376f08a5d867.png">
---
Título: Preview markdown icon too similar to git show changes
Descripcion: Please change the show markdown preview icon. The current one is too simlilar to git view changes and I always click on the wrong one and I am using this product for a long time now  ![screen shot 2017-04-05 at 10 47 58](https://cloud.githubusercontent.com/assets/1926584/24697441/766108d0-19ed-11e7-943a-c892c516e043.png)
---
Título: Symbol outline multi-line highlight is visually inconsistent when interleaved with code lens
Descripcion: If the symbol outline is highlighting an entry that spans multiple lines and there is a code lens within that range, the code lens line is not highlighted. See attached image.  It seems like the code lens line should also be highlighted in the same color.  - VSCode Version: 1.10.2, happens on 1.11 insiders as well. - OS Version: Win10  ![image](https://cloud.githubusercontent.com/assets/356714/24696929/29556e48-19a0-11e7-9522-1894e91ab250.png)
---
Título: Update "Use Exclude Settings" icon
Descripcion: Still waiting on this icon
---
Título: Implement overflow design for the panel title
Descripcion: * open terminal * make editor narrow > 🐛 the actions get cropped instead of scrolling the tab which is what happens to editor tabs  <img width="503" alt="screen shot 2017-03-30 at 11 04 58" src="https://cloud.githubusercontent.com/assets/1794099/24496637/0f60d632-1539-11e7-9db2-743b7be598b8.png">
---
Título: Feature Request: change CodeLens position in the editor to make loading smoother
Descripcion: Hello,  CodeLens is a superb feature. But right now, in its current implementation, I think it's almost unusable. :(  Because CodeLens are lazily added to the editor, they break the code structure. You open the editor, then the lines "jump", and then CodeLens appear. This is not great: my eyes look at something, then everything move. It's jarring. And it can take a bit of time before they appear if the codebase is large enough.  And it happens every time a file is opened.  Moreover, even if CodeLens were not lazily added, the problem would still be here: the code structure changes because of CodeLens, and my file is visually different because of that.  That's why I think that putting CodeLens above a line is wrong.  Possible solutions:  - The CodeLens are placed at the right of the line, instead of above (instead of using the word "References", an icon could lighten the interface a bit, too). - Add a marker near the line number on the left.  Quick mockup:  ![codelens](https://cloud.githubusercontent.com/assets/478621/24495131/8134f5cc-1534-11e7-9fcd-5d45b4796376.png)  Thanks for considering this. :)
---
Título: SCM: Text-only navigation action misaligned
Descripcion: - VSCode Version: Code - Insiders 1.11.0-insider (6ae8c1506669fd579da1da92108b7db86d019bc6, 2017-03-29T08:21:59.122Z) - OS Version: Linux x64 3.13.0-108-generic - Extensions: none ---  Testing #23311   ``` {     "command": "baseFolderScm.refresh",     "title": "Refresh" } ```  ``` "scm/title": [     {         "command": "baseFolderScm.refresh",         "when": "scmProvider == baseFolder",         "group": "navigation"     } ] ```  ![screenshot from 2017-03-29 08 51 00](https://cloud.githubusercontent.com/assets/9205389/24464524/0325bc82-145f-11e7-94c9-9321ac2443dc.png)
---
Título: Inconsistent terminology for "finding additional items in the marketplace"
Descripcion: Testing #21633  We have inconsistent terminology for prompting the user to search the marketplace for additional things. For example:  * Debug Menu: "Install More Debuggers..." * Preferences | Color Theme: "Find more in the Marketplace..." * Preferences | File Icon Theme: "Find more in the Marketplace..."  Changing "Install More Debuggers" to "Find more in the Marketplace..." does not make sense because there is no context for "more".  "Find more debuggers in the Marketplace..." is simply too long for the menu.  A better solution I think would be to change these across the board.   I'm not a fan of the word "more" in this context as it feels very informal, so I suggest the following:  Install Additional Debuggers... Install Additional Color Themes... Install Additional File Icon Themes...
---
Título: Implement scalable toolbar overflow behaviour (similar to viewlet switcher)
Descripcion: Testing #23311   - Have a toolbar with many actions  ![image](https://cloud.githubusercontent.com/assets/10746682/24412716/8c3869ec-13d9-11e7-8a03-e1e1e5c561e9.png)
---
Título: Quick access "Quad Menu" Feature?
Descripcion: # **Quad What???? - What is the goal, you ask?** >> ** To have quick access to more than 40-100 commands with 3-4 different button click combinations - this is powerfull **  <<   I want to request a feature for vs code - I've worked in many programs, also several 3d programs. In 3d we really need to access many functions, same as in vs code.  In these 3d programs there is something called a "Quad menu". Its equal to right click menu, just with 4 x times more space/actions you can trigger. See it here:  https://www.youtube.com/watch?v=R8Uc52rUtuc https://i.stack.imgur.com/DDP5K.png http://jamiesjewels.typepad.com/.a/6a0134897dc259970c014e8c176c8d970d-pi  **Benefits:**  - Customize every action-item in the quad menu for your own needs. - Right click to get to the default quad menu (1). - Click Ctrl+Rightclick, now a new quad menu will pop up with other options and more commands (2). - Click Ctrl+shift+Rightclick, now a new quad menu will pop up with other options and more commands (3) etc... - can also be opened from hotkeys like F9 / customize your own keys. - At the right side of each item in the menu, there is a custom options icon.. this can open additional options for the item. - additionally, there could be numbers from 1-10 next to each item. clicking 5 on the keyboard will trigger item 5.  Suddenly you have visual representation of more than 40-100 commands, all categorized.  You properly forgot most of them, but with this you can access them anytime. - and visually so you wont forget them. Will this help you be more productive?  What do you think?    Example I created an in Photoshop: ![image](https://cloud.githubusercontent.com/assets/19984581/24357531/428d7782-12fe-11e7-9e99-c750c9527f6d.png)
---
Título: [suggestion] SmartHide activitybar
Descripcion: Hi guys,   what do you think about an smart hide option for the activity bar?   Somthing like: Activitybar is always hidden. If you go on the left side with your cursor then it will be shown.
---
Título: TS go to definition should move the cursor to the symbol name, not select the entire definition
Descripcion: This was a recent change, I find the past behavior much more intuitive as it's easier to navigate within the symbol after jumping to the definition.
---
Título: Extension icon seems like need a rounded corner.
Descripcion: [UX] It could be better to unify with another icon on visual styles. Thanks 🥇
---
Título: Allow window title color to distinguish between multiple windows
Descripcion: I often have multiple directories open in separate VSCode windows, and wish I could at a glance distinguish between them (like with a random color present in the UI)—although the directory name is already in the title of the window, it often takes me a bit to reorient myself because there is so much text on screen already. Any suggestions on how to more easily distinguish between multiple open files/a possibility to include a feature like this?
---
Título: Add opacity/transparency setting for intellisense suggestions popup
Descripcion: I could not find any settings relating to it, and no extension adding ability to tweak it, so a built in ability to tweak the pop-up window's opacity will be much appreciated.  if you ask "what is the point?": the pop up sometimes get's in the way of adjacent code which i need to see even when a popup is being displayed, this adjacent code might be above, below or in the same line in which i'm writing so adjusting the pop-up's position or delay will not suffice.  thank you!
---
Título: UI - explore improved notification UX
Descripcion: Goal: to explore an improved notification experience that resolves the current notification UX problems   Plan of action  - [x] Compile list of notification UX issues  - [x] Storyboards on two different options - [x] Socialisation and discussion with team - [ ] Customer research
---
Título: Make update notifications less intrusive
Descripcion: It seems like VS Code has some kind of update each time I run it, which is great. However, the big notifications break my workflow. I would love it if the notifications could get out of my way.  - For me the notification has no use. I always click the button 'Later' and the update gets installed silently when I close/reopen at some time. It is a text editor, not a banking app that needs the latest security patch.  - The notification is rather big, so (for me) hard to ignore. Even if I could resist it I am forced to do it because it covers the tabs in the editor.  - If there are release notes, then I want to read those when it suits me. I don't want to interrupt something I'm working on to check the release notes and then figure out what I was supposed to be doing.  What I would like is there to be some kind of small unobtrusive notification (like the flag in regular Visual Studio) that would tell me that there is an update. It could also link to the release notes (after an update) so that I can leave it flagged until I have time to check out the new features. Or just have an option to turn off all notifications related to updates, and always install them silently.
---
Título: Open type: sometimes hard to distinguish different types
Descripcion: As in this example for the `FileService`:  ![image](https://cloud.githubusercontent.com/assets/900690/23785981/ace7c3e0-056a-11e7-99ba-21d7b84adb7c.png)
---
Título: Feature request: highlight problem indicator with color when problems exist
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.10.2 - OS Version: Windows 7 SP 1 & Windows 10  For a better callout (those icons aren't very noticeable normally), it would be nice if when there are errors or warnings detected, it highlighted the respective icon (yellow for warning, red for error).
---
Título: Find and Replace is a bad experience.
Descripcion: I have a proposal. I think that global find and replace would be much more usable if it was laid out horizontally. Preferably where things like the "PROBLEMS", "OUTPUT", and "DEBUG CONSOLE" are.  I love Atoms and Sublimes find and replace for lots of different reasons but this is honestly my biggest hangup with vscode.  So here are what some of the competition does.  Atom (arguable my favorite experience and the most concise) ---- Horizontal and Vertical ![screen shot 2017-03-09 at 11 30 36 am](https://cloud.githubusercontent.com/assets/5297942/23764721/c6fbe91e-04bb-11e7-96b0-c686bf11d525.png)  Sublime (Cool but once you search you lose you search box) ---- exclusively Horizontal then Vertical ![screen shot 2017-03-09 at 11 24 03 am](https://cloud.githubusercontent.com/assets/5297942/23764930/854d476e-04bc-11e7-827d-a5b5955f9837.png)  after search ![screen shot 2017-03-09 at 11 32 48 am](https://cloud.githubusercontent.com/assets/5297942/23764952/96d61ccc-04bc-11e7-908f-161d0166ac92.png)  And Webstorm I feel like they gave up and just made it work. You get a separate popup ![screen shot 2017-03-09 at 11 25 08 am](https://cloud.githubusercontent.com/assets/5297942/23765034/fccd7282-04bc-11e7-806e-8ec01292a70a.png)  then that goes away after you search and you get results (In my opinion they are muddy and hard to read) Horizontal ![screen shot 2017-03-09 at 11 33 26 am](https://cloud.githubusercontent.com/assets/5297942/23765080/2bf8ee56-04bd-11e7-9b96-41e114d09b85.png)   THE POINT The point is most other editor at least show search results in a Horizontal layout. This is for good reason. The results are much more digestible.  Here is what my results look like most of the time. (all squished on the side) ![screen shot 2017-03-09 at 11 44 37 am](https://cloud.githubusercontent.com/assets/5297942/23765247/ce7cc206-04bd-11e7-8340-10a1062273e4.png)  The funny thing about this.. When showing search in the documentation for vscode it looks more horizontal. I think the reason why is it creates a better user experience. https://code.visualstudio.com/docs/editor/codebasics#_search-across-files ![codebasics_search](https://cloud.githubusercontent.com/assets/5297942/23765606/f3baeab0-04be-11e7-952d-c823eb4d326a.png)   So my issue is I think I could probably make a plugin to do this a little better but I wanted to see if this is the direction vscode will be going in the future or if it should be done as a plugin.
---
Título: make finding all references more user-friendly
Descripcion: _From @bruceauyeung on March 7, 2017 8:45_  `Finding all references` will popup a window to show all references, i think it's a little hard to use, i am not blaming vscode-go, maybe it's vscode's limitation because vscode don't provide a view similar with output, problem etc. 1. once user close the popped-up window, referencing results is lost. user have to find all references again if they just closed the window by accident. most other IDEs such as Eclipse, Gogland, they display references in a view , the referencing results will not be lost until user do finding all references again. 2. user may close the window by accident very easily.  currently the window have a close button, a window bar, if user single-click the left part of menu bar or drag the window  on left part of menu bar( mouse pointer becomes to a finger when hovering on it, this indicates user can do something ), window will be closed.  so i suggest:  1, if it's possible, display references in a view similar with problem etc, not in a popup window. if not,  2, do not close window when left part of menu bar is clicked or dragged, only close window when close button is close or content part of window is double-clicked.  _Copied from original issue: Microsoft/vscode-go#845_
---
Título: Add ability to change snippets icon
Descripcion: I would like to colorize or optionally add a own icon for snippets.   Use Case:  I have snippets, which "converts" to hex codes. I don't want to write a whole extension, just to see the color of the outcoming hex code.  Example Image:  ![Example Image](http://i.imgur.com/phIWHZA.png)  A solution to add styling could be : ```JSON "Material Active Icon Light": { 	"prefix": "md-active-icon-light", 	"body": [ 		"rgba(255, 255, 255, 1)" 	],         "display": {                  "style" : {                          "background-color": "green"                   }         } } ```
---
Título: Color coded project identification
Descripcion: Hi, it would be awesome if there was some way to easily identify which open VSCODE window is which project.  Preferably with a color coding system similar to how the bottom git bar is colored.    _Top Bar_ Perhaps the top bar with the project name / file name could be utilized to change the background color. Maybe the user settings could implement something like: `"window.titleBar": [ { "path": "/project/location", "bar_color": "#5a6b7c", "font_color": "#ffffff" } ]` which defaults to the current (based of theme?) color settings.  _Side Bar_ Or perhaps colorize the side bar which houses Explorer, Search, Git, etc. it could use a similar implementation: `"window.sideBar": [ { "path": "/project/location", "bar_color": "#5a6b7c", "icon_color": "#ffffff" } ]`  I dont know if this feature exists already in the form of an extension, i did a search but couldnt find something that matched what i needed.  If anyone knows an extension or even a value to set in the settings, i would be much appreciated.  Thank you, and keep up the good work!
---
Título: Codelens Location setting to the right of the code
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.10.1 - OS Version: Windows 8  ~~~ 	public List<AdjacentInfo> openList,     11 references 	public List<Vector2> closeList,         5 references 	public AdjacentInfo currentTile,        2 references 	public AdjacentInfo parent,             7 references  	Vector2 targetPos,   // destination     4 references 	List<Vector2> path,                     7 references  	void RemoveStartingNode()               4 references 	{ 		openList.Remove(currentTile), 		closeList.Add(currentTile.currentPos), 	} ~~~  Each time codelens appears, the code oscillates and increases its length. So I suggest the above.  Thank you.
---
Título: The horizontal scroll bar is somewhat hidden
Descripcion: - VSCode Version: Code 1.10.1 (653f8733dd5a5c43d66d7168b4701f94d72b62e5, 2017-03-02T00:33:15.706Z) - OS Version: Windows_NT ia32 10.0.14393 - Extensions: none ---  The bar is not fully visible.  Steps to Reproduce:  1.Just open Visual Sutio Code, and open a file with long enough lines to allow for the horizontal bar to appear. ![image](https://cloud.githubusercontent.com/assets/9716061/23645748/e8861d66-030d-11e7-8a47-40e4f7b1d647.png) ![image](https://cloud.githubusercontent.com/assets/9716061/23645795/2810a0a0-030e-11e7-8bce-78893b778281.png)
---
Título: Improve on inconsistent language: Side Bar vs Activity Bar
Descripcion: - VSCode Version: Version 1.10.1 (653f8733dd5a5c43d66d7168b4701f94d72b62e5) - OS Version: Linux Mint 18.1 64-bit  Steps to Reproduce:  1. Open the View Menu 2. Observe the following options:    * Move Side Bar [Right/Left]    * Toggle Side Bar    * ...    * Hide Activity Bar  Here we have both "Side Bar" and "Activity Bar" referring to the Vertical Menu and drawer.  It seems "Side Bar" is supposed to refer to the expanded part and "Activity Bar", however, this is not very discoverable and the Activity Bar can reasonably expected to be the referenced Side Bar.  The "Activity Bar" is *a sidebar* and it moves when I choose "Move Side Bar" and the drawer I perceive as attached to it expands/collapses (shows/hides) when I choose "Toggle Side Bar."  However, when I want to hide it I need an option related to the "Activity Bar" rather than the "Side Bar." (In my case I had to come to GitHub and search issues to find that the behavior I was looking for was that option).  edit: [there is evidence I am not the only person to encounter this confusion](https://github.com/Microsoft/vscode/issues/15310#issuecomment-259962222) ___  ## Suggestions  Assuming the current names are to be kept, I recommend the following changes:  * Standardize on Toggle or [Show/Hide]. So either "Toggle Activity Bar" or "[Show/Hide] Side Bar".  This helps to put widgets on equal footing and the consistency helps to lessen the possible association that "Toggling" the side bar changes the state or the Activity Bar rather than showing/hiding an independent widget. (Note: This would apply to more than this entry)  * Make "Move Side Bar [Right/Left]", "Move Activity Bar [Left/Right]" This helps to establish the name "Activity Bar" and explains why the option moves the Activity Bar when the option is selected and not just the Side Bar.
---
Título: Provide hinting to user that terminal links require ctrl
Descripcion: 
---
Título: Outline matching selections instead of highlight
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.10.1 - OS Version: macOS 10.12.2  Steps to Reproduce:  1. Highlight a selection with multiple instances.  2. Look how hard it is to distinguish which instance is selected.  ![screen shot 2017-03-03 at 7 33 55 am](https://cloud.githubusercontent.com/assets/10407384/23555115/e1ab96e6-ffe4-11e6-9d82-687e859a8f26.png) ![screen shot 2017-03-03 at 7 36 55 am](https://cloud.githubusercontent.com/assets/10407384/23555118/e38522ac-ffe4-11e6-968d-7913e65f2b49.png)  There are three fundamental issues that this request entails:  1. When you make a selection and there are multiple instances, it's extremely hard to distinguish which one is actually selected. This image shows VSCode's standard Monokai theme. This is not a "theme" issue, users should be able to use any theme that is available in the marketplace.   2. When you make a selection, matching instances shouldn't be highlighted at all. Being highlighted indicates that they are also selected, which is not the case. So when I double click on a single word to select it, all the matching instances get highlighted too, creating the appearance that they are all selected.  3. The check that looks for matching instances should be _case sensitive_, so that when I select `contract`, a camel-case instance of `newContract` should not have that instance of contract highlighted.
---
Título: Intellisense popup gets in the way. It should be locatable elsewhere in the UI
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.10.0 - OS Version: macOS 10.12.3  In the screenshot below the encircled popup is _very_ annoying. I do not like the way that it covers up code that I may want to read while typing. I would like to move it to the top right corner of the editor via CSS or some other mechanism. It's nice to have the information, but not in such an obtrusive way.  ![image](https://cloud.githubusercontent.com/assets/321201/23509688/a106897c-ff24-11e6-8b9e-accb14056f8c.png)
---
Título: UX: Tab View and Indicators for Panel
Descripcion: This is not an issue but a UX suggestion for the bottom panel.  1. Tabbed View  ![tabbed-view-for-panel](https://cloud.githubusercontent.com/assets/251937/23509475/3ce0a162-ff56-11e6-9ef1-0d6c9a3e06df.png)  2. Indicators for the Panel Items ![indicators-for-panel](https://cloud.githubusercontent.com/assets/251937/23509465/33b30710-ff56-11e6-9625-939fc728bcaf.png)
---
Título: Markdown's Open Preview editor toolbar item: Open to the side
Descripcion: - VSCode Version: Code - Insiders 1.10.0-insider (40fecfaa77f01672e8a147be71f6f7ccb9cf8a12, 2017-02-27T14:09:29.088Z) - OS Version: Darwin x64 15.6.0 - Extensions: none  Currently the Markdown editor has the Open Preview action in its toolbar. It would be more convenient if that was the Open Preview to the Side action.
---
Título: Minimap lacks separation from embedded editors
Descripcion: ![image](https://cloud.githubusercontent.com/assets/5047891/23305955/6b8a268c-faa1-11e6-99de-bb67a1eb3d64.png)
---
Título: Color encoding of find results is a bit weird
Descripcion: ![untitled](https://cloud.githubusercontent.com/assets/900690/23305959/71ad843c-faa1-11e6-81a4-0a4fbd7c283c.gif)  As you can see in this example while I type the search results either show up in grey or in orange, but what is the rule here?
---
Título: Notifications - show which extension they came from
Descripcion: Sometimes notification messages appear, and it isn't clear whether they are from vscode or an extension, and if so, which one. Right now I sometimes see "The internet connection appears to be offline" and don't know which extension is responsible. It would be useful to be able to easily trace the message to an extension, maybe with a tooltip on the message that shows the originating extension's name. It looks like a notification UX overhaul is on the way, #1135.
---
Título: Don't show TypeScript version in Status Bar for JavaScript Projects
Descripcion: #21037  In a JS project without any `jsconfig.json` (like 90% of the projects I work on), you see the TS version in the status bar (which is very verbose on Insiders):  ![image](https://cloud.githubusercontent.com/assets/2193314/23234231/43ff31c6-f906-11e6-88ab-59d98fe42044.png)  Clicking it gives the following:  ![image](https://cloud.githubusercontent.com/assets/2193314/23234207/2a4c4aac-f906-11e6-8657-3d9953177e59.png)  Why are we presenting this information at all if there is nothing to action such as in a project without a workspace version of TypeScript? This information is neither useful or easy to understand for JavaScript developers. We could remove the clutter when it's not relevant:  ![image](https://cloud.githubusercontent.com/assets/2193314/23234344/a5470b20-f906-11e6-91fe-0199e70a76b4.png)
---
Título: TS version in status bar is confusing
Descripcion: #21037  It looked to me like that's VS Code's version initially.  ![image](https://cloud.githubusercontent.com/assets/2193314/23234047/ad740420-f905-11e6-91bb-8d5105f6903f.png)  Why not use something like "Bundled TS" or something to more more useful and obvious what it really is. Users probably don't care the exact version number and it just adds visual noise.
---
Título: Pressing configure excludes button presents another configure excludes button
Descripcion: #21037  Pressing this:  ![image](https://cloud.githubusercontent.com/assets/2193314/23233721/9385282e-f904-11e6-9e3a-35cb82253be3.png)  Presents:  ![image](https://cloud.githubusercontent.com/assets/2193314/23233731/9a95e41e-f904-11e6-89bf-d4deccd841e3.png)  I've already committed to configuring them, why do I need to press it twice?
---
Título: Improve documentation of git enum type settings by providing options
Descripcion: Testing #20999    There are some git settings which are enum types. It would be good to document in the description of the setting about the options a setting can have. This will help in discoverability.  ![image](https://cloud.githubusercontent.com/assets/10746682/23216452/4c912b72-f916-11e6-9450-19ee422fe395.png)  ![image](https://cloud.githubusercontent.com/assets/10746682/23216470/5a0013e0-f916-11e6-92f7-0b793096656f.png)
---
Título: SCM view is not helpful when there is no SCM repo
Descripcion: Testing #20999   - OS Version: Windows  Steps to Reproduce:  1. Open VS Code on a folder which does not have SCM repo initialized 2. Open SCM view - It is not helpful to figure out that you can initialise the repo from there.  - Top right icon looks like a Git label rather than an action button - Commit box and changes take much precedence and misleading - It would be useful if we can make Initialise action much prominent (like in old git)  ![image](https://cloud.githubusercontent.com/assets/10746682/23208744/785c01a2-f8f6-11e6-854c-e5b53b402dfe.png)
---
Título: SCM: badge size could be aligned
Descripcion: At least when the digit is same length the badges could have the same size:  ![image](https://cloud.githubusercontent.com/assets/900690/23206887/9b7a9632-f8ef-11e6-8a29-9cb3dc65c865.png)
---
Título: Welcome page: weird flow of installing keybindings
Descripcion: Refs: #21034  OS X, insiders 1. Welcome page, click on sublime in keybindings 2. I get a notification about how a window will clickly reload 3. I click ok and no reload is happening, instead the keybinding is being installed and only after the installation a reload happens 4. This is much different than the usual extension install experience and I am not sure why are we differentiating here  I would expect that upon click on sublime we simply install the extension and open the extension viewlet. The extension will then have a reload button so a user can easily reload if he chooses. And not showing any message dialog at the top  ![screen shot 2017-02-22 at 11 01 47](https://cloud.githubusercontent.com/assets/1926584/23206545/522ac0f2-f8ee-11e6-985c-f74c37a07d96.png)
---
Título: [WelcomeUX] Welcome page: keybindings are already installed
Descripcion: Refs #21034  os x, insiders, welcome page  1. Welcome page, install sublime keyboard shortcuts, reload vscode 2. Click on sublime keybindings - a message bar appears 3. We should try using the message service as little as possible as it is pesky to get rid of (user must click) 4. I propose that instead we open the extensions viewlet and show the list of installed extenssions - that will make it obvious to the user that he has sublime keybindings installed
---
Título: Better column indicator icon
Descripcion: Currently we use the same yellow arrow for showing the current line indicator in the glyph margin and inline in the editor to indicate column. As shown in the following gif  ![column](https://cloud.githubusercontent.com/assets/1926584/23204039/4001d784-f8e5-11e6-868c-b170dd40ccc4.gif)  After discussing with @weinand we believe a more appropraite icon could be used as a replacement for the current [yellow arrow](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/media/current-arrow.svg#L1)  We believe a more fitting one would be a thin but high yellow styliezd triangle pointing to the right. This way it would not take so much space in the editor and would still provide the desired functionality. So basically to make the current icon thinner and higher and maybe cut out the left end.  @chryw is it possible for you to give us a hand with this? If not then @chrisdias what is our process when there is no appropriate icon in https://vsicons.azurewebsites.net/
---
Título: [WelcomeUX] Offer popular keymaps inline for installation
Descripcion: 
---
Título: Show current error in status bar
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.9.0 - OS Version: all  From: https://github.com/Microsoft/vscode-eslint/issues/199  The eslint plugin on vim have a nice feature that if your cursor is on the line of a eslint error it shows the error on status bar, this plugin can do this too?
---
Título: Consider adding some more visible way of selecting a terminal shell
Descripcion: Perhaps the + icon could open a quick pick or popup which presented:  - cmd - powershell - bash for windows - git bash  These could be configured using some settings behind the scenes which knows about the paths to these since they will almost always be in the same spot. The setting could look something like this:  ```js "...shells": {   "cmd": "%windir%\\sysnative\\cmd.exe",   "PowerShell": "windir%\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe",   "Bash on Windows": "%windir%\\sysnative\\bash.exe",   "Git Bash": "%programfiles^\\Git\\bin\\bash.exe" // if it exists } ```  Note that we don't want to run into the same issues as `commandsToSkipShell` https://github.com/Microsoft/vscode/issues/19770 if we create such a setting.
---
Título: The indicator on the markdown preview is not visible when the dark theme and the background is white
Descripcion: - VSCode Version: Code 1.9.0 (27240e71ef390bf2d66307e677c2a333cebf75af, 2017-02-02T08:23:30.856Z) - OS Version: Darwin x64 16.4.0  Under the following conditions, the Markdown Preview side indicator can not be seen.  Steps to Reproduce:  - Dark theme is applied - Applied a custom CSS (e.g. body {background-color: white,} in`markdown.styles` file) with Markdown preview   The dark theme realizes gray with transparency. Therefore, it becomes invisible if white is set as the background. 	 https://github.com/Microsoft/vscode/blob/master/extensions/markdown/media/markdown.css#L45-L51  ```css .vscode-dark.showEditorSelection .code-active-line:before { 	border-left: 3px solid rgba(255, 255, 255, 0.4), }  .vscode-dark.showEditorSelection .code-line:hover:before { 	border-left: 3px solid rgba(255, 255, 255, 0.60), } ``` ![2017-02-05 15 45 30](https://cloud.githubusercontent.com/assets/13635244/22624280/47148e6e-ebba-11e6-9407-745fa30c60da.png)  ## My work around  The following CSS was added to the custom CSS file.  ```css .vscode-dark.showEditorSelection .code-active-line:before {     border-left: 3px solid rgba(128, 128, 128, 1), }  .vscode-dark.showEditorSelection .code-line:hover:before {     border-left: 3px solid rgba(192, 192, 192, 1), } ```  ![2017-02-05 15 47 34](https://cloud.githubusercontent.com/assets/13635244/22624287/7a48077a-ebba-11e6-8d8a-2dd9141d452e.png)
---
Título: Questionable use of QuickPick as a confirmation dialog or alert
Descripcion: When opening old projects with the VS Code 1.9.0 I now get this QuickOpen menu:  ![2017-02-03_10-32-15](https://cloud.githubusercontent.com/assets/1898161/22586552/b041a52a-e9fd-11e6-9949-e0b2576850cb.png)  I fully understand why we do this, but I think the use of QuickPick in this situation is confusing (and I even have proof for this from user studies done by @stevencl in debug land).  The problem with QuickPick is that it is normally used when the user explicitly triggered an action with multiple choices: the QuickPick menu does not come as a surprise in these cases.  But in the situation at hand the user has requested VS Code to open a specific workspace and does not expect a QuickPick to appear. And from past experience he has learned, that there is no QuickPick when opening a workspace.  Even I am still surprised by the QuickPick in this case and quickly press Esc to make it go away because I suspect that I've accidentally triggered some action.   We have seen the same in the debug user studies: when users started debugging for the first time by pressing F5 they have no launch.json and a QuickPick menu appears offering different debug environment choices. Since users are not expecting this, they dismiss the menu quickly and debugging will fail. They are not realising that an important decision needs to be made here.  Could we try to introduce a different UI for situations like this? Something like an modal "alert/confirmation style" QuickPick?  /cc @stevencl @bpasero
---
Título: Mouse wheel scrolling doesn't work when dragging a file in explorer view
Descripcion: <!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode -->  - VSCode Version: 1.8.1 - OS Version: OS X 10.11.6  Steps to Reproduce:  1. Open explorer 2. Start dragging a file to other location 3. Try to scroll mouse wheel 4. Notice that mouse wheel doesn't work
---
Título: [WelcomeUX] Revisit "Interface overview"
Descripcion: - The arrows are tiny, barely noticeable - `view errors and warnings` points to the wrong spot. How do we maintain this, going forward? - Where is `Find and run all commands` pointing to? There's nothing behind it to click. - The text is hard to read because it overlays on top of existing text - The text's content brings nothing new to the table - I only noticed that keybindings are there after seeing my own screenshot in this issue  ![image](https://cloud.githubusercontent.com/assets/22350/22368861/0721da88-e489-11e6-8b86-d60377aa17f9.png)  It just looks way out of style with everything else.  I suggest to open https://code.visualstudio.com/docs/editor/codebasics instead.
---
Título: Use top bar for all confirmation dialogs
Descripcion: UX: currently, VS Code uses two styles of confirmation dialogs:  **1\. The top bar**  ![image](https://cloud.githubusercontent.com/assets/101152/22330985/3de0a632-e3c9-11e6-8845-9647a48fd737.png)  **2\. System dialog**  ![image](https://cloud.githubusercontent.com/assets/101152/22331557/6124e7b8-e3cc-11e6-9110-7585e5faf6e7.png)  It would be nice to unify those, I think that the first style fits the overall UI much better.
---
Título: Should panel toggle keybindings focus instead of toggle when the panel is not active?
Descripcion: Currently all the panel toggle commands hide the respective panel when it's visible and show it when it's hidden. I find this annoying though and instead use the following custom keybinding:  ```js {   "key": "ctrl+`",   "command": "workbench.action.terminal.focus",   "when": "!terminalFocus" } ```  This overrides the setting when the terminal does not have focus to simply focus it, but retain the hide behavior when it is focused. This means you don't have to hit <kbd>ctrl</kbd>+<kbd>\`</kbd> twice in order to get focus to the terminal when it's already displayed but not focused. This does change the hiding the terminal case when it's not focused to need 2 <kbd>ctrl</kbd>+<kbd>\`</kbd>'s but personally I hardly ever do this compared to switching focus from the editor to the terminal.  I frequently tell users about my config and they all react positively so I'm wondering whether we should make this the default behavior for *all* panels (to keep them consistent).  /discuss
---
Título: Settings header links differ from panel header links
Descripcion: - VSCode Version: Code - Insiders 1.9.0-insider (882244ea24cb0b89a9a0c6c649c8f857fb0bc408, 2017-01-23T07:12:16.134Z) - OS Version: Windows_NT ia32 10.0.14986 - Extensions:  |Extension|Author|Version| |---|---|---| |vscode-svgviewer|cssho|1.3.0| |EditorConfig|EditorConfig|0.3.4| |git-project-manager|felipecaputo|1.0.1| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.0| |seti-icons|qinjia|0.1.3| |lorem-ipsum|Tyriar|1.0.0| |terminal-tabs|Tyriar|0.1.1| |theme-glacier|Tyriar|0.0.10|  ---  Inconsistencies:  - Panel headers have title attributes showing name and keybinding - Settings text is larger than panel text (despite being lower in the hierarchy) - Panel has no mousedown feedback - Active item underline differs - Inactive item text color differs  **Panel**  Hover debug console:  ![image](https://cloud.githubusercontent.com/assets/2193314/22212268/dd510b44-e144-11e6-9195-0dcab5cc4564.png)  **Settings**  ![image](https://cloud.githubusercontent.com/assets/2193314/22212294/f7980ae8-e144-11e6-9639-328ee4a63301.png)  Hover workspace settings:  ![image](https://cloud.githubusercontent.com/assets/2193314/22212273/e5e59e64-e144-11e6-8a49-de622ebc56a4.png)  Mouse down workspace settings:  ![image](https://cloud.githubusercontent.com/assets/2193314/22212307/09c43bf6-e145-11e6-9174-b467531ab5f1.png)  User settings focused without mouse over:  ![image](https://cloud.githubusercontent.com/assets/2193314/22212388/5f6d1afa-e145-11e6-9ace-3c79a6a0869b.png)
---
Título: Panel header spacing/alignment issues
Descripcion: - VSCode Version: Code - Insiders 1.9.0-insider (882244ea24cb0b89a9a0c6c649c8f857fb0bc408, 2017-01-23T07:12:16.134Z) - OS Version: Windows_NT ia32 10.0.14986 - Extensions:  |Extension|Author|Version| |---|---|---| |vscode-svgviewer|cssho|1.3.0| |EditorConfig|EditorConfig|0.3.4| |git-project-manager|felipecaputo|1.0.1| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.0| |seti-icons|qinjia|0.1.3| |lorem-ipsum|Tyriar|1.0.0| |terminal-tabs|Tyriar|0.1.1| |theme-glacier|Tyriar|0.0.10|  ---  Problems:  - There are 4 different horizontal spacings between items on the panel (9, 13, 20, 33), they should probably all be 20? - The icons and panel headers seem to be 1px off - The add button has an odd height so it cannot be aligned exactly - The dropdown is not vertically centered (on all platforms)  ![panel alignment](https://cloud.githubusercontent.com/assets/2193314/22211935/a09e2f98-e143-11e6-86b4-073253e92068.png)
---
Título: Background color in settings number of results not needed IMHO
Descripcion: Did you try this without the background color? I do not see the need for the background color as this is already quite seperated from the input as it is on the other end of a huge input field. Also we do not use background color like this anywhere else in our input boxes  ![screen shot 2017-01-23 at 11 34 40](https://cloud.githubusercontent.com/assets/1926584/22200621/16bf2b8e-e160-11e6-8f81-d9ac997a2b29.png)
---
Título: Style misalingment between settings tabs and panel tabs
Descripcion: We should use the same design for our tabs in settings and in the panel. Namely USER SETTINGS and WORKSPACE SETTINGS need to have the same design as the PROBLEMS, OUTPUT... in the panel  Notice that in the panel the unfocused titles color is not so strong and the font used is smaller.  ![screen shot 2017-01-23 at 11 31 57](https://cloud.githubusercontent.com/assets/1926584/22200512/b2444946-e15f-11e6-91f0-9b85277095ed.png)
---
Título: Style misalignment between search widget input box and settings input box
Descripcion: Why do we have the lense icon in the settings search, while this icon is nowhere else present in our UI? This is not aligning well with our search viewlet input. This icon should be removed as we nowhere else use it in our UI and the placeholder text makes it clear to the user what is going on.  ![screen shot 2017-01-23 at 11 29 18](https://cloud.githubusercontent.com/assets/1926584/22200393/3c080f9c-e15f-11e6-8c83-be2220636950.png)
---
Título: Style misalignment between settings search no results and find widget
Descripcion: Notice how the find widget uses a discrete red color in the text, not the background red which looks too ugly and prominent imho Setting should use the same style which we already have in find widget  Also why is Settings capital case and matched lower case? Maybe we should just say 'No Results'  ![screen shot 2017-01-23 at 11 27 09](https://cloud.githubusercontent.com/assets/1926584/22200346/056aec84-e15f-11e6-9b1b-07241686551a.png)
---
Título: Total x settings in settings search bar needs centering
Descripcion: - VSCode Version: Code - Insiders 1.9.0-insider (ee9d91c05fa571de56c41383cceee30b05b0a2f6, 2017-01-20T14:58:38.006Z) - OS Version: Linux x64 4.8.0-34-generic - Extensions:  |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.3.4| |lorem-ipsum|Tyriar|1.0.0| |sort-lines|Tyriar|1.2.0| |terminal-tabs|Tyriar|0.1.1| |theme-glacier|Tyriar|0.0.10| |vscode-svgviewer|cssho|1.3.0| |gitlens|eamodio|1.4.3| |tslint|eg2|0.8.1| |git-project-manager|felipecaputo|1.0.1| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.0| |seti-icons|qinjia|0.1.3|  ---  Not quite centered :smiley:   ![image](https://cloud.githubusercontent.com/assets/2193314/22171087/b8e17740-df3b-11e6-8a10-bc62d363ba8d.png)
---
Título: Problem with unreadable texts in tabs due to low contrast, brightness
Descripcion: Most themes (and I think it's not their fault) use in effect very unreadable colors with low brightness/contrast ratios for inactive tabs, since they are faded using opacity. This is very inconvenient - not being able to clearly see what files are open and finding easily the ones I want. Especially if you are working at night with decreased screen brightness or in bright light (in the morning).  Currently: ![image](https://cloud.githubusercontent.com/assets/821272/22165447/1ee1347a-df5c-11e6-8096-e2d825a38cf1.png)  Illutration how the issue could be improved: ![image](https://cloud.githubusercontent.com/assets/821272/22165607/0f8b09b4-df5d-11e6-8fbf-74f14ff87329.png)  I am not proposing a solution, as I feel it may come from multiple directions e.g..: - allow themes to customize tabs styling - do not use opacity to fade inactive tab, highlight active tab by other means - allows custom user styling of tabs...
---
Título: [WelcomeUX] When overlay appears, can we get a blank editor behind it?
Descripcion: Testing #18091 on OS X El Capitan  The text on the overlay fights for attention with the text under the overlay. Usually when websites have overlays, the background is greyed out/blurred and the text on the overlay can be clearly read.   <img width="411" alt="screen shot 2017-01-20 at 11 20 22 am" src="https://cloud.githubusercontent.com/assets/16890566/22162660/6f43cfb6-df04-11e6-816e-087d020d6fa0.png">
---
Título: [WelcomeUX] "View Local Changes" in overlay doesn't do justice to the viewlet
Descripcion: Testing #18091  It sounds like it's just the open editors view at the top of the explorer, the overlay should mention the fact it deals with SCMs.
---
Título: [WelcomeUX] Welcome preview should have pointers to other resources
Descripcion: Testing #18091  I think it's very easy to get to the end of the editor preview, and wonder - "is that it?" Would be nice to have pointers to next steps (e.g. debugging, terminal, git etc.)
---
Título: [WelcomeUX] Change default keyboard shortcuts button wording could use some work
Descripcion: Testing #18091  I was under the impression it was going to open keybindings.json. How about something like "Use/Load Another Editor's Keybindings"?  ![image](https://cloud.githubusercontent.com/assets/2193314/22160491/957ad5a8-defa-11e6-929d-1747cc114ce2.png)
---
Título: [WelcomeUX] Overlay should include an example of the command palette
Descripcion: Testing #18091  It looks like it's pointing to the files, the overlay should also display a mock command palette.  ![image](https://cloud.githubusercontent.com/assets/2193314/22160337/cbbf66b6-def9-11e6-9477-d73ac5c6ac22.png)
---
Título: [WelcomeUX] Can blue links on welcome screen have hover feedback?
Descripcion: Testing #18091  IMO some hover feedback would make this feel more responsive and easy to use, example:  ![image](https://cloud.githubusercontent.com/assets/2193314/22160039/8b6a2836-def8-11e6-8ca1-1f3aeb13fa2a.png)
---
Título: [WelcomeUX] Arrows have different font weight than rest of overlay text
Descripcion: Testing #18091  ![image](https://cloud.githubusercontent.com/assets/762848/22159859/c1aa64b6-def7-11e6-8d7d-1e298ad32359.png)
---
Título: [WelcomeUX] Welcome page design
Descripcion: Testing #18091  Issue for general design comments on the welcome page.  == Missing CSS rule?  ![image](https://cloud.githubusercontent.com/assets/323878/22158825/00e54ede-def3-11e6-8c89-ce5bfcfecd43.png)
---
Título: Panel title background looks too heavy
Descripcion: Especailly with sidebar open. Looks like I have a horizontal T in the middle of my screen which is distracting me from doing any real work  It is nicer in dark theme  ![screen shot 2017-01-20 at 15 20 09](https://cloud.githubusercontent.com/assets/1926584/22152609/0c3cf49a-df24-11e6-8d3d-61e6ccd8e574.png)
---
Título: Lack of lines or background color changes on panel/viewlet make it difficult to resize panes
Descripcion: - VSCode Version: code-oss-dev 1.9.0 (Commit unknown, Date unknown) - OS Version: Linux x64 4.8.0-34-generic - Extensions:  |Extension|Author|Version| |---|---|---|   ---  I noticed that the borders and background colors are gone in the light theme. This makes it very difficult to tell what is part of the panel and what is part of the editor. The viewlet and panel are also hard to grab since I needed to search for an invisible line to grab.  Master:  ![image](https://cloud.githubusercontent.com/assets/2193314/22119887/21d81278-de32-11e6-93ea-bb3c7c9614fc.png)  Stable:  ![image](https://cloud.githubusercontent.com/assets/2193314/22119845/f62f1cf2-de31-11e6-8344-16ddc91794d3.png)  The dark theme seems fine:  ![image](https://cloud.githubusercontent.com/assets/2193314/22119931/48500ab4-de32-11e6-8fb3-6a5d017a5fcd.png)
---
Título: Add Tab Icons for open file tabs across the top
Descripcion: Add Tab Icons for open file tabs across the top of the IDE instead of just plain text.  This makes it easer to identify which files and file types you want to work on.  There are several other IDEs that allow for text only, text w small icons, and text with large icons as options for the tabs.  Below is a screen shot snippet from Coda and its use of text w small icons as reference.  Thanks!!  ![screenshot_218](https://cloud.githubusercontent.com/assets/24207880/22068983/c5da4e8c-dd64-11e6-8bb7-3216a7e0e21d.png)
---
Título: Activity design for panel switcher
Descripcion: Now that we have the panel switcher added, we should think about how to show activity. For example, the "Problems" view today changes its title based on the number of problems:  ![image](https://cloud.githubusercontent.com/assets/900690/22062920/680411e0-dd7c-11e6-9eeb-c53cb066b374.png)  I think this model no longer works nicely with the switcher and I would suggest we have something like the badges in the activity bar for panels too.  Thoughts?  /cc @sandy081
---
Título: Focused panel border bottom too prominent
Descripcion: The current border bottom 2px is too prominent and too close to the titile. I propose    ` border-bottom: 1px solid #007acc,`  ![screen shot 2017-01-18 at 11 27 39](https://cloud.githubusercontent.com/assets/1926584/22060484/3eb8db14-dd71-11e6-85de-3606ca6132d3.png)
---
Título: [Feature request] In search, show total result count
Descripcion: - VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z) - OS Version: Windows_NT ia32 10.0.14393 - Extensions:  Steps to Reproduce:  1. In a large project, search for a term with lots of results (e.g. "TODO") 2. Wonder how many results there are in total  I can't see that VS Code gives the total result count anywhere. It lists the results per file, but the total result count either isn't there, or isn't obvious enough for me to have found it!
---
Título: First line of terminal isn't really visible when editor is zoomed in
Descripcion: - VSCode Version: 1.8.1 - OS Version: Ubuntu 16.10  Steps to Reproduce:  1. Zoom in by pressing CTRL & + 2. Open integrated terminal -> the first line isn't really shown, see attached screenshot  ![image](https://cloud.githubusercontent.com/assets/3688096/21904703/dcc17148-d904-11e6-850f-24383f727fe4.png)
---
Título: Ctrl-Shift-F displays Replace textbox after Replace has been used once
Descripcion: - VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z) - OS Version: Windows_NT ia32 6.3.9600 - Extensions:  |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.3.4| |tslint|eg2|0.8.1|  ---  Steps to Reproduce:  1. Ctrl-Shift-F  2. Observe Search box alone 3. Ctrl-Shift-H 4. Observe Search and Replace boxes 5. Ctrl-Shift-F  6. Observe Search and Replace boxes rather than just Search box  Not a biggy but it's a little weird and has bugged me for some time.  One of my colleagues also bumped into this yesterday hence prompting to me to actually raise and issue.  BTW VS Code **rocks**!!!!! Well done on all your work 👍
---
Título: Insufficient gap between viewlet content and scrollbar
Descripcion: - VSCode Version:1.8.1 - OS Version:win10 x64 The left scrollbar and file item selected area are too closed,when i drag scrollBar then offen tigger item selected event ![qq 20170112103408](https://cloud.githubusercontent.com/assets/7766085/21874877/ce50c372-d8b2-11e6-96ed-5abd1818c20d.jpg)  i hope as below ![qq 20170112104454](https://cloud.githubusercontent.com/assets/7766085/21875091/41c8fb66-d8b4-11e6-96ff-d81c43c695c2.jpg)
---
Título: Debug toolbar draggable in the 4 edges of the VS Code screen.
Descripcion: Feature Request  The debug toolbar that appear when the a process is running, often (in my opinion) is in the wrong place and cover tabs/refresh buttons/console buttons.  I'd like to drag this toolbar in a custom edge of the editor like in the bottom.
---
Título: SEARCH:  Select file on the left when file is open on the right. (feature request)
Descripcion: - VSCode Version: any - OS Version: any  Steps to Reproduce:  1. Open multiple files resulting from a search 2. Select a different file tab than the file you have open. **3.  Expectation:  file will highlight on the left hand side.**
---
Título: Improve Extension UI
Descripcion: Current Extension UI causes quiet number of dialogs during an extension managing lifecycle. It would be better to reduce them with nicer UI.   Also improve representation of an extension.  - [x] [When I presss "reload", an unnecessary confirm dialog appears](https://github.com/Microsoft/vscode/issues/18039) - [x] [Extra confirmation message seems weird](https://github.com/Microsoft/vscode/issues/14412) - [x] ["Reload this window to activate the extension X" - wording](https://github.com/Microsoft/vscode/issues/17432) - [x] ["UX: Extension should have visual indication of globally/locally enabled](https://github.com/Microsoft/vscode/issues/14472) - [ ] ["Bad layout for extensions with empty description](https://github.com/Microsoft/vscode/issues/14475)
---
Título: Search panel results are hard to visually skim
Descripcion: - **VSCode Version:** 1.8.1 - **OS Version:** macOS Sierra 10.12.2  ## Steps to Reproduce:  1. `Command-Shift-F` and search for something 2. Observe that the filename headers and search results are not easily visually separated  ## Code  ![image](https://cloud.githubusercontent.com/assets/176815/21776302/b56b90d2-d64e-11e6-80df-ab515b0f0f0c.png)  ## Sublime  ![image](https://cloud.githubusercontent.com/assets/176815/21776313/c0b8c95a-d64e-11e6-93c4-f50791977056.png)  ## Description  In Sublime there is some spacing between the the search result groups, and the filenames have a different color. This makes it a lot easier for me to skim results. It'd be nice to have something similar in Code.
---
Título: Horizontal scrolling is visually confusing
Descripcion: - VSCode Version: 1.8.1 - OS Version: macOS  #### Steps to Reproduce:  1. Disable line wrapping 2. Open a file large enough to make horizontal scrolling appear 3. Scroll to the right 4. Observe that it's hard to tell where the line numbers gutter ends and the code begins  ![image](https://cloud.githubusercontent.com/assets/176815/21703532/ae6f2922-d367-11e6-99d0-dea72b09a78b.png)  #### Expectation  My expectation would be either a line shows up or a little drop shadow shows up on the line numbers when not scrolled all the way to the left, providing me a way to tell what I'm looking at.  #### Mockup  ![image](https://cloud.githubusercontent.com/assets/176815/21703573/0fd6385e-d368-11e6-9215-6633270a13a6.png)
---
Título: Make settings UI look more like one unit and easier to switch to global/workspace settings
Descripcion: #16764 Design task:  - [x] The settings editor currently looks more like two editors.  How can we improve it to look like one unit?  Extend Search to both Default (LHS) and Editable (RHS) settings editors. Search will filter in Default settings where as in Editable settings it highlights settings matched in Default settings.  - [x] Also, how can we support quickly switching between Workspace and User settings without having to go through the app menu.  Show User and Workspace settings as tabs next to Search to easily navigate and discoverable. When there is no workspace, Workspace settings tab is shown disabled.  - [x] [Open Workspace Settings message box opens plain settings.json](https://github.com/Microsoft/vscode/issues/16764)   cc @sandy081
---
Título: Support a real toolbar below the window title with actions
Descripcion: - VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z) - OS Version: Windows_NT ia32 10.0.14393 - Extensions:  |Extension|Author|Version| |---|---|---| |vscode-react-native|vsmobile|0.2.3|  ---  Steps to Reproduce:  I couldn't find the way to load an enhancement so my apologies to use this way. Why VSCode doesn't have a Bar on top where we can configure the favorites keyboard shortcuts in buttons? Would be great to can add short access on a top bar to options like go back, indent, copy, paste, etc. any option. Thanks.
---
Título: Make the space for tabs configurable (min, max, normal)
Descripcion: When i am using vscode with file icons activated on my 13' Macbook, i quickly get a problem with the number of tabs actually visibles.  <img width="1381" alt="capture d ecran 2016-12-23 14 16 08" src="https://cloud.githubusercontent.com/assets/5599375/21454811/bf9ae4f8-c91b-11e6-8f30-0e2d9bd52e54.png">  Especially for long file names in my project :  <img width="1084" alt="capture d ecran 2016-12-23 14 29 54" src="https://cloud.githubusercontent.com/assets/5599375/21454896/54b4b9d8-c91c-11e6-9ce6-4ffaa2c435e9.png">  This is annoying for angular projects with every file named "file.**component**.ts" or "file.**service**.ts".   What i suggest is two things :   # **First**  it could be great to adding a config in settings.json to allow the display of tabs another potential way, here is a suggestion when the screen is not split :  <img width="1384" alt="capture d ecran 2016-12-23 14 11 01" src="https://cloud.githubusercontent.com/assets/5599375/21455614/f9e0b7e0-c921-11e6-85bf-4f9ce1725612.png">  By moving this bar just behind after the code of the title bar :   <img width="1385" alt="capture d ecran 2016-12-23 14 06 02" src="https://cloud.githubusercontent.com/assets/5599375/21454835/e9d6ace8-c91b-11e6-8365-1df8791ddae8.png">  I could be awesome, and i'm not sur we can do thing like that with an extension.  # **Second**  It could be possible to add a filter on text size for tabs, or a way to limit the size with a [css ellipsis](https://css-tricks.com/snippets/css/truncate-string-with-ellipsis/).  Thanks to consider.  David B.
---
Título: Streamline find & replace in selections
Descripcion: Find and replace text in a selection is cumbersome. You have to 1) Mark the selection. 2) Hit CTRL+H to open the Find&Replace tool. 3) Remember to click "Find in selection". If you type into the "Find" field the selection is cleared and you have to start over again. 4) Click the "Find" field. 5) Erase previous text. 6) Enter text to find. 7) Hit tab to get to the "Replace" field. 8) Erase previous text. 9) Enter text to replace with. 10) Confirm by click or keyboard shortcut.  This could be streamlined a lot by getting rid of 3), 5) and 8):  - CTRL+H should auto-select "Find in selection" if there is a selection. This gets rid of 3). - CTRL+H should always focus on the "Find" field (not "Replace") and select the text. I don't think anyone wants to enter the "Replace" text first and reuse the previous "Find" text or enter the "Find" text after the "Replace" text. This gets rid of 5). - Finally, if you hit tab to jump from the "Find" field to the "Replace" field, the text should be selected, so that you can just start typing. This fixes 8).  OP: Ubuntu Linux 14.04.
---
Título: Extension panel is blur in Hi-DPI screen
Descripcion: - VSCode Version: 1.8.1 - OS Version: Windows 10 Version 1607  Steps to Reproduce:  1. A screen with 125% scale 2. Open 'Extension' panel, scroll down, extension name and introduce text is blur, but first one will not blur  ![snipaste20161221_115340](https://cloud.githubusercontent.com/assets/19658647/21377018/0e5c3b4e-c775-11e6-9fa2-2a3046a3f916.png)
---
Título: Extensions editor: color clash with tabs
Descripcion: This looks as if the contents of the editor belong to Position.js:  ![image](https://cloud.githubusercontent.com/assets/900690/21349308/89245ad8-c6b1-11e6-877b-c99a253bd5ce.png)
---
Título: Entering text in find widget should not clear the selection
Descripcion: - VSCode Version:1.8.1 - OS Version:Win 10  Steps to Reproduce:  1. Select two or more lines of text 2. Edit|Replace 3. Type search value into "find" input box 4. Weep as your selection is cleared 5. Explain to boss why you miss deadline because editor hates you
---
Título: Default focus to "find" input on execute of replace
Descripcion: Executing a replace (in file) should set default focus to "find" input field when multiple lines are selected as the find value is not set from the selection and has the value set to the previous find/replace
---
Título: Enable "find in selection" by default when replace executed against a multi-line selection
Descripcion: When doing a replace (in current file) and there is a selection that spans lines, the "find in selection" ought to be enabled by default.  1.  I believe this is standard behavior in most other programmer's editors (visual studio, intellij, textpad++) 2.  Ignoring the current context (multiple line selection) when doing a search makes no sense - why else would the use have made the selection then pressed replace? 3. For me at least, its pretty rare that I want to do a global search/replace.  This is certainly the least likely use case
---
Título: UX about inline traffic light
Descripcion: I'm thinking about picking up #12628, but would like to get some input from the UX team, so we can get the design right.  ## Current State  ![](https://cloud.githubusercontent.com/assets/49038/20053382/88475732-a4d8-11e6-97aa-80eb257c5264.png)  However, this design doesn't work when activitybar is hidden or in the right.  ## Electron's limitation  Electron allows one of the four following styles, but they can't be changed at runtime. Would need a restart of VSCode to use another style.  ![image](https://cloud.githubusercontent.com/assets/4033249/21313907/4580a386-c62f-11e6-9984-a08284442a28.png)  ## Points of Discussion  ### To make the inline traffic lights work, there are three options:  1. When inlining traffic lights into activitybar, lock activitybar so user can't hide it or move it to the right.  2. Tweak the sidebar and tabbar, so they could contain the traffic lights. Chrome-style tabbar is achievable:      ![](https://cloud.githubusercontent.com/assets/900690/19407942/0deedfac-92b1-11e6-9a5c-ae38a3a3b28b.png)      **but I can't find a good way to let sidebar contain traffic lights**. Haven't seen other OS X app putting traffic light in sidebar either.  3. Instead of inlining traffic lights into activitybar, we inline the traffic lights into a **custom titlebar**. This is how many macOS apps are designed, like Mail, iTunes and Safari:      ![image](https://cloud.githubusercontent.com/assets/4033249/21311564/c7c6dc32-c622-11e6-83f5-8f4188b85805.png)  1 is easy to implement. 3 feels right design-wise. 2 probably isn't worth pursuing, as it involves a lot effort for a not-so-good design.  ### Do we also add such a feature for Windows?  - If so, I think inlining traffic lights into custom titlebar is better, as the "traffic lights" are to the right in Windows. Borrowing @be5invis's mockups...      This looks natural:      ![image](https://cloud.githubusercontent.com/assets/4033249/21310986/f094e698-c61f-11e6-978c-7457d924e882.png)      Whereas this one looks odd, and doesn't account for the case when both activitybar and sidebar are hidden. It also leaves no space for menu items.      ![image](https://cloud.githubusercontent.com/assets/4033249/21311076/4dc9b8d4-c620-11e6-920d-a48a96eb90b2.png)  ## My thoughts  Overall, I feel 3 is better than 1 in terms of usability and cross-platform design consistency.  It seems @bpasero already made a custom titlebar for macOS. If we choose design 3, I can try to make `titleBarStyle: custom` for Windows. If we choose to push the original idea forward, I want to get some input from the UX team for the usability concerns.  /cc @bpasero @stevencl @bgashler1
---
Título: Wrong active tab title background in dark theme with "uiTheme": "vs"
Descripcion: - VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z) - OS Version: Windows_NT ia32 6.1.7601 - Extensions:  |Extension|Author|Version| |---|---|---| |xml|DotJoshJohnson|1.6.0| |auto-close-tag|formulahendry|0.3.6| |auto-rename-tag|formulahendry|0.0.8| |green-theme|vscode|0.1.0| |beautify|HookyQR|0.6.2| |theme-material-theme|jprestidge|1.0.1| |cpptools|ms-vscode|0.9.3| |vscode-icons|robertohuertasm|4.2.0|  ---  Steps to Reproduce:  1. Active tab title background should be controlled by uiTheme, should not follow the background of tmTheme. 2. Inactive tab title background does not have the problem.
---
Título: Add `CompletionItemKind.Directory`
Descripcion: For PR #17434  For path completion in TS and JS, we would like to be able to distinguish between completions for files and directories. Currently only `CompletionItemKind.File` exists, and none of the other CompletionItemKinds seem appropriate for directories.
---
Título: Cannot disable "word highlighting", no setting for it
Descripcion: - VSCode Version: 1.8.0 - OS Version: macOS 10.12.1  Steps to Reproduce:  1. Open preferences: cmd + , 2. Change: editor.selectionHighlight to false & save 3. Open any file 4. Click on any repeated function/var  ![screen shot 2016-12-15 at 20 01 39](https://cloud.githubusercontent.com/assets/9949969/21240014/5db13258-c301-11e6-9d25-72f138eeefba.png)  It was like two that versions back as well.  Cheers, Greg
---
Título: Make quick pick position configurable
Descripcion: [UX] [Feature request]  Would be very nice for the command palette position to be configurable. By default, SublimeText places the palette on the tab column which is focused.  VS Code does not, and I don't know of a way to do that. It's oftentimes confusing to see it centered when you access some commands related to the currently focused tab/editor.  **SublimeText** ![screenshot 2016-12-15 10 24 42](https://cloud.githubusercontent.com/assets/196656/21216913/14b1e682-c2b2-11e6-9ba4-d90802f88d7a.png)   **VSCode** ![screenshot 2016-12-15 10 24 53](https://cloud.githubusercontent.com/assets/196656/21216917/1a7266aa-c2b2-11e6-951d-610bf83d4e08.png)  Notice how nicely Sublime positions the command palette on the focused tab - which is very nice.
---
Título: 1.8 update reduces tab bar element visibility in light theme
Descripcion: - VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:38:28.425Z) - OS Version: Darwin x64 15.6.0  See screenshot and the notes that follow.  Using the light+ theme (the default light theme), there is a lot more eye strain compared to the previous version.  ![screen shot 2016-12-14 at 4 30 35 pm](https://cloud.githubusercontent.com/assets/20231989/21201993/0111727e-c21b-11e6-8856-5fc8002a4365.png)  The updated rendering has two (possibly three) differences that negatively affect visibility: (1) Previously there were dark, single pixel lines dividing each tab.  Now there are light, single pixel lines dividing each tab.  I can only see them with strain. (2) There used to be a dark, single pixel line at the bottom of the tab bar dividing it from the editor, in addition to a subtle drop shadow.  Now the drop shadow is the only visible division.  The shadow-only division makes the line between the non-active (gray) tabs and the editor contents just look like a blur.  I find my eyes straining significantly. (3) I'm not sure, but it feels like the rendering of the text in the tab bar might be a little blurrier, however this likely not the case--it might just be the eye strain/blur from (1), (2) that gives this impression.  By my eye, it seems that the dark themes might have improved (not sure, don't use them typically).  Nonetheless, the light theme seems to have regressed enough to steer me (reluctantly) towards the dark themes.  If anyone has a 1.7 light+ screenshot handy, please post for comparison.
---
Título: Settings UI looks bad in a few themes
Descripcion: Tomorrown Night Blue:  ![image](https://cloud.githubusercontent.com/assets/22350/21133221/1f5659f6-c118-11e6-8599-abaac285836b.png)  - We should remove the background colors from the input box container and section headers - We should inline the result summary inside the search text box, aligned to the right
---
Título: Titlebar-less view for Windows
Descripcion: A concept based on @flagello’s [Essence](https://github.com/flagello/Essence)  ![](https://cloud.githubusercontent.com/assets/240091/21091794/7edfeb5c-c083-11e6-8542-86710ea63fbe.png) ![](https://cloud.githubusercontent.com/assets/240091/21092185/d6dc5992-c085-11e6-8776-62dbdac43989.png)  Key idea:   - Use the “Great VS Button” to call out the main menu.  - The title-bar-like zone is used for tabs/editor panel titles.
---
Título: Better coloring of matching braces.
Descripcion: Request.  Currently when we have the cursor near a ( ] } etc, the matching brace color is extremely faint, and difficult to spot in the middle of the code.  A stronger and contrasting background color ( as it happens on the Brackets editor) would help tremendously.
---
Título: Windows: allow more styles in the menu bar and hide the title bar
Descripcion: - VSCode Version: 1.7.2 - OS Version: Windows 10  -- Sorry for the English, I used Google Translator --  Allowing show / hide equal title bar happens with Firefox.  ![gif2](https://cloud.githubusercontent.com/assets/19866231/21069579/7db6dd94-be62-11e6-8b52-54a5a6cb7ed7.gif)   Allow the menu bar to receive the color of the VSCode theme, just like in Firefox, rather than gray.  ![gif1](https://cloud.githubusercontent.com/assets/19866231/21069599/c0f99dc6-be62-11e6-8e49-a4256215c452.gif)  ![gif3](https://cloud.githubusercontent.com/assets/19866231/21069609/d2e48e60-be62-11e6-9001-e77a95ede0aa.gif)  Follow a print (very ugly) to get an idea of how it could stay.  When we leave the Menu bar active.  ![img2](https://cloud.githubusercontent.com/assets/19866231/21069620/eea3d21e-be62-11e6-920f-fb9fc6d88525.jpg)  When we hide the menu bar..  ![img3](https://cloud.githubusercontent.com/assets/19866231/21069626/f703ebd8-be62-11e6-9b68-4137530394d8.jpg)  When we have a group of tabs with the Menu bar hidden.  ![img4](https://cloud.githubusercontent.com/assets/19866231/21069628/fb80f80e-be62-11e6-8b57-0fb0e0bbebce.jpg)   The background color of the mininize, restore / maximize, and close buttons should change color along with the theme, but when hovering over it it should change color to gray when mininize and restore / maximize and red when closed, as it currently is .
---
Título: Enable / Disable activit bar shortcuts back to default position
Descripcion: - VSCode Version: 1.8.0 insider - OS Version: Windows 10  -- Sorry for the English, I used Google Translator --  When you disable shortcuts in the activity bar and enable them again, it must return to the default position, not the last position, or return to the last saved configuration.  Example: When you deactivate the search and activate again the same back to last position and the correct one is to return to the second position. I say this because this is how it comes when installing VSCode for the first time.   Or in case if I had set the search to the third position, when deactivating and activating again it should return to that position. ![capturar1](https://cloud.githubusercontent.com/assets/19866231/21048369/10a7d63e-bdf6-11e6-8011-4dd7b2c74e0f.JPG)  **Update:** it is better to go back to the last saved configuration instead of the default one.
---
Título: high contrast mode - bottom border of git staged changes count badge is cut off
Descripcion: Testing #15811   ![image](https://cloud.githubusercontent.com/assets/762848/20992058/a23e3aa4-bc96-11e6-94f4-b56d2ca77a2f.png)  <hr>  - VSCode Version: Code - Insiders 1.8.0-insider (7499a9f3c565f4fbe5205e30c8664e5a5a11ae94, 2016-12-06T16:16:15.865Z) - OS Version: Windows_NT ia32 10.0.14965
---
Título: High contrast mode - top of selection box not highlighted when over over first extension in list
Descripcion: Testing #15811   In the screenshot below, I am hovering over the top extension in the list, but there's no visual indicator that's the case because the top border is nowhere to be found.  ![image](https://cloud.githubusercontent.com/assets/762848/20992023/55691ec4-bc96-11e6-838f-3c7990f5578c.png)  <hr>  - VSCode Version: Code - Insiders 1.8.0-insider (7499a9f3c565f4fbe5205e30c8664e5a5a11ae94, 2016-12-06T16:16:15.865Z) - OS Version: Windows_NT ia32 10.0.14965
---
Título: Allow to search commands related to problems view with "error" or "warning"
Descripcion: @jrieken suggestion from #14639  - Rename **Problems** view to **Errors and Warnings**
---
Título: Regroup view menu
Descripcion: - VSCode Version: 1.8.0 - insider 7499a9f - OS Version: Windows 10  -- Sorry for the English, I used Google Translator --  Steps to Reproduce:  1. For a resolution of 1366 x 768 the view menu is getting too big, getting out of position.  2. I think it would be possible to group some menu items with a generic name and a side menu (with an arrow) to show the items (if I'm not wrong, the name is Submenu). As in `File> Open Recent>`, `File> Preferences>`, `Go> Switch Editor>`, `Go> Switch Group>`.  3. Or create a new menu in the Bar Menu by relocating some items.  ![capturar](https://cloud.githubusercontent.com/assets/19866231/20972496/256de890-bc7c-11e6-8222-0a40fb412090.JPG)
---
Título: Settings not aligned with heading and search box
Descripcion: Testing #16530  ![image](https://cloud.githubusercontent.com/assets/16890566/20948532/79feac54-bbc9-11e6-845b-259c2cc9ac9f.png)
---
Título: typescript.check.tscVersion should not be in most commonly used, a most useful list would be better
Descripcion: #16530  - VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T17:07:24.668Z) - OS Version: Linux x64 4.8.0-28-generic - Extensions:  |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.3.4| |lorem-ipsum|Tyriar|1.0.0| |sort-lines|Tyriar|1.1.0| |theme-glacier|Tyriar|0.0.10| |vscode-svgviewer|cssho|1.2.0| |vscode-eslint|dbaeumer|1.1.0| |tslint|eg2|0.7.1| |git-project-manager|felipecaputo|1.0.0| |Theme-Wombat|gerane|0.0.2| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.0| |csharp|ms-vscode|1.5.3| |typescript-javascript-grammar|ms-vscode|0.0.10| |sass-indented|robinbentley|1.2.1| |dark-plus-material|vangware|0.1.4|  ---  While this is called most commonly used and that may be correct, I think a curated list of "most useful" would actually be more beneficial. `typescript.check.tscVersion` is set so much because it's set via a message box. Just because it's forced upon people does not mean it should be one of the small selection of settings presented in the precious space above the fold.
---
Título: New settings "copy to settings" drop down is clunky
Descripcion: #16530  - VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T17:07:24.668Z) - OS Version: Linux x64 4.8.0-28-generic - Extensions:  |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.3.4| |lorem-ipsum|Tyriar|1.0.0| |sort-lines|Tyriar|1.1.0| |theme-glacier|Tyriar|0.0.10| |vscode-svgviewer|cssho|1.2.0| |vscode-eslint|dbaeumer|1.1.0| |tslint|eg2|0.7.1| |git-project-manager|felipecaputo|1.0.0| |Theme-Wombat|gerane|0.0.2| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.0| |csharp|ms-vscode|1.5.3| |typescript-javascript-grammar|ms-vscode|0.0.10| |sass-indented|robinbentley|1.2.1| |dark-plus-material|vangware|0.1.4|  ---  Instead of having a single item dropdown can we just copy the setting over automatically? if necessary could we introduce some way of bringing the user's attention to the right side?  Steps to Reproduce:  1. Open settings 2. Click the pencil icon for `editor.fontSize` 3. Click the copy to settings drop down item
---
Título: Multiple editors in a single tab feel awkward, how do you navigate between the two editors?
Descripcion: #16530  - VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T17:07:24.668Z) - OS Version: Linux x64 4.8.0-28-generic - Extensions:  |Extension|Author|Version| |---|---|---| |EditorConfig|EditorConfig|0.3.4| |lorem-ipsum|Tyriar|1.0.0| |sort-lines|Tyriar|1.1.0| |theme-glacier|Tyriar|0.0.10| |vscode-svgviewer|cssho|1.2.0| |vscode-eslint|dbaeumer|1.1.0| |tslint|eg2|0.7.1| |git-project-manager|felipecaputo|1.0.0| |Theme-Wombat|gerane|0.0.2| |md-navigate|jrieken|0.0.1| |vscode-scss|mrmlnc|0.6.0| |csharp|ms-vscode|1.5.3| |typescript-javascript-grammar|ms-vscode|0.0.10| |sass-indented|robinbentley|1.2.1| |dark-plus-material|vangware|0.1.4|  ---  I'm a heavy user or ctrl+1, 2, 3 to focus the various editors available to me, when there is a tab with multiple editors especially when there is only 1 editor group ctrl+2 feels very strange as it opens a new editor tab. I don't know how to get focus into the default settings editor.  Assigning this to people involved in these split tabs as it's more of a general problem. Maybe I'm just missing something having not used the diff editor. I want a reliable way to focus either editor within a split tab and/or potentially making it more obvious that it's a split editor? If there is already a way to deal with this, is there a better way we could educate users like myself?
---
Título: Settings: Edit icon off by a few pixels
Descripcion: Testing #16530  The edit icon is a little to low and quite a bit to much to the right positioned.  ![settings-edit-icon-alignment](https://cloud.githubusercontent.com/assets/9205389/20939398/8d8dce4c-bba3-11e6-85bb-4c99239ae2b5.png)
---
Título: Improve visual presentation of header area of settings editor
Descripcion: - VSCode Version: Code - Insiders 1.8.0-insider (7499a9f3c565f4fbe5205e30c8664e5a5a11ae94, 2016-12-06T16:10:17.195Z) - OS Version: Darwin x64 15.6.0  ---  Steps to Reproduce:  1. open user settings 2. see yellow and pink in screenshot  Yellow: The interplay of the grey and white areas don't make it obvious that this is a single editor now. Particularly for users who have experienced the two editors opening in the past. Pink: The separation between the two sides of the editor is rather subtle. It should be more prominent. Also the use of the shadow seems not to fit nicely in the overall UI design of Code.  ![screen shot 2016-12-06 at 10 31 39 am](https://cloud.githubusercontent.com/assets/4674940/20938371/b2890012-bb9f-11e6-98d3-5c46874fed0f.png)
---
Título: Panel Terminal, Panel Console and easy switching between them
Descripcion: - VSCode Version: 1.8.0-Insider - OS Version: OS X Yosemite Feature request:  It would be nice to have a widget that allows me to easily switch between <code>OUTPUT</code>, <code>TERMINAL</code>, <code>DEBUG CONSOLE</code>, and <code>PROBLEMS</code>.   While I'm at it, I wish that the upside down caret that minimizes the various terminals was a different thing, because I always want that thing to be my widget to choose among the 4 items I list above, because it seems that it would activate a menu or other visual cue to change between things. It should be a little 'x'.
---
Título: action decoration in settings file makes it hard to put cursor at end of line
Descripcion: i opened my settings.json and wanted to add a new setting at the end of the file.  I moved my mouse to the end of the line and clicked to set the cursor, but instead i clicked on the decorator and i got a drop down.  So to put the cursor at the end of the line with the mouse i have to either click after the decorator or click in the single space between the end of the line and the decorator.   If all lines had a decorator at the end i could get used to having to click way to the right. but not all settings have drop downs.  i dont have a good solution :).  Maybe the decorator needs to show up right next to the value so there isn't the temptation to try to click between the end of the word and the decorator.
---
Título: "Disconnect" icon in toolbar is probably our most ugly icon
Descripcion: ![image](https://cloud.githubusercontent.com/assets/900690/20857687/44c49ee6-b934-11e6-8b35-fe0c40db5516.png)  Am I the only one that thinks this icon does not fit anywhere in our UI and especially not compared to the other icons in there?
---
Título: How to show button fold code (-) and (+) by default?
Descripcion: Hi, please check this image :) http://i.imgur.com/AeAPvv3.png
---
Título: Normal File Search in New Setting UX Does not Expand Sections
Descripcion: Testing out the new settings UX, normal file searches <kbd>command</kbd><kbd>f</kbd> correctly find the location of strings in the default settings file but do not expand the section the result is found in:  ![nov-30-2016 17-18-03](https://cloud.githubusercontent.com/assets/12821956/20778187/fc22f8be-b720-11e6-985d-76c3214cadae.gif)
---
Título: Alert messages covering the tab bar is just a bad idea
Descripcion: I've been trying to switch to VS Code for a while, but one single annoyance makes me stop using it: any kind of error or informational message covers the tab bar, making me unable to do anything unless I dismiss it.  This could be a plugin announcing a new feature, or a plugin announcing that there is a warning.  For example, Unity projects always announce warnings when they build, so for every build, the tabs hide behind a message.  One possible solution: an icon appears in the status bar when errors appear. Clicking on it shows them. Clicking outside hides them.   - VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:01:10.756Z) - OS Version: Darwin x64 16.1.0 - Extensions:  |Extension|Author|Version| |---|---|---| |theme-realgithub|NoHomey|1.0.4| |material-icon-theme|PKief|1.0.3| |theme-dreamweaverweb|Persephona|1.5.4| |unity-tools|Tobiah|0.1.4| |unity-debug|Unity|1.1.0| |theme-onedark|azemoh|0.2.12| |theme-ezekel|be5invis|0.1.1| |theme-dracula|dracula-theme|1.2.5| |theme-karyfoundation-themes|karyfoundation|5.2.0| |quicksnippet|mousetraps|0.0.1| |csharp|ms-vscode|1.4.1| |theme-readable-material-darker|petemill|0.0.2| |vscode-icons|robertohuertasm|4.0.4|
---
Título: Better highlighting on errors to spot them faster
Descripcion: Hi there!  I've been experiencing a problem when highlighting errors on VSCode. Whenever you have big issues you can spot them on the fly when opening the document. But if your issues are small, you need more time to spot those errors.  As you can see in the image below, these 2 lines have 2 errors and both of them have the problem of not having a semicolon at the end of the line: ![screen shot 2016-11-29 at 15 45 30](https://cloud.githubusercontent.com/assets/8843202/20714411/41aa18f2-b64c-11e6-8189-33bf5d188231.png)  The first one is easier to spot than the second (at the end of the parenthesis). The simpler solution for this would be to highlight the entire line in some way (so double highlight) just to spot easily the lines that have errors.  Atom does this the following way: ![screen shot 2016-11-29 at 15 48 21](https://cloud.githubusercontent.com/assets/8843202/20714571/afd983e4-b64c-11e6-931c-66c0ae556576.png)  Thanks and keep up the good work!  - VSCode Version: Version 1.7.2 - OS Version: 10.12.1 (macOS Sierra)
---
Título: Color update: title, activity bar, status, tabs, panel (#16001)
Descripcion: https://github.com/Microsoft/vscode/issues/16001
---
Título: Color update: title, activity bar, status, tabs, panel
Descripcion: **Changes**: * custom title bar on mac to get same color as activity bar and status bar * status bar to get the same color as activity bar and status bar (unless debugging, empty workspace) * activity bar gets a VS-Light theme coloring * less borders around tabs * panel to get same background color as viewlet and a slight border to the left as separator to distinguish from the editor area  **Try Out**: * Open settings and configure `"update.channel": "none"` to disable automatic updates * Mac: [Download](https://az764295.vo.msecnd.net/insider/fd4d938088d3ee94810daaa07ba9a234ecf89ca9/VSCode-darwin-insider.zip) * Linux: [Download](https://az764295.vo.msecnd.net/insider/fd4d938088d3ee94810daaa07ba9a234ecf89ca9/code-insider-1.8.0-1479974168_amd64.tar.gz) * Windows: [Download](https://az764295.vo.msecnd.net/insider/fd4d938088d3ee94810daaa07ba9a234ecf89ca9/VSCode-win32-1.8.0-insider.zip)  **Dark Theme** ![screen shot 2016-11-24 at 07 56 23](https://cloud.githubusercontent.com/assets/900690/20589295/d3fbbdbc-b21b-11e6-9655-a4b26c084d36.png)  **Light Theme** ![screen shot 2016-11-24 at 07 56 15](https://cloud.githubusercontent.com/assets/900690/20589277/c2e1cd5a-b21b-11e6-884d-48d8d300a7bc.png)  **HC Theme** ![screen shot 2016-11-24 at 07 56 28](https://cloud.githubusercontent.com/assets/900690/20589306/e10c4ae4-b21b-11e6-895f-75702b29bdd4.png)
---
Título: High contrast theme doesn't play nice with extensions search input bar
Descripcion: - VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z) - OS Version: Windows_NT ia32 10.0.14931  Expected: search bar has visible border when not selected.  ![image](https://cloud.githubusercontent.com/assets/762848/20508503/f005856c-b016-11e6-82b1-4c831c76d648.png)
---
Título: Investigate return to open on mouse-down
Descripcion: We used to open a file from the explorer on mouse down until end of August when https://github.com/Microsoft/vscode/commit/2980c2fcbd32dd5f2c5ecf1fc0fd4ee9b5e1c2d2 landed.  The change was motivated to fix https://github.com/Microsoft/vscode/issues/8267 and https://github.com/Microsoft/vscode/issues/10775  I am not sure how this became a plan item, other than seeing this note (from @waderyan ?) from the Compete Wish List:  ![image](https://cloud.githubusercontent.com/assets/900690/20491835/f4864f6c-b012-11e6-89a1-a256fd575dc4.png)  /cc'ing some people like @waderyan and @egamma (who asked about this in the standup) and @stevencl (who filed one of the issues) to gather more input why we should suddenly change back to the old buggy behaviour. If this is just a theory that it will make people believe Code is faster, then I would not change anything until we get proof from our users.
---
Título: Better UI for Multiline Search & Replace in a single file
Descripcion: I'm new to VSCode, i like many things in this editor, but i miss a lot of really useful and important options which missing for some reasons at Visual Code. One of such feature is Powerful Search Options.  About what i'm talking about? ![](https://vgy.me/jrMtL5.png)  ### What will you see on image above?  1. Multiline Search which will search in opened document for the text. Also, this feature support searching for multiple lines at once in multiple documents very easy. 2. Multiline Search when you enter in search fild your lines automatically find in text this text (if it exist) and highlite it 3. You can manipulate with multiline search the same like with one-line search. 4. You can select multiple lines via ALT + SHIFT + Arrow Up / Arrow Down multiple lines, then you can click HOME button and all lines will be selected with multiple cursor and you can apply some changes to your multiline search like below:  ![Multiline Searching And Line Manipulation in search field](https://vgy.me/Nmf3Ym.gif)  ### Why multiline feature like in sublime text should be implemented? Because of this feature, time saved in 10-20x times. People like me who working with a lot of patches, reject hunks, etc things and working with a lot of searching things will find this features very useful. Example of usage can be: fixing `.rej` files, applying patches, big diffs, applying some changes to multiple lines at once.  Please think about it well, this feature is market-killer, and in one day even if you reject the issue today, community will request this feature for sure, no exeptions, just time will show. Because this feature minimize stupid tasks and time for doing the same job, productivty increased, all happy.  More info about feature: http://docs.sublimetext.info/en/latest/search_and_replace/search_and_replace.html
---
Título: Bad line number margin in diff editor
Descripcion: The line number gutter seems to have been squeezed out of any padding it had. IMO the line number gutter shouldn't look any different than from a regular editor.  ![image](https://cloud.githubusercontent.com/assets/22350/20423704/2f1a8b3c-ad72-11e6-991e-96c9829b98a5.png)
---
Título: Zen mode: Centered Editor Layout
Descripcion: With the recent addition of zen mode, it may be worth considering adding a centered editor layout option:  ![screen shot 2016-11-17 at 5 16 15 pm](https://cloud.githubusercontent.com/assets/12821956/20414983/3ac9d86c-acea-11e6-9732-0df85effdc66.png)  This is something that the [Typewriter atom extension](https://atom.io/packages/typewriter) adds, and I see it being particularly useful in zen mode and when writing text documents, such as markdown. A centered layout would apply both a softwrap and align the wrapped editor content to the center of the current editor pane.  ![screen shot 2016-11-17 at 5 20 45 pm 2](https://cloud.githubusercontent.com/assets/12821956/20414982/3ab2d6a8-acea-11e6-8f1f-51de5979e4c2.png)   The major downside is that this would add an ui configuration that we would have to test and support. The centered editor layout also doesn't fit well with all VSCode ui paradigms
---
Título: Show enabled extensions isolated
Descripcion: Hello, I have a new request for the vscode team. After installing several extensions, and disabling some, I have been uncomfortable with the fact that I can´t see isolated the extensions that I have enabled. Instead with the extensions disabled the opposite happens.  In my opinion should appear by default only the extensions enabled when the extensions panel opens, and the user decides whether or not to see the disabled, which for some reason disabled them
---
Título: Support for empty editor groups
Descripcion: - VSCode Version: 1.7.1  Really annoying thing: I want to open new file [to the side](https://code.visualstudio.com/Docs/editor/codebasics#_side-by-side-editing). When I do that, it shows the same file. When I use `Ctrl+P`, newly created, duplicated file, stays in background.  Steps to Reproduce:  1.  Go to any file 2.  Press `Ctrl+\` 3. The same file opens up as I've been to. When I then use `Ctrl+P` to open another one, it stays in background.  [Video of how it looks like](https://gfycat.com/GreatShabbyGoldeneye)  What I propose:  1. Don't open the same file after using `Ctrl+\` (why would I want to have a file opened two times?). Show blank space instead. 2. Or at least close this file when I use `Ctrl+P` to open another one.
---
Título: UI: Add dock for switching viewlets/panels
Descripcion: #1105  - Provide an option to hide the activity bar currently has 79 upvotes.   Per today's discussion in UX meeting #15217, I came up with this idea:  (Ignore the blank part on the right, just a quick hack to get the idea across)  ![dock](https://cloud.githubusercontent.com/assets/4033249/20151049/86d0f020-a66d-11e6-9f20-74ab987ac37d.png)  It'll work similarly to Windows's `Ctrl+Tab` or macOS's `Cmd+Tab`. Say if you have `Cmd+B` assigned to it:  ## Workflow  - `Cmd+B` brings up this dock   - If sidebar is hidden, also bring up the dimmed Viewlet   - If sidebar is shown, dim active Viewlet    ![dock](https://cloud.githubusercontent.com/assets/4033249/20151049/86d0f020-a66d-11e6-9f20-74ab987ac37d.png)  - While `Cmd` is pressed, additional `B` selects next Viewlet, both the highlight item on the dock and dimmed Viewlet background update    ![flow 2](https://cloud.githubusercontent.com/assets/4033249/20151654/cd9c1bb8-a66f-11e6-8122-a9cba9711d9f.png)  - When `Cmd` is released, dock is gone. The last selected Viewlet is shown.    ![image](https://cloud.githubusercontent.com/assets/4033249/20151695/063ac078-a670-11e6-88c9-49402ca27d1d.png)  ## Additional  - This could also apply to panels, where we can have a horizontal dock.  ---  What does everyone think?  @Microsoft/vscode
---
Título: Address UI scalability concerns in the face of contributeable explorers
Descripcion: Allowing custom explorers causes UI scalability concerns that need to be addressed. Among them are - number if icons in the activity bar - can the user control what is visible in the activity bar - discoverability of custom explorers - scalability of the view menu (should be choose to show custom explorers there) - relationship to discoverability of panels
---
Título: Not all windows restored after File -> Exit
Descripcion: - VSCode Version: Code - Insiders 1.8.0-insider (c2418f46d20464a893dc5db6449e9d79766eadc4, 2016-11-07T21:40:57.134Z) - OS Version: Windows_NT ia32 10.0.14393 - Extensions:  |Extension|Author|Version| |---|---|---| |vscode-eslint|dbaeumer|1.0.7| |python|donjayamanne|0.5.0| |tslint|eg2|0.5.39|  ---  Steps to Reproduce:  1. Open two windows on folders 2. File -> Exit 3. Start: Only one window is restored
---
Título: Option to render proper scrollbar
Descripcion: The current VS Code scrollbars (both vertical and horizontal) are OK, but I would prefer: - The scrollbars not to disappear when the mouse stops moving - The scrollbars to be a bit thicker, thus easier to click - An up and a down arrow at the top and bottom (or left and right of the horizontal one) to scroll one line per click - The scrollbar to jump "towards" where you click on empty space either side of the scroll handle, instead of the handle immediately jumping to where the mouse cursor is  In short, they should be like the Visual Studio 2015 scrollbars.  Maybe a setting could be introduced to render this more "traditional" type of scrollbar.
---
Título: Mac: allow for more custom title bar styles
Descripcion: On Mac OS, modern applications typically take over control of the title bar. Some examples:  **Skype for Business:**  ![image](https://cloud.githubusercontent.com/assets/900690/20060897/a4fb35ae-a4fd-11e6-8f0c-5960a9e99d5f.png)  **Outlook:**   ![image](https://cloud.githubusercontent.com/assets/900690/20060909/aeec297e-a4fd-11e6-81ea-5ff7084690b4.png)  VS Code so far is not leveraging this and thus the title appears like this:  ![image](https://cloud.githubusercontent.com/assets/900690/20060963/f6146f78-a4fd-11e6-83f9-2632c77097c3.png)  Proposed solution introduces a new setting `window.titleBarStyle` that allows to switch to a custom title bar (and potentially also to a inline style as discussed in https://github.com/Microsoft/vscode/pull/12628).  ![image](https://cloud.githubusercontent.com/assets/900690/20060949/eded5dfa-a4fd-11e6-9a6a-936d32ae9e97.png)  ![image](https://cloud.githubusercontent.com/assets/900690/20060944/e7fd1e94-a4fd-11e6-8acc-1ef154c5c531.png)
---
Título: Triggering actions.find causes active match to lose its highlight.
Descripcion: - VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z) - OS Version: Windows_NT ia32 10.0.14393  Steps to Reproduce:  1. In any file, highlight the text to find. 2. Trigger the `actions.find` command with the keyboard (`Ctrl+F`). 3. Observe that the originally highlighted text is not highlighted in any way that distinguishes it as the active match or target for replacement.  Alternate Steps to Reproduce:  1. In any file, highlight the text to find. 2. Trigger the `editor.action.startFindReplaceAction` command with the keyboard (`Ctrl+H`). 3. Observe that the originally highlighted text is not highlighted in any way that distinguishes it as the active match or target for replacement.  Example of both Steps and Alternate Steps shown in the following gif. In the gif, you can see that whenever the Find/Find+Replace box is shown, the originally highlighted text is no longer marked as the active match, even though it is the active match.  This is a major problem because there is no way to confirm what the very first replacement will be.  ![vscode-find-replace](https://cloud.githubusercontent.com/assets/623736/20039981/9d36c112-a41c-11e6-9b6c-7c8151d255c0.gif)
---
Título: Quiet Light theme: highlight for search result in comment is same color as text
Descripcion: - VSCode Version: 1.7.1 - OS Version: Linux Mint 18  Steps to Reproduce:  1. Pick the "Quiet Light" color theme. 2. Open a JavaScript file. 3. Type "// I am a comment". 4. Ctrl-F to search for "am a".  ![screnshot](https://cloud.githubusercontent.com/assets/19274678/19984186/66634fec-a1ca-11e6-9b05-b435d4a1b7e5.jpg)
---
Título: Allow to have the editor tab bar above the side bar
Descripcion: - VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z) - OS Version: Windows_NT ia32 10.0.14393 # Current state After opening the side bar, tab bar width is horizontally limited to the area left over by the open side bar # Wanted *Vertically* shrink side bar to allow tab bar extend to the full width of the window, even if side bar is open
---
Título: Sidebar modules in status bar
Descripcion: - VSCode Version: 1.7 - OS Version: macOS  The black modules bar is annoying! You could move the switches to the status bar on the left side. Clicking them would disable or enable the sidebar.  An alternative design: take a look at Panic Coda and move the sidebar modules at the top or bottom.  Having the sidebar modules in the status bar is more Visual Studio Code like design.
---
Título: Allow for vertically arranged editor tabs
Descripcion: - VSCode Version: all - OS Version: all  Horizontal tabs are a bad design decision, as when you have more than about 10 they start to cut off the name in the tab title. Vertically arranged tabs are the best solution to this, and there should be an option to switch between horizontally and vertically arranged editor tabs.
---
Título: Hot Exit: Untitled files with no content should be restored
Descripcion: It would probably feel better if Untitled files with no content were also restored upon launch/reload.
---
Título: Bad layout for extensions with empty description
Descripcion: While testing #14288  ![image](https://cloud.githubusercontent.com/assets/4033249/19698288/8836ad86-9aa3-11e6-9aaf-0ad25854c92f.png)
---
Título: UX: Extension should have visual indication of globally/locally enabled
Descripcion: While testing #14288  Currently when an extension is disabled, user have no idea if it's globally or locally disabled.  The only way to figure it out is Click Enable -> See Always is greyed out -> Know the package is locally disabled. This is unintuitive.
---
Título: Preserve editor relative sizes when switching layouts
Descripcion: Testing #14016 - VSCode Version: Code - Insiders 1.7.0-insider (5bafcdb3d67b29b1f4667a3f497ac05a41dde667, 2016-10-25T06:19:07.301Z) - OS Version: Linux x64 4.4.0-45-generic, Ubuntu 16.04 - Extensions:  | Extension | Author | Version | | --- | --- | --- | | EditorConfig | EditorConfig | 0.3.4 | | lorem-ipsum | Tyriar | 1.0.0 | | sort-lines | Tyriar | 1.1.0 | | terminal-tabs | Tyriar | 0.0.6 | | theme-glacier | Tyriar | 0.0.10 | | vscode-icontheme-nomo-dark | be5invis | 1.1.5 | | vscode-svgviewer | cssho | 1.2.0 | | vscode-eslint | dbaeumer | 1.0.8 | | git-project-manager | felipecaputo | 0.1.15 | | Theme-Wombat | gerane | 0.0.2 | | csharp | ms-vscode | 1.4.1 | | typescript-javascript-grammar | ms-vscode | 0.0.6 | | nova | rebornix | 0.0.5 | | sass-indented | robinbentley | 1.1.0 | | annotator | ryu1kn | 0.10.1 |  Steps to Reproduce: 1. Open 2 editor groups 2. "Minimize" one to enable snapping 3. Toggle editor group layout, the editor groups will both be the default sizes.
---
Título: Editor group layout commands should work when there is only a single editor group
Descripcion: Testing #14016  While it makes sense that the action is disabled in the open editors view, if it's triggered via the keybindings or command palette I think the editor group layout change should still be performed.  It feels broken that I hit shift+alt+1 and don't see the splitter icon change.
---
Título: Bad clicking when trying to uninstall
Descripcion: testing  #14291  see attached gif  My mouse moves from the custom _uninstall button_, to a _native popup dialog_, to a _custom confirmation message_. I think that is crazy and a bad change of styles/UX metaphors  ![oct-25-2016 13-27-23](https://cloud.githubusercontent.com/assets/1794099/19684321/df7460b2-9ab6-11e6-81ec-550e3632bf67.gif)
---
Título: UX of extensions menu
Descripcion: Testing #14288  IMHO this menu has turned into a monster and as a user I cannot work with it anymore. There are all the concepts cramped into a single menu.  IMHO working with extensions involves two operating modes (similar how developing (editing files) and SCM (git) are different operating modes) 1. Finding & installing extensions 2. Managing installed extensions  IMHO these two are distinct activities and they should be treated distinctly in designing the experience.  ![image](https://cloud.githubusercontent.com/assets/5047891/19680686/062178ea-9aa7-11e6-89dd-7b2305963ee7.png)
---
Título: UX of Disable and Uninstall feels weird to me
Descripcion: Testing #14288 - Disable looks like a button (which makes me think it should be single-clickable) but then it pops up a menu. - I would personally have a wrench icon or a "Manage" link and put the three actions in there:   - Disable for current workspace   - Disable   - Uninstall  Suggested menu: ![image](https://cloud.githubusercontent.com/assets/5047891/19680555/77d23b06-9aa6-11e6-9697-c16fad92100f.png) - Also I believe the Reload button should not be a button, but a fly-out at the top of the viewlet that pushes everything down and reads "Some changes will not be applied until you restart" or something like that.  ![image](https://cloud.githubusercontent.com/assets/5047891/19680245/451f8336-9aa5-11e6-9c63-d367d7a8db76.png)
---
Título: Terminal scroll commands on OS X should be preceded with Cmd
Descripcion: #13440  Terminal scroll commands on OS X should be preceded with <kbd>Cmd</kbd>. <kbd>Home</kbd> and <kbd>End</kbd> should put the cursor at the beginning and end of the input line.
---
Título: Logo jumps up when last file is closed
Descripcion: ![bug](https://cloud.githubusercontent.com/assets/22350/19647266/91cd58f0-99fd-11e6-91da-059369c83255.gif)
---
Título: Launching VS Code without an internet connection gives a cryptic error message
Descripcion: - VSCode Version: Code - Insiders 1.7.0-insider (81445f8c47e550c3bfe683a2079ea8c82e022397, 2016-10-19T08:28:03.050Z) - OS Version: Linux x64 4.4.0-43-generic - Extensions:  | Extension | Author | Version | | --- | --- | --- | | EditorConfig | EditorConfig | 0.3.4 | | lorem-ipsum | Tyriar | 1.0.0 | | sort-lines | Tyriar | 1.1.0 | | terminal-tabs | Tyriar | 0.0.6 | | theme-glacier | Tyriar | 0.0.10 | | vscode-icontheme-nomo-dark | be5invis | 1.1.4 | | vscode-svgviewer | cssho | 1.2.0 | | vscode-eslint | dbaeumer | 1.0.8 | | git-project-manager | felipecaputo | 0.1.15 | | Theme-Wombat | gerane | 0.0.2 | | csharp | ms-vscode | 1.4.1 | | typescript-javascript-grammar | ms-vscode | 0.0.5 | | nova | rebornix | 0.0.5 | | sass-indented | robinbentley | 1.1.0 | | annotator | ryu1kn | 0.10.1 |  ---  The message should be more user friendly and also only show when the extension panel is open, as that's the only time as a user you would typically care.  ![image](https://cloud.githubusercontent.com/assets/2193314/19622875/a5e0a1a2-9869-11e6-84da-2537aa3eeee4.png)  Steps to Reproduce: 1. Launch VS Code without an internet connection
---
Título: Better visual indication that a task is currently running
Descripcion: If you execute a task, the only indication that anything is running is a small spinner in the bottom left of the screen that doesn't catch someone's attention easily. So sometimes you think a process is still running only to look down there and realize the process ended a while ago.  A better visual indication would be useful. For example, change the color of the output window title bar (the bar that says 'OUTPUT'), to a color that can be configured in user settings.  Then it's easy to tell that something isn't running because the title bar color has gone back to normal.
---
Título: [feature] Do not open local find dialog for keyboard driven "find next"
Descripcion: - VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:27:10.246Z) - OS Version: Darwin x64 16.0.0 - Extensions: DotJoshJohnson.xml-1.6.0, Shan.code-settings-sync-2.3.3, donjayamanne.python-0.5.0, groksrc.haml-0.0.2, lukehoban.Go-0.6.45, ms-vscode.csharp-1.4.1, rebornix.Ruby-0.9.0  Steps to Reproduce: 1. Cmd+F to find something 2. Close the find dialog 3. Cmd+G to find again 4. Find dialog reopens  This differs from standard macOS behavior.
---
Título: Allow vertical split so terminal can be shown to the side of the editor instead of underneath
Descripcion: - VSCode Version: 1.6 - OS Version: Windows 10  Recently support was added to [split editors the opposite way](https://github.com/Microsoft/vscode/issues/1749). There was [a request on Reddit](https://www.reddit.com/r/vscode/comments/58cvx1/is_there_a_way_to_make_the_terminal_go_vertical/) to do the opposite, for terminals.  I second the idea - my monitor is 21:9 1080p, so I have lots of width but not so much height!  I know it would be more complicated, but I'd actually love to have the editor on the left and then the right side split into terminal/errors/etc. stacked on top of each other!
---
Título: Quick Open widgets to open below tab/action bar
Descripcion: - VSCode Version: 1.7  Has there been any meetings about the placement of the quick open widget?  with the new eager preview option, its kinda weird to not see which tabs are being switched around or opened in the background while the widget is not hidden.
---
Título: Needed validation in `contributes.keybindings` for extension manifest
Descripcion: While building a keymap extension I ran into an issue.   I created a keybinding contribution as seen below:  ``` json {   "mac": "ctrl+shift+pageup",   "win": "alt+shift+pageup",   "linux": "alt+shift+pageup",   "command": "cursorColumnSelectPageUp",   "when": "editorTextFocus"  } ```  What is wrong with the above?   Once I debugged the extension I found the issue.   ![image](https://cloud.githubusercontent.com/assets/2449568/19569406/77f42bee-96aa-11e6-937b-9c9cc4eaf2bb.png)  Two things could be fixed here:  1 - The error message is too large and so I cannot see what is going on. I did figure out that I can see the same error in the debug console. It would be better if there was a way to see the complete message in the error box. (ping @bgashler1 @stevencl on this one) 2 - I would've expected to have caught this with the JSON validation of the file. We should introduce a squiggle line indicating that the keybinding object is missing a required `"key"` property.  3 - The error message should indicate the line number where the issue exists. See the debug console error message below does not give me an indication where the problem is.   ![image](https://cloud.githubusercontent.com/assets/2449568/19569706/9e057a44-96ab-11e6-80c3-6ba0e21e314e.png)  To fix this today, I simply need to add the `key` property.   ``` json {   "mac": "cmd+shift+l",   "win": "ctrl+shift+l",   "linux": "ctrl+shift+l",   "key": "ctrl+shift+l",   "command": "editor.action.insertCursorAtEndOfEachLineSelected",   "when": "editorTextFocus" } ```  As an aside, I created https://github.com/Microsoft/vscode/issues/14112 to address the necessity of the `"key"` property.
---
Título: The 'x' icon on the tab should be moved to the Left (from right)
Descripcion: - VSCode Version: 1.6.1 - OS Version: OSX 10.10.5  **Feature Suggestion** 1. The 'x' icon on the tab should be moved to the left (from right) so that its position is fixed relatively to the tab's origin (upper left corner), allowing users to close multiple tabs very quickly when the tab width are different.  **How to Replicate the Issue** 1. Create 8 dummy files with the file name length of 10, 15, 20, 25, 30, 35, 40, 45 characters. 2. Open and view them all with VSCode, you should now have 8 tabs opened horizontally side by side with different tab width. 3. Now starting from the left most tab, close each tab one by one VERY QUICKLY by clicking the 'x' icon on each tab. 4. You will find that you have to reposition your mouse cursor on each tab in order to hit the 'x' icon, which is tedious. This is because the 'x' position is not fixed with relative to the tab origin (upper left corner).  **Resolution** 1. By relocating the 'x' to the left of the tab, the 'x' position is now fixed relative to the tab origin. You can close all tabs very quickly without having to reposition your mouse cursor when the tab width are different. 2. UI mockup ![screen shot 2016-10-24 at 5 17 39 pm](https://cloud.githubusercontent.com/assets/15989924/19668646/0450edd2-9a0e-11e6-825e-f7c5e04ecbfe.png) 3. You can also try this out on Safari browser (x on the left) vs Chrome browser (x on the right).
---
Título: Hot Exit: Careful when you veto the shutdown from failing backups
Descripcion: I notice that you seem to veto the shutdown if backups are failing, but you are not showing anything to the user. That is very tough to understand for a user why he cannot exit or close a window.  Suggest to add a message here or some handling from the backup service that should handle the shutdown phase.
---
Título: Split editor icon
Descripcion: I have concerns about the current horizontal split editor icon 1. Looks 3D 2. Looks much fuller / thicker compared to the vertical one 3. it should be like the vertical one rotated by 90 degrees (with the title staying on top)  FYI @bpasero
---
Título: Show error in Explorer tree file icon
Descripcion: This is a request for visual feedback of errors.  If I am working on a file and make a change that causes errors in other files I would like to be able to glance over to the Explorer tree and see where the errors are.  Possibly add a red x (or circle) on the file (or parent folder) icon that has the error.  I know I can have a look at "Problems" - but that involves looking down and clicking.  I use "Problems" if there is a large amount of issues or I want to see details.  I'm currently using VSCode 1.6.1.
---
Título: Search bar covered first 2 lines
Descripcion: - VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:27:10.246Z) - OS Version: Darwin x64 16.0.0 - Extensions: DotJoshJohnson.xml-1.6.0, EditorConfig.EditorConfig-0.3.3, HookyQR.beautify-0.4.1, HvyIndustries.crane-0.2.1, Kasik96.format-indent-1.3.0, PeterJausovec.vscode-docker-0.0.6, abusaidm.html-snippets-0.0.17, akamud.vscode-theme-onedark-0.2.7, alefragnani.project-manager-0.10.0, chenxsan.vscode-standard-format-0.0.12, christian-kohler.path-intellisense-1.1.0, donjayamanne.githistory-0.1.0, donjayamanne.jquerysnippets-0.0.1, donjayamanne.python-0.4.2, ecmel.vscode-html-css-0.0.28, eg2.vscode-npm-script-0.0.21, felixfbecker.php-debug-1.9.7, fknop.vscode-npm-3.3.0, lukehoban.Go-0.6.45, mohsen1.prettify-json-0.0.3, ms-vscode.Theme-MarkdownKit-0.1.1, msjsdiag.debugger-for-chrome-1.2.2, rebornix.Ruby-0.9.0, robinbentley.sass-indented-1.1.0, seanmcbreen.Spell-0.8.6, wcwhitehead.bootstrap-3-snippets-0.0.7  Steps to Reproduce: 1. Open a file with a few lines 2. <Cmd> + <F> open search bar 3. First 2 lines have been covered. If finding contents are inside, we couldn't see them.    _Especially for those uglified files._  <img width="473" alt="settings_json" src="https://cloud.githubusercontent.com/assets/1363706/19488135/e4a64146-9565-11e6-8dc1-d0064f48f5d2.png">
---
Título: Close terminal should have visual indication
Descripcion: - VSCode Version: 1.7 - OS Version: Mac  Steps to Reproduce: 1. Open terminal 1, 2, 3 2. Switch to terminal 2 3. Close 2 by clicking the garbage can icon  Terminal 3 get renamed to terminal 2. In cases where both have same name and output, there is no indication that the closing action happened.
---
Título: Activation indicator should always be visible
Descripcion: It's currently being pushed out when the title is too big, like on the last extension here:  ![image](https://cloud.githubusercontent.com/assets/22350/19389297/c9a498b0-9223-11e6-964f-8d8d96b01012.png)
---
Título: Panel background color implies its editor-level in visual hierarchy
Descripcion: Panels (including terminal) should appear much higher in visual hierarchy than an editor, since they can display info or run commands at the Folder level.  We should explore what background color and styles to use to differentiate it from the editor level whilst keeping it completely legible (including with colorization of text) and not detracting from the concept that some panels (like terminal) can receive user input like an editor.  ![screen shot 2016-10-11 at 12 01 14 pm](https://cloud.githubusercontent.com/assets/11839736/19284351/6edfc02e-8faa-11e6-8662-b0f0f731dc99.png)
---
Título: Animations making VS Code feel slow
Descripcion: The empty document well animations (infinity icon motion, text fade in) make the tool feel slow, as if it can't keep up with me resizing the window.  If i make the windows smaller, the text disappears and then the icon catches up with me.  When i make the window larger, the icon motion is behind my resizing gesture, and eventually the text fades in.  All of these visuals happen after i make a resize gesture, which makes me feel like the tool can't keep up, like something is happening in the background, and I should wait for it.  it is distracting too, it always catches my eye and then I lose my context.  VS Code is lightweight and fast. The UI should feel snappy, not delayed. We don't animate in search results or when we open a file.  Quick Open is instantaneous.  Async queries in the Extensions viewlet show me a progress bar immediately.   Why then does our desktop resize animate behind my gestures?  CC @bgashler1 @seanmcbreen @stevencl @chrmarti @joaomoreno
---
Título: Enable copy from the suggest-widget details
Descripcion: - VSCode Version: 0.7.0 - OS Version: All?  Steps to Reproduce: 1. Trigger suggestion window 2. Click on the doc-details icon to move to the details view 3. Try to mark parts from the documentation for copying  The window is closed (cannot copy parts of it)
---
Título: No way to interact with definition hover preview
Descripcion: Since @joaomoreno's work in [#2330](https://github.com/Microsoft/vscode/issues/2330#issuecomment-245214728), hovers use a widget with scrollable cells and it works very nicely for type info, docs, etc.  Definition previews for a symbol (shown when holding ⌘ on hover) can also show up in the hover widget in a scrollable cell. But in this case it seems impossible to interact with the scrollable definition preview content because the hover disappears as soon as you mouse over it if you are holding ⌘.  Is there a way to fix this?
---
Título: Rename "Synchronize" command to "Pull & Push"
Descripcion: "Synchronize" suggests to me that it will not do anything harmful. Yet it does potentially add a merge commit and then push that and all other outgoing changes to a potentially public repository.  At least two people have run into this while smoke-testing and I have reports from other teams that this is causing some grief. #8655 discusses enabling the confirmation dialog by default or making the command more configurable, but the main issue seems to be that it does something people new to it don't expect from its name.  /cc @egamma @chrisdias @bgashler1 @joaomoreno
---
Título: Unable to view entire error message in top drop down error bar
Descripcion: - VSCode Version: 1.5.3 - OS Version: macOS Sierre v 10.12  Steps to Reproduce: 1. Load any process that will create a error message to display in the top drop down error bar on either a reduced window size or with a long file path error. 2. Unable to view or scroll through whole message, so unsure what the end of the message is (even with debug console open, the error messages do not display in the debug console, which i wouldn't expect them to, but thought it was worth mentioning).  <img width="1456" alt="screen shot 2016-10-04 at 6 21 53 am" src="https://cloud.githubusercontent.com/assets/5957293/19070990/e598a398-89fb-11e6-9ae3-ae18226ec3bc.png">
---
Título: Implement an overflow design for the status bar
Descripcion: Testing #12519   Change window.zoomLevel in settings to 3, and shrink the window a bit until the "responsive" design starts kicking in. Pressing Ctrl+M then toggles the UI between the following two states: ![image](https://cloud.githubusercontent.com/assets/762848/18932111/d3f702dc-8583-11e6-833f-42df3a6fbdd0.png)  This is problematic because -  there's no indication to the user what just happened or that the mode switch was successful. - It's unclear (from a user perspective) why stuff just disappeared from the status bar
---
Título: Feature Request: Distraction free (zen) mode
Descripcion: Would be most useful to have it in vscode. IDE/Editors that have it - IntelliJ idea/Webstorm - Eclipse - Atom - Sublime Text
---
Título: Extensions UI Should Have Some Sort of Text/Indicator When No Results Are Returned
Descripcion: - VSCode Version: VS Insiders 1.6  In the extensions UI, when no results are found, there should be text or something that indicates this. Currently, the pane is just empty:  ![screen shot 2016-09-28 at 11 47 35 am](https://cloud.githubusercontent.com/assets/12821956/18927580/5cd3134c-8571-11e6-87cb-9e526221764e.png)  To me, with the empty pane makes it unclear if something went wrong or if search results are still being returned or what.  This shows up both when searching for a new extension to install (as shown above) and when viewing the list of installed or outdated extensions:  ![screen shot 2016-09-28 at 11 48 35 am](https://cloud.githubusercontent.com/assets/12821956/18927629/867f9f08-8571-11e6-9373-a7715adbe62e.png)  Find on the other hand shows some info when no results are returned:   ![screen shot 2016-09-28 at 11 49 32 am](https://cloud.githubusercontent.com/assets/12821956/18927659/a6918bc6-8571-11e6-8db5-bf1f1d8fb6d9.png)
---
Título: Send feedback dialog doesn't provide correct affordances
Descripcion: Testing https://github.com/Microsoft/vscode/issues/12519  Hyperlinks should be underlined when hovering in Other ways to contact us box ![image](https://cloud.githubusercontent.com/assets/762848/18927353/6751c2b0-8570-11e6-977f-05eb153d7949.png)  Wrong cursor when hovering over tweet button, and also button should look depressed (physically, not emotionally) ![image](https://cloud.githubusercontent.com/assets/762848/18927393/8ee48d44-8570-11e6-8b6e-a894ebfe8a6f.png)  Similar to #12847, the selection cursor is appearing for unselectable text  ![image](https://cloud.githubusercontent.com/assets/762848/18927575/56518bb6-8571-11e6-876d-eae138819929.png)  Additionally, we should consider outlining the dialog itself to better differentiate from the background ![image](https://cloud.githubusercontent.com/assets/762848/18927480/0749d168-8571-11e6-8a06-83e47afa506f.png)
---
Título: Renaming an open file is jarring
Descripcion: Testing https://github.com/Microsoft/vscode/issues/12519  See video below: [2016-09-28_11-04-54.zip](https://github.com/Microsoft/vscode/files/498920/2016-09-28_11-04-54.zip)  While renaming the file aa.php to aaa.php, the following happens within the course of a second: ![image](https://cloud.githubusercontent.com/assets/762848/18926654/82a40602-856d-11e6-9dc9-eb0779136027.png) - **Frame 1:** Starting point - **Frame 2:** aa.php gets renamed to aaa.php in file viewlet, and aa.php becomes unselected (but not removed) in Open Editors view - **Frame 3:** All of the files in the open editors view shift down by one file "unit", as aaa.php gets added and highlighted to the open editors view, but aa.php isn't removed. Additionally, there is some additional padding that gets added between the open editors view and the file view.  - **Frame 4:** aa.php gets removed from the open editors view and all of the files below it are subsequently shifted upwards in the Open Editor view. - **Frame 5:** the extraneous padding between the Open Editors and File view gets removed  All of this occurs within a timeframe that's very much perceptible to the user and gives the impression that the app isn't "smooth". I don't know if this has to do with the recent electron update, but I do notice that v1.5 doesn't seem to feel as jarring, though haven't dug into it as much.
---
Título: Workspace or Folder or both?
Descripcion: - VSCode Version: 1.6 insiders - OS Version: any  The Go menu contains `Go to Symbol in Workspace`.  With #12911 the command palette would contain:  - Go to Symbol in Workspace - Configure Workspace Recommended Extension - Show Workspace Recommended Extension - Open Workspace Settings  We also experimented with "Configure Workspace". However, anywhere else we use "folder", i.e. we don't really have an explicit concept of workspace.
---
Título: Extension detail pane should indicate the version of the readme, particularly when an update is available
Descripcion: - VSCode Version: Code - Insiders 1.6.0-insider (c94c824db64a88bd4909da2e84e44316dbf8e8fb, 2016-09-28T06:23:37.103Z) - OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04 #12647  In the following image the current extension version is v0.0.3 and the latest is v0.0.5. Until testing #12647 I always assumed that the readme was for the latest version of the extension, not the current version.  ![image](https://cloud.githubusercontent.com/assets/2193314/18925349/827ff168-8568-11e6-82a5-261f663c4c0f.png)
---
Título: Updating an extension should present the version of the update
Descripcion: - VSCode Version: Code - Insiders 1.6.0-insider (c94c824db64a88bd4909da2e84e44316dbf8e8fb, 2016-09-28T06:23:37.103Z) - OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04 #12647  Updating from v1 to v2 could cause issues for users.  ![image](https://cloud.githubusercontent.com/assets/2193314/18925290/47cc5534-8568-11e6-8970-4c6036526254.png)
---
Título: Improve layout and typography of the Getting-Started watermark
Descripcion: - VSCode Version: 1.6 insiders - OS Version: MacOS  See the following screenshot: ![screen shot 2016-09-28 at 08 56 25](https://cloud.githubusercontent.com/assets/4674940/18921450/aba20a7c-8559-11e6-9967-6ec3011c3cbb.png) 1. The blue boxes should be vertically centerline aligned. 2. The bold font is too dense and hard to read particularly as the contrast between the foreground and the background color is muted and thus the text looks blurred. Setting the font-weight to normal and using `letter-spacing` of around `0.04em` improves readability. 3. The keyboard shortcuts on the right are then still hard to parse. Putting them in a  `span` and using a `letter-spacing` of `0.15em` (or `0.1em`) and a left and right padding of `0.5em` improves this.  This is what it looks like with  the changes proposed in 2. and 3. ![screen shot 2016-09-28 at 9 46 35 am](https://cloud.githubusercontent.com/assets/4674940/18923281/899a8d26-8560-11e6-99be-28c80c581318.png)
---
Título: More contrast to selected line in peek definition
Descripcion: Currently it's too hard to tell which line is the one containing the symbol.  Really bad for scanning through.  ![image](https://cloud.githubusercontent.com/assets/4033249/18893505/135dafc8-84c3-11e6-8192-419b9f6e7dc2.png)
---
Título: In-product release notes design issues
Descripcion: - VSCode Version: Code - Insiders 1.5.0 (f62883f07422cae4b53c2a185b105091460a0a85, 2016-09-27T13:07:11.616Z) - OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04 #12520  Since this will become one of the main ways users will consume release notes it should look good. - No padding on page - Link color is unreadable on some themes      ![image](https://cloud.githubusercontent.com/assets/2193314/18887779/6d16a362-84aa-11e6-8cf3-0d714f92244a.png) - `<code>` should use `editor.fontFamily` - `kb()` annotations are not resolved      ![image](https://cloud.githubusercontent.com/assets/2193314/18887807/9da7332a-84aa-11e6-98b9-077114c76949.png) - No syntax highlighting
---
Título: How does a user know what settings are overridden by an extension?
Descripcion: - VSCode Version: Code - Insiders 1.6.0-insider (f62883f07422cae4b53c2a185b105091460a0a85, 2016-09-27T13:07:11.616Z) - OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04 #12614  Steps to Reproduce: 1. Set `"terminal.integrated.cursorBlinking": true` in your settings.json 2. Run an extension containing:        ``` ts    vscode.workspace.getConfiguration()      .update('terminal.integrated.cursorBlinking', false, false),    ``` 3. Try to figure out why `"terminal.integrated.cursorBlinking": true` is not working 4. File a bug to Microsoft/vscode
---
Título: Parameter hints widget size is awkward when the cursor is up against the right of a left or center split editor
Descripcion: - VSCode Version: Code - Insiders 1.6.0-insider (f62883f07422cae4b53c2a185b105091460a0a85, 2016-09-27T13:07:11.616Z) - OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04  ![image](https://cloud.githubusercontent.com/assets/2193314/18884506/834475be-849c-11e6-96ab-2addbe268687.png)  Compared to within a split editor on the right side:  ![image](https://cloud.githubusercontent.com/assets/2193314/18884526/a0c30510-849c-11e6-86a5-dfa3fb19ad50.png)
---
Título: We need an overflow design for the activity bar
Descripcion: Especially now that we put more icons there:  ![image](https://cloud.githubusercontent.com/assets/900690/18876986/0a205bdc-84cc-11e6-97f7-03dc45691711.png)  /cc @isidorn
---
Título: Add option to pin tabs similar to Visual Studio
Descripcion: There should be an option in Visual Studio Code to pin tabs, like you can in Visual Studio.  As with issue #10739 there should be a config option allowing you to hide the "pin tab" icon in the tab itself if you just want to use the right-click menu or shortcut to pin/unpin tabs.  There should also be an option (again, like in Visual Studio) where pinned tabs are put onto a separate line above the other tabs.
---
Título: Command shortcuts on the welcome screen need ux love
Descripcion: Close all vscode windows, notice we now show shortcuts on the emtpy editor area. When the screen is small these shorcuts are covering the vscode logo.  IMHO this looks out of style and needs more ux love. Why was this not discussed in a UX meeting since this feels like a perfect topic for those?  Not sure if this is our plan on how to make vscode more discoverable or just an exploration to get feedback. Either way I give it a -1 since it is ruining the minimalistic feel of vscode  ping @stevencl @bgashler1 @bpasero @joaomoreno @chrisdias @seanmcbreen   ![screen shot 2016-09-26 at 10 28 18](https://cloud.githubusercontent.com/assets/1926584/18827648/35536356-83d4-11e6-86d7-7a1639a2d1f8.png) ![screen shot 2016-09-26 at 10 29 14](https://cloud.githubusercontent.com/assets/1926584/18827649/35536ee6-83d4-11e6-8707-715bad1307fd.png)
---
Título: Messages from extensions do not close automatically
Descripcion: This was reported first by @dbaeumer and I can reproduce:   `vscode.window.showInformationMessage('Hello World!'),`  Does not close automatically after 10 seconds like other messages from the workbench do that are just infos or warnings.  The reason is that https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/api/node/mainThreadMessageService.ts#L52 always adds a close action to the message even if no other actions are defined. That is not needed, a close action shows up automatically. However, when you pass in actions to message service, it will not automatically close the message assuming that user input is required.  I suggest to check if actions are provided and if so, just show the message like this:  ``` typescript if (!actions.length) {     return this._messageService.show(severity, message), } ```  This will cause the message to close according to the rules of the workbench message service. Only errors will stay.
---
Título: Do not reopen already opened file in other group
Descripcion: - VSCode Version: 1.5.3 - OS Version: win 10  Steps to Reproduce: 1. open two files in two split editor  2. press ctrl+p twice to jump to last editor 3. rather than jumping to my already opened file in one editor, vscode opens the file in its own editor, it makes my same file opened in two editor and unable to work splitted editors.
---
Título: A tutorial
Descripcion: - VSCode Version:1.5 - OS Version: - pls make a tutorial   Steps to Reproduce: 1. step 1 make a tutorial (make sure it is very very basic)   pls 2. make it easy to use
---
Título: Unclear message when all extensions are already updated
Descripcion: - VSCode Version: Code - Insiders 1.6.0-insider (0a0bfedbc64ba8fd0c3e6f42befb200a0b36ffb0, 2016-09-20T06:11:03.267Z) - OS Version: Windows_NT ia32 10.0.14915  Steps to Reproduce: 1. Ensure no extensions need an update. 2. Try to activate command "Extentions: Update All Extensions". 3. See the following "error":  ![image](https://cloud.githubusercontent.com/assets/494055/18798085/923f209c-8185-11e6-9aeb-9de9ce85c995.png)  The text of this info is not clear and appears to be an error. It would be better if it said something along the lines of "No extensions need updating" or simply not display an error since trying to update and finding nothing to update isn't really an error condition.  The text suggests that something has gone wrong or I am not allowed to try to issue that command in the current "context" -- which might mean e.g. when I have a code editor selected or some other mysterious circumstances which might constitute a "context".
---
Título: Remember width for each sidebar panel
Descripcion: It would be nice if the width would be remembered for each individual panel.  The problem I face now is that I'm constantly readjusting the sidebar width because I need it wide when debugging or searching, and prefer it visible but not too wide otherwise (e.g. explorer).
---
Título: got to file should be a lateral button []
Descripcion: this is a feature request. - VSCode Version: 1.5.2 - OS Version: fedora 24 64 bits  every time i intend to open a file i know by name i see the magnifier mnemonic at the lateral bar an press it. just too late i figure this search method will only search based on file content, not on file name (which is why ctrl+p exists)
---
Título: Better bracket highlight visibility
Descripcion: From [UserVoice](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/10584708-bracket-highlighting) (600 votes)  The bracket highlight is too dim to easily see with most themes. In Notepad++ the brackets change color and become bold, i think that is much easier to see. Highlighting the "current bracket set" would also be really nice.  I understand the themes can be changed in a convoluted way. For such an important feature i think the feature should be default or easily accessible.
---
Título: Inline file/folder/update button
Descripcion: I find it frustrating every time I want to create a new file/folder or update the current folder. I must mark the folder I want to create a new file/folder or update. Also, marking causes collapsing of the marked folder. Also the buttons for creating file/folder is so far away.  I'm just wondering why the buttons aren't just beside the folder name?  ![screen shot 2016-09-22 at 01 04 45](https://cloud.githubusercontent.com/assets/1324476/18720952/abc0555c-8060-11e6-87ad-5a8e9b8b39fe.jpg)
---
Título: Mac: Provide a setting to hide the title bar and inline the window controls
Descripcion: Hello there, a lot of the standard apps in recent versions of macOS have started to inline their titlebar into their tabs, menu buttons etc. I assume this is mainly to save vertical space on laptops. However, like all UI trends, apps that don't quite keep up end up feeling old-fashioned 👯   I started a fork of VS Code that uses the inline style:  ![screen shot 2016-09-21 at 12 59 09](https://cloud.githubusercontent.com/assets/49038/18710082/332cefb6-7ffb-11e6-8303-338bee1d6c35.png)  There needed to be a few changes: - I moved the sidebar width to 76, to fit the traffic lights - I increased the height of the elements that act as the titlebar by one pixel, mainly so that they align with the centre position of the titlebar items - Allow mouse dragging via the sidebar, and the title elements  Fork: https://github.com/orta/vscode/tree/inline-titlebar Changes: https://github.com/orta/vscode/compare/master...mac-titlebar-inline  I realise that VS Code is a cross-platform project, and so these changes should _probably_ only be applied in the context of macOS, which I'm happy to look into with some advice (I don't have a windows/linux machine to hand for example).    I also know that no-one wants big unexpected UI changes on their OSS projects, so I've not made it as a PR, but I'd love to know if/what I can do to move this upstream?  _Sidenote:_ If someone can tell me how, I'm happy to make a downloadable build for people to try too, I couldn't find a way to do it - I'm still quite fresh to npm projects.
---
Título: Feature request ? Focus follows mouse.
Descripcion: I have this set on my OS and I can save files when I mouse off the vscode window.  But I wonder why inside vscode the focus does not follow the mouse ie if I have the integrated terminal open I have to click inside that pane before typing, then click back on the editor window etc.  Not such a big deal but I guess I am so used to working this way and it seems like it could be a easy fix to add a setting, I did search for one but found nothing obvious.
---
Título: Should we drop the minimal icon theme?
Descripcion: I think the minimal icon theme does not look very good compared to our seti theme. I think our original motivation to have it was because we wanted to ship with a least one icon theme. But now that we ship with seti out of the box, imho we should drop the minimal icon theme.  Thoughts?  One reasoning is that we now start to introduce icons everywhere and imho the minimal theme does not add much value in that case:  ![image](https://cloud.githubusercontent.com/assets/900690/18667213/e7ea8d90-7f2f-11e6-8e95-019fa62f8c54.png)  //cc @chrisdias @seanmcbreen @egamma
---
Título: UX meeting agenda 14 September, 2016
Descripcion: - Refactoring extensibility feedback - Consolidated horizontal panel - Feedback on concepts for social ad campaign  @Microsoft/vscode team please let me know anything else that should be discussed or if you need an invite for this Wednesday.
---
Título: Make --extensionHomePath consistent casing with the rest of the command line args
Descripcion: - VSCode Version: Code - Insiders 1.6.0-insider (50bb7aad57cbf1924e28472de52734be49645558, 2016-09-15T05:58:53.508Z) - OS Version: Linux x64 4.4.0-31-generic, Ubuntu 16.04  Can we change it to `--extension-home-dir <dir>` or `--extension-dir <dir>` to match `--user-data-dir <dir>`?  ``` ❯ c --help Visual Studio Code - Insiders 1.6.0-insider  Usage: code-insiders [options] [paths...]  Options:   -d, --diff                  Open a diff editor. Requires to pass two file                               paths as arguments.   --disable-extensions        Disable all installed extensions.   -g, --goto                  Open the file at path at the line and column (add                               :line[:column] to path).   --locale <locale>           The locale to use (e.g. en-US or zh-TW).   -n, --new-window            Force a new instance of Code.   -p, --performance           Start with the 'Developer: Startup Performance'                               command enabled.   -r, --reuse-window          Force opening a file or folder in the last active                               window.   --user-data-dir <dir>       Specifies the directory that user data is kept                               in, useful when running as root.   --verbose                   Print verbose output (implies --wait).   -w, --wait                  Wait for the window to be closed before                               returning.   --extensionHomePath         Set the root path for extensions.   --list-extensions           List the installed extensions.   --install-extension <ext>   Installs an extension.   --uninstall-extension <ext> Uninstalls an extension.   -v, --version               Print version.   -h, --help                  Print usage. ```
---
Título: Allow "Find All References" to expand to a full tab
Descripcion: Right now "find all references" opens the code-lens pop-up. If I am in a large project and want to see all references to a symbol such as an interface, I might want to bounce between different implementations. This is made difficult by the fact that the list of references doesn't persist/can't be expanded.  It would be great if there was an option to expand the "find all references" results into the search tab, and navigate between them. Bad mspaint mockup below, with the references listed on the right and the referencing code in a tab on the right.  ![image](https://cloud.githubusercontent.com/assets/2957173/18567386/2e37ccc2-7b98-11e6-9a8e-fe93752e24b7.png)
---
Título: Identical file name path in tab is too long and difficult to diff
Descripcion: - VSCode Version: Code - Insiders 1.6.0-insider (fad6a894c197ee791403ac694c9316b0654f31a4, 2016-09-14T13:18:39.616Z) - OS Version: Linux x64 4.4.0-36-generic, Ubuntu 16.04  Current:  ![image](https://cloud.githubusercontent.com/assets/2193314/18524039/a403a33c-7a6b-11e6-94e6-02f60bc61668.png)  Proposed:  ![image](https://cloud.githubusercontent.com/assets/2193314/18524117/fe9a1f7e-7a6b-11e6-8c73-0d6aac733096.png)  To describe the behavior I want: It should replace all parts of the start of the path that are the same with `…/`, then add the differing word(s) and then either `/…/` or `/`. This makes it easier to differentiate each tab and also reduces the total space taken by the tab particularly in a deep directory structure.  Some interesting cases could arise when more than 2 files collide in which maybe 2 parts of the path would need to be displayed, for example: - `src/vs/workbench/parts/execution/electron-browser/terminalService.ts` - `src/vs/workbench/parts/execution/electron-browser/something/terminalService.ts` - `src/vs/workbench/parts/terminal/electron-browser/terminalService.ts`  Could yield: - `…/execution/electron-browser/terminalService.ts` - `…/execution/electron-browser/something/terminalService.ts` - `…/terminal/…/terminalService.ts`  Basically just providing enough information to uniquely identify the file, `electron-browser` could not be truncated above as `…/execution/…/terminalService.ts` represents both files.  Another interesting edge case: single letter folders would probably consume more space when truncated.
---
Título: Make a pass over all places where we show paths and use white-space: pre
Descripcion: ![sep-13-2016 16-18-32](https://cloud.githubusercontent.com/assets/323878/18477413/e5ead458-79cd-11e6-9979-0dac2203d965.gif) This is a totally dumb case but I encountered it while testing something in Node with spaces in paths and it feels worth fixing to me.  If you edit leading or trailing whitespace in the file explorer, the change isn't saved. If you add some outside of vscode, it won't be displayed in the tree. If there are multiple spaces between letters, it's collapsed to look like one. And, if you edit the file name in some other way, then all leading/trailing spaces are removed.
---
Título: Quick opened files should be kept open, not previewed
Descripcion: - VSCode Version: 1.4.0 - OS Version: macOS ### Desired behavior  When you use Quick Open (<kbd>Cmd</kbd> + <kbd>P</kbd>) to open a file, that file should stay open (i.e. it shouldn't be a preview tab). ### Current behavior  Current behavior opens it as a preview tab, which can be undesirable.  If you open a lot of files up front through quick open, you have to double click the tab or run command "Keep Open" for each file.  It makes it very slow to open a lot of files from Quick Open.  ![sep-09-2016 10-42-30](https://cloud.githubusercontent.com/assets/11839736/18396775/2bd6b2f4-767a-11e6-8ab7-540aa0be74a1.gif)  Since some people may want to rapidly preview a lot of files, then we should do what Sublime does in their version of Quick Open: upon keyboard focus or hover of any file in Quick Open, a preview tab is shown.  Only when you press Enter or click does it keep it as an editor and close the Quick Open.  If we click away from or press <kbd>Esc</kbd>in Quick Open, then this preview tab would close, unless there already was a preview tab open before using Quick Open (in that case the previously previewed file would appear as if nothing had ever happened, so we don't leave a mess).
---
Título: Save All - keyboard shortcut should use VS binding
Descripcion: - VSCode Version: 1.4.0 - OS Version: Windows 10  Visual Studio (IDE) has the Save All keyboard shortcut of (Ctrl+Shift+S), the same shortcut is available in code but it actions the Save As... function.  Can you apply the same to VS Code? I use both daily, like many other developers.  It would be nice to keep the same functionality between both Microsoft products.
---
Título: Debug: Twistie in hover tree is not properly aligned
Descripcion: OS: OSX  See the twistie and the element next to it in the hover tree  ![sep-01-2016 11-16-28](https://cloud.githubusercontent.com/assets/10746682/18162229/b1ae11ce-7035-11e6-8659-7d43315fbdfa.gif)
---
Título: Tabs look bad in High Contrast theme
Descripcion: ![image](https://cloud.githubusercontent.com/assets/22350/18124910/867075ea-6f74-11e6-96f3-5fa0e9b1e46a.png)
---
Título: Code --help shows wrong app name
Descripcion: `Usage: code ...`  It should read  `Usage: code-insiders...`  ![image](https://cloud.githubusercontent.com/assets/22350/18091729/f500fefe-6ec9-11e6-814c-feed7abe99ff.png)
---
Título: Optional methods in vscode.d.ts should be methods and not fields
Descripcion: Regular methods in interfaces appear as:  ``` typescript provideWorkspaceSymbols(query: string, token: CancellationToken): SymbolInformation[] | Thenable<SymbolInformation[]>, ```  Optional methods appear as fields:  ``` typescript resolveWorkspaceSymbol?: (symbol: SymbolInformation, token: CancellationToken) => SymbolInformation | Thenable<SymbolInformation>, ```  It's supported, so I suggest to show them like:  ``` typescript resolveWorkspaceSymbol?(symbol: SymbolInformation, token: CancellationToken): SymbolInformation | Thenable<SymbolInformation>, ```
---
Título: The Find/Replace window covers the content
Descripcion: - VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z) - OS Version: Windows_NT ia32 10.0.10586  Steps to Reproduce:  1.Open a file with lots of content 2.Press Ctrl+F or Ctrl+H and the content underneath the find/replace is hidden
---
Título: Fix lists in hover widget
Descripcion: 
---
Título: Init button in Git view loses focus
Descripcion: - VSCode Version: - OS Version:  Steps to Reproduce: 1. When git repo is not initialized 2. Toggle Git view  Observe that Init button loses focus after 1 second
---
Título: Disconnect icon in debug toolbar
Descripcion: I think the icon is really bad, I liked the strong red icon for stopping to debug and now you have to really search for the action when doing extension development:  ![image](https://cloud.githubusercontent.com/assets/900690/17997890/a89dedde-6b71-11e6-8e77-a137b0fd2226.png)
---
Título: Feature Request : Provide multiple terminal choices within same instance of VSC
Descripcion: - VSCode Version: NA  - OS Version: NA   Steps to Reproduce: NA  Per this link, Integrated Terminal in the docs , you can create multiple instances of the terminal and even change it from CMD to BASH to PowerShell.  Can VScode provide options have multiple terminals choice.  1: CMD, 2: BASH, 3: PowerShell within the same instance of VSC?
---
Título: Feature request: bold_folder_labels setting like Sublime's
Descripcion: I really appreciate the minimal UI, however, I really do miss Sublime's `bold_folder_labels`. It does just that - makes folder labels bold - adding a distinguishing characteristic between them and files. This helps a lot when: - Dealing with long file and folder names, since it's no longer necessary to visually scan the entire right-to-left range of an item to determine what it is (i.e. spotting the expansion triangle), - Scanning the Explorer vertically, since the boundary between when folders end and files begin becomes clearer.  There are multiple issues (#123, #1833, #3200, many more) requesting a more powerful API for UI customization. But I couldn't find any issue requesting a specific setting to control the visual aspect of folders.  <img width="235" alt="bold_folder_labels" src="https://cloud.githubusercontent.com/assets/830952/17833292/be5ddcc2-66cd-11e6-9303-9cfdc492c03d.png">
---
Título: Tabs for integrated terminal
Descripcion: **Status update from @Tyriar:**  - We started exploring this in March https://github.com/microsoft/vscode/issues/10546#issuecomment-800286034 - April plan: https://github.com/microsoft/vscode/issues/120241 - Tabs have landed in Insiders work in progress & call for feedback https://github.com/microsoft/vscode/issues/10546#issuecomment-823291688 - Moved to backlog to cover terminals in editor area https://github.com/microsoft/vscode/issues/10546#issuecomment-826900427 - Assigned to June for "terminal editors" https://github.com/microsoft/vscode/issues/10546#issuecomment-852971002 - Terminal editors plan filled in (https://github.com/microsoft/vscode/issues/125514), request for feedback https://github.com/microsoft/vscode/issues/10546#issuecomment-860644971  ---  Feature request. ## Default terminal  ![image](https://cloud.githubusercontent.com/assets/7426664/17665784/9b2be170-6305-11e6-9329-fce36ec9aaa4.png) ## But could be more usable...  ![terminals2](https://cloud.githubusercontent.com/assets/7426664/17665089/5c7aabf4-6301-11e6-8211-41cedb0ec494.png) ![terminals1](https://cloud.githubusercontent.com/assets/7426664/17665090/5c8027b4-6301-11e6-9b60-827a7fee4f26.png)
---
Título: Option to always open new windows maximized
Descripcion: - VSCode Version: 1.4.0 - OS Version: W10  I'd like an option in user settings to have new windows always open maximized.
---
Título: Close action should close all editors of a group not just one
Descripcion: I'm not sure what the benefits of introducing tabs was. But I would like to have back that clicking the X-button means close editor. What's the benefit of just closing one file? My workflow often means switching between 2-3 editors.   Editor meaning column. And why the name editor? It's confusing.
---
Título: Include more icons
Descripcion: Is it possible to include more icons to be shown in status bar? Currently vscode supports only octoicons, which might not have all required icons. Including https://github.com/vorillaz/devicons/ would be a good idea too.
---
Título: Debug console only shows automatically for first debugging session.
Descripcion: _From @seraku24 on August 11, 2016 2:59_ ## Environment data  `dotnet --info` output:  ``` .NET Command Line Tools (1.0.0-preview2-003121)  Product Information:  Version:            1.0.0-preview2-003121  Commit SHA-1 hash:  1e9d529bc5  Runtime Environment:  OS Name:     Windows  OS Version:  10.0.10586  OS Platform: Windows  RID:         win10-x64 ```  VS Code version: 1.4.0 C# Extension version: 1.3.0 ## Steps to reproduce 1. Create a new C# project (e.g. use `dotnet new` and `dotnet restore` for the "Hello, World!" template). 2. Launch VSCode and open the created project. 3. Start a debugging session. 4. Observe: The output window appears and displays the build process. 5. Observe: The debug console appears (replacing the output window) as the debugger launches the program. 6. After the program completes, start another debugging session. 7. Observe: The output window appears (replacing the debug console) and displays the build process, which in this case is a message that the project was already compiled. ## Expected behavior  The debug console, again, appears (replacing the output window) as the debugger launches the program. ## Actual behavior  The debug console is not shown and requires manual activation via the button on the debug UI toolbar or the keyboard shortcut (Ctrl+Shift+Y).  This could be a case where it might be wise to introduce a user-configurable setting that controls the behavior of the debug console.  I see at least three potentially useful modes: - `"always"` The debug console is always shown automatically upon starting a debugging session. - `"preserve"` The debug console will be re-shown automatically provided it was visible before being replaced by the output window. - `"never"` The debug console will never be shown automatically when starting a debugging session.  _Copied from original issue: OmniSharp/omnisharp-vscode#653_
---
Título: Show plugin name for actions in Command Palette
Descripcion: - VSCode Version: Code - Insiders 1.5.0-insider (dde41be0231d6f8397d1da969ddab351f137b833, 2016-08-08T06:03:58.264Z) - OS Version: Darwin x64 15.6.0  Steps to Reproduce:  It would be great to be able to see plugin name (if possible) that registers action in Command Palette - like here I am inside TypeScript file and Command Palette offers me these actions:  ![image](https://cloud.githubusercontent.com/assets/1723815/17487560/652e8e62-5d63-11e6-9222-278183f73783.png)  But they are not applicable to TypeScript and it's not clear where they are coming from  When I try to use them I get: ![image](https://cloud.githubusercontent.com/assets/1723815/17487614/a1dc66fe-5d63-11e6-9c53-5673e5e480cd.png)
---
Título: Indicate files that got moved or copied in explorer with some styling
Descripcion: I'm not sure whether this was proposed before but what I'm thinking is to style files that are dragged in italic and when you release have them in bold.  The same for copied files, when you copy something, it's going to be styled in italic and when you paste it's going to be bold, this can be quite helpful for times that you don't know whether you copied to the wrong directory or where are the files for some odd reason.  Now the files are going to stay bold until you open them, obviously it can be something different other than italic/bold but that's not really important.  This is just a small quality of life improvement but I think one that _can_ be useful.
---
Título: Add support for Home/End keys on IntelliSense's popup menu
Descripcion: - VSCode Version: 1.4.0 - OS Version: Windows 10, Fedora 24 (Xfce4 desktop)  I can use arrow keys Up/Down to move from top to bottom and vice versa quickly. However if I'm in a middle, I have to press them several times.  Would you please add support for Home/End keys in IntelliSense's popup menu? It would help me a lot.  Thank you,
---
Título: Problems view needs better responsiveness
Descripcion: ![image](https://cloud.githubusercontent.com/assets/22350/17406055/36a4edec-5a62-11e6-92c5-4ff46bc3ec53.png)  I would expect the text box to shrink as space gets constrained.
---
Título: Extension API: Sense theme change
Descripcion: It should be possible to detect when the user changes the theme, as well as what is the new theme palette (dark, light, high-contrast).
---
Título: Improve Extension version information for updates
Descripcion: - VSCode Version: Version 1.4.0-insider (1.4.0-insider) 4656fe3ff2952e9538d81e7a7571674352e5d62f - OS Version: Mac OS X EL Capitan   I am currently being offered an Extension update but its not immediately obvious what my current version is and what the latest version I will be updated to is.  In the screenshot below, there is version 1.2.2, which I assume is the current version because that panel is showing my currently installed extensions. But if I click on update which version will I get?  My suggestion is to add something like "Currently Installed Version: {CurrentVersion}" and "Latest Version: {LatestVersion}" to the panel showing the Extension Information. So for example just above the Update and Uninstall buttons.  <img width="1280" alt="screen shot 2016-07-30 at 12 46 27" src="https://cloud.githubusercontent.com/assets/1994627/17270159/29c00a1a-5654-11e6-93e9-be5f1704a8f5.png">
---
Título: Unify colors of find in file and workspace search results
Descripcion: - VSCode Version: Code - Insiders 1.4.0-insider (4656fe3ff2952e9538d81e7a7571674352e5d62f, 2016-07-29T05:03:52.605Z) - OS Version: Darwin x64 15.5.0  Find in file (Ctrl+F) and workspace search (Ctrl+Shift+F) results are colored not exactly the same. It might be easier to read the color-coding if it was the same.  Local search: ![localsearch](https://cloud.githubusercontent.com/assets/9205389/17222691/73127592-54ae-11e6-997a-5d221ff45a76.png)  Global search: ![globalsearch](https://cloud.githubusercontent.com/assets/9205389/17222721/9a54f7a6-54ae-11e6-90e4-e58d88a44396.png)  Note the different browns for the results and the different renderings of the current line in the two cases.  (Extracted from #6402.)
---
Título: Kinda Buggy Extension Manager
Descripcion: - VSCode Version: 1.3.1 - OS Version: Windows 7  The New Grafical Extension Manager works great and looks great. But there is a big downside. It uses the same Panel and even worse the same Panel width as the other Tools like Search, Debugger, Filebrowser and Git Manager.  It would be better if one could set the panel width per Tool or just a different one for the Extension Manager  Or another way i could think of would be if one could chose to open the Extension Manager in a separate Window instead.
---
Título: Scrollbar slider difficult to see in dark themes
Descripcion: - VSCode Version: 1.3.1 - OS Version: Windows 7  I'm colour blind (red/green, the most common type), and when using any dark theme I really struggle to see the scrollbar slider - there's just not enough contrast.  It would be helpful if themes were able to control the scrollbar colours. It would also be helpful if the scrollbar width could be increased (ideally themeable).  ![Scrollbar](http://i.imgur.com/rojaTk6.png)
---
Título: Clean up the View menu
Descripcion: - VSCode Version: 1.3.1 - OS Version: Win 10 x64  Steps to Reproduce: 1.  In `View` Menu the first 5 entries (Explorer, Search, Git, Debug, Extensions)      are also available on the Side Bar as buttons.     The Side Bar itself cannot be hidden, so its 5 buttons are always accessible. 2.  My suggestion is to put the `Command Palette` entry on top of the View menu.      This would offer quicker access to Command Palette (which provides access to so many commands)    ![2016-07-28_233903 2](https://cloud.githubusercontent.com/assets/723651/17229059/8a54d00e-551e-11e6-8dfd-3035a0324f86.jpg)
---
Título: Git init button has bad hover feedback
Descripcion: ![image](https://cloud.githubusercontent.com/assets/22350/17225590/df09735c-5505-11e6-8dd7-41f2eab9359a.png)
---
Título: Intellisense UI javascript function signatures gets cut off
Descripcion: - VSCode Version: 1.3.1 - OS Version: win 10 x64  Steps to Reproduce: 1. On a js file:  ![image](https://cloud.githubusercontent.com/assets/7104786/17218216/051d07c6-54b5-11e6-9f06-bcf01e8b4c16.png)  The function signature gets cut off. Shouldn't the box size adapt to see all the function signature?  Also, shouldn't the comment above the function definition be added to the intellisense box? Or is it managed with an additional extension?  thanks
---
Título: Transient breakpoint flickers when running `Run to cursor` action
Descripcion: In #8731, there was a fix to not show a breakpoint once the `Run to Cursor` action is run. It works, but the current behaviour is fidgety: the breakpoint is still seen for a split second only to disappear in a sea of flickering.  Maybe we should have different _types_ of breakpoints: explicit (user set) and implicit (service set)?
---
Título: Text of current find match text is not visible in markdown file
Descripcion: - VSCode Version: 1.4.0 insiders (6ef86d5f85a531caa59bfb1715469fcfaa8d2efd) - OS Version: OSX  Steps to Reproduce: 1. Open a markdown file that has following content:  `<p align="center">` 1. Find for `align`  Observed: When current match is in above line, text of the match is barely visible  ![screen shot 2016-07-28 at 12 41 31 pm](https://cloud.githubusercontent.com/assets/10746682/17210041/a4332196-54c0-11e6-9faa-3ae9c25d14e2.png)
---
Título: Need visible, clickable `Close All` or `Close Group` action
Descripcion: Not sure if we already had an issue for this, but I'm going crazy without this action. Right click on the title simply doesn't work for me.
---
Título: `Replace All` button should have a different UI
Descripcion: ![image](https://cloud.githubusercontent.com/assets/22350/17208181/b69f3bd4-54b7-11e6-976e-63ab5915a291.png)  I know we talked bout it, just not sure you had an issue for it, @sandy081.  The `Replace All` action looks like a toggle, not like an action. It would be great to get some UX in here. cc @bgashler1 @stevencl
---
Título: PR Proposal: Open arbitrary commits with diff viewer
Descripcion: I would like to add a feature to VS Code in order to address a gap in my usage of it. I figured I should writeup my idea before submitting a pull request in order to get feedback from the VS Code team and maximize the chances that my PR will be along the lines of something the team will be interested in accepting. ### Motivation  VS Code has a fantastic diff viewer. It let's you see a list of changed files and, when you click on a file, it shows you the entire file and what changed in it. However, it is limited to seeing changes in your index and working tree. I'd like to extend the diff viewer so that it can be used to view the changes included in arbitrary commits.  This cannot be done as an extension because extensions cannot render into the side pane where the diff viewer displays the list of changed files.  In my workflow, I interact with git through the command line and through VS Code. Viewing diffs is one thing that VS Code can do much better than the command line so I'd like to see this feature in VS Code. ### Proposal  VS Code currently has a few side panes and one of them is for interacting with git. I propose extending it to support multiple views. The functionality that VS Code ships with today will be called the "Status" view. It shows you the changes in your index and working tree. The only change is that there will be a dropdown at the top of the pane for switching between views:  ![image](https://cloud.githubusercontent.com/assets/199935/17192989/d7876aae-5405-11e6-9898-27c5e2d718e4.png)  There will be another option in the dropdown called "History". This represents a new view which enables you to view the changes in a particular commit. This is what it will look like:  ![image](https://cloud.githubusercontent.com/assets/199935/17193126/6f417772-5406-11e6-84f9-cff2ee4a1517.png)  It will have two input fields. If you want to see the changes in a particular commit, you can enter the commit name into the first field. As you would expect, you can click on a changed file to view its diff:  ![image](https://cloud.githubusercontent.com/assets/199935/17193009/ec9cd136-5405-11e6-83fe-21b89ceb6200.png)  If you want to view all of the changes in a range of commits, you can leverage the second field. For example, here I'm viewing all of the changes that occurred between my feature branch, `rigdern/diff`, and `master`:  ![image](https://cloud.githubusercontent.com/assets/199935/17193015/f11ebdb4-5405-11e6-8bfc-954e60931214.png)  You may be wondering how developers will find the names of the commits to put into the two input fields. I've thought of a couple of options: 1. One option is that they'll get them from an external tool. For example, in my case I'll get them from running `git log` on the command line. As I alluded to earlier, the command line works fine for browsing commit messages but it's not very good for looking at diffs. 2. Another option is through a VS Code extension. We could expose an extension API enabling extensions to set the commit that the new git "History" view is displaying. Then a developer could write an extension which provides the functionality of `git log` within VS Code. It could interact with the new git "History" view when the user clicks on a commit in the log.  VS Code Team, what do you think of this proposal? I'd like to get some feedback on it and, if this is a feature you'd be interested in having, I'm interested in working on a pull request.
---
Título: Search UX: Cancelling and Progress feedback
Descripcion: - VSCode Version: 1.4.0-insiders - OS Version: OSX  Steps to Reproduce: 1. Open Project with large number of files 2. Search for something  Search will start running but then it will get stuck (or gets very slow - waited 15 min and did not finish) - CPU is at > 100%  ![image](https://cloud.githubusercontent.com/assets/1723815/17177175/226a4082-53de-11e6-98be-ded12c25ac16.png)  I know that there is related task to speed of search https://github.com/Microsoft/vscode/issues/55  But I would like to propose 2 small things that would help: 1. Ability to stop the search - especially if its very slow/stuck - right now the only option is to kill VSCode 2. Some progress indication so user can know that it is still searching (and not stuck) - eg. atom shows number of files that it searched   ![image](https://cloud.githubusercontent.com/assets/1723815/17177241/818d4cbc-53de-11e6-8307-9e52d98104a1.png)
---
Título: Change the colour of warning/error squiggles
Descripcion: - VSCode Version: 1.3.1 - OS Version: El Capitan  Steps to Reproduce: 1. Create typescript files and produce Warning  Is it possible to change the colour of the warning message, I mean the squiggly line below and the warning marker on the scrollbar? In the darks themes the green colour is merely visible.
---
Título: After uninstalling extension dialog button wording
Descripcion: Sometimes I don't want to restart VS Code right now.   ![image](https://cloud.githubusercontent.com/assets/2449568/17148247/3980dab0-531b-11e6-967d-a515fbce405c.png)  For example, if I am uninstalling a couple of extensions I want to uninstall each of them and restart once I am finished.   What if we changed "Close" to "Later"? Or something like that indicating that I will have the extensions installed / uninstalled at another time.
---
Título: Terminal copy / paste shortucts make a confusing user experience
Descripcion: Refs: #9100 1. `ctrl + shift + c`, and `ctrl + shift + v` are copy / paste when terminal has focus 2. these keybindings do some completly different actions when terminal does not have focus. Both these actions are 'heavy', opening preview and opening a terminal outside of vscode 3. While I tested the copy / paste feature I accidently triggered the other actions multiple times and this led to a very frustrating experience  My suggestions is that these actions should be disabled when terminal is visible. Not when terminal has focus, imho that is the biggest flow of the current approach. If these actions were enabled when terminal is visible they could also be exectued from the command palette (my concers around this are raised in other bugs).
---
Título: Terminal lacks focus indication
Descripcion: Testing #9695  Through two separate situations, I've been able to get into a state in which the terminal lacks focus indication through the cursor: - Simply disable cursor blinking (related to #9753). When moving focus to the editor and back to the terminal, there is no indication that the terminal has focus at all. - Or, leave the blinking cursor, run the `htop` command, exit it with <kbd>Q</kbd> and the terminal will then lack focus information when moving focus to the editor and back again.
---
Título: Default terminal cursor should not blink
Descripcion: Testing #9695  Usually terminals don't have a blinking cursor by default, I suggest we set it to false. The cursor should then be the _filled_ rectangle.
---
Título: View menu is getting out of hand in size
Descripcion: View menu has too many entries. We either need submenus or we need to remove entries. Once we decide what we want here I can do the changes in code.  ping @stevencl @bgashler1   ![screen shot 2016-07-26 at 09 58 12](https://cloud.githubusercontent.com/assets/1926584/17130170/7d9b639a-5317-11e6-8ba7-4bb1d1362d28.png)
---
Título: Debug: 'Disconnect' icon should be different than 'Stop'
Descripcion: Currently we use the same `Stop` icon for both `Stop` and `Disconnect` actions. It would be more intuitive to use an icon that confers the idea of a _disconnection_ when the `Disconnect` action is in place.  cc @bgashler1
---
Título: Special font-size for quick fix widget?
Descripcion: Why do we use a special font size for quick fix widget, imho it should be the same font size as the editor so it reads nicer. The current way it feels a bit alien to me  ![screen shot 2016-07-26 at 09 42 47](https://cloud.githubusercontent.com/assets/1926584/17129844/ba8cd59c-5315-11e6-9a24-fd6dafd0e803.png)  My proposal:   ![screen shot 2016-07-26 at 09 45 51](https://cloud.githubusercontent.com/assets/1926584/17129851/c452efee-5315-11e6-819a-6e2283fb93ac.png)  Font is defined here: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/quickFix/browser/quickFix.css#L40
---
Título: Show some kind of progress for installing large extensions.
Descripcion: - VSCode Version: 1.3.1 - OS Version: All  Steps to Reproduce: 1. Use the new extensions viewlet to install a large extension 2. Wait, with no progress.  Notes:  We have had a few people request this on our extension page because, it seems, certain regions have been experiencing intermittent slowness or service interruptions. They are requesting that VsCode give them some sort of download/installation status so that they know whether or not there is an issue with the installation.
---
Título: Better behavior of the View Bar
Descripcion: - VSCode Version: 1.3 - OS Version: any  In the view bar, the icons are ~~not~~ poorly highlighted whenever a view is selected (i.e. Git or Debug). ~~You are assuming that a user may associate the view title with the icon, which is not the case for new users, and even some experienced/distracted.~~ The high-contrast themes show an orange border which is clearly visible, but not other themes.  Besides that, whenever a icon is pressed twice, the view panel disappears. This is related to the first case: if the user is not sure about what view is selected, he/she will end pressing an icon twice and the panel will disappear, while it was expected just to switch views. In this case it would be clearer to have a dedicated collapse/expand button.
---
Título: close icon on terminal/console/etc. pane should be "x"
Descripcion: The terminal, debug output, console, etc. panes at the bottom have a small down arrow for the action to close or hide the pane. clicking on this makes the pane slide down and disappear.  ![image](https://cloud.githubusercontent.com/assets/1487073/17070050/be6381c0-500e-11e6-85d9-0d7f74099e70.png)  The down arrow to me suggests that the window will be collapsed down rather than closed. Whenever I click on this I expect there to be an action at the bottom of the editor to restore the pane. Instead I have to use the keyboard or menu to bring these back.  As a result, a better icon for this pane would be the close "x".    Alternatively, there should be a visualization at the bottom of the editor that there is a pane that can be restored.
---
Título: lineHighlight added to Find but not Search, low highlight contrast
Descripcion: - VSCode Version: Version 1.4.0-insider 01a3f868552dc8011adf4e79bee8cfb09babfe31 - OS Version: macOS El Capitan  Steps to Reproduce: 1. "Edit" > "Find" 2.  Type in something to find in the current editor 3. When it finds the string in your document a lineHighlight is added.  <img width="1108" alt="screen shot 2016-07-22 at 10 32 23 am" src="https://cloud.githubusercontent.com/assets/11839736/17066295/3c0d0dc6-4ffb-11e6-8dfd-6a7fbc4aa229.png">  @alexandrudima, since this does not also occur in our Search viewlet, it feels inconsistent to me.  Also, this line highlight reduces the contrast of the highlighted found text, making it harder to see what is found.  Visual Studio IDE also does not use the lineHighlight for this.  <img width="674" alt="screen shot 2016-07-22 at 10 59 00 am" src="https://cloud.githubusercontent.com/assets/11839736/17066315/57738a54-4ffb-11e6-82b6-1a159e5c199b.png">  After looking issue #2792, I can see the underlying problem that was trying to be solved with helping users find the active highlight, but perhaps it would not be needed if we had a stronger highlight color contrast.  At a minimum we should increase that highlight contrast anyway since it would be beneficial with or without the line highlight.  **Options:** - **Keep the lineHighlight** (also add it to Search for consistency) and increase contrast on the highlight for found text. - **Remove lineHighlight** and increase contrast on the highlight for found text. - **Darken the lineHighlight color** so it can be stronger in contrast (may be detrimental to the experience of "Go to line", making the found line be less obvious).  @stevencl do you have any thoughts on this?
---
Título: Ballistic scrolling on virtual widgets doesn't work when using touch
Descripcion: Affected widgets: - Editor - Tree - List  Steps: - Using a touch device, scroll away a long list of elements. - The scrolling will come to a complete stop once the element in which the touch event started goes out of the DOM. - This is fixed when using the scroll wheel, we should implement the same when using touch.
---
Título: Preview Rename Symbol
Descripcion: Would be useful to be able to preview a rename symbol action prior to it taking place. Ideally, would be able to control where to apply the rename. A mashup of `Rename Symbol` and `Find All References` perhaps.  This would increase level of confidence for renames in larger projects and minimise manual effort required to sanity check rename after it completes.
---
Título: Polish for the goto error peek
Descripcion: - VSCode Version: 1.4.0-insiders - OS Version: Linux  Steps to Reproduce: 1. Install Markdown spelling extension 2. F8 thru a markdown file    ![image](https://cloud.githubusercontent.com/assets/6461412/17014955/b73e9188-4f27-11e6-9ef6-8385a377f5ed.png)  ![image](https://cloud.githubusercontent.com/assets/6461412/17016701/8c1f8710-4f30-11e6-95fd-2b8dece05958.png)  The mix of fonts doesn't look very good, especially that (1/3) is smaller than the error text. I suggest to render the error text with the regular workbench font (also the problems view does that), at least when they are single line errors.
---
Título: Icons for toggled menu items.
Descripcion: - VSCode Version: 1.3.0 - OS Version: CentOS Linux release 7.1.1503 (Core)  Its a feature request / UX Icon next to the menu items, especially the ones which are toggled, indicating the status.  Toggle menu bar / status bar ...
---
Título: Icons should have transparency.
Descripcion: - VSCode Version: 1.3.1 - OS Version: Debian Stretch  The icon (twisted), should have transparent background in the mid of the twist, which makes it feel like visible through the eye of the logo. Currently, it is white. #
---
Título: EXTENTIONS list empty
Descripcion: - VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z) - OS Version: Windows_NT ia32 6.1.7601  Steps to Reproduce: 1.  Command Palette (Ctrl+Shift+P) inside VS Code and type ext install to run the Extensions: Install Extension command 2. only get @popular in the EXTENSIONS list, what I am trying to find is Chrome Debugging for VS Code    https://code.visualstudio.com/blogs/2016/02/23/introducing-chrome-debugger-for-vs-code
---
Título: Can't remove unsaved files from a single open editor group
Descripcion: 1. Have two open editor groups. 2. In one of the panes, create a new Untitled file and make it dirty. 3. Open that file in the other pane, using Quick Open.  The Untitled file is now present in both groups. There seems to be no way to remove that file from a single group. Removing it from the group seems to mean _Closing_ and it will remove it from **all** the groups.
---
Título: [Feature Request] HTML Tag matching window
Descripcion: I recall in webstorm or netbean, when you click on a HTML tag, if the corresponding matching tag is not in current view, a small window appears showing the matching tag as well as a few surrounding lines. It would be great to have this feature.
---
Título: Ctrl+Shift+F returns to global replace view instead of global find
Descripcion: - VSCode Version: Code - Insiders 1.4.0-insider (f4780e67933164a2289b86f2c279aaa05fda672f, 2016-07-19T05:07:05.876Z) - OS Version: Windows_NT ia32 10.0.14390  Steps to Reproduce: 1. Open VS Code 2. Ctrl+Shift+H shows Global Replace (in the Search window) 3. Ctrl+Shift+E shows Explorer 4. Ctrl+Shift+F returns to the Search window (but in Global Replace mode instead of Global Find mode)  Expected:  Ctrl+Shift+F should open Search to Global Find mode. (The only way to use the keyboard to switch away from Global Replace is to do Ctrl+Shift+H (or tab to the Replace field) and then press Escape to hide the Replace box.)
---
Título: Setting 'openFilesInNewWindow' should be 'false'
Descripcion: - VSCode Version: 1.3.1 - OS Version: Windows 8.1  Steps to Reproduce: 1. Open one VS code instance with some tabs 2. Open file from OS (windows explorer)  Expected Result: File from explorer opens in last active window  Actual Result: New VSCode instance opens  Related issues: [#3191](https://github.com/Microsoft/vscode/issues/3191)  Comments: Agreed with @thewhitetulip. This breaks the expected UX flow, no other editor/IDE (I.E sublime) opens a new instance if one is already open. Using CLI arguments is an option, but opening a new instance should be a flag, not opening in the last active window.
---
Título: Search results need more space than the side bar allows
Descripcion: - VSCode Version: 1.3.1 - OS Version: OS X  I believe that often, search results need more horizontal space to be truly useful than the sidebar allows, unless you expand the sidebar very wide (which then means less room for open files, and requires you to manually resize it bigger and smaller when going between search and editing, if you like to have the file tree open when editing).  My suggestion would be that search should have the option to display the results in a new tab, in a similar way to Atom or Sublime, or alternatively, the search pane could be relocatable to the bottom of the screen, so it would gain horizontal space in exchange for vertical.
---
Título: Feature Request : Navigation Bar like Visual Studio or Eclipse
Descripcion: Would be possible to add a navigation bar like visual studio or eclipse?   Feature Navigation Bar -  ![8284 image_thumb_1 1](https://cloud.githubusercontent.com/assets/12496146/16911670/381f590a-4cb6-11e6-9456-0d4a67f43eff.png)  This bar should show function/methods of the current file.  I know that vscode support the ctrl + p + # to find symbols but this approach is not the best when you want to have a look over the entire class (or perhaps you dont know the method name)
---
Título: No way to drag & move file/directory to the top-level / project directory when the Files Explorer is filled from top to bottom
Descripcion: - VSCode Version: all (including 1.4.0-insider) - OS Version: OS X 10.11  Steps to Reproduce: 1. open a project which fills the entire Files Explorer from top to bottom (lots of files & directories) 2. there is now no way to drag&drop to move any file to the top-level / project directory - dragging below or above all the files can only allow dropping on the first or last directory present  Ways to fix: 1. allow dragging files to the project name, which is an always visible UI element 2. add a slight padding to the bottom of the files list in the Files Explorer, so there is always room to drag files out to the top-level after scrolling down
---
Título: Inability to create file/folder at root location
Descripcion: - VSCode Version: 1.4.0-insider - OS Version: OSX 10.11.5  Steps to Reproduce: 1. Open project that has only directories at root level (and have them a lot - so you need to scroll) 2. Click any folder 3. Try to create folder / file at the root  It won't be possible because there is no space to click to unselect the folder and hence impossible to create new folder or file at the root.  Moreover in the following screen - its not really clear where it will create file / folder (current folder is not highlighted)  ![image](https://cloud.githubusercontent.com/assets/1723815/16877279/58053c3c-4a75-11e6-94e5-7ed25329b7d6.png)  If I click new folder it creates in:   ![image](https://cloud.githubusercontent.com/assets/1723815/16877296/676b374e-4a75-11e6-923c-2ee42048e4d2.png)  but as you can see on first screenshot - it was impossible to tell it will create in that folder
---
Título: Hint at incorrect integrated terminal shell path if the process crashes immediately after launching
Descripcion: - VSCode Version: 1.3.1 - OS Version: Windows 7  Steps to Reproduce: 1. Install vscode outside windows installation drive 2. Switch terminal from `cmd` to `powershell` using `"terminal.integrated.shell.windows": "\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe"` in `settings.json` file.  Terminal opens and then crashes with a console.error message `console.error('Integrated terminal exited with code ' + exitCode),` ##### Suggestion  The above error message could be improved to give the user an hint  to use absolute path to `powershell` in `settings.json` or vscode could ask for the windows installation directory on first start. #### Fix for using powershell  Use absolute path to powershell in `settings.json`  Example, with windows installed in C drive `"terminal.integrated.shell.windows": "C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe"`
---
Título: Offer code mark styles and gutter marks
Descripcion: _From @darkred on July 10, 2016 23:30_  _(Using VSCode 1.3.0 in win 10 x64 build 10586 with vscode-eslint extension 1.10.18)._  Currently the code marks(for errors and warnings) appear only as squiggly underline (i.e. as **spellchecker errors** in browsers, e.g. Firefox, Chrome): _(the error is in red, and the warning is in green)_ ![2016-07-11_020259](https://cloud.githubusercontent.com/assets/723651/16716650/b635a444-470b-11e6-82fc-90770e8bea05.png)  My suggestion is to offer more code mark styles (ideally  the **outline** style, as it highlights the errors/warnings the best way -see below- ) and **gutter marks** : _(with the errors to be in red, and the warnings to be in yellow, as ESLint itself uses these colors - not green)_ ![2016-07-11_020203](https://cloud.githubusercontent.com/assets/723651/16737733/59dedc70-479b-11e6-8da9-0789ade17143.png) ([here is another screenshot](https://sublimelinter.readthedocs.io/en/latest/_images/marks-outline-dark.png))  It's more easy to distinguish the errors this way.  Thank you  ---  _For reference SublimeLinter3 package offers [five different code mark styles](https://sublimelinter.readthedocs.io/en/latest/mark_styles.html) :_  - fill,  - outline   _(the default style)_, - solid underline,  - squiggly underline, and  - stippled underline  _and two types of gutter marks:_  - errors, and  - warnings  _Copied from original issue: Microsoft/vscode-eslint#99_
---
Título: Typography tune-up needed
Descripcion: On VS Code for Mac, Windows and Linux we're using system fonts to fit in with the OS.  TODOS:  **Apply OS-specific guidelines on typography for optimal legibility and visual consistency** https://developer.apple.com/ios/human-interface-guidelines/visual-design/typography/ https://msdn.microsoft.com/en-us/windows/uwp/style/typography  **Ensure a consistent visual hierarchy, and check consistency in** Font-weight Font-size Line-height Using the font features as typeface intends (tracking, kerning, anti-aliasing). ### Mac feedback  **Some feedback from our users** - Seems [overweighted](https://twitter.com/brunnopleffken/status/752902520683593728)  **Some feedback from users of other products who use San Fransisco in Chrome** - Chrome appears to have [less characters per line](https://twitter.com/dbox/status/752823539162546177) (tracks differently) than Safari. - [Characters stand out more than words](https://twitter.com/joshuajabbour/status/752625331186462722) (tracking issue in Chrome) - Abrupt change, [takes some getting used to](https://twitter.com/nickfogle/status/752557899914702848).
---
Título: Debug toolbar custom positioning
Descripcion: - VSCode Version: 1.3.0 - OS Version: Windows 10  Happy that I can now move the debug toolbar in the the 1.3 update! However, I think it is better suited for the sidebar, as it is often/constantly in the way.  ![image](https://cloud.githubusercontent.com/assets/4859660/16744322/919c5236-477e-11e6-8e6e-876e0234dee9.png)  Alternately, it could be attached to the debug console.  ![image](https://cloud.githubusercontent.com/assets/4859660/16744360/c09c6fda-477e-11e6-9fce-e6f766b0749b.png)
---
Título: Improve logging when terminal process dies
Descripcion: A `console.error` should print stdout/stderr when a terminal exits with a non-0 exit code. The end result we want is an error message on the UI explaining there was an exit code (potentially mentioning to check the developer tools console for more detail), and the output of the process in the console such as:  ``` zsh: command not found ```
---
Título: Revisit OS X fonts
Descripcion: @fitojb says of 50d96e219097973dcce551cb6cdc589ecaba7362  > The Display variant of the SF typeface should not be used for small UI copy, as it is simply too thin. Please use the Text variant instead: .SFNSText-Light. And then, I'm not sure why pick the Light weight over Regular...
---
Título: Closing a dirty split editor (existing OR untitled) should not affect the initial editor
Descripcion: - VSCode Version: 1.3.0 - OS Version: OSX 10.11.5  Steps to Reproduce: 1. Open (or create) a file. 2. Split the editor. 3. Add some text in either editor. 4. Close either editor. 5. Select "Don't save" when prompted.  There are two end states produced by these steps: #### When an existing file is used  The other editor remains, but the text is reverted to the state on disc. #### When a file is created  The other editor is also closed.
---
Título: The “left” “right” “center” label in Open Editors take too much space
Descripcion: If you split your editor (which is common when using a wide screen), two rows are used. Maybe you can replace text labels with a horizontal line.
---
Título: Show quick open results as preview while navigating through them
Descripcion: - VSCode Version: 1.3.0 - OS Version: Windows 10 64bit & Mac OS X 10.11.3  Steps to Reproduce: 1. Open the Quick Open box 2. Type a file name that returns several results 3. A new Preview editor pops up and receives focus with the first result loaded into it 4. Scroll through the results in the Quick Open box and the Preview editor changes to the file that's highlighted 5. Selecting a result will fully open the file. Canceling can close the Preview editor or leave it open. I'd prefer if it closed the preview.
---
Título: Extensions side bar width
Descripcion: - VSCode Version: 1.3.0 - OS Version: Win 10 - 1511  **Extensions view needs custom width for side bar.**  I keep my side bar neat and narrow which works fine for the normal explorer view. But when browsing the new extensions view the narrow size of the side bar is clearly too small to read anything useful. Either make the width for the extensions view automatically wider or change what is shown in the side bar to the names of extensions only and keep any buttons to uninstall or install etc to the detail view on the right.  ![vscodeext](https://cloud.githubusercontent.com/assets/361077/16683502/24405094-44f8-11e6-8c66-35d0d517c0eb.PNG)
---
Título: [Regression 1.3] Command palette no longer mouse-accessible
Descripcion: - VSCode Version: 1.3 - OS Version: various  Steps to Reproduce: 1. Click the filename of the currently open file (at the top of the editor pane) 2. Nothing happens (previously the Command Palette opened)  This is related to my previously opened Feature Request: #8576 in which I requested that this functionality would also work on a blank screen (with no editor open). However, now with the 1.3 update it appears the functionality has disappeared completely in all contexts.  _Note: I have `"workbench.editor.showTabs"` set to `false` since 1.3 to match the (far superior) pre-1.3 functionality._
---
Título: Git UI loses focus on message field once staging a file has been completed
Descripcion: - VSCode Version: 1.3.0 - OS Version: W7  Steps to Reproduce: 1. In Git UI, click file for staging 2. Start entering commit message before the staging has finished. Once the staging is complete, the message field loses focus interrupting the message writing.
---
Título: 'Split Editor' should move the active tab rather than duplicate it
Descripcion: - VSCode Version: 1.3.0 - OS Version: Xenial  Steps to Reproduce: 1. Open 2 code windows, there should be 2 tabs 2. Click the 'split editor' button. 3. Notice the new editor pane has a second instance of the active tab.  I find this annoying. I would prefer behaviour that _moved_ the active tab into the new split, revealing the next-most-recently-used tab in its place.  Preferred workflow goes: - Editing a file - Open another file to edit, desire to edit the 2 'top' files side-by-side - Click 'split', now the top 2 files are both visible, can edit side-by-side with just one click.  I can't think of a time when I have ever wanted the existing behaviour of duplicating the top tab. It just forces me to follow up the split action with another action to closing the tab in the original split.
---
Título: Hard to place caret before first character of line by mouse
Descripcion: - VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:52:42.674Z) - OS Version: Darwin x64 15.5.0  Steps to Reproduce: 1. Using default dark+ theme (but others are affected likewise) 2. Open any file and place caret before first character of any line with spaces as indentation 3. -> It is hard to hit the right spot right of the folding ruler and left of the first character  We seem to be missing a visual indicator where the line begins. A simple workaround is to add a editor.ruler at column 0 in the settings.
---
Título: Suggestion: add @installed filter to Extensions View
Descripcion: To keep parity with @outdated, @popular and @recommended, we could add @installed.  We can still have the cleared search box show installed but I think users might expect that @installed would work.  It actually would help explain the installed extension list which is currently displayed without any clarification, just the "Search Extensions in Marketplace" prompt.  See also https://github.com/Microsoft/vscode/issues/8856
---
Título: Suggestion: Change command to Show Recommended Extensions
Descripcion: - VSCode Version:1.3.0-insiders - OS Version:Windows  The rest of the Extension: commands in the Command Palette and Extensions View dropdown say "Show blah Extensions".  Saying "Show Extension Recommendations" doesn't fit with the others.  I get it wrong all the time in the docs.:-)  The filter is "@recommended" as well.
---
Título: Local commands for editors need to be visible with Tabs enabled
Descripcion: We need to better show local commands for commonly used things like "View next change" "View previous change" and for "Preview markdown."  These used to be quite easy to access with tabs disabled.  Although we can't include local commands with global commands, as it could be confusing, we need to find a spot to put these that will be easy to use in one click and highly discoverable.  Right-clicking the active tab is not very discoverable.
---
Título: Auto-hide sidebar
Descripcion: - VSCode Version: 1.3.0-insider - OS Version: Win 10  Currently, when you open a side panel and then click back in the editor area, the side panel remains open.  It would be rather handy to add a button (pin or something) which changes this behavior for each panel, allowing to either keep the current way of working or making the side panel auto-collapse when you click outside.
---
Título: Split Editor asks if I want to save the file
Descripcion: - VSCode Version: 1.3.0-insider - OS Version: Windows 10  Can be with "workbench.editor.showTabs": true or false  Steps to Reproduce: 1. Open a file for example in html. 2. Activate the Split Editor. 3. Modify the left file or direct. 4. Close the Split Editor.  The VSCode asks if I want to save. - VSCode Version: 1.2.1 - OS Version: Windows 10  Steps to Reproduce: 1. Open a file for example in html. 2. Activate the Split Editor. 3. Modify the left file or direct. 4. Close the Split Editor.  It seems that the VSCode see that are not the same file and asks if I want to save.  This behavior is correct or is a new specific configuration?  The only way I found to close without saving the file would be dragging the Split tab to the same file from the internal window.
---
Título: DND color of tabs in light theme is not very visible
Descripcion: 
---
Título: Git: status bar lacks indication that it will push
Descripcion: - VSCode Version: Code - Insiders 1.3.0-insider (a2b9738a942237b59cb920940b93a0206f1b61d0, 2016-07-01T19:26:22.011Z) - OS Version: Darwin x64 15.5.0  Steps to Reproduce: 1. Create commit, ready to be pushed 2. Click on Git part of status bar 3. -> Commit is pushed, which is unexpected
---
Título: Several CJK strings on the UI are very difficult to read on standard definition monitors due to font weight and size
Descripcion: - VSCode Version: Code - Insiders 1.3.0-insider (a2b9738a942237b59cb920940b93a0206f1b61d0, 2016-07-01T19:24:33.352Z) - OS Version: Linux x64 4.4.0-28-generic, Ubuntu 16.04  `--locale=zh-CN` bold in debug panel headings:  ![image](https://cloud.githubusercontent.com/assets/2193314/16535731/9eb01c4c-3f9e-11e6-8202-f78fea6e3a6b.png) ![image](https://cloud.githubusercontent.com/assets/2193314/16535735/ab2fb5ea-3f9e-11e6-9a6e-15b8534fb10d.png)  `--locale=ko` output panel title (it is 출 but it's awfully close to 춤 and 춥):  ![image](https://cloud.githubusercontent.com/assets/2193314/16535754/d34acd6c-3f9e-11e6-898e-3fe15139ff9b.png)  /cc @dbaeumer @bpasero @rebornix
---
Título: Translations in command palette should only show up when they differ
Descripcion: - VSCode Version: Code - Insiders 1.3.0-insider (a2b9738a942237b59cb920940b93a0206f1b61d0, 2016-07-01T19:24:33.352Z) - OS Version: Linux x64 4.4.0-28-generic, Ubuntu 16.04  `EditorConfig: Generate` from the extension does not feature a translation and takes half the space of the commands doubling up with the fake translations.  ![image](https://cloud.githubusercontent.com/assets/2193314/16535631/c4428720-3f9d-11e6-8e43-4d6add88bf91.png)
---
Título: Search: do not show preview when replace is empty?
Descripcion: Marking important for discussion: I find it weird at the moment that clicking a search result opens the preview of replace only because I have the replace input field expanded:  ![image](https://cloud.githubusercontent.com/assets/900690/16515162/a9aa825a-3f70-11e6-8b50-b6e2568bdcc4.png)  It is especially bad because the results all show in the color of a normal search result.  I suggest that for this case when you click on a result, we just open it like a search result.
---
Título: Enable tabs by default
Descripcion: After talking to @egamma we both think that tabs should be enabled by default (currently they are not). Erich rationale is that tabs is a flag ship feature that resolves a serious adoption blocker and my reasoning is that the editor stacks model is harder to understand if tabs are disabled and more natural if tabs are enabled.  @Microsoft/vscode please speak up if someone has a valid reason why we should not do that.
---
Título: Tabs: Coloring issues
Descripcion: Summary of collected issues for coloring in tabs - editor find widget blends too easy into tab background in dark theme (https://github.com/Microsoft/vscode/issues/7649, https://github.com/Microsoft/vscode/issues/8294) - we use a lot of opacity to get the different shading to work with the different themes - people find it hard to distinguish the active tab from the inactive - in HC theme it is hard to distinguish tabs that are in an inactive group (https://github.com/Microsoft/vscode/issues/8550) - in HC theme the active tab shifts down (https://github.com/Microsoft/vscode/issues/8551)  Proposed solution from @bgashler1 in https://github.com/Microsoft/vscode/pull/8587
---
Título: Tab dragging should show where the tab will be inserted, not which tab it will be "replacing"
Descripcion: #7854 - VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:14:50.570Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  Currently:  ![image](https://cloud.githubusercontent.com/assets/2193314/16471538/4041271a-3e12-11e6-81cd-bfcded58b943.png)  It would be more intuitive for a "to be inserted here" vertical line to show up to the left of code.spec.template.  Dynamic rearranging like in Chrome would be an even nicer visual indicator.
---
Título: Goto menu title should be "Go to"
Descripcion: - VSCode Version:1.2.1-stable - OS Version:Window 7  "Go to" better matches the menu commands in the menu group "Go to File..", etc.  Not sure how localization is handling "Goto" since it isn't a real word.
---
Título: Alternative command discoverability issue
Descripcion: Testing #8197. - VSCode Version: 6/29 - OS Version: Mac  I experimented with the following `package.json`.  ``` {     "name": "name",     "description": "description",     "author": "author",     "version": "1.0.0",     "publisher": "kieferrm",     "engines": {         "vscode": "^1.0.0"     },     "dependencies": {},     "contributes": {         "commands": [             {                 "command": "rudi",                 "title": "Rudi Now",                 "category": "Category 1"                 // "icon": {                 //  "dark": "darkRudi.png",                 //  "light": "lightRudi.png"                 // }             },             {                 "command": "blitzen",                 "title": "Blitzen Now",                 "category": "Category 1"             }         ],         "menus": {             "editor/context": [                 {                     "command": "rudi",                     "group": "myGroup",                     "when": "editorHasSelection"                 }             ],             "explorer/context": [                 {                     "command": "rudi",                     "group": "navigation@1"                 }             ],             "editor/title": [                 {                     "command": "rudi",                     "group": "navigation@2",                     "alt": "blitzen"                 }             ]         }     } } ```  When I want to use the alternative command, I first need to hover over the action and then I can press `Option/Alt` to see the alternative.  For exploring the UI it would be more intuitive if both sequences work: 1. Hover then press `Option/Alt` 2. Keep `Option/Alt` pressed and hover of menu actions
---
Título: Consider another color (blue) for Extension view Enable button
Descripcion: - VSCode Version:1.3.0-insiders - OS Version:Windows 10  The beige yellow Enable button does not look compelling IMO.  I can see that you wanted to contrast the green Install button (green means go) but yellow means yield and isn't attractive.  Consider using blue which is a very common button color and will have good contrast on both light and dark themes.  We generally use blue for highlighting and in this case we want to highlight that you need to take an action to enable the extension.
---
Título: Very difficult to find file's path with tabs
Descripcion: Testing #7854 1. the hover takes very long to show (maybe this hover can be made faster?) 2. I need to hover over the text and not over the tab area
---
Título: Cannot distinguish different files with the same path.filename(x)
Descripcion: Testing #7854  ![image](https://cloud.githubusercontent.com/assets/5047891/16450701/bf02f8f8-3dfe-11e6-9d78-abd055b8087e.png)
---
Título: Suggestion: Use different icons for Extension View popular and recommended buttons
Descripcion: - VSCode Version:1.3.0-insiders - OS Version:Windows 7  The flame icon for popular is confusing with the OmniSharp flame and perhaps offensive ("hot").  The gift icon is difficult to see and understand.  Suggestion: Use a star icon for popular.  This matches the star ratings we show in the extension items.  Suggestion: Use a thumbs up hand image for recommended.  The thumbs up image is very popular on GitHub and easily understood.
---
Título: [html] In HTML/XML, go to bracket would be more useful if it went to matching tag
Descripcion: #8207 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  /cc @alexandrudima   Currently in a HTML/XML file, go to bracket will literally jump to matching brackets. In HTML and XML, tags serve a similar purpose to brackets, you indent at them, they open and close, just like brackets. It would be intuitive imo if go to bracket went to the matching HTML tag instead of work on brackets (ie. the `Emmet: Go to Matching Pair` command).
---
Título: Scrolling down @popular extension viewlet rapidly shows many loading indicators
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  Is there a nicer way that loading could be indicated? It would look better with no indicator imo.  ![image](https://cloud.githubusercontent.com/assets/2193314/16428338/4728c3d6-3d26-11e6-8880-42228be2ab8c.png)
---
Título: Extension @popular and @recommendations should be searchable or not feature the textbox
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  Since `@popular` was added to the textbox I assumed I could filter it. No point having the textbox there if you can't filter.  ![image](https://cloud.githubusercontent.com/assets/2193314/16428082/1b16901c-3d25-11e6-80c0-a2c52340dafc.png)
---
Título: Extension recommendations should say why they're recommended
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  Something like "These extensions may be useful based on the files you have viewed" may be useful? It wasn't immediately obvious to me and would help illustrate the differentiate between @popular.
---
Título: Extension install button text is not centered on Ubuntu
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  2px margin on top, 4px on bottom.  ![image](https://cloud.githubusercontent.com/assets/2193314/16426969/1d9e64ae-3d20-11e6-9e75-0c487f832e81.png)
---
Título: Extension README headers are really big
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  They should be a little smaller like the marketplace in my opinion.  ![image](https://cloud.githubusercontent.com/assets/2193314/16427540/a2b1ce0e-3d22-11e6-98d9-af4d380928e3.png)
---
Título: Extension viewlet scrollbar overlaps with content
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  On other content panes there is a margin large enough to avoid this overlap (debug, search, etc.)  ![image](https://cloud.githubusercontent.com/assets/2193314/16427432/2b894c12-3d22-11e6-8822-91e7e140ff83.png)
---
Título: Stars can be pushed off the right side of the extension viewlet
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  I think this happened after resizing the viewlet:  ![image](https://cloud.githubusercontent.com/assets/2193314/16427353/d0c105b8-3d21-11e6-971a-69cc3891b48c.png) ![image](https://cloud.githubusercontent.com/assets/2193314/16427376/e6409eee-3d21-11e6-8b9d-a6528aa27080.png)
---
Título: Extension buttons are inconsistent
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  Viewlet:  ![image](https://cloud.githubusercontent.com/assets/2193314/16427126/c923db60-3d20-11e6-8247-d1faa42276de.png)  Preview (bolded):  ![image](https://cloud.githubusercontent.com/assets/2193314/16427150/ead1e892-3d20-11e6-9326-363486a1b228.png) ![image](https://cloud.githubusercontent.com/assets/2193314/16427162/f4c7d406-3d20-11e6-872e-8e841b84303c.png)  The size/spacing is also inconsistent:  ![image](https://cloud.githubusercontent.com/assets/2193314/16427263/58c15b26-3d21-11e6-927f-7bfd04dbc7c6.png)
---
Título: There should be a margin between the title/version download count
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  The `0` of the version is closer to the download icon that the actual download count.  ![image](https://cloud.githubusercontent.com/assets/2193314/16427010/4e51ad4a-3d20-11e6-99d9-8dd8747fcf74.png)
---
Título: Extension README license is so far from everything
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  The license is so lonely :cry:   ![image](https://cloud.githubusercontent.com/assets/2193314/16426860/a6d3f0b4-3d1f-11e6-912e-4ddef4dfc3d4.png)
---
Título: Extension README content should be wrapped to 80-100 characters
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  Extension README content should be wrapped to 80-100 characters to significantly improve readability/presentation (just like how this GitHub issue is wrapped).  This is bad:  ![image](https://cloud.githubusercontent.com/assets/2193314/16426771/4a2acb58-3d1f-11e6-858a-b3cda2742d56.png)
---
Título: Extension images look bad in dark themes
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  The images are designed for a light background on the marketplace and an optional custom color selected by the author. This makes extension images that were designed to look good in those circumstances look crappy and unprofessional in the dark theme.  These are all the bad entries from a search of "sort lines":  ![image](https://cloud.githubusercontent.com/assets/2193314/16426601/a0ec2028-3d1e-11e6-9d98-38ed0c841b8d.png) ![image](https://cloud.githubusercontent.com/assets/2193314/16426606/a7c2fe76-3d1e-11e6-8d3e-88e0d905a26b.png) ![image](https://cloud.githubusercontent.com/assets/2193314/16426611/ab435172-3d1e-11e6-840c-99f03ef179cd.png) ![image](https://cloud.githubusercontent.com/assets/2193314/16426618/b0c9004c-3d1e-11e6-9e01-508035d46b33.png)
---
Título: Default extension image contrast ratio is very low
Descripcion: #8215 - VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z) - OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04  The low contrast makes it's difficult to make out that the top-right corner is not the same as the rest, ie. it looks like a square inside a circle.  ![image](https://cloud.githubusercontent.com/assets/2193314/16426485/106c85a6-3d1e-11e6-9572-c856a260ef8c.png)
---
Título: No margin between Extensions viewlet and the editor
Descripcion: No margin between Extensions viewlet and the editor. When selecting an extension, selection outline is almost overlapping with content in the editor ![screen shot 2016-06-28 at 3 49 07 pm](https://cloud.githubusercontent.com/assets/10746682/16417864/e012a618-3d47-11e6-941f-ffd7c242084f.png)
---
Título: Undo action on Find/Replace widget should undo in the editor
Descripcion: #8229  Safari  Steps to Reproduce: 1. Open Find/Replace widget 2. Type a find term and replace term 3. Press Enter to replace 4. Do undo  Expected: This should undo the replace Actual: This is calling browser undo
---
Título: Replace: make it more obvious that you are in replace mode
Descripcion: Refs: #8184  I find it currently hard to understand that the results list shows different matches when you have focus in replace and typed something. You show the preview of the operation. If we want to keep this concept, we should at least show the before and after in one line, e.g. you could strike through the old result and show the replacement right after. I would also use different colors for that.  Related: https://github.com/Microsoft/vscode/issues/8302
---
Título: Replace: Replace button should be outside of input field
Descripcion: Refs: https://github.com/Microsoft/vscode/issues/8184  I think this would make it easier to discover that you have to press the action to replace all. It also moves the design closer to the editor find widget:  ![image](https://cloud.githubusercontent.com/assets/900690/16414909/c38fb556-3d3a-11e6-81ad-09603404c2f5.png)
---
Título: Replace in search viewlet is hard to discover
Descripcion: Refs: https://github.com/Microsoft/vscode/issues/8184  I think what we have now is a good start but I fear that people will not find the affordance to bring search into replace mode:  ![image](https://cloud.githubusercontent.com/assets/900690/16414775/fb54687a-3d39-11e6-9c0c-3cebd969d899.png)  We should look into alternatives how to design this experience.
---
Título: Problems: Improve filter text
Descripcion: Refs: https://github.com/Microsoft/vscode/issues/7601  I was initially confused by the filter text "Filter by type or text" because I did not make the connection from "type" to problem type.  I would make it more explicit: "Filter by problem type or text".  @weinand who is best in finding good wording :)
---
Título: Replace mode needs more UX affordance
Descripcion: #8184  Currently the search / replace widget behaves quite differently if the replace box is visible or not. The differences are what results are outlined in the viewlet (searched or replaced) and what file is opened when you click on a result. There is a large difference in behavior and the only way a user can see in what mode he is is whether a replace box is visible. I propose to add some more UX affordance - maybe updating the title of SEARCH to SEARCH / REPLACE. Or some more styling with colors. This might get fixed by addressing #8286  ping @stevencl, @bpasero  for opinions
---
Título: Tab title background should not be current line highlight
Descripcion: This is a unhappy collision of styles (GitHub Clean White theme) and the background color of the tab area. I wonder if we should use the background color of viewlets inside of the darker tone?  ![screen shot 2016-06-28 at 12 02 21](https://cloud.githubusercontent.com/assets/1794099/16411638/4958b704-3d28-11e6-9b39-e62f3c0b43de.png)
---
Título: Do not show me a file if there are no results
Descripcion: #8184  Steps to Reproduce: 1.  Search / replace for a something 2. Replace all inside a file 3. Notice we still show that file with 'no matches'. I would expect that file is no longer in the list  ![screen shot 2016-06-28 at 11 36 40](https://cloud.githubusercontent.com/assets/1926584/16410830/9bbf1186-3d24-11e6-904f-b35abb04987d.png)
---
Título: Workbench to support left hand side of diff editor to be editable
Descripcion: It seems that the left hand side of a diff editor is now suddenly editable with the new search & replace preview feature. The workbench is not really fit for allowing other editors (non-file, non-file-diff) to be editable nor do I believe is it discoverable or expected to be able to type on the left hand side. You will quickly notice that typing in the left hand side suddenly opens the file (as a tab in the background) and you also do not get any dirty indicators in the title area of the editor.  If we want the diff to be editable I suggest to do what we do when you compare 2 files or open a git change: The right hand side is editable because the right hand side is an instance of `FileEditorInput`.  Otherwise, please disable editing to the left until we have a story from the workbench to make this happen.
---
Título: Need an icon for ''show preview to side"
Descripcion: The menu contribution story allows to define an alternative command for a menu item. It shows when you press <kbd>Alt</kbd> while hovering over the item. For `Markdown` we have an action _Open Preview_ and _Open Preview to Side_. The latter is the alternative command of the former, but they use the same icon...  ![jun-24-2016 18-00-04](https://cloud.githubusercontent.com/assets/1794099/16343198/1250cca0-3a36-11e6-97df-0288fe897001.gif)  @bgashler1 Pretty please make us a nice icon. The declaration and location is here: https://github.com/Microsoft/vscode/blob/master/extensions/markdown/package.json#L58
---
Título: UI and UX overhaul
Descripcion: The VS Code UI and UX has evolved to a point where we need to take a holistic and top down view on the experience and look for improvements and inconsistencies. We should define our principles and design language and use that to evolve the product.  In particular, we need to focus on  - iconography #8017 - panels #7161 - colours #7649, #7648 - commanding #1136
---
Título: Suggestion: Rename "Keep Editor" command to "Keep Open"
Descripcion: When a file is in preview mode, we have a "Keep Editor" command to fully open the file (gets added to the open list).  "Keep Editor" is confusing (keep VS Code? keep the editor window?).  I think we can simply this command to just "Keep Open".  This fits nicely with the other context menu commands like "Close", "Close Others". We can just talk about opening and closing editor window items.
---
Título: Consider changing "Close" panel button to be "Hide"
Descripcion: Currently all panels feature a `x` button which when hovered say "Close". This is ambiguous for the terminal as to weather it will destroy the processes and potentially will be for other/future panels. I suggest changing this to a minimize/hide icon `-` with a tooltip that reads "Hide".  ![image](https://cloud.githubusercontent.com/assets/2193314/16279615/a1323f20-3870-11e6-94f7-ec6b502a4d5f.png)  /cc @bgashler1 @bpasero @stevencl
---
Título: Inconsistent weight and use of color in iconography throughout UI
Descripcion: See images below of the various different icons across the UI at x2 with some comments. This is by no means exhaustive but contains the major icons:  /cc @bpasero  ### General comments - Since color is used so sparingly throughout the UI, it draws additional attention to the icons that feature red and green in particular. Clear output should have not have a particularly strong visual presence imo. ### Explorer - Why is the folder filled in brown and not white? - Why does the collapse all button feature a blue `-`, why is it a different blue than the one used in the status bar?  ![image](https://cloud.githubusercontent.com/assets/2193314/16278745/e3efd7f4-386c-11e6-806c-7415deddb81a.png) ### Search - Why is the red `x` an inconsistent style with the `x` used elsewhere? - Why does the clear icon feature a different light gray than the other icons?  ![image](https://cloud.githubusercontent.com/assets/2193314/16278785/08f95fde-386d-11e6-9aca-14cc16549fde.png) - Why is there a dark border around these icons in particular? ### Git  ![image](https://cloud.githubusercontent.com/assets/2193314/16278970/c7dd2566-386d-11e6-9b33-384a997efcd5.png) - Why is the tick icon a different weight, why isn't it solid? ### Debug  ![image](https://cloud.githubusercontent.com/assets/2193314/16278810/2ade413c-386d-11e6-8be8-7e2b6476436c.png) - Why is the debug output icon so short?  ![image](https://cloud.githubusercontent.com/assets/2193314/16278851/4dff0868-386d-11e6-95b6-56721b9b6b99.png) - Why is the deactivate breakpoints button feature a circle filled with black (vs transparent used elsewhere)  ![image](https://cloud.githubusercontent.com/assets/2193314/16278901/80213b7c-386d-11e6-8821-601019bff5fc.png) - Why is the close all button filled so it's inconsistent with the collapse all? - Why does the close all button button have a black border when collapse all doesn't?  ![image](https://cloud.githubusercontent.com/assets/2193314/16278927/97fb3a90-386d-11e6-90cc-7da9b8873e25.png) ### Problems  ![image](https://cloud.githubusercontent.com/assets/2193314/16279005/ecec0eda-386d-11e6-9544-d4dfc236dd7e.png) ### Editor  ![image](https://cloud.githubusercontent.com/assets/2193314/16279047/1b4d0d06-386e-11e6-8463-0917398f3419.png)
---
Título: documentationLabel does not accept carriage return
Descripcion: - VSCode Version: Latest - OS Version: Windows 10  per Erich  this suggestSupport snippet does not respect any character I could possibly use for the section [should be carriage return here]. I've tried various combinations of html tags and of the construction of the label itself with no luck.  type: 'operator', label: 'ge', codeSnippet: 'ge', documentationLabel: "Greater Than or Equal To [should be a carriage return here] StoryPoints ge 8"
---
Título: Show 'no installed extensions' affordance
Descripcion: 
---
Título: Improve tab overflow UX
Descripcion: I know this is how it is desgined but just to raise my concern that the overflow cut of tab headers seems too strong for me. And when I look at the layout in some cases I feel like it is broken because of this. Not sure how to solve this issue, but we should somehow make this cut softer imho  ![screen shot 2016-06-22 at 11 38 12](https://cloud.githubusercontent.com/assets/1926584/16261964/f7bce4d8-386d-11e6-80fc-81eda5d4f7ff.png)
---
Título: Extensions icon might need polish
Descripcion: If we are ever going to change the extensions icon now is the time. I am not the biggest fan of the current icon so creating this issue just to raise my concern.  When I look at the current icon 'extensions' is not the first term that comes to my mind. This is just my opinon so feel free to close  ![screen shot 2016-06-22 at 09 23 56](https://cloud.githubusercontent.com/assets/1926584/16257831/1b5435a8-385b-11e6-9889-bfe48b5d4dbb.png)
---
Título: Close panel 'x' button should be a minimize button '_'
Descripcion: It's particularly confusing with the terminal panel, a `x` is ambiguous whether it will kill the terminal process when really this is purely a minimize button `_` for all panels.
---
Título: Editor hover is easily lost in editor content
Descripcion: I am not a big fan of our hover when it has lots of contents because the content blends too easy into the other contents of the editor making it hard to read.  ![image](https://cloud.githubusercontent.com/assets/900690/16224554/c9e51f4c-37a2-11e6-8c17-06b18d24fc45.png)  At the minimum the hover should have a different background color. Also in this example the JS doc comments look very similar to the actual method signature. I would love if both could be made more distinct so that its clear the one is documentation and the other is signature.  /cc @joaomoreno @bgashler1 @stevencl @alexandrudima
---
Título: Why do we differentiate preview open files with italic font?
Descripcion: - VSCode Version:1.3.0-insiders - OS Version:Windows 7  I'm not sure there is benefit differentiating preview open file (with italic font) from fully opened files. What information does this give the user and how would they act on it?  Italics in the heading doesn't look good on some lower resolution monitors. ![italic](https://cloud.githubusercontent.com/assets/12818376/16212473/b8a4a302-36fc-11e6-95f4-74650fe4f5a9.png)
---
Título: Reconsider using the term "editor" for files and views on files
Descripcion: - VSCode Version:1.3.0-insiders - OS Version:Windows 7  I think users will be confused by the term "editor" for a view on a file. Users think of VS Code as an "editor" of their "files".  I noticed this confusion when I started on the June_2016.md release notes.  We have sentences like "As a preparation for enabling Tabs in the workbench, we revisited how you can interact with editors in VS Code. Many users coming from other editors were confused by some of the editor behavior in VS Code:"  As you can see above, we mention editor three times with two different meanings, as the tool VS Code and as open files.  This is more understandable as "As a preparation for enabling Tabs in the workbench, we revisited how you can interact with files in VS Code. Many users coming from other editors were confused by some of the open file behavior in VS Code:"  I recommend we use "OPEN FILES" instead of "OPEN EDITORS".    I don't see too many other uses of the term "editor" in the UI but some commands would need to be renamed: Preview command **Keep Editor**  -> **Open File** - I think "Keep Editor" will be confusing **File** > **Close Editor** -> **File** > **Close File** - we no longer close the entire editor window, just the last file.   Using "editor" for the three editor windows seems fine so it make senses to talk about "editor groups" but these are groups of files not groups of "editors".
---
Título: tweet feedback button - make it hideable
Descripcion: - VSCode Version: 1.2.1 - OS Version: OS X 10.9.5  I do not use Twitter, and so don't want to see the Tweet Feedback icon/smiley all the time. Add a setting to hide this, please.
---
Título: Tab context menu actions to open a new tab
Descripcion: 1. Context menu on a tab header 2. Only actions to close, I would expect some actions to open a new tab (new, open) - similar to sublime and chrome
---
Título: Double click on empty header area should open a new tab
Descripcion: We need some action to easily open a new tab via mouse. Chrome has that small square and sublime has double click on empty area to open a new tab.  Since I might not like rendering the extra square, I vote for double click on empty header area opens a new tab - same as sublime.
---
Título: Hover is too small when editor is too narrow
Descripcion: - VSCode Version:  Version 1.3.0-insider Commit 9f2c1b7ddfdc631198e9b541072489af78b7cade Date 2016-06-16T05:08:39.628Z Shell 0.37.6 Renderer 49.0.2623.75 Node 5.10.0 - OS Version:   windows 10 1. ![animation](https://cloud.githubusercontent.com/assets/8449892/16122060/ad52035c-3420-11e6-8de2-28fd63779fad.gif) 2. ![animation2](https://cloud.githubusercontent.com/assets/8449892/16122068/b16c951a-3420-11e6-9393-d27adbdab4f4.gif)
---
Título: Custom theme: line number background color or border
Descripcion: - VSCode Version: 1.2.1 - OS Version: Win 7 x64  Steps to Reproduce: 1. Open a file 2. Show line numbers in vscode settings ("editor.lineNumbers": true) 3. Line numbers are shown with a background color same as the background color of the editor area 4. It makes confusion with indent. We do not know how well the code is indented due to the margin  Suggestion: 1. Be able to customize the background color of line number area 2. Make a thin left vertical border along the editor area
---
Título: Multiple integrated terminal UX
Descripcion: Multiple terminals is done and a basic prototype for representing them in the UI is in progress in https://github.com/Microsoft/vscode/pull/7705. I need UX to go over how we want the terminal UX, here is my proposal:  A tabbed interface with a button that moves the tabs between the bottom portion of the panel and the right. The title of the tab is the name of the process being run:  ![image](https://cloud.githubusercontent.com/assets/2193314/16090989/8715c646-32e6-11e6-9920-cebc331347a9.png)  ![image](https://cloud.githubusercontent.com/assets/2193314/16091025/a776f338-32e6-11e6-95ad-9b68dafa640e.png)  ![image](https://cloud.githubusercontent.com/assets/2193314/16091027/aad4985a-32e6-11e6-839f-85a7a3f38235.png)  Something to be explored with this design: - Whether the tabs should be hidden when there is only a single tab open. You would lose the title of the process, but gain 1-2 rows of I/O. - Should the move tabs button be hidden in an overflow menu.
---
Título: View Menu : UX Ideas
Descripcion: Currently we have quite number of views and view actions under Views menu and making it cumbersome. We should organize them better and effectively.  ![views menu](https://cloud.githubusercontent.com/assets/10746682/16072484/64992ee6-32e1-11e6-815f-befb60246dde.png)  cc: @bpasero @gregvanl @stevencl
---
Título: Need Close All action in tab context menu
Descripcion: I always go there looking for it, and end up having to go to the overflow menu.
---
Título: Find & Replace UX ideas
Descripcion: One idea is to reuse as much of the search UI we already have. Each entry in the search viewlet could show a preview of the replace operation and clicking on an entry could open the diff editor to actually show a before/after using the text editor.  Mockup:  ![image](https://cloud.githubusercontent.com/assets/900690/16046809/04ea83de-324e-11e6-9552-73edfc7c1842.png)
---
Título: Editor actions are hard to discover when tabs are enabled
Descripcion: Due to limited space in a tab, we put the editor actions into the context menu. This makes them much harder to use and explore compared to having them visible with icons in the title header when tabs are disabled.
---
Título: Diff view needs more UX affordance when tabs enabled
Descripcion: Enable tabs and open a diff view. Notice the following: 1. Diff view is rendered the same as a regular editor view - we should add some affordance so there is a clear difference between the two when looking at the tab header 2. There are no more top level diff view actions - this is fine as this space is now occupied by tabs - but this actions should be present in the secondary top level actions  ![screen shot 2016-06-14 at 15 47 55](https://cloud.githubusercontent.com/assets/1926584/16045118/65119c5e-3247-11e6-8a10-74447f6420dd.png)
---
Título: Context click on tab changes its background color
Descripcion: ![image](https://cloud.githubusercontent.com/assets/22350/16042478/389a3214-323b-11e6-9f8b-d49707348131.png) 1. Right click on another tab other than the active one
---
Título: Find widget does not blend well when tabs enabled
Descripcion: IMHO the find widget does not visually blend well when tabs are enabled Two similar gray colors and no seperation between them does not look good to me.  Just my 2 cents so feel free to close  ![screen shot 2016-06-14 at 11 52 28](https://cloud.githubusercontent.com/assets/1926584/16038735/c96b8384-3226-11e6-928a-cc8b32627301.png)
---
Título: Wrong input box color in dark theme
Descripcion: In light theme for input boxes we use the same background color as the one used for editor, however in dark theme that is not the case. This becomes particularly visible when tabs are enabled as the quick open input has the same color as the empty after the tabs - looks confusing and this is the main reason why tabs visually look much better in the light theme than in the dark theme imho.  I can look into changing all the input box background colors but it is a big change and it requires UX blessing - so we can discuss it today in the ux meeting.  fyi @bpasero   ![screen shot 2016-06-14 at 11 41 58](https://cloud.githubusercontent.com/assets/1926584/16038481/65d2cff4-3225-11e6-95ef-4299dde5411b.png)
---
Título: Cmd + number should focus editor at index and not focus groups or split
Descripcion: 1. Have multiple tabs open 2. Press cmd + 2 - expect that the second tab gets focus (like in all other aps) 3. Instead a new editor group gets created  While in tab mode cmd + number should always focus that tab. Opening a new group should have a stronger shorctur (more keybindings).  I think this could be solved by just adding additional shortcuts in keybindings.json on appropriate positions because Alex gives priority based on where in file it appears.
---
Título: Tabs/Stacks: decide on settings
Descripcion: The work on tabs/stacks introduces a new bag of configuration settings. We should decide on the location of these settings and wording. Feedback welcome, I am not attached to the wording I picked currently: - `workbench.showEditorTabs`: _Controls if opened editors should show in tabs or not_ - `workbench.previewEditors`: _Controls if opened editors show as preview until getting pinned. Set to false to always open editors pinned_ - `workbench.quickOpenPreviews`: _Controls if editors opened from quick open show as preview. Set to false to always open editors from quick open pinned_ - `workbench.editorOpenPositioning`: _Controls where editors open. Select 'left' or 'right' to open editors to the left or right of the current active one. Select 'beginning' or 'end' to open editors independently from the currently active one._  /cc @Microsoft/vscode
---
Título: Add find all button
Descripcion: Fixed #14836 ![demo](http://ww2.sinaimg.cn/mw1024/534b48acgw1f4rjrts0k1g20dw0b40xb.gif)
---
Título: Provide terminal font ligature setting (disabled by default)
Descripcion: I think...  ![image](https://cloud.githubusercontent.com/assets/22350/15970061/0417147c-2f33-11e6-8623-e277b1e314df.png)  It does look a bit weird. 😕
---
Título: Panels should toggle focus between editor and panel just like other views
Descripcion: Current behavior of panels is to toggle visibility when - Selecting them from the View menu - Using key board short cuts   Eg: Ctrl + Shift + U toggles visibility of the output panel.   Instead they should be having the same behavior as other views like Explorer, Search, Git, Debug. They toggle the focus between active editor and themselves. - Easy to navigate between editor and panels  - Makes consistent across - Removes duplicate behavior: there is a specific command (Ctrl + J) to toggle panel's visibility - [ ] Output - [ ] Problems - [ ] Terminal - [ ] Debug
---
Título: Output wrapping is broken
Descripcion: We go through all that trouble to measure the height of each line in the output, by [counting the characters](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/replViewer.ts#L121) and taking the width of the repl into account... and then we set the CSS to break words on wrap? 😕   ![bug](https://cloud.githubusercontent.com/assets/22350/15966002/5195011c-2f21-11e6-877b-bfa593d5b664.gif)  You either need `word-break: break-all,` or you need to take words into account when calculating the height.
---
Título: Request toggle for bottom-docked view to be side-docked or a column
Descripcion: It would be nice if the bottom-docked pane (integrated terminal, Output view, etc.) could optionally appear as a column alongside the editors, instead of docked to the bottom. My team has a command-line test watcher and node server that we keep an eye on while developing. Our terminal output tends to be tall and narrow. A column view or side-docked view would fit better and not cover vertical space of the editors.
---
Título: Add maximize panel command
Descripcion: - VSCode Version: 1.2.0 - OS Version: Mac OS X 10.11.6  Steps to Reproduce: 1. open the terminal function, use: ⌃`  today update version 1.2.0, terminal function is very great! but could add it max zoom panel function? switch this panel and code’s panel because `git diff` function code is very many, needs more zone to preview diff's code. my english is not well, hope your know what I mean, thanks~  and sometime terminal is not work... show the terminal panel is block.
---
Título: Terminal actions need cleanup
Descripcion: I find it hard to figure out what to do when typing `>terminal` in the command prompt:  ![screen shot 2016-06-07 at 09 23 00](https://cloud.githubusercontent.com/assets/22350/15849183/81835b0e-2c91-11e6-8434-87cacac8afa3.png)  Maybe something more like this? - Open System Terminal - Open Integrated Terminal - Focus Integrated Terminal  Or, with the category sections: - Terminal: Open System Terminal - Terminal: Open Integrated Terminal - Terminal: Focus Integrated Terminal
---
Título: IntelliSense should be more context aware
Descripcion: See image below. `Foo` should be prominent in the list.  ![intellisense](https://cloud.githubusercontent.com/assets/8858/15840004/b81d63da-2bfb-11e6-8b69-31fe372fe367.PNG)
---
Título: Pressing right arrow on an open folder in the explorer should send focus to the directories first child
Descripcion: Steps to Reproduce: 1. Focus explorer 2. Move focus to a closed directory 3. Press <kbd>&rarr,</kbd> to open the dir 4. Press <kbd>&rarr,</kbd>, notice nothing happens  I expect the first child of the directory to be focused.
---
Título: Provide setting to disable focusing editor when selecting a file in the explorer
Descripcion: Steps to Reproduce: 1. Click a file in explorer, notice focus is sent to the editor  This is particularly bothersome when navigating the explorer with the keyboard. See https://github.com/Microsoft/vscode/issues/1025
---
Título: Letterpress background image in editor area should be SVG
Descripcion: Noticed it is still using PNG which does not scale nicely when you zoom in:  <img width="622" alt="screen shot 2016-06-06 at 10 54 59" src="https://cloud.githubusercontent.com/assets/900690/15816819/2201858c-2bd5-11e6-8f92-3f899ca78661.png">
---
Título: Tabs UI using flex
Descripcion: - http://jsbin.com/jexewupede/edit?html,css,output - http://jsbin.com/gusahociqu/7/edit?html,css,js,output - http://jsbin.com/gusahociqu/8/edit?html,css,js,output - http://jsbin.com/sosiwojofe/6/edit?html,css,js,output - http://jsbin.com/sosiwojofe/7/edit?html,css,output - Latest: http://jsbin.com/napuruhedo/1/edit?html,css,js,output
---
Título: put marker filter into panel header
Descripcion: Instead of having a toggle button that reveal the filter widget we should just move into the panel header. That would make it not take extra space and still be easily discoverable.  <img width="1027" alt="screen shot 2016-06-03 at 10 13 52" src="https://cloud.githubusercontent.com/assets/1794099/15772900/33712628-2974-11e6-8034-91abb8a56197.png">
---
Título: Error list: filter needs more UX love
Descripcion: Open the error list filter and notice: - input box has a black outline - seems out of style compared to our other input boxes - input box pushes the tree lower - leaving the space above the tree empty. I find this strange and not elegant - 'Type to Filter' seems like a strange message, in the find widget we just say 'Find' not 'Type to Find'  ![screen shot 2016-06-02 at 15 06 54](https://cloud.githubusercontent.com/assets/1926584/15745733/b311a8fe-28d3-11e6-9683-3c70fa38ec8f.png)  ping @stevencl @bgashler1
---
Título: Use OS X system font (San Francisco) on El Capitan
Descripcion: - VSCode Version: 1.1 stable - OS Version: OS X 10.11.4  `SFUIText-Light` does not work on latest OS X. Consider using `.SFNSDisplay-Light` instead.  Also, take a look at #7122 first.
---
Título: Keep editor actions and stack related actions separate
Descripcion: After talking to @alexandrudima we think we cannot mix editor targeting actions and stack related actions (e.g. overflow dropdown) at the same location because they target different things.  If you look at typical editors that show tabs, all actions that target the editor are in the context menu of the tab. And all actions that target the entire stack are outside of the tabs to the far right. We should look at a similar model to be consistent and move the overflow action outside of the editor actions and outside of any tab.  However, putting all editor actions into the context menu is also odd because some are very useful. Interestingly Eclipse is one example where they decided to just draw a toolbar within the editor:  ![image](https://cloud.githubusercontent.com/assets/900690/15675947/98112100-2744-11e6-8686-180c8d7fac99.png)  This takes away a lot of space, so we thought about something different: - tabs enabled: move editor actions to the right of the tab. show them only on mouse over and take away space from the label. this ensures we are not growing the tabs too much. we can still have a "..." in there to bring up the context menu - tabs disabled: in this case we only have 1 tab that just spans the entire title area so the model would work here as well. one difference could be that we show the actions always and not just on hover. still, with nice separation the user would understand that some actions only target the editor and the other (e.g. overflow) targets the stack  //cc @alexandrudima
---
Título: Overflow action is not a good indicator for a stack
Descripcion: After talking to @alexandrudima we came to the conclusion that the single overflow dropdown action is a weak indicator for the stacks model. It blends too easily into the other editor actions and so you think it actually is an action that does something on the opened editor.   We had some ideas to improve this: - put this control into a designated area (different background color) to make clear it operates on the entire stack - draw stronger affordance that you have multiple documents stacked on top of each other  For example in the image below we are representing a stack but we are not doing this with tabs but with a different piece of UI. Maybe we can do the same when you have tabs disabled and integrate the overflow affordance into there as well?  ![image](https://cloud.githubusercontent.com/assets/900690/15675811/f343fc92-2743-11e6-99b7-073fa1940a1a.png)  //cc @alexandrudima
---
Título: Windows: the X to close an editor should be on the right
Descripcion: It is natural on Windows to have the X affordance to the right of the document and not to the left. This applies for both tabs enabled or disabled.  However, we should not just put the X to the right of the file label if you have tabs disabled because that means having an unstable location of the close button depending on the size of the file path. Instead, we should move this action to the far right, but clearly inside the tab and not outside. See https://github.com/Microsoft/vscode/issues/7060 for a related issue.  /cc @alexandrudima
---
Título: Talking about Group Left is confusing if there is only one group
Descripcion: - VSCode Version: alpha  See screen shot. If there is only one group we should either use middle (or main) or even better not mention group as well.  ![capture](https://cloud.githubusercontent.com/assets/1931590/15667448/8df98898-2716-11e6-92cd-3e480122a1b7.png)
---
Título: Drop Open Editors group rows
Descripcion: How about dropping the group rows from the Open Editors?  ![image](https://cloud.githubusercontent.com/assets/22350/15667233/7bd24f34-2715-11e6-9a29-60e218263ea2.png)  To represent the groups, we can draw a horizontal line between editors. As for the group's contextual actions, just place them to the right of the first open editor of that group.
---
Título: Revisit explorer reopening last used file when getting active
Descripcion: Steps to Reproduce: 1. open some non explorer viewlet - e.g debug 2. have only one editor open - preview of a markdown file  3. open explorer viewlet 4. the markdown preview gets closed and the markdown source is shown  I would expect that swtiching viewlets keeps my markdown preview open. I guess the problem is that on explorer reveal you want to open the selected file but in this case you fail to recognize that the preview of that file is already open
---
Título: Regex Find is case-insensitive - Why?
Descripcion: - VSCode Version: 1.1.1 - OS Version: Os X 10.11.4  Steps to Reproduce: 1. Open a new document 2. Add the following text (country codes and the countries associated)  AFN Afghanistan Afghani ALL Albania Lek AMD Armenia Dram ANG Netherlands Antilles Guilder 1. Press Ctrl+F (find) 2. Using regex mode, add the following regex:     [A-Z]{3} 3. Note that more than just the country codes are selected - entire words are selected.  This renders Regex almost un-usable.
---
Título: Add Change Language option under file preferences menu
Descripcion: - VSCode Version: 1.1.0-alpha - OS Version: Windows 10  I think it would make sense to add the language option under the File > Preferences list.
---
Título: allow for cascading peek
Descripcion: - open a peek editor for reference search or previewing definitions - inside that editor you cannot peek anymore - we should have a way to invoke reference search/peek def in nested editors but without nesting peek inside peek
---
Título: Revisit that preview editors show up under "Opened Editors"
Descripcion: Some issues: - for one it makes it very hard to double click on a file in the explorer to pin it because the first mouse down adds it already and pushes down the view - then people are confused that the preview editor is open in one position but when you open another editor the preview editor might move up because that other editor was elsewhere - Joao also does not like the italic decoration when you have tabs disabled - so one proposal would be: only show italics when tabs are enabled and only show it in the tab itself   (of course we would have to revisit where else we show the italic, e.g. Ctrl+Tab, Cmd+Alt+Tab)
---
Título: little drop when transitioning from preview to pinned
Descripcion: #6536 - open a file in preview - when pinning it, it's representation in the Open Editors view drops by a pixel or so  ![may-24-2016 14-57-54](https://cloud.githubusercontent.com/assets/1794099/15504591/fb6aec52-21bf-11e6-9082-eda9fac1959e.gif)
---
Título: Allow to configure where editors open
Descripcion: #6536 - see attach gif - from a folder I have two files pinned - from the folder I know preview each file and I don't understand why determines their sort order  ![may-24-2016 14-45-43](https://cloud.githubusercontent.com/assets/1794099/15504268/76d33b1c-21be-11e6-8050-91a3acbaa124.gif)
---
Título: double vs single down arrow is bad alternative to enablement
Descripcion: #6536  The editor groups show a double down arrow to toggle between different editors of the group. When there is only a single editor in the group, the group shows a single arrow. Instead of changing the icon it should use enablement to show if there is more than one editor in a group.
---
Título: integrated terminal: customizing colors through user settings is a bit weird
Descripcion: Testing #6654   Our story so far when it comes to customizing colors is through themes (fyi @aeschli ). Exposing color values in the user settings makes our story inconsistent. e.g. it would be nice to share a theme as an extension that also customizes the integrated terminal, I think the theme format is open-ended to support any amount of additional keys? This also opens the door for requests such as: "I want to change the color of keywords from my settings", which is a path we don't really want to go to  It is also needed that each color would have a light and a dark variant in the settings. if I tweak the values in the light theme, they might not look good when I switch to a dark theme, etc.
---
Título: Align Open Editor and double arrow down
Descripcion: #6536  I understand the double arrow down action as an alternative UI to the open editor model. I would - use the prefixes `left`, `right`, and `center` instead of the `~>` sequence - use the same sort order - have the same actions (close)  <img width="722" alt="screen shot 2016-05-24 at 11 50 55" src="https://cloud.githubusercontent.com/assets/1794099/15499719/edf01e40-21a5-11e6-9b23-73e80cbbe7fd.png">
---
Título: editor preview tabs looks stronger then active editor tabs
Descripcion: #6536  See attached screen shot. The preview tab (italics & bold(?)) looks a lot more prominent then the tab of an active editor. That conflicts with my mental model of a preview  <img width="450" alt="screen shot 2016-05-24 at 11 45 05" src="https://cloud.githubusercontent.com/assets/1794099/15499547/1280c72e-21a5-11e6-98ae-171c4d5a3522.png">
---
Título: arrow down and dots icon look similar
Descripcion: #6536  <img width="184" alt="screen shot 2016-05-24 at 11 41 29" src="https://cloud.githubusercontent.com/assets/1794099/15499434/83fb8bf6-21a4-11e6-8e63-d9e677eadcaa.png">  The arrow down icon we now show in the editor header looks like a context menu icon (what the `...`-icon does). I think we need a better icon for that
---
Título: The integrated terminal appears to be bottom-aligned, which makes it wobbly
Descripcion: Testing #6654  - resize the terminal panel - observe how the text "jumps" up or down when enough space is created for a new line  ![terminal-wobbly](https://cloud.githubusercontent.com/assets/5047891/15497713/4fa566fe-219c-11e6-87fe-77dfce1dc3e0.gif)
---
Título: Implement an overflow design for status bar entries
Descripcion: Hello,  For now, when you add a lot of items to the statusbar via plugins, only first few items are displayed and the remaining items are hidden.  It would be great to have a dropdownlist which will show all those remaining items.  I hope such a feature could enhance vscode.  Thanks in advance for your comments.
---
Título: Simplify context menu actions on editor/group actions
Descripcion: Related #6536 - VSCode Version: commit 5376d6daa0f74e65fbe425393b8533094e69d9b0 - OS Version: Mac OS X  Steps to Reproduce: 1. Open multiple editor groups 2. Click on the command overflow (ellipses) button  ---  I found it a little too easy to accidentally close all the editors in the entire window.  <img width="693" alt="screen shot 2016-05-20 at 3 47 17 pm" src="https://cloud.githubusercontent.com/assets/11839736/15444152/a6b918b6-1ea2-11e6-829b-97410f1b9cc5.png">  This could be detrimental to a user's layout.  Therefore, I think we should prompt confirmation before closing all editors (as it is sort of a destructive change). No need to prompt for closing all editors in group, though, as that is less destructive.  @stevencl do you agree?  **Just my opinion:** Also, what I was expecting to be at the bottom of this list was "Close All Editors in Group,"  as that's a command I would use frequently (and the bottom of a context menu is so easy to hit without thinking).
---
Título: Should escape be consumed by the integrated terminal?
Descripcion: Integrated terminal master issue: #143  Open question: Currently pressing <kbd>esc</kbd> will hide the terminal, this can be a problem for some terminal programs, for example `vim`. Perhaps this should be configurable?
---
Título: Find and Replace unnecessarily uses different colors than Search for Current Match
Descripcion: While this could be considered a feature, the main time it would be useful is in searching minified files which is a pretty uncommon use case. I find it to be an annoyance when moving through the search terms to land on the same line multiple times.  Steps to Reproduce: 1. Create file with "foo" in a line multiple times 2. Find in files "foo" 3. Observe it's shown multiple times  ![image](https://cloud.githubusercontent.com/assets/2193314/15302066/d8dbe3ae-1b65-11e6-95c3-f5aeaa275dda.png)  ![image](https://cloud.githubusercontent.com/assets/2193314/15302073/e43ae6dc-1b65-11e6-9d17-2f6dc596cbdf.png)
---
Título: File Nesting
Descripcion: Is there any possible chance we might see File Nesting in Visual Studio Code the same way it works in Visual Studio 2015? It was really convenient and helpful. I would adore such a feature!
---
Título: multiple references, same line
Descripcion: ![2016-05-10 1](https://cloud.githubusercontent.com/assets/962340/15151508/62bc19ac-169f-11e6-80c5-b4e704da5161.png)  when multiple references on same line... idk looks kinda cluttered and does not line up... i appreciate that it even works at all and remember when it did not. but if if showed only the number when multiple they would at least line up but that would look bad and be hard to click not an issue, a design decision with no better alternative? (maybe outline color of variable based on how many references it has: 0 no outline, 255+ ref brightest outline, click on variable itself for list) idk thanks
---
Título: High contrast theme adjusts spacing on call stack file names
Descripcion: - VSCode Version: 1.1.0-alpha - OS Version: Windows 10  Steps to Reproduce: 1. Change theme to High Contrast 2. Debug 3. Hover over call stack items  ![highcontrastcallstack](https://cloud.githubusercontent.com/assets/12900364/15131117/165ac2c2-1602-11e6-9089-0fb4b04bf161.gif)
---
Título: Different color scheme for references modal
Descripcion: - VSCode Version: Version 1.0.0 (1.0.0) - OS Version: Mac OSX EL Capitan  When clicking on references the modal has a different theme from the one which  I selected in VS code.  Steps to Reproduce: 1. Change the theme to something other than the default. 2. Click on References and the modal has a different color scheme.
---
Título: Peek Definition to Find all References closes peek window
Descripcion: - VSCode Version: 1.1.0-alpha - OS Version: Windows 10  Steps to Reproduce: 1. Right click a variable > Peek Definition 2. Right click the same variable > Find all References  This closes the peek window and does not open the Find all References window. The reverse (Find all references to Peek Definition) also closes the window.
---
Título: default light theme - UI text hard to read
Descripcion: - VSCode Version: 1.0 - OS Version: Win7  Steps to Reproduce: select File>Preferences>Color Theme: Light (Visual Studio) or Light + (default light)  Look at the colors in the file explorer in the left panel - not the editor panel. The text is light grey on slightly lighter grey background. This is very hard to read. - how to change that? - where is the theme file located? - what to change in this file to set text color to BLACK?  Please help people with weak eyesight.
---
Título: Add a menu for extension commands
Descripcion: https://github.com/Microsoft/vscode/pull/6000 introduces a new top level menu for extension commands. We should discuss if such a menu is desired or not.  ![1](https://cloud.githubusercontent.com/assets/7069719/14929697/5e4848f2-0e91-11e6-8641-f683860decda.png)  @Microsoft/vscode for input
---
Título: Horizontal and vertical split
Descripcion: We need to design an experience that allows layouts to be split horizontally and vertically  Related to #224
---
Título: Manage empty layouts
Descripcion: We need to design an experience for managing empty layouts  Related to #224
---
Título: Manage more than three layout panels
Descripcion: We need to design an experience for creating and managing more than three layout panels.  Related to #224
---
Título: Can't install extensions on Ubuntu LTS 14.04
Descripcion: - VSCode Version:1.0.0 - OS Version: Ubuntu 14.04 (via deb-package) on a virtualbox (via vagrant if that matters)  Steps to Reproduce: 1. Open fresh installed VSCode within Ubuntu 14.04/virtualbox/vagrant 2. ext install tslint (or any other, as it doesn't matter) 3. Press the download button 4. Nothing happens (No popup, no install, no extension-dir in my home-folder, no errormessage)  No problem on the same setup with VSCode 0.10.xx (which was not really installed via deb, but only by extracted zip-File of VSCode, I think deb wasn't available at this time). Where may I take a look at, is there a log-File or something more verbose?  Thanks!
---
Título: Highlight changed stack frames
Descripcion: When hitting various breakpoints in a complicated program, it might be helpful for the stack frame area of the debug viewlet to highlight / animate in a tasteful fashion the stack frame delta.  e.g.   Before stack fileA:35 fileB:40 fileC:50  -> steps into or continues  After stack fileA:29 fileA:35 fileB:40 fileC:50  Would be nice if fileA:29 would be briefly and tastefully highlighted.
---
Título: Debug changed variables highlight does not fade away
Descripcion: - VSCode Version: 1.1.0 - OS Version: Windows 10  Observe how `al` is highlighted, but the highlight does not fade away after a while.  ![debug-highlight-no-fade](https://cloud.githubusercontent.com/assets/5047891/14824645/f3baa29e-0bd6-11e6-9762-9b05b3283d1b.gif)
---
Título: Debug: Show debug state in activity bar?
Descripcion: We are not that aggressive anymore in opening the debug viewlet when you hit a breakpoint. Why not show the debug states as decoration on the debug viewlet itself? I could imagine a yellow pause icon when you are on a breakpoint and the green play icon when you are actually running or debugging a program.  @stevencl @chrisdias @bgashler1 thoughts?
---
Título: debug - show if a thread is running or not
Descripcion: The ui for running/paused threads is confusing because the running thread seems to be represented as tree nodes that can be expanded into nothing. I would have expected an indication if the thread is paused or not.  ![screen shot 2016-04-26 at 13 15 15](https://cloud.githubusercontent.com/assets/1794099/14817969/b62a2cd6-0bba-11e6-9630-b9a0f03186f5.png)  ![screen shot 2016-04-26 at 13 15 24](https://cloud.githubusercontent.com/assets/1794099/14817973/bb43c5ce-0bba-11e6-9f4d-27393df5c32e.png)
---
Título: ux - merge debug output into output
Descripcion: we have _Debug Output_ and _Output_. The latter isn't output but a container for output channels like _Task_, _Git_, etc. It's actually configurable. So, my question is why doesn't debug fit into this and needs it own container? On the downside there is clear more view management with todays implementation as it makes me switch between debug output and output>something.
---
Título: Replicate code changes indicators from VS 2015
Descripcion: Please (partly) replicate VS 2015 code changes indicators. Those indicators are good way to track changes made by 'Replace All', helps to validate recent changes and locate to changes in the file.  ![change_indicators](https://cloud.githubusercontent.com/assets/351671/14761315/9777af54-0965-11e6-8d99-8c056b341b51.png)  In my opinion VS 2015 version is a little bit over engineered.  Different colors add little value, difficult to decode and in some cases duplicates other indicators (changed file indicator next to file name)  **VS Code might have single indicator, namely "line changed since file was opened".**
---
Título: Make pinning of editors configurable
Descripcion: There is a desire to configure preview editors via settings: - allow to always pin an editor when it opens - allow to always pin a file when it opens from quick open  **Original Post**: I would expect Ctrl+P opening a new editor (which it does) and then adding that file to working files (which it doesn't). Instead the file is just revealed in the tree view and I have to double click on it to add it.  Surely Ctrl+P should be viewed as a "I mean to edit" action and not "Just a quick glance"? Does anybody else share my view?
---
Título: debug - merge Watch and Variables section
Descripcion: When debugging I feel often distracted by the _Watch_ section and I would propose to merge its information with the _Variables_ section. It should be shown as a subgroup similar to scope variables.   For me, and I believe I am not alone with that, the Variables and the Callstack sections are the most important. Now, my problem is that I actually use the Watch-section and therefore cannot just collapse it. That brings me the problem of managing it's size which effectively means I usually waste a lot of space at the bottom of the Variables and Watches section. I think the experience would be much better if it becomes an auto-sized node the Variables section.  ![screen shot 2016-04-20 at 15 44 31](https://cloud.githubusercontent.com/assets/1794099/14676745/1f3d843a-070f-11e6-9f98-1d496e75395f.png)
---
Título: Search bar hide match word at first line
Descripcion: - VSCode Version: 1.0.0 - OS Version: OS X 10.11.4  Steps to Reproduce: 1.  Long text at one line 2.  Ctrl + F (Command + F) search the keyword    <img width="1165" alt="2016-04-20 10 56 40" src="https://cloud.githubusercontent.com/assets/3156921/14662294/640976be-06e7-11e6-953f-355c7ac9abf1.png">    <img width="1168" alt="2016-04-20 10 56 12" src="https://cloud.githubusercontent.com/assets/3156921/14662295/64755424-06e7-11e6-83b6-e1a8643aa3dd.png">
---
Título: Message service should show a little more
Descripcion: When you use `vscode.window.showErrorMessage` (_Information_ and _Warning_ too), the message that is displayed is _limited_ to one line with a certain length.   It would be good to have a way to _expand_ the message (maybe like the _Read more_ available in Intellisense), showing the entire content.  Thanks in advance
---
Título: Rename box does not respect editor font
Descripcion: Try to rename any variable in TS, notice that the rename box is not respecting the font in the editor. This is like this since forever but not sure if there is an issue already for this  ![screen shot 2016-04-13 at 16 55 25](https://cloud.githubusercontent.com/assets/1926584/14497868/9e148942-0198-11e6-9f05-6b9f918dd34a.png)
---
Título: Search results not in monospace font
Descripcion: The preview of lines in the search results aren't using a monospace font. Syntax highlighting would also be great.  This is what it currently looks like:  ![unbenannt](https://cloud.githubusercontent.com/assets/80071/14462189/39848c98-00c6-11e6-9325-9e700110b4a3.png)  This is a quick mock-up I've made:  ![unbenannt](https://cloud.githubusercontent.com/assets/80071/14462521/c92c54e2-00c7-11e6-9e51-e8d7f17c3ff3.png)
---
Título: Output and debug windows are hidding when user try to adjust window height.
Descripcion: - VSCode Version: 1.0.0-alpha - OS Version: windows10  Steps to Reproduce: 1. Launch app and perform build or debug operation to get output or debug window. 2. Try to adjust height of the window and verify application behavior. 3. Compare the same behavior in visual studio.  Actual: Output/debug window is completely hidden. Expected: Window title should be visible when user try to adjust minimum height. ![outputwindowpositionissue](https://cloud.githubusercontent.com/assets/17735796/14453818/f09c637c-004b-11e6-817e-a60397248512.gif)  Visual Studio:  ![outputwindowposition](https://cloud.githubusercontent.com/assets/17735796/14453942/9c80c0ac-004c-11e6-9ff3-a604c00302f3.png)
---
Título: Peek Window Refinements
Descripcion: Based upon the feedback and development of the File Peek extension (https://marketplace.visualstudio.com/items?itemName=abierbaum.vscode-file-peek) I have a few ideas for refinements for the Peek View.  See also: #3178 for the original discussion. - Allow disabling "escape" in peek window.  When showing a file in the "peek" view, if the user presses escape in either view, the peek window goes away. This isn't great with this use case because someone may naturally press escape to clear the selection in one of the windows - Allow user to manually adjust the size of the peek window by dragging a splitter at the bottom of the peek window. - Allow disabling the double click behavior inside the click window. (if you double click it opens the peeked file in the editor, replacing the current file) This doesn't work very well if the user just wants to double click to highlight a word inside the peek editor  I know what I am asking about is a bit different than what the peek view was probably intended to support. I am effectively using it as a "picture-in-picture" type view to open a sub-editor inside another editor so the developer can see and edit multiple related files in context. I haven't see any editor implement this before but it seems like a pretty interesting way to allow code editing.
---
Título: Ruler's border is not consistent
Descripcion: - VSCode Version: 0.10.11 (0.10.11) [f291f4ad600767626b24a4b15816b04bee9a3049] - OS Version: El Capitan 10.11.3 (15D21)  Steps to Reproduce: 1. Open a new window 2. Add a lot of lines (to show the ruler) 3. Change `editor.hideCursorInOverviewRuler` to `true`  When `editor.hideCursorInOverviewRuler` is `false` ![screen shot 2559-04-08 at 23 52 48](https://cloud.githubusercontent.com/assets/1087399/14391396/f25db034-fde5-11e5-8878-43acffcdcffd.png)  When `editor.hideCursorInOverviewRuler` is `true` ![screen shot 2559-04-08 at 23 52 25](https://cloud.githubusercontent.com/assets/1087399/14391399/f2d9d010-fde5-11e5-8124-770a015fead6.png)  I am not sure if this is what VS Code intent to be or not. However, I personally like the ruler without border (as OS X's default scrollbars are) but if there is an option to change this would be perfect.
---
Título: Extension management in editor part
Descripcion: Alternative to #5489  To experiment with this:  ``` git checkout -b extension-management master git pull --no-rebase https://github.com/joaomoreno/vscode.git extension-management ```
---
Título: Animate sidebar toggling
Descripcion: Sublime Text has a fast and smooth transition on sidebar toggling. I noticed that some of the VSCode elements also have a similar transition, like the “find widget” (opened on <kbd>Ctrl</kbd>+<kbd>F</kbd>).  Should the sidebar have this transition on VSCode?
---
Título: Consider to not close files when receiving delete events
Descripcion: - VSCode Version: 0.10.11 - OS Version: Windows 7 Pro  What I Would Expect:  I would love it  if my files did not close, or if I got a warning that something bad happened before my files close.  Steps to Reproduce:  Preface: It happens in all sorts of circumstances, but this is the fastest way I have seen to reproduce it. It does involve installing a plugin, but this happens to me (and other members of my team) when we do not have any plugins running. It just happens less often, and we do not yet have an easy way to reproduce it beyond these steps. 1. Install the tslint plugin 2. Set `"tslint.configFile"` at the project level to reference a `tslint.json` within the project (mine is at the root of the project) 3. Open split view, one side being `tslint.json`, the other being some TypeScript in the same project. 4. Try changing and saving the rules, and going back to the code to see the linting rules affect the code.Do this multiple times, I move rather quickly between panes and edits. 5. Eventually, both sides of the split pane will close. Its worth noting that despite working with both files, `tslint.json` does not show up in the "Working Files" list, but the code file does.  There was a bug, #4542, where this was reported via files mounted over GVFS, but since it seems to be happening on Windows with local git repos, it may be more a more general issue, Here are some timestamped logs from when it happened last, Paths/Filenames are anonymized:  ``` csharpWatcherService.ts:76 [File Watcher] [CHANGED] c:\Users\Some.User\src\some-project\tslint.json 2016-04-01 08:59:52.043 csharpWatcherService.ts:76 [File Watcher] [CHANGED] c:\Users\Some.User\src\some-project\tslint.json 2016-04-01 08:59:52.162 csharpWatcherService.ts:76 [File Watcher]  >> normalized [CHANGED] c:\Users\Some.User\src\some-project\tslint.json 2016-04-01 08:59:52.759 csharpWatcherService.ts:76 [File Watcher] [ADDED] c:\Users\Some.User\src\some-project\.git\index.lock 2016-04-01 08:59:52.763 csharpWatcherService.ts:76 [File Watcher] [DELETED] c:\Users\Some.User\src\some-project\.git\index.lock 2016-04-01 09:00:01.944 csharpWatcherService.ts:76 [File Watcher] [CHANGED] c:\Users\Some.User\src\some-project\tslint.json 2016-04-01 09:00:01.947 csharpWatcherService.ts:76 [File Watcher] [CHANGED] c:\Users\Some.User\src\some-project\tslint.json 2016-04-01 09:00:02.068 csharpWatcherService.ts:76 [File Watcher]  >> normalized [CHANGED] c:\Users\Some.User\src\some-project\tslint.json 2016-04-01 09:00:02.757 csharpWatcherService.ts:76 [File Watcher] [ADDED] c:\Users\Some.User\src\some-project\.git\index.lock 2016-04-01 09:00:02.760 csharpWatcherService.ts:76 [File Watcher] [CHANGED] c:\Users\Some.User\src\some-project\.git\index.lock 2016-04-01 09:00:02.761 csharpWatcherService.ts:76 [File Watcher] [ADDED] c:\Users\Some.User\src\some-project\.git\index 2016-04-01 09:00:02.761 csharpWatcherService.ts:76 [File Watcher] [DELETED] c:\Users\Some.User\src\some-project\ 2016-04-01 09:00:02.879 csharpWatcherService.ts:76 [File Watcher]  >> normalized [DELETED] c:\Users\Some.User\src\some-project\ 2016-04-01 09:00:02.879 csharpWatcherService.ts:76 [File Watcher]  >> normalized [ADDED] c:\Users\Some.User\src\some-project\.git\index.lock 2016-04-01 09:00:02.879 csharpWatcherService.ts:76 [File Watcher]  >> normalized [ADDED] c:\Users\Some.User\src\some-project\.git\index ```
---
Título: Provide file icons per file type
Descripcion: - VSCode Version: Feb. stable build (0.10.11) - OS Version: Win 10 Pro  Steps to Reproduce: 1.  Install VSCode. 2.  See any code file in Explorer, icons are changed to vscode style, and cannot tell out C#/C++/H/etc...  Please add an option to choose whether to use VSCode file icon or not.  PS: This problem doesn't appears in insider build 0.10.13.
---
Título: Tab moves focus needs ux love
Descripcion: Steps to Reproduce: 1. command palette > Toggle use of tab key for setting focus 2. notice red notification in the status bar - I believe we can find a better color for this  Though there should be some contrast since this is an important scenario for accessibility  ![screen shot 2016-03-29 at 15 39 27](https://cloud.githubusercontent.com/assets/1926584/14109918/a2f53310-f5c4-11e5-94d7-b9ce9ddb4674.png)
---
Título: Suggest: Improve error message when debug a ts file
Descripcion: - VSCode Version: 0.10.11 - OS Version: OS X 10.10.5  Steps to Reproduce: 1. Create a ts file named `index.ts` 2. Press debug button, the error message is:   ``` Cannot launch program '/Users/abc/index.ts', enabling source maps might help. ``` 1. In `launch.json`, I enable `sourceMaps`, Press debug button, the error message is:  ``` Cannot launch program '/Users/abc/index.ts', setting the 'outDir' attribute might help. ```  So I tried to change `outDir`, But later on, I find that, it's not a problem of 'outDir', it's a problem of no source map generated, I forgot `--sourceMap` when `tsc`.  So I suggest the first error message like:  ``` Cannot launch program '/Users/abc/index.ts', enabling source maps might help, and make sure the source map '/Users/abc/index.js.map' is already generated. ```
---
Título: editor.action.selectAll ctrl+a keybinding should only apply "when": "editorTextFocus"
Descripcion: - VSCode Version: 0.10.11 - OS Version: Linux Mint 17  Steps to Reproduce: 1. Open a node project vscode. (Note: project file includes app.js) 2. Click on app.js. --> File is open in editor. 3. Use Ctrl + A to select all text. --> Text in app.js highlighted. 4. Press Delete.   Expect: All text in file to be deleted. Actual: Are you sure you want to delete `app.js`?  Seems like a UX issue with context. It appears in step 3, the editor has the context, while in step 4, the explorer has context.   In order to actually delete all of the text, I have to click in the editor window, select all text and press Delete.
---
Título: Not getting any option on UI to terminate running task ("Run task" for Grunt.)
Descripcion: - VSCode Version:0.10.12-alpha - OS Version:windows10  Steps to Reproduce: 1. launch app and open any folder which has a project with gruntfile.js. 2. Press F1 and enter >task run and select option for run task like below and choose "serve" task from the list. ![image](https://cloud.githubusercontent.com/assets/17735796/14033531/488c19e2-f1d8-11e5-99f6-bcada8bc3ef3.png) 1. Verify VScode output window and it should launch a browser for with proper URL. 2. Verify in the status bar you a stick rotating icon should be displayed till task is running. 3. Try to terminate running task.  Actual:  1. When user clicks on icon from status bar which is indicating running task, we are expecting some kind of notification or pop-up to take further action on running task. 2. I didn't find any option to terminate current running task from UI, except when I fire other command or type "terminate running task" from command palette.  Expected: There should be some UI control to terminate current running task. or when user click on icon showing running task  status should display pop-up like below: ![image](https://cloud.githubusercontent.com/assets/17735796/14033569/a618ceb6-f1d8-11e5-9262-0f3aaa6cc541.png)
---
Título: Installing extensions does not report progress
Descripcion: - VSCode Version: 0.10.11 - OS Version: Windows 8.1  Steps to Reproduce: 1. Install a big extension that is likely to take some time 2. Navigate away from VS Code and come back 3. No progress bar/indication if the extension is installing #3341 deals with something similar to this but only a message was added as part of 83f1fe7f20b7c099246a8a8d62fd829bbf6d4840
---
Título: Multiple messages with different action buttons look bad
Descripcion: E.g. install an extension and open readme and then return:  ![image](https://cloud.githubusercontent.com/assets/900690/13930168/0a8e7b58-ef9e-11e5-94ed-5ea5f86f9b74.png)
---
Título: #2500 and #2352 add focus indication to text editors / panels.
Descripcion: I added a `z-index` to this, otherwise the right part of the focus outline would not appear (it get's covered by some other elements).  I tested it, and it looks fine, but I wanted someone else to review just in case unexpected side-effects occur.
---
Título: Add just-in-time tips to discover keyboard shortcuts and other techniques in context
Descripcion: VS Code has several keybindings to speed up or enhance workflow that users are unaware of.  Since it's not practical to memorize all keybindings upfront.  I believe users will benefit from just-in-time suggestions based off what they're doing in context.  (e.g. if a user is inserting the same characters repeatedly on multiple lines, we could suggest the keybinding to create multi-cursors.)  This could help users learn relevant keybindings while they work.  Perhaps this could be in the status bar or in a toast-like notification.  The key is to make it non-obtrusive and immediately relevant and thoughtful to the user's present needs.  There should be a global setting to disable it, if users don't want it.  We should also be very careful to avoid spammy suggestions that are repetitive or irrelevant.  @waderyan also had a similar idea before this about introducing tips into the product.  I propose we extend his idea to be in context.
---
Título: Different cursor when moving over line numbers
Descripcion: - VSCode Version: - OS Version: El Capitan  Steps to Reproduce: 1. In vscode I never get the white mouse pointer - always the black one 2. Move over line numbers - notice that the mouse pointer is white only here. This feels a bit out of style, I would prefer it was the black pointer also here. Sorry for no screenshots - not sure how to capture the mouse on the mac
---
Título: Green light bulb feels out of style
Descripcion: Why is the light bulb green and not white like most things in the status bar? Looks out of style IMHO  ping @bgashler1   ![screen shot 2016-03-16 at 12 47 01](https://cloud.githubusercontent.com/assets/1926584/13811299/34c835ee-eb75-11e5-959a-40b695864c9a.png)  ![screen shot 2016-03-16 at 12 47 20](https://cloud.githubusercontent.com/assets/1926584/13811311/40c19e08-eb75-11e5-952c-30b50f6794b1.png)
---
Título: Provide way to copy intellisense description to clipboard
Descripcion: now i still can't copy description from completion list UI after i installed the latest vscode,anyone know when this feature will be released ? ![copydescription](https://cloud.githubusercontent.com/assets/15098626/13801202/add5b336-eb6a-11e5-9ae1-c2e4fc19721e.png) #1945
---
Título: Extension icon needs more UI love <3
Descripcion: Related to #4024  The Extension icon that we currently use in the status bar needs more UI love. IMHO 'extension' is not the first word on top of the user's head when he sees that icon.  We will also make this icon even more prominant in the future since it we will probably add an extension viewlet and then it will be in the activity bar. So creating this item now to start the thought process if we decide to change it.  ping @joaomoreno   ![screen shot 2016-03-14 at 15 02 00](https://cloud.githubusercontent.com/assets/1926584/13746864/bc38af9e-e9f5-11e5-8da2-107c77ee82e4.png)
---
Título: Improve diff editor title when comparing files
Descripcion: Related to #3954  Maybe we could use the subtitle part to show the folders, like:  **tK4ZY9_monkey.txt ↔ monkey.txt** - /private/var/folders/lr/b36df5dx0y7cy_mywg5r623800000gn/T, /Users/joao/Work/fakeproject  ![image](https://cloud.githubusercontent.com/assets/22350/13746374/740772e8-e9f3-11e5-8e16-6b6143bbb085.png)
---
Título: Request: Linter messages are shown without mouse hover
Descripcion: When the linter found something in code, a red-wave-line is shown at that part of the code. I can read the message from the linter by moving a mouse cursor to there, or pressing Ctrl+Shift+M. But, I hope the message that can be read without moving mouse or command. For example, the message about a current line is shown in a status bar.
---
Título: Separate section for "errors and warning" output
Descripcion: See screenshots below, I use VCS for Golang development and after saving a file, the output goes into the "Errors and Warnings" section. However this is ONLY visible in the status bar on the bottom of the editor. I would like the output to be visible in a separate section of the screen. Is this possible now? Or is there some kind of extension which does this?  I know I can use `COMMAND + SHIFT + M` to open it, but I would like to have it visible directly after saving my file.  [edit] Kind of related: https://github.com/Microsoft/vscode/issues/1135  ![screen shot 2016-03-12 at 19 02 45](https://cloud.githubusercontent.com/assets/3907131/13724459/c24dcbbe-e886-11e5-8641-96cb73e91b8f.png)  ![screen shot 2016-03-12 at 19 02 59](https://cloud.githubusercontent.com/assets/3907131/13724457/a611e106-e886-11e5-9195-95be0d1fded9.png)
---
Título: workbench.files.action.closeFile closes all split editors, not just the active file
Descripcion: This is likely happening due to the recent change that makes closeFile close editors so it can close things like the default keybindings. When the command is run on a split editor it should only close the active editor.  cc @bpasero
---
Título: Configure Excludes minor UI polish
Descripcion: Regarding the configure excludes demoed today at standup. Here are some ux polish suggestions: - Do not make the text or the light bulb green, regular white should do just fine. Why should this be green as compared to the rest of the status bar - in what way is it special. We also do not have a concept of introducing new colors in the status bar. - 'Configure Excludes' should have the first case capital both in the status bar and in the action in the message service
---
Título: Collapse all and close all icons too similar
Descripcion: Currently the 'collapse' and 'close all files' icons are very similar. It would be cool if they were more easily distinguishable, especially since they appear in nearby locations.  fyi @bpasero  <img width="339" alt="screen shot 2016-03-10 at 16 35 35" src="https://cloud.githubusercontent.com/assets/1926584/13674538/2ab9303a-e6de-11e5-8705-902f388f7e1b.png"> <img width="333" alt="screen shot 2016-03-10 at 16 35 43" src="https://cloud.githubusercontent.com/assets/1926584/13674539/2ab9a6b4-e6de-11e5-8d1c-330312b422f1.png">
---
Título: Distinguish code area from glyph area
Descripcion: This is small issue for me.  Code folding is very great useful. But it made margin between line numbers and first character in each line. When I use "2 spaces indent", that margin looks like indent. Now, I use `editor.rulers` setting includes `0` like `[0, 100, 120]` to indicate a start point of a line. But it is not pretty.  Is this issue solved by any theme? I think that it is solved by just a little changing a color of the left side area of first character in each line.
---
Título: Add setting to automatically hide the side bar
Descripcion: Would it be possible to add a option to automatically hide the files explorer after a configurable duration ?
---
Título: High contrast theme - scrollbar thumb size is innacurate
Descripcion: It allows you to pull the scroll thumb further down than the bottom of the scroll track.
---
Título: Configure selector keys for suggest widget
Descripcion: Whenever suggest widget (e.g. a completion list) is summoned (by a configured trigger character, e.g. `.` or `>`), both Tab and Enter are valid for selection by default. More than once I've accidentally accepted the suggestion rather than doing a line break as intended.  https://github.com/mitaki28/vscode-clang/issues/8 is a good example of this where a `completionProvider` is configured and triggered by `>`, causing issues when trying to do a line break: ![](https://cloud.githubusercontent.com/assets/1016104/13473657/4b754dec-e088-11e5-8aa3-35e09aee946a.png)  At first I thought I'd suggest that the default should be only Tab to avoid all of this. But then I came to think that perhaps more ideally this should be configurable by the extension that registers a provider with `triggerCharacters`. What do you think?
---
Título: Focus is inconsistent opacity in High Contrast theme
Descripcion: <img width="426" alt="screen shot 2016-03-02 at 2 22 51 pm" src="https://cloud.githubusercontent.com/assets/11839736/13477654/4d694258-e082-11e5-8f3d-e80abe812fa5.png"> <img width="426" alt="screen shot 2016-03-02 at 2 23 00 pm" src="https://cloud.githubusercontent.com/assets/11839736/13477658/4ed4e868-e082-11e5-95b7-6f13002af6b4.png">
---
Título: Error should have action to edit the launch.json file
Descripcion: ![image](https://cloud.githubusercontent.com/assets/22350/13458813/e1d1e16a-e06f-11e5-9ba0-e1a5f646157a.png)  It's even hard to figure out that this is debug related and/or that the attributes mentioned occur in `launch.json`.  This will hit **every extension developer** when they update, so marking it as important. IMO it should be fixed for the Feb stable release.
---
Título: Allow both console and output to be displayed simultaneously
Descripcion: See https://github.com/Microsoft/vscode/issues/1875#issuecomment-190820436  Whenever the console updates, he loses his output window.
---
Título: Suggestion: Add theme description to Preferences | Color Theme list
Descripcion: When installing a theme you see the description of the theme/extension in the command palette:  ![image](https://cloud.githubusercontent.com/assets/1487073/13422291/203edd90-df94-11e5-84e3-bf258dcfa280.png)  But once installed you no longer see the description when changing themes:   ![image](https://cloud.githubusercontent.com/assets/1487073/13422282/11b89f72-df94-11e5-90c8-1004c23ba877.png)  Suggestion is to also show description.
---
Título: Explore new icons to replace smiley
Descripcion: Porting issue #3440 here.   Looking into options of switching the icon to a less distracting icon based on feedback.
---
Título: I want to be able to just close things consistently without worrying about what type of thing it is
Descripcion: There's this extremely annoying distinction between editor, working files and other views (e.g. settings). With a single, common shortcut key, if I have a thing open, I want to be able to close it and it's gone. If it was in working files, it's gone from there too. It doesn't matter what I had open, I want it gone. Screwing around trying to learn the different ways to close things and having to maintain a mental note of whether I'm closing an editor or a working file is irritating to the point that it's keeping me away from VS Code. The fact is, if I close a working file, getting it back with CTRL+P is so easy and frictionless that I don't even care that I closed it. If I could just have a shortcut key to "just close whatever the hell is currently open and, if applicable, remove it from working files too", that would be fantastic.  For what it's worth, I don't really care about the whole debate around tabs-or-not. Working files is fine for me in this regard. Saving the previous workspace state of a working file, even if it gets closed, is a pretty good idea though.
---
Título: Users do not know how to get the menu bar back
Descripcion: I see too many tweets like this one:  ![image](https://cloud.githubusercontent.com/assets/172399/13289923/07e7da66-db12-11e5-8863-c0eac24da785.png)  We should provide some guidance when the menu bar is hidden on how to get it back, e.g., show a once message.
---
Título: Folding icons don't match the font size
Descripcion: ![image](https://cloud.githubusercontent.com/assets/6461412/13281382/d17eaba4-dae3-11e5-84a7-4d6aeb44f077.png) ![image](https://cloud.githubusercontent.com/assets/6461412/13281410/fbde0cdc-dae3-11e5-9ac1-10f1d1e65941.png)
---
Título: Show unverified function breakpoints in debug viewlet
Descripcion: Testing #2832  I have a breakpoint on `if (_key === key) {` and I've added a function breakpoint for `console.log`. The breakpoint for `if (_key === key) {` is hit, but the console.log near the end is not hit.  I tried clicking `Reapply all breakpoints` which did not help in this case.  ``` javascript function Safe(_key) {     var _locked = true,     var _value = null,      this.unlock = function(key) {         if (_key === key) {             _locked = false,         }         return,     },      this.lock = function() {         _locked = true,     },      Object.defineProperty(this, 'value', {         get: function() {             if (_locked) {                 console.log('thief detected!'),                 process.exit(0),             }             return _value,         },          set: function(value) {             if (_locked) {                 console.log('thief detected!'),                 process.exit(0),             }             _value = value,         }     }), }  var safe = new Safe('mySecretPassword'),  safe.unlock('mySecretPassword'), safe.value = 3, console.log(safe.value), safe.lock(),   ```
---
Título: Make the keyboard focus outline configurable
Descripcion: #3246  I have a lot of difficulty on Dark+ theme finding some of the keyboard focuses. Can a fatter border be used to represent focus so it's more clear?
---
Título: Polish about dialog
Descripcion: The about dialog is exceptionally dull currently:  ![image](https://cloud.githubusercontent.com/assets/2193314/13260059/c4e7de04-da0e-11e5-8702-ebe1bb0f651a.png)  The Brackets about dialog also calls out all OSS contributors which would be great to do.  ![image](https://cloud.githubusercontent.com/assets/2193314/13260164/30058cc2-da0f-11e5-873b-b96979a17c95.png)
---
Título: Allow multiple of the left panels to be displayed at once
Descripcion: I tend to avoid the search and git panes simply due to the fact that it hides my folder explorer and working files. This is loosely related to [no tabs](https://github.com/Microsoft/vscode/issues/224) as my current working files disappear when I go to these panels.  It would be very useful in particular to see my git working tree status alongside working files and folder explorer.
---
Título: Provide GUI for settings
Descripcion: Customizing Code would be far less intimidating to new users if there was a GUI for settings customization.
---
Título: the spinach coloured extension tips hurt my eyes...
Descripcion: ![2016-02-23 12-09-32](https://cloud.githubusercontent.com/assets/1898161/13249767/70e82666-da26-11e5-85ee-7f6acdffe6cb.png)
---
Título: Extension tips green in status bar looks out of style
Descripcion: Why does this action have a background while all the other do not have one? Setting to feb for discussion  ![screen shot 2016-02-23 at 12 05 21](https://cloud.githubusercontent.com/assets/1926584/13249655/c4679c8c-da25-11e5-94f0-be9eb04a5f25.png)
---
Título: Folding icons are too big and the grey frame looks uneven/blurry
Descripcion: On testing #2994  ![2016-02-23 12-01-26](https://cloud.githubusercontent.com/assets/1898161/13249580/668cb700-da25-11e5-8bd2-f3af7097b341.png)  The four lines of the icon frame look uneven/blurry.  Why aren't we using the same triangles as in the navigator? The '+' and '-' icons look a bit out of place.
---
Título: High contrast: Diff view needs high contrast love
Descripcion: #3248 - High contrast theme, make some changes open diff view in Git - I think we should use more colors here to make it clearer to the user what lines were deleted / added   ![screen shot 2016-02-23 at 11 11 27](https://cloud.githubusercontent.com/assets/1926584/13248393/4dddd984-da1e-11e5-98df-8303d463dbfe.png)
---
Título: High contrast: find matches do not look high contrast friendly
Descripcion: #3248  I would expect the contrast to be better between the light orange and the black background  ![screen shot 2016-02-23 at 11 09 15](https://cloud.githubusercontent.com/assets/1926584/13248325/ee91d408-da1d-11e5-9729-9ff045fa70d8.png)
---
Título: High contrast: suggest box needs love <3
Descripcion: #3248  Suggest box is not high contrast friendly  ![screen shot 2016-02-23 at 10 59 01](https://cloud.githubusercontent.com/assets/1926584/13248011/8601c64c-da1c-11e5-8e8b-df65e3f61b59.png)
---
Título: High contrast: black text on white selection looks blury
Descripcion: #3248  Text looks blurry imho  ![screen shot 2016-02-23 at 10 53 41](https://cloud.githubusercontent.com/assets/1926584/13247831/cbf2df2a-da1b-11e5-9a91-55579576f632.png) xx
---
Título: [OS X] High contrast theme: weird blue line on top
Descripcion: #3248  Notice the weird blue line on top. What does it represent - since it is not focus  ![screen shot 2016-02-23 at 10 50 39](https://cloud.githubusercontent.com/assets/1926584/13247738/5090d0c6-da1b-11e5-97e1-e1a7b64293e9.png)
---
Título: VSCode Debugging Toolbar is hidden behind message pop up
Descripcion: All Error/Warning or simple "Update Available" Messages from VSC hide the debugging bar when I start debugging.  As a user I'm confused to not be able to see & interact with the toolbar (and might not be aware that the debugger is running at all). I'm probably supposed to close those messages, but there might be reasons to keep them open (e.g. as a reminder).  Found with: VS Code Version 0.10.8, running on a Mac.
---
Título: Don't show right sidebar when there is only one definition
Descripcion: For the screenshot below I did a quick on a function for which there is only a single definition.  If there is only a single defintion, then right sidebar adds no value and it should not be shown.   ![image](https://cloud.githubusercontent.com/assets/172399/13202003/a3bf817c-d889-11e5-9578-c5f25b74959c.png)
---
Título: File and folder icon theme feature
Descripcion: Relates to #211   Adds ability to create color and icon themes using css. Adds ability to create an icon theme (css only). Adds ability to switch icon theme's independently of color themes Doesn't break current textmate themes  ![new-icon-theme-option](https://cloud.githubusercontent.com/assets/1727302/13712506/f0c97392-e7bb-11e5-90c4-7bb28d2b3f5b.png)  Examples of icon themes mixed with different color themes:  (icons probably not to be included in the final merge) ![dark-plusiwth-icons](https://cloud.githubusercontent.com/assets/1727302/13712522/00e9ed88-e7bc-11e5-9906-2c0954ccd6af.png) ![untitled](https://cloud.githubusercontent.com/assets/1727302/13712707/1119830c-e7bd-11e5-99a1-ac6fc5986c4e.png) ![monokai-icons-with-quiet-light](https://cloud.githubusercontent.com/assets/1727302/13712525/05629de2-e7bc-11e5-81b9-3c8bd3ecedd7.png)
---
Título: There is no shortcut for toggling the menu bar
Descripcion: I inadvertently hid the menu bar and then spent 30 minutes trying to figure out how to get it back, only to find there is no shortcut (that I can find) to permanently toggle it. So you have to use the ALT key to toggle it back on temporarily (found that in online help) and then use the menu itself to toggle it back on permanently. Unless I'm missing something. Editing the boolean in a config file (storage.json) also does not change the setting permanently. Thanks.
---
Título: When the "Watch" debug pane is empty there is no watermark and no action on hover
Descripcion: When the debug pane "Watch" doesn't have any expressions in it, there is no watermark text telling the user that expressions can be added to this pane. As a result the user is not sure how this pane is different to the "Variables" debug pane.  Related to this, when you hover your mouse over the "Watch" debug pane nothing happens. You have to hover over the title of the pane in order to make the "Add Expression" button visible.
---
Título: Start button gets hidden in debug pane
Descripcion: When making the debug pane' size smaller Start button gets hidden.
---
Título: marker view truncates text
Descripcion: Please refer to this screenshot:  ![vscode-truncated-text](https://cloud.githubusercontent.com/assets/1445483/12964156/985210d6-d01c-11e5-9171-f97e03aa341a.png)  It appears as though the command palette is truncating parts of the text, and likewise mousing over these messages does _not_ show a tooltip with all the text.  From what I can see, there is no way to see the entire text.  I believe that the proper behavior would either be to: - show all the text with no action - or mouse over the message and show a tooltip to display all the text
---
Título: Make panel position configurable
Descripcion: I just upgraded to VS Code 0.10.8 and I see that the debug console is now at the bottom of the window. I can see how some people might prefer this, but I actually preferred having it on the right side. The position (right/bottom) should be configurable in settings.
---
Título: Error to open an editor of different kind closes previous editor
Descripcion: When you have a split editor open and one of the editors has focus when you click on a file that cannot be opened in the editor (e.g. a binary, video... etc.) then that editor will close as you receive the error message.  Let's keep it open with the file you had open before you tried to open the un-openable file.  ![feb 05 2016 23 07](https://cloud.githubusercontent.com/assets/11839736/12865313/5242ae10-cc5d-11e5-8947-dcab3802ce3c.gif)
---
Título: [0.10.7] Pane highlight outline
Descripcion: Since the insider build, it looks like the panes can be highlighted when clicked. It really looks weird to me and doesn't have added value (but maybe there is). Is this a bug or not?  ![screen shot 2016-02-03 at 09 33 04](https://cloud.githubusercontent.com/assets/1913805/12776852/667e2d38-ca59-11e5-8221-1f29a63c0392.png) ![screen shot 2016-02-03 at 09 33 15](https://cloud.githubusercontent.com/assets/1913805/12776851/667ad854-ca59-11e5-827b-e6aabf5cbd21.png)
---
Título: High contrast theme
Descripcion: We need to start thinking about high contrast support in VS Code for GA. Some thoughts: - do we need the theme for all OS or only Windows? - our current high contrast theme for Windows is lagging behind our new features and was not updated in more than a year - do we need to adjust the contrast for our current themes also, or is a high contrast theme good enough  @chrisdias @bgashler1 fyi
---
Título: Open in new editor problem
Descripcion: Here's the repro of the problem: 1. Open up a workspace/folder in VS Code that contains 3+ files 2. Open up _file1_ in a new editor 3. Hold `CTRL` while opening _file2_, which opens it in a new editor        > **Current state: two editors open, and the cursor is on the _left_ editor** 4. Hold down `CTRL` while opening _file3_  What this does, instead of creating a _third_ editor and having _file3_ open in this new editor (with _file1_ and _file2_ already opened in their respective editor), it opens _file3_ in the _second_ editor where _file2_ was previously living, and therefore replacing _file2_ in this _second_ editor.  I believe a better behavior would be for _file3_ to open up in a new editor, no matter which editor the current cursor/focus is on.  The end state here should have been all three editors open with each file in the open editors.
---
Título: Repl: reveal last line when I expand an object
Descripcion: When I expand an object at the end of the repl, I always find myself scrolling down. I suggest to just reveal the object when you click the expand icon. Maybe be smart and only reveal up to the node that gets expanded to prevent bad scrolling for a very large object.
---
Título: Intellisense: change more details icon
Descripcion: > @joaomoreno cool stuff, but is the info icon the right UI affordance for this? I feel like you could just have blue text that says "More". My two cents.  from @csinco
---
Título: Focus indicator in input fields can look weird in debug land
Descripcion: @isidorn maybe do a similar solution as outlined in https://github.com/Microsoft/vscode/pull/2497  <img width="518" alt="screen shot 2016-01-28 at 18 15 11" src="https://cloud.githubusercontent.com/assets/900690/12652446/29a9b00c-c5eb-11e5-95be-26e94856766b.png"> <img width="340" alt="screen shot 2016-01-28 at 18 14 58" src="https://cloud.githubusercontent.com/assets/900690/12652447/29ace5ba-c5eb-11e5-913f-5836b05a00fa.png">
---
Título: 'tab moves focus' needs UI love <3
Descripcion: - press cmd + M ( or just open a read only editor ) - notice ugly red decoration in the status bar    This also needs to be accessibly so maybe we should also start thinking about that  ![screen shot 2016-01-28 at 16 59 44](https://cloud.githubusercontent.com/assets/1926584/12649845/9634a110-c5e0-11e5-96e0-9fbd95e58e17.png)
---
Título: No focus indication in the panel (for output)
Descripcion: 
---
Título: Make it clear how to cancel a running search
Descripcion: Did some research, hope it is not duplicate... Is there functionality (some shortcut maybe?) to break searching? Because when you develop a project, you often need to search stuff across all files. No problem here, until you actually have project with like many many files. For example, if you have project where node_modules are not ignored in search (since even there you sometimes need to search stuff) or you have some internal directory with internal builds, you get like too many results and you are not able to break search to specify search more closely or to just get rid of searching. Usually ends up with crash of vscode...   Version 0.10.6 (0.10.6)
---
Título: debug console shouldn't show up on every debug launch
Descripcion: I think it fair for discoverability et to show it on first launch but it always opens itself again which is quite annoying if you are in stage were you don't need it.
---
Título: Bottom panel shouldn't use 'x'
Descripcion: but some hiding indication.
---
Título: Too much whitespace around horizontal pane title
Descripcion: ![image](https://cloud.githubusercontent.com/assets/6461412/12610571/c4595c64-c4e8-11e5-86b8-802d7156202f.png)  IMO there's too much margin above the 'OUTPUT' label. Maybe the title should be vertically centered, and the header made more compact so less space is lost.
---
Título: Remove scrollbar arrows in detailed suggestion
Descripcion: Testing #2230   Can you try to remove the arrows?  ![image](https://cloud.githubusercontent.com/assets/5047891/12607999/525f58d4-c4d9-11e5-92bb-9ad14c3c9f2f.png)
---
Título: Focus decoration go away on hover
Descripcion: I've seen this on the activity bar and actions only.  ![bug](https://cloud.githubusercontent.com/assets/22350/12585566/e45e3cc4-c44c-11e5-85ac-88a26ce7ae68.gif)  It's very distracting and doesn't feel natural at all. Especially not on OS X.  ![bug](https://cloud.githubusercontent.com/assets/22350/12585710/7c82e41e-c44d-11e5-82f2-a9114b1b6a17.gif)  Related to #2145
---
Título: Activity bar focus indication is too subtle
Descripcion: I find it very hard to notice when the focus is in the activity bar. We need something stronger there. Maybe try white? Or maybe some other affordance at all, since this is too far away from the user's eye.  ![image](https://cloud.githubusercontent.com/assets/22350/12585511/a901ed88-c44c-11e5-8562-51ba91341176.png)  Additionally, notice how the opacity of the _unselected_ viewlet icons affects the focus indication. The explorer's focus indication is brighter than the search one. They should be exactly the same.  ![bug](https://cloud.githubusercontent.com/assets/22350/12585360/06641376-c44c-11e5-9027-6c7dc7cd9f3c.gif)  Related to #2145  ping @bgashler1
---
Título: Up and down arrows should jump through splitview headers
Descripcion: It would _totally_ **kick** **_ass**_.
---
Título: Left and right arrow keys seem to do the same thing in the splitview header
Descripcion: They both seem to both expand and collapse. I would expect left to only collapse and right to only expand.
---
Título: Expanding splitview with the arrow keys shouldn't focus content
Descripcion: 
---
Título: all of the explorer is selected
Descripcion: Unsure how I got into this state but changing different files doesn't fix it  ![screen shot 2016-01-26 at 16 30 01](https://cloud.githubusercontent.com/assets/1794099/12584925/19a7daf0-c44a-11e5-88bd-a57403dcb9f7.png)
---
Título: The unsaved file marker (the dot thing) should appear when content in buffer != content on disk
Descripcion: Testing #1854  I have configured `"files.autoSaveDelay": 10000` (10s). If I make an edit to a file I expect to see the unsaved file marker for 10s and then, after the file is saved, it disappears. Right now, I never see the dirty marker, even if I use a very large number for `"files.autoSaveDelay"` such as 1 week, effectively disabling the auto-save behaviour.
---
Título: Implement focus indication for editors and panels
Descripcion: Testing #2145  cc @stevencl @bgashler1   Here I am tabbing into the editor from the find widget. There is no visual indication that the editor just got the focus.  ![no-focus-code-editor](https://cloud.githubusercontent.com/assets/5047891/12582696/f4a66c2c-c43e-11e5-897c-fc58da80f1b5.gif)  @bpasero Feel free to give to me if you think I should do something inside the editor or otherwise keep it if you think the workbench should highlight somehow the title area to indicate focus.
---
Título: Empty tree should not be focusable
Descripcion: Testing #2145  e.g. debug variables tree  ![image](https://cloud.githubusercontent.com/assets/5047891/12582422/54715330-c43d-11e5-9b5b-cb2b57218a0a.png)
---
Título: Hover padding is broken
Descripcion: ![image](https://cloud.githubusercontent.com/assets/22350/12582328/b3783192-c43c-11e5-857b-b3622d28fe7e.png)  Ping @alexandrudima, not really sure who touched this  From testing #2257
---
Título: The focused element should always be visible
Descripcion: Testing #2145  In this case, I have resized the viewlet area in such a way that the `Start (F5)` button is pushed out of the viewport. The button should not be focusable if it is not visible, alternatively the viewlet area should have a different min-width when the debug viewlet is open or the debug viewlet should get a horiz. scrollbar.  Steps: Shift-tab a lot => you will no longer see the active element once you reach the `Start (F5)` button.  ![image](https://cloud.githubusercontent.com/assets/5047891/12581973/5e542ef2-c43a-11e5-8ebd-5a918fe37ed8.png)
---
Título: Rendering of documentation in Intellisense and hover inconsistent
Descripcion: Testing #2230   The rendering of the documentation in the hover and in Intellisense is inconsistent, different font, font size, font family, and color. Suggest to align on the way the documentation is rendered in Intellisense. It looks nicer.  ![hover](https://cloud.githubusercontent.com/assets/172399/12581794/365ad5dc-c439-11e5-8a96-28296bcabdc4.png)  ![intellisense](https://cloud.githubusercontent.com/assets/172399/12581796/37c7bc96-c439-11e5-8535-1c30c78f22a9.png)  FYI @bgashler1  ##  - [x] Delayed hover - [x] Diagnostics hover - [x] Glyph hover   - [x] Debug breakpoint expressions colorisation - [x] URL click hover - [x] Suggest widget - [ ] Parameter hints widget
---
Título: Horizontal panel separator look bogus
Descripcion: I don't understand why it uses the status bar background color and that it even changes when debugging. It should use a more similar style as the sidebar does (background et al) and not look like an editor   ![screen shot 2016-01-26 at 11 41 49](https://cloud.githubusercontent.com/assets/1794099/12578719/1196db76-c423-11e5-80f3-adb1f9ac60f6.png)
---
Título: Panel doesn't allign well when side bar is pinned to the right
Descripcion: See screen shot. The header of the editor aligns well with the header of the side bar however the header of the panel somehow 'stops' at the side bar without a nice visual ending. ![capture](https://cloud.githubusercontent.com/assets/1931590/12578529/b502a27e-c421-11e5-8874-b47aa23b976c.png)
---
Título: Improve "localRoot" and "remoteRoot" documentation/usage
Descripcion: I think `localRoot` should default to the workspace root. That way, the user only needs to specific `remoteRoot` if he already has the `localRoot` opened in VSCode, which I think will be the most common use case.  We can also mention in `localRoot`'s documentation that it does indeed default to the workspace root, if unspecified.
---
Título: Show output indicator instead of opening the Debug console on output
Descripcion: I have an application that outputs something every second:  ``` javascript var count = 1,  setInterval(function () {   console.log(count++), }, 1000), ```  When I debug it, I see the Debug console coming up, really cool! I then use the sash and drag it all the way down until it snaps and hides the Debug console. It soon snaps back up, although my intention is to hide it. Same goes for closing it with the close action.  I think popping it up on first output is a great feature. Popping it up on further output, especially after I explicitly closed it, is annoying.  I suggest to bring out an indicator that there is output, instead of popping it up. Something in the status bar would be nice.
---
Título: Indicate in the UI that conditional breakpoints are not supported by a debug adapter
Descripcion: 
---
Título: Communicate when there are unsaved changes in the conditional breakpoint expression editor
Descripcion: It would be good to show unsaved changes to the expression. Since esc is used to dismiss the peek window, I found myself once or twice making changes to a conditional expression, looking elsewhere through my code (without closing the conditional peek window) then returning to the peek window, reviewing the expression and then pressing esc to close the peek without pressing enter to save. I had a couple of ideas:  In the first one we add the helper text as soon as the user makes a change. In the second, we change the background and font colour when the user makes a change. When the change is committed we go back to the darker background and lighter font  ![unsavedchanges](https://cloud.githubusercontent.com/assets/1704059/12327150/af49fc00-bacc-11e5-9978-cc9e8b68b96b.png)
---
Título: Support syntax highlighting when user enters the expression for a conditional breakpoint
Descripcion: It would be really useful to have syntax highlighting for the expression. For example, after I copied the following expression from my code I thought I was missing a closing brace: ![unhighlighted](https://cloud.githubusercontent.com/assets/1704059/12327088/5b813fa2-bacc-11e5-8f0a-c93f8985fe9f.png)
---
Título: Consider distinguishing between conditional breakpoints and regular breakpoints in the breakpoints pane
Descripcion: We might need a way to identify conditional breakpoints in the breakpoint panel as without hovering over the breakpoints, there is no way to tell which have conditions attached to them. A few thoughts off the top of my head - We group the list of breakpoints into two groups, regular and conditional. - We draw a label ‘conditional’ next to the breakpoint - We draw as much of the expression as can fit in next to the breakpoint (this has problems due to the lack of available screen real estate)
---
Título: Hovering over a conditional breakpoint in the gutter should show a tooltip with the conditional expression
Descripcion: Hovering over a conditional breakpoint to see the condition is helpful. It would be good to be able to do this by hovering over the breakpoint in the gutter too.
---
Título: Support to drag the debug hover inspector
Descripcion: After hovering over a variable while in debug mode, I would like to be able to drag the tooltip around so that I could easily refer to both it and my code. For example, in the shot below I have hovered over the params variable ![hoverpic1](https://cloud.githubusercontent.com/assets/1704059/12326895/5b09d148-bacb-11e5-933d-ee056aaa7f79.png)  But after I expand the elements in the array I see this: ![hoverpic2](https://cloud.githubusercontent.com/assets/1704059/12326906/6e71c86c-bacb-11e5-9357-2f23e1377bc3.png)  Ideally I would still like to be able to read the code following the line I am paused on and refer to the data in the inspector. I was imagining that I could click and hold on a blank area in the tooltip and then move the mouse to drag the tooltip to a convenient location.
---
Título: Add helper text to conditional breakpoint window that explains how to commit or cancel
Descripcion: As we discussed last week we should add helper text that explains how to commit or cancel changes made to the expression inside the conditional  breakpoint window. For example: 'Press enter to commit the changes, Esc to cancel' We may need to think more about how we represent uncommitted changes. Perhaps an expression that has been committed is shown in bold?
---
Título: Don't dismiss the conditional breakpoint peek window when the user clicks outside of it
Descripcion: As we discussed last week we should modify the interaction of the conditional breakpoint peek window so that the peek window is not dismissed when the user clicks outside of it. This means that it will be possible to have one or more conditional breakpoint windows open at the same time which we agreed would be ok.
---
Título: Improve visual treatment for indicating changed variables in debug viewlet
Descripcion: As we discussed, we should explore different visual treatments for indicating the last changed variable in the variable window. Currently changed variables are indicated by colouring the value red but this can clash with the way that strings are represented. Some of the ideas we discussed are - Bolding the name and/or value - Highlighting the background then fading to a specific opacity - Changing the colour of the name and/or value
---
Título: Define the actions and keybindings that will control the horizontal panel
Descripcion: We need a set of actions and keybindings for managing the visibility of the horizontal panel. Details of the horizontal panel are here: #1875
---
Título: Design header bar for debug console/output window horizontal panel
Descripcion: We need a design for the header/title bar of the horizontal panel such that it is distinct from each editor and is not 'heavy' so as to avoid drawing attention away from the content inside the panel. Details of the horizontal panel are captured in this issue: https://github.com/Microsoft/vscode/issues/1875
---
Título: Position the output window and debug console in a horizontal panel
Descripcion: To improve readability of text inside the output window and debug console and to avoid the problem of these windows taking the position of an open editor we should display the output and debug console in a separate horizontal panel. For example: ![image](https://cloud.githubusercontent.com/assets/1704059/12198412/89ad8e0e-b607-11e5-9ced-f7a3416a617b.png) This panel should have the following characteristics: - Should be as wide as the main editor area - Does not participate in quick open or recent files list - Does not contain tabs to switch between different providers such as output and debug console (hence does not support viewing output and debug console simultaneously) - Can be opened manually from main menu commands or automatically based on specific actions (such as pressing F5) - Is visually distinct from an editor - Can be docked to the side - Can be resized to a maximum height of 66% of the available height and resized to a minimum height of 20% of available height (these numbers can and will be tweaked as we experiment with this)
---
Título: Support to split editors horizontally
Descripcion: It's hard to read code having more than one editing panel opened when they are split horizontally: <br/> ![code](https://cloud.githubusercontent.com/assets/9283914/12076622/52eb33a6-b1b3-11e5-90bd-ecb6405d9246.png) <br/> Is it possible to have Code split editor panels vertically? <br/>
---
Título: Make soft text wrapping easier discoverable
Descripcion: We are receiving regular questions about how to enable soft text wrapping. See also the discussion in #342.  > Open Settings and add  "editor.wrappingColumn": 0 .
---
Título: Conditional breakpoint icon
Descripcion: We need a nice icon to distinguish conditional breakpoints from regular ones. Some ideas: - Use a different color, for instance gold (chrome debugger does something similar) - Add a small question mark to the corner of the current breakpoint.svg  In both cases we would need one for light theme and one for dark theme  @stevencl suggestions welcome
---
Título: If a file is already open in a tab, don't open it again when clicking the file explorer
Descripcion: This is a UX issue but let's say I have two files open and my cursor is on the right tab:  ``` +-------------------------+ |   File 1   |  *File 2   | +-------------------------+ ```  if I click on `File 1` in the file explorer, I end up with something like this:  ``` +-------------------------+ |   File 1   |  *File 1   | +-------------------------+ ```  This is probably useful in some scenarios but most often it's not. Then I have to click on top of the tab and select the `File 2` manually to end up with what I had before.  I suggest that if a file is already open in a tab, you don't load it in the active tab but simply change the active tab to the file that is open:  ``` +-------------------------+ |  *File 1   |   File 2   | +-------------------------+ ```
---
Título: Always show path information even for non-focus editor
Descripcion: Here's how it currently is. ![](http://i.imgur.com/5UVVFsS.png) Here's as it should be. ![](http://i.imgur.com/tafVbwv.png)  The relevance of this distinguisher doesn't change even with a blurred pane - I think it should always be visible.
---
Título: Need to be able to have Variable containers not just at the top level
Descripcion: Today VSCode displays top level variable containers like `Local, Global` differently than regular variables.  I want this capability inside of variable nodes.  I want to emulate the "Raw View" functionality in the Visual Studio debugger e.g.:  ![rawview](https://cloud.githubusercontent.com/assets/5177512/11770751/a7f37cd2-a1c3-11e5-8fa7-be320eff25f5.png)  Now I can create a `faux` variable called `Raw View` and get the nesting but VSCode make's it look like any other property via the purple coloring and the `:` it suffixes the name with.    What I would like is the node displayed in White as the top level variable containers are displayed and no `:` suffix.
---
Título: Commanding UX
Descripcion: We need to explore ways we can provide access to commands that are global in scope. For example, the start debug icon is only visible in the debug viewlet but should be available regardless of context.  This should also handle the current UX for the likes of git checkout where we have a label in the status bar that shortcuts to the git checkout command in the command palette.
---
Título: Notifications UX
Descripcion: We need to explore improving the way that we display warnings, errors and notifications to users. Currently we have a variety of mechanisms (info in status bar, details in quick open, error/warning dialog).  We need a consistent way that prompts the user when there are notifications/errors/warnings for them to pay attention to and a consistent affordance for the user to get a holistic view of all of the notitications/errors/warnings.
---
Título: Intellisense UX
Descripcion: We need to improve the overall Intellisense UX, including how to display documentation in suggestion lists, how to display parameter help etc.  This includes the discussion on #369
---
Título: Improve workspace management
Descripcion: We need to improve the way that the users workspace is managed. The following (non-exhaustive) list of items describes what we should do:  - [x] - When a user clicks an editor close button we should show the file that was previously opened in that editor (we could also consider showing a set of file thumbnails and allow the user to choose the file to open) - [ ] - We should explore better ways to indicate which editor is currently active - [x] - We should explore better ways to move and open files in different editors. For example, should the working files list also indicate which files are currently open and in which editor - [ ] - We should ensure that whenever the user opens a folder that the whole workspace opens up in the exact same state it was in when they last closed it (including all files, viewports and active viewlet)
---
Título: Expose exception settings in a json file
Descripcion: We should consider exposing the ability for the user to specify which exceptions they want to break on when thrown or when they are unhandled. Consistent with how we manage settings throughout the product we could have a default exceptionsettings.json file that defines the default settings and a user settings file that the user can override or customise.  For example, something like the following: ![exceptionsettings](https://cloud.githubusercontent.com/assets/1704059/11683573/8ef8df32-9e63-11e5-844a-0865de2a21f7.png)
---
Título: Support snippets, intellisense etc in debug console
Descripcion: We should consider supporting snippets, intellisense and other rich design time experiences in the debug console so that we can provide a rich commanding experience in the console. For example, extension providers could take advantage of this so that specific debug commands can easily be exposed and discovered by users as shown in the screenshot below: ![debugconsolesnippets](https://cloud.githubusercontent.com/assets/1704059/11683490/0edef9da-9e63-11e5-9c65-2486f03b5f16.png)
---
Título: Allow viewing up to three panels side by side in horizontal layout
Descripcion: If we support horizontal layouts we should mimic the mechanism we use in the editor to view multiple panels side by side. For example, if we start out with a horizontal panel for inspectors when in debug mode like so: ![defaulthorizontalpanel](https://cloud.githubusercontent.com/assets/1704059/11683276/c52866a6-9e61-11e5-99ff-06dce36e68ab.png) We could then support an 'Open to the side' action that would allow the user to open two or more panels side by side: ![opentoside](https://cloud.githubusercontent.com/assets/1704059/11683305/e81aaf84-9e61-11e5-8796-d60fef8b127f.png) This would then show the panel alongside the main panel: ![sidebyside](https://cloud.githubusercontent.com/assets/1704059/11683395/62061b44-9e62-11e5-969c-858bf56c2174.png)  Panels would expose a close button which when clicked would regroup that panel with the main panel: ![closepanel](https://cloud.githubusercontent.com/assets/1704059/11683342/15deca90-9e62-11e5-9708-88f57e85372a.png)  ![returntomainpanel](https://cloud.githubusercontent.com/assets/1704059/11683365/370f8cc2-9e62-11e5-8d17-82f08a823669.png)
---
Título: Use an expand/collapse control to control wrapping of long values in locals and watch window
Descripcion: Whenever there is a value that cannot be displayed in the amount of real estate available we should use an expando control to allow the user to expand/collapse the value so that they can see the whole value. This is especially useful in the case of displaying long strings.  For example, the screenshot below shows the selectedText and this variables with an expando. ![locals](https://cloud.githubusercontent.com/assets/1704059/11683172/2a971790-9e61-11e5-91bc-21fd2fc4734f.png) Then, when the variable is expanded, we show this: ![localsexpanded](https://cloud.githubusercontent.com/assets/1704059/11683200/4b8b70e0-9e61-11e5-9106-4e8322354a6c.png)
---
Título: Use a separate column to show the value of a variable or expression
Descripcion: Add a separate column to show the value of a variable or expression to improve readability and to improve the experience of scanning a list of variables or values to find the required one.  When appropriate, we should also consider using another column to show the type of the variable or expression.  For example, this screenshot shows one extra column for the value: ![locals](https://cloud.githubusercontent.com/assets/1704059/11683123/c208816e-9e60-11e5-866d-6c33b3d22021.png)
---
Título: Use horizontal layout for inspectors such as locals, watch window etc in debug mode
Descripcion: When we have the ability to view panels in a horizontal layout, we should use this in debug mode to show inspectors such as locals, watch window, debug console, breakpoints etc. Pickers, such as the call stack, processes etc should remain in the vertical panel.  This does two things - it provides is with more real estate to view the values of variables and expressions and it maintains the overall left to right UX flow in the product where the user sets the context of what they want to inspect from the left hand side.  For example:  ![horizontallayout](https://cloud.githubusercontent.com/assets/1704059/11682904/88747274-9e5f-11e5-8014-5ca6ba17927b.png)
---
Título: Difficult to create folder in left panel file view if the open folder only contains folder
Descripcion: Open a folder that a lot of folders (enough to fill the height of the screen) and no files, it seems impossible to create a folder or file in the root folder without closing all files in the text view.
---
Título: Debug start button gets hidden when the sidebar is too narrow
Descripcion: ![screen shot 2015-12-04 at 4 49 19 pm](https://cloud.githubusercontent.com/assets/5505433/11602718/71c4909e-9aaa-11e5-9808-04e1db48f10d.png)  When the sidebar is at its narrowest allowed width, the green start button gets hidden, and there is nothing that indicates that it's hidden. This is especially confusing when you've opened the debug view for the first time.
---
Título: After left panel tree view delete, focus should go on the last file or the file that took its place
Descripcion: Selecting and deleting `c` in this file structure: - `a`   - `b`   - `c`   - `d`  Currently will move focus to `a`. I would expect this to move focus to `d` to allow multiple deletes in quick succession, so `delete`, `delete`, `delete` could be used to remove all of `a`'s files before focus is moved to `a`.
---
Título: Autocomplete should insert parenthesis for methods
Descripcion: During autocompletion for methods, parenthesis do not get inserted automatically. Most of the time they are required and it's easier to delete them than insert them manually.  Eg: Tab or Return after `var arr = str.sp` should autocomplete to `var arr = str.splice()` rather than `var arr = str.splice` with the cursor between the parenthesis.
---
Título: No Intellisense with Javascript React
Descripcion: might    be structure  of some setting files?
---
Título: Dark cursor is hard to see on dark background & text color
Descripcion: I'm using Visual Studio Code 0.10.2 on Mac OS X 10.11.1 El Capitan. On my external monitor, the viewing angle sometimes makes it impossible to see the dark cursor on top of the dark Visual Studio Code background color.  Could we figure out some way to make the cursor more visible in VS Code?  Cheers, Trevor Sullivan Microsoft MVP: PowerShell http://trevorsullivan.net http://twitter.com/pcgeek86
---
Título: Need better extension management UI
Descripcion: The quick open UI isn't working fully well.  We need to come up with a better UI story that can - increase visibility of extensions, - fix awkward UI interactions we have today (status bar widget, error output pane, messages, etc), - enable us to implement more features in the future (enablement/disablement, statistics, etc).
---
Título: Support user stylesheet(s) and user script(s)
Descripcion: Atom equivalent: "Open Your Stylesheet" and "Open Your Init Script".  It's nice to be able to make small changes (e.g. I like to use a 1px-wide cursor instead of the default 2px), without having to create a theme/extension.
---
Título: Allow developers create custom main menu items from extensions.
Descripcion: Hello,  It would be nice to have a possibility to create custom menu items for extensions' commands, e.g. `Edit -> Format Document`. I think it should work similar to `keybindings` contribution point.  Sincerely, Ilya
---
Título: Allow to theme UI components of the workbench
Descripcion: Currently I cannot change the style of the editor "frame", for example, sidebar color, padding or font. This makes some themes (like Solarized) looks inconsistent with the editor UI.
---
